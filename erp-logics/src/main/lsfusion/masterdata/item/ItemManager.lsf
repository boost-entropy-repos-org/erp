MODULE ItemManager;

REQUIRE Item, EmployeeManager;

NAMESPACE Item;

@defineItemGroupObject(itemManager, 'Категорийный менеджер', Employee, nameCustomUser);  
nameItemManager 'Категорийный менеджер' (ItemGroup itemGroup) = name[Contact](itemManager(itemGroup)); 

countItemGroup (Employee employee) = GROUP SUM 1 IF dataItemManager(ItemGroup group) == employee MATERIALIZED;

TABLE employeeItemGroup(Employee, ItemGroup);
accessManager 'Доступ разрешен' (Employee employee, ItemGroup itemGroup) = OVERRIDE
    nearestItemManager(itemGroup) == employee,  
    login(employee) AND itemGroup IS ItemGroup AND NOT countItemGroup(employee) AND NOT countManagers(employee) MATERIALIZED;

countAccessManagers (Employee employee, ItemGroup itemGroup) = GROUP SUM 1 IF accessManager(Employee manager, itemGroup) AND inManager(manager, employee);

access = countAccessManagers(Employee employee, ItemGroup itemGroup) OR accessManager(employee, itemGroup) MATERIALIZED;

countAccessItem 'Кол-во доступных групп' (Employee employee, SkuGroup itemGroup) =
    GROUP
       SUM 1 IF access(employee, ItemGroup child)
             AND isParent(child, itemGroup) MATERIALIZED;

access = access(Employee employee, itemGroup(Item item));                                     

EXTEND FORM itemGroups
    PROPERTIES(g) READONLYIF  isReadonly() nameItemManager AFTER name(g) 
;

EXTEND FORM items 
    FILTERS countAccessItem(currentUser(), g) OR NOT g IS ItemGroup
    FILTERS access(currentUser(), i) OR NOT itemGroup(i)
;