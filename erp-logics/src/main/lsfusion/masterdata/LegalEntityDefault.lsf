MODULE LegalEntityDefault;

REQUIRE LegalEntity;

NAMESPACE LegalEntity;

// ----------------------------------- Стандартные данные ----------------------------------- //

loadDefaultStaticOwnership 'Добавить Формы собственности'(ISTRING[100] iname, BPSTRING[10] isname, BPSTRING[3] sidCountry, static)  {    //статик класс
    name(Ownership t) <- iname WHERE t == static;
    shortName(Ownership t) <- isname WHERE t == static;       
    country(Ownership t) <- country(sidCountry) WHERE t == static;
}

loadDefaultOwnership 'Добавить Формы собственности'(ISTRING[100] iname, BPSTRING[10] isname, BPSTRING[3] sidCountry)  { 
    NEW t = Ownership {
        name(t) <- iname;
        shortName(t) <- isname;
        country(t) <- country(sidCountry);
    }
}

overLoadDefaultOwnerships ()  ABSTRACT LIST ( );

loadDefaultOwnerships 'Загрузить стандартные формы собственности' ()  ABSTRACT LIST ( ) IN loadDefault;

@implementLoadDefaultData(loadDefaultOwnerships);

//--

loadDefaultLegalEntityGroup 'Добавить группы организаций'(ISTRING[100] iname, STRING[100] id)  { 
    NEW lg = LegalEntityGroup {
        name(lg) <- iname;
        id(lg) <- id;

    }
}
loadDefaultRecLegalEntityGroup 'Добавить группы организаций (рекурсивно)'(ISTRING[100] iname, STRING[100] id, STRING[100] idParent)  { 
    NEW lg = LegalEntityGroup {
        name(lg) <- iname;
        id(lg) <- id;
        parent(lg) <- legalEntityGroup(idParent);
    }
}

loadDefaultLegalEntityGroups 'Загрузить стандартные группы организаций' ()  ABSTRACT LIST ( ) IN loadDefault;

@implementLoadDefaultData(loadDefaultLegalEntityGroups);

loadDefaultLegalEntityGroups () + { 
    loadDefaultLegalEntityGroup ('Все', 'all');
    loadDefaultRecLegalEntityGroup ('Поставщики', 'suppliers', 'all');
    loadDefaultRecLegalEntityGroup ('Покупатели', 'customers', 'all');
    loadDefaultRecLegalEntityGroup ('Компании', 'companies', 'all');
    
    NEW l = LegalEntity {
        name(l) <- 'Моя организация';
        id(l) <- 'company';
        legalEntityGroup(l) <- legalEntityGroup('companies');
        
        isSupplier(l) <- TRUE;
        isCompany(l) <- TRUE;
        isCustomer(l) <- TRUE;
    }
}