MODULE ZReportRetailBonus;

REQUIRE ZReportDiscountCard, RetailBonus;

NAMESPACE ZReport;

bonusSum 'Начислено бонусов' = DATA NUMERIC[18,4] (ReceiptSaleDetail);
bonusSum 'Начислено бонусов' = DATA NUMERIC[18,4] (ReceiptReturnDetail);

bonusSum 'Начислено бонусов' = ABSTRACT NUMERIC[18,4] (ReceiptDetail) CHARWIDTH 8;
bonusSum(ReceiptSaleDetail d) += bonusSum(d);
bonusSum(ReceiptReturnDetail d) += bonusSum(d);

bonusSum 'Начислено бонусов' (Receipt r) = GROUP BY receipt(ReceiptDetail d) SUM bonusSum(d);

signedBonusSum 'Начислено бонусов' = ABSTRACT NUMERIC[18,4] (ReceiptDetail) MATERIALIZED;
signedBonusSum(ReceiptSaleDetail d) += bonusSum(d);
signedBonusSum(ReceiptReturnDetail d) += -bonusSum(d);

signedBonusSum 'Начислено бонусов' (Receipt r) = GROUP BY receipt(ReceiptDetail d) SUM signedBonusSum(d);

bonusPaid 'Оплачено бонусами' = DATA NUMERIC[18,4] (ReceiptSaleDetail);
bonusPaid 'Оплачено бонусами' = DATA NUMERIC[18,4] (ReceiptReturnDetail);

bonusPaid 'Оплачено бонусами' = ABSTRACT NUMERIC[18,4] (ReceiptDetail) CHARWIDTH 8;
bonusPaid(ReceiptSaleDetail d) += bonusPaid(d);
bonusPaid(ReceiptReturnDetail d) += bonusPaid(d);
extraDiscountSum(ReceiptSaleDetail d) += bonusPaid(d);

bonusPaid 'Оплачено бонусами' (Receipt r) = GROUP BY receipt(ReceiptDetail d) SUM bonusPaid(d);

bonusPaidSale 'Оплачено бонусами' = GROUP
    BY zReport(receipt(ReceiptDetail d)) SUM bonusPaid(d) IF d IS ReceiptSaleDetail;

bonusPaidReturn 'Оплачено бонусами' = GROUP
    BY zReport(receipt(ReceiptDetail d)) SUM bonusPaid(d) IF d IS ReceiptReturnDetail;

bonusPaid 'Оплачено бонусами' = GROUP
    BY zReport(receipt(ReceiptDetail d)) SUM bonusPaid(d);

signedBonusPaid 'Оплачено бонусами' = ABSTRACT NUMERIC[18,4] (ReceiptDetail) MATERIALIZED;
signedBonusPaid(ReceiptSaleDetail d) += bonusPaid(d);
signedBonusPaid(ReceiptReturnDetail d) += -bonusPaid(d);

signedBonusPaid 'Оплачено бонусами' (Receipt r) = GROUP BY receipt(ReceiptDetail d) SUM signedBonusPaid(d);

signedBonusSum 'Начислено бонусов' = GROUP
    BY zReport(receipt(ReceiptDetail d)) SUM signedBonusSum(d);

signedBonusPaidSale 'Оплачено бонусами' = GROUP
    BY zReport(receipt(ReceiptDetail d)) SUM signedBonusPaid(d) IF d IS ReceiptSaleDetail;

signedBonusPaidReturn 'Оплачено бонусами' = GROUP
    BY zReport(receipt(ReceiptDetail d)) SUM signedBonusPaid(d) IF d IS ReceiptReturnDetail;

signedBonusPaid 'Оплачено бонусами' = GROUP
    BY zReport(receipt(ReceiptDetail d)) SUM signedBonusPaid(d);

EXTEND FORM zReport
    PROPERTIES(b) SHOWIF useBonus() signedBonusSum, signedBonusPaid  
    PROPERTIES(d) SHOWIF useBonus() bonusSum, bonusPaid  
;
    
EXTEND FORM zReports
    PROPERTIES(z) READONLY SHOWIF useBonus() signedBonusSum, signedBonusPaid
    PROPERTIES(b) READONLY SHOWIF useBonus() signedBonusSum, signedBonusPaid  
    PROPERTIES(d) READONLY SHOWIF useBonus() signedBonusSum, signedBonusPaid  
;

bonusPaidSaleReceiptDetailSale 'Сумма бонусов (продажи)' (receipt) = GROUP
    BY receipt (ReceiptSaleDetail receiptDetail) SUM bonusPaid(receiptDetail) IN documentSum;
bonusPaidReturnReceiptDetailReturn 'Сумма бонусов (возврат)' (receipt) = GROUP
    BY receipt (ReceiptReturnDetail receiptDetail) SUM bonusPaid(receiptDetail) IN documentSum;
bonusPaidReceiptDetail 'Сумма бонусов' (Receipt receipt) = bonusPaidSaleReceiptDetailSale(receipt) (-) bonusPaidReturnReceiptDetailReturn(receipt) MATERIALIZED;
bonusPaidReceiptDetail 'Сумма бонусов Z-отчета' (zReport) = GROUP BY zReport(Receipt receipt) SUM bonusPaidReceiptDetail(receipt) MATERIALIZED IN documentSum;

EXTEND FORM zReports
    PROPERTIES(z)READONLY bonusPaidReceiptDetail
;    

cumulativeBonuses 'Накоплено бонусов' (DiscountCard dc) = GROUP BY discountCard(ReceiptDetail rd) SUM signedBonusSum(rd) MATERIALIZED;

returnBonusSum = GROUP BY receiptSaleDetail(ReceiptReturnDetail rrd) SUM bonusSum(rrd) MATERIALIZED;
blockedBonuses 'Заблокировано бонусов' (DiscountCard dc) = 
    GROUP BY discountCard(ReceiptSaleDetail rsd) SUM (bonusSum(rsd) (-) returnBonusSum(rsd)) IF date(rsd) > subtract(currentDate(), blockDaysBonus());
externalBlockedBonuses 'Дополнительные заблокированные бонусы' = ABSTRACT NUMERIC[18,4] (DiscountCard);  
totalBlockedBonuses 'Всего заблокировано бонусов' (DiscountCard dc)= blockedBonuses(dc) (+) externalBlockedBonuses(dc);

paidBonuses 'Оплачено бонусами' = GROUP BY discountCard(ReceiptDetail rd) SUM signedBonusPaid(rd) MATERIALIZED;

availableBonuses 'Доступно бонусов (основная)' (DiscountCard dc) = cumulativeBonuses(dc) (+) sumBonusLedger(dc) (-) blockedBonuses(dc) (-) paidBonuses(dc) MATERIALIZED;
prevAvailableBonuses (DiscountCard dc) = PREV(availableBonuses(dc)); 

externalBonuses 'Дополнительные бонусы' = ABSTRACT NUMERIC[18,4] (DiscountCard) MATERIALIZED;
totalBonuses 'Доступно бонусов' (DiscountCard d) = availableBonuses(d) (+) externalBonuses(d);
prevTotalBonuses 'Доступно бонусов' (DiscountCard d) = PREV(totalBonuses(d));

totalBonuses 'Доступно бонусов' (Receipt r) = prevTotalBonuses(discountCard(r)) IN receiptDiscount;

//-- Скидки с учетом бонусов
discountBonusSumVAT 'Сумма НДС в скидке' (ReceiptDetail d) = round((discountSum(d) (+) bonusPaid(d))* valueVAT(d) / (100 + valueVAT(d)), currency(d));
 
discountBonusSumVATSale 'Сумма НДС в скидке (продажа)' (zReport)= GROUP BY zReport[ReceiptDetail](ReceiptSaleDetail d) SUM discountBonusSumVAT(d) IF d IS ReceiptSaleDetail;
discountBonusSumVATReturn 'Сумма НДС в скидке (возврат)' (zReport)= GROUP BY zReport[ReceiptDetail](ReceiptReturnDetail d) SUM discountBonusSumVAT(d) IF d IS ReceiptReturnDetail;

discountBonusSumVAT 'Сумма НДС в скидке' (ZReport zReport)= discountBonusSumVATSale(zReport) (-) discountBonusSumVATReturn(zReport);

discountBonusSumMarkup 'Сумма набавки в скидке' (ZReport z) = discountSum(z) (+) bonusPaidSale(z) (-) bonusPaidReturn(z) (-) discountBonusSumVAT(z);

EXTEND FORM discountCard
    PROPERTIES(d) READONLY SHOWIF useBonus() cumulativeBonuses, blockedBonuses, externalBlockedBonuses, totalBlockedBonuses, paidBonuses, availableBonuses, externalBonuses, totalBonuses
;

DESIGN discountCard {
    PANEL(d) {
        NEW row5 {
            caption = 'Бонусы';
            type = COLUMNS;
            columns = 4;
            MOVE PROPERTY(cumulativeBonuses(d));
            MOVE PROPERTY(blockedBonuses(d));
            MOVE PROPERTY(paidBonuses(d));
            MOVE PROPERTY(sumBonusLedger(d));
            MOVE PROPERTY(availableBonuses(d));
            MOVE PROPERTY(externalBonuses(d));
            MOVE PROPERTY(totalBonuses(d));
        }
    }
}

EXTEND FORM discountCards
    PROPERTIES(d) READONLY SHOWIF useBonus() cumulativeBonuses, blockedBonuses, externalBlockedBonuses, totalBlockedBonuses, paidBonuses, availableBonuses, externalBonuses, totalBonuses
;

// Перевод бонусов

WHEN LOCAL FORMS discountCard SETCHANGED(transferCard(BonusLedger l)) DO {
    sum(l) <- availableBonuses(transferCard(l));
}

WHEN SETCHANGED(discountCard(DiscountCard d)) AND NOT transferBonusLedger(d) DO {
    NEW l = BonusLedger {
        discountCard(l) <- discountCard(d);
        typeBonusLedger(l) <- TypeBonusLedger.transfer;
        transferCard(l) <- d;
    }
}

WHEN (CHANGED(totalBonuses(DiscountCard d)) OR CHANGED(discountCard(d))) AND discountCard(d) AND BonusLedger l == transferBonusLedger(d) DO {
    sum(l) <- prevTotalBonuses(d);
}

bonusPaid (ReceiptReturnDetail detail) <- round2(quantity(detail) * bonusPaid(receiptSaleDetail(detail)) / quantity(receiptSaleDetail(detail))) IF receiptSaleDetail(detail)
                                           WHEN CHANGED(quantity(detail)) OR
                                                CHANGED(receiptSaleDetail(detail));
bonusSum (ReceiptReturnDetail detail) <- round2(quantity(detail) * bonusSum(receiptSaleDetail(detail)) / quantity(receiptSaleDetail(detail))) IF receiptSaleDetail(detail)
                                           WHEN CHANGED(quantity(detail)) OR
                                                CHANGED(receiptSaleDetail(detail));
