MODULE RepricingPriceListBatch;

REQUIRE RepricingPriceList, RepricingPriceLimitFixed;

NAMESPACE Repricing;

managementRetailPrice 'Цена (управленческая)' = DATA LOCAL NESTED NUMERIC[16,4] (Batch);
inDashboardRepricing 'Вкл' = DATA LOCAL NESTED BOOLEAN (Batch); 
//assignAttributeBatch = ABSTRACT (Stock, Operation, DATETIME);

calculateDashboardManagementRepricingBatch 'По прайсам'(DepartmentStore d, PriceListType p, DATETIME dt) = {
    managementRetailPrice(Batch batch) <- NULL;
    managementRetailPrice(Batch batch) <- prevPriceA(p, batch, d, dt) 
        WHERE currentBalance(batch, d) > 0 AND skipRepricing(sku(batch), d); // Берем только те товары, которые исключили из переоценки по товарам
    
    inDashboardRepricing(Batch batch) <- managementRetailPrice(batch) != prevPriceABatch(SystemLedgerPriceListType.retailPricingPriceListType, batch, d, dt); 
    formRefresh();
} TOOLBAR;

calculateDashboardManagementRepricingBatch 'По прайсам'(DepartmentStore d, Operation o, DATETIME dt) = {
    calculateDashboardManagementRepricingBatch(d, (OVERRIDE priceListType(o), retailPriceListType(d)), dt);
} TOOLBAR;

//repForm =  DATA LOCAL UserRepricing();  
createDashboardRepricingNotFormBatchDetail (UserRepricing r, Stock d, DATETIME dt) = {
    FOR inDashboardRepricing(Batch batch) NEW rd = UserRepricingDetail DO {
        userRepricing(rd) <- r;
        sku(rd) <- sku(batch);
        batch(rd) <- batch;
        quantity(rd) <- currentBalance(batch, d);
        quantity(rd) <- NULL  WHERE quantity(rd) < minManagementQuantityToRepricing();
        retailPrice(rd) <- managementRetailPrice(batch);
        curRetailPrice(rd) <- prevPriceB(SystemLedgerPriceListType.retailPricingPriceListType, batch, d, dt);
        price(rd) <- round2(prevPriceA[PriceListType,Batch,Stock,DATETIME](SystemLedgerPriceListType.supplierPricingPriceListType, batch, d, dt));
//                overPriceListUserRepricingDetail(rd);
    }

}

createDashboardRepricingNotFormBatch 'Создать переоценку'(Stock d, Operation o, DATETIME dt) = {
    IF (GROUP SUM 1 IF inDashboardRepricing(Batch batch)) THEN {
        NEW r = UserRepricing {
            departmentStore(r) <- d;
            operation(r) <- o;
            date(r) <- toDate(dt);
            time(r) <- toTime(dt);  
            isPosted(r) <- TRUE;
    
            createDashboardRepricingNotFormBatchDetail(r, d, dt);
            repForm() <- r;
        }
    }
} TOOLBAR;

createDashboardRepricingBatch 'Создать переоценку'(Stock d, Operation o, DATETIME dt) = {
	NEWSESSION NESTED LOCAL  {
	    createDashboardRepricingNotFormBatch(d, o, dt);
	    SHOW userRepricing OBJECTS p = repForm() DOCKED NOCANCEL;
	    repForm() <- NULL;      
	}
}  

createOverManagementRepricing(Stock department) += {
    calculateDashboardManagementRepricingBatch(department, toManagementRepricingOperation(), currentDateTime());
    createDashboardRepricingNotFormBatch(department, toManagementRepricingOperation(), currentDateTime());     
}
