MODULE ProductionOrderSku;

REQUIRE ProductionOrder, Warehouse, Store;

NAMESPACE Production;

skuGroup = DATA ItemGroup(Stock);
nameSkuGroup 'Группа товаров' (Stock st) = name(skuGroup(st));

EXTEND FORM warehouse PROPERTIES nameSkuGroup(w);

DESIGN warehouse {
    headerExtraParams {
        MOVE PROPERTY (nameSkuGroup(w));
    }
}

EXTEND FORM departmentStore PROPERTIES nameSkuGroup(d);

DESIGN departmentStore {
    headerExtraParams {
        MOVE PROPERTY (nameSkuGroup(d));
    }
}

fillNegativeBalanceProductDetail 'Заполнить изделия по остаткам' (Order o, SkuGroup sg) { // на конец рабочего дня
    FOR balanceA(Sku sk, productsStock(o), date(o)) < 0 AND isParent(sg, sk) DO NEW d = ProductDetail {
        order(d) <- o;
        sku(d) <- sk;
        quantity(d) <- abs(balanceA(sk, productsStock(o), date(o)));
        product(d) <- GROUP MAX Product p IF isActive(BOM(p)) AND in(BOM(p), productsStock(o)) AND sku(p) == sk;
    }
}
fillNegativeBalanceProductDetail 'Заполнить изделия по остаткам' (Order o, SkuGroup sg, DATE dt) { // на конец рабочего дня
    FOR NUMERIC[16,5] q == (balanceA(Sku sk, productsStock(o), dt) (-) balanceB(sk, productsStock(o), dt)) AND q < 0 AND isParent(sg, sk) DO NEW d = ProductDetail {
        order(d) <- o;
        sku(d) <- sk;
        quantity(d) <- abs(q);
        product(d) <- GROUP MAX Product p IF isActive(BOM(p)) AND in(BOM(p), productsStock(o)) AND sku(p) == sk;
    }
}