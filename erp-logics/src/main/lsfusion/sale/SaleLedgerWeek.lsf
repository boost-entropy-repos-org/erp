MODULE SaleLedgerWeek;

REQUIRE SaleLedger;

NAMESPACE SaleLedger;

quantitySold 'Продано за неделю (кол-во)' (sku, stock, week, dateFrom, dateTo) = GROUP
        BY Sku sku, Stock stock, extractWeek(DATE date), DATE dateFrom, DATE dateTo SUM
        quantitySold(sku, stock, date) IF date >= dateFrom AND date <= dateTo;

sumSold 'Продано за неделю (сумма)' (sku, stock, week, dateFrom, dateTo) = GROUP
        BY Sku sku, Stock stock, extractWeek(DATE date), DATE dateFrom, DATE dateTo SUM
        sumSold(sku, stock, date) IF date >= dateFrom AND date <= dateTo;

averagePriceSold 'Средняя цена за неделю' (Sku sku, Stock stock, INTEGER week, DATE dateFrom, DATE dateTo)=  round2(sumSold(sku, stock, week, dateFrom, dateTo) /
        quantitySold(sku, stock, week, dateFrom, dateTo));

averageSold 'Продано за неделю кол-во/цена' (Sku sku, Stock stock, INTEGER week, DATE dateFrom, DATE dateTo)= 
        quantitySold(sku, stock, week, dateFrom, dateTo) + '(' + averagePriceSold(sku, stock, week, dateFrom, dateTo) + ')' CHARWIDTH 10;

quantitySkuSold 'Продано за неделю (кол-во)' (INTEGER week, DATE dateFrom, DATE dateTo) = GROUP SUM
        quantitySold(Sku sku, Stock stock, week, dateFrom, dateTo);

sumSold 'Продано за неделю (сумма)' (INTEGER week, DATE dateFrom, DATE dateTo) = GROUP SUM
        sumSold(Sku sku, Stock stock, week, dateFrom, dateTo);

toString4 = FORMULA STRING[4] 'CAST($1 AS character(4))' FIXEDCHARWIDTH 4;

FORM saleSkuStock 'Продажи по неделям'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)

    OBJECTS te = TypeExchange PANEL
    PROPERTIES nameType = name(te) SELECTOR, nameCurrency(te) READONLY

    OBJECTS w = INTEGER GRID
    FILTERS quantitySkuSold(w, dFrom, dTo)

    TREE stockTree sg = StockGroup PARENT parent, ts = Stock
    PROPERTIES READONLY sgTreeName = name(sg), tsTreeName = name(ts)
    FILTERS stockGroup(ts) == sg
    FILTERGROUP inactiveStock FILTER 'Активный' active(ts) 'ctrl F10' DEFAULT
    TREE skuTree sk = SkuGroup PARENT parent
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDER order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS           sts=(st=Stock, s=Sku)
    PROPERTIES        READONLY name(s), stockName = name(st)

    FILTERS           isParent(sk, s),
                      (st == ts AND sg IS StockGroup) OR (isParent(sg, st) AND NOT ts),
                      quantitySold(s, st, dFrom, dTo)
    FILTERGROUP inactiveStock2 FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    ORDER          name(s)

    PROPERTIES        balanceB(s, st, dFrom), quantitySold(s, st, w, dFrom, dTo)  COLUMNS (w) HEADER toString4 (w),
                      quantitySold(s, st, dFrom, dTo),
                      balanceA(s, st, dTo), sumSold (s, st, dFrom, dTo),  sumSold(te,s, st, dFrom, dTo)
;
@extendFormFilterStockAccess(st, saleSkuStock);
@extendFormFilterStockAccess(ts, saleSkuStock);
@extendFormFilterStockGroupAccess(sg, saleSkuStock);

DESIGN saleSkuStock {

    NEW topContainer {
        fill = 1;
        type = SPLITH;

        NEW firstCase {
            fill = 1;
            type = SPLITV;

            MOVE BOX(TREE stockTree) {caption = 'Магазины'; }
            MOVE BOX(TREE skuTree) { caption = 'Товарные группы'; }
        }

        NEW secondCase {
            fill = 3;

            NEW params {
                type = CONTAINERH;
                MOVE BOX(dates) {
                    type = CONTAINERH;
                }
                MOVE BOX(te) {
                    type = CONTAINERH;
                    PROPERTY(nameCurrency(te)) { caption = 'Валюта'; charWidth = 20;}
                    PROPERTY(nameType) { caption = 'Тип обмена'; charWidth = 20;}
                }
            }

            MOVE BOX(sts);
        }
    }
    MOVE TOOLBARBOX;
}

NAVIGATOR {
    salesReports {
        NEW saleSkuStock;
    }
}