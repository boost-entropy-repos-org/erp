MODULE PreOrder;

REQUIRE OrderLedger, SaleOrder;

CLASS PreOrder 'Резерв' : Document;
CLASS PreOrderDetail 'Строка резерва' : DocumentDetail;

@defineDocument(preOrder);
@deriveDocumentHeaderTimePrefix(PreOrder, );

@defineDocumentHeaderNumber(PreOrder);
@defineNumeratedDefault(PreOrder, 'Резерв', 'РО');

@defineDocumentDataStock(preOrder, stock, 'Склад поставщика', supplier);
@defineDocumentDialogStocks(preOrder, supplierStock, company, , );

@defineDocumentDescription (preOrder, 'Резерв');

@defineDocumentDetailSkuCustomPrefix(preOrderDetail, sku, , );
@defineDocumentDetailBatchCustomPrefix(preOrderDetail, batch, );

@defineDocumentHeaderPosted(PreOrder);
@defineDocumentDetailPosted(preOrder);
@defineDocumentHeaderClosed(PreOrder);
@defineDocumentDetailClosed(preOrder);

@defineDocumentDetailQuantityCustomPrefix (preOrderDetail, , );
@defineDocumentHeaderQuantity(preOrder);

@defineAddDetailDialogSkuStock(preOrder, sku, supplierStock, dialogSku);
@defineAddDetailDialogBarcode(preOrder, sku);

disablePosted 'Запретить проведение' = ABSTRACT BOOLEAN (PreOrder); 
overPrePost 'Провести' (PreOrder o) = {
    IF NOT disablePosted(o) THEN {
        isPosted(o) <- TRUE;
    } 
}

operation = DATA Sale.Operation (PreOrder);
nameOperation 'Операция' (PreOrder o) = name(operation(o));
idOperation 'ID операции' (PreOrder o) = id(operation(o));

operation 'Операция' (PreOrderDetail d) = operation(preOrder(d));
nameOperation 'Операция' (PreOrderDetail d) = name(operation(d));

TABLE preOrderOperation (PreOrder, Sale.Operation);
in 'Вкл.' = DATA BOOLEAN (PreOrder, Sale.Operation);
includeOperations 'Дополнительные операции' (PreOrder o) = GROUP CONCAT name(Sale.Operation op) IF in(o,op), ', ' CHARWIDTH 30;

TABLE preOrderDetailOperation (PreOrderDetail, Sale.Operation);
in 'Вкл.' (PreOrderDetail d, Sale.Operation op) = in(preOrder(d),op) MATERIALIZED;

FORM preOrderOperations
    OBJECTS o = PreOrder PANEL
    
    OBJECTS op = Sale.Operation
    PROPERTIES(o,op) in
    PROPERTIES(op) READONLY name, id
    FILTERS NOT op == operation(o)
;

changeIncludeOperations(PreOrder o) = {
    DIALOG preOrderOperations OBJECTS o = o;
}

@defineDocumentDataTimePrefix(preOrder, from, ' с') ;

fromDate(PreOrder order) <- date(order) WHEN CHANGED(date(order));
fromTime(PreOrder order) <- time(order) WHEN CHANGED(time(order));

isClosed[Document](PreOrder preOrder) += isClosed(preOrder);
isPosted[Document](PreOrder preOrder) += isPosted(preOrder);
number[Document](PreOrder preOrder) += number(preOrder);
series[Document](PreOrder preOrder) += series(preOrder);
date[Document](PreOrder preOrder) += date(preOrder);

index[DocumentDetail](PreOrderDetail detail) += index(detail);
sku[DocumentDetail](PreOrderDetail detail) += sku(detail);
quantity[DocumentDetail](PreOrderDetail detail) += quantity(detail);

document[DocumentDetail](PreOrderDetail detail) += preOrder(detail);

supplierStock[Document](PreOrder o) += supplierStock(o);

FORM preOrder 'Резерв'

    OBJECTS o = PreOrder PANEL
    PROPERTIES (o) isPosted, nameSupplierStock ON CHANGE changeSupplierStockCompany(o),
                   nameOperation, includeOperations ON CHANGE changeIncludeOperations(o),
                   nameNumerator, number, series, date, time, note, fromDate, fromTime

    PROPERTIES (o) READONLY quantityPreOrderDetail, countPreOrderDetail                        

    OBJECTS d = PreOrderDetail
    PROPERTIES (d) index
    PROPERTIES (d) idBarcodeSku, idSku, nameSku, shortNameUOMSku//, nameBatch
    PROPERTIES (d) quantity                
                
    PROPERTIES (d) NEW, deleteid=DELETE GRID
    
    ORDER index(d)
    
    FILTERS preOrder(d) == o
    
    PROPERTIES(o) TODRAW d addDetailDialogSkuStockPreOrderDetail,
                           addDetailInputBarcodePreOrderDetail, deletePreOrderDetail    

    EDIT PreOrder OBJECT o
    
    EVENTS
        ON OK overPrePost(o)
;

DESIGN preOrder {
    BOX {
        size = (1024, 768);
        NEW headerBox {
            type = CONTAINERH;

            NEW headerParams {
                fill = 1;
                type = CONTAINERV;
                MOVE GROUP(documentHeader,o) {
                    type = CONTAINERV;
                    NEW first {
                        type = CONTAINERH;
                        MOVE PROPERTY (isPosted(o));         
                        MOVE PROPERTY (nameOperation(o));
                        MOVE PROPERTY (includeOperations(o));       
                        MOVE PROPERTY(nameSupplierStock(o));                                 
                    }
                    NEW second { 
                        type = CONTAINERH;
                        MOVE PROPERTY(nameNumerator(o));
                        MOVE PROPERTY(number(o));
                        MOVE PROPERTY(series(o));
                        MOVE PROPERTY(date(o));
                        MOVE PROPERTY(time(o));
                    } 
                                                                                                                     
                }
                NEW ship1 {
                    caption = 'Действие';
                    type = CONTAINERH;
                    MOVE PROPERTY (fromDate(o));
                    MOVE PROPERTY (fromTime(o));                     
                }                   
                  
                MOVE GROUP(documentPrm,o);
            }
            MOVE GROUP(documentSum,o) {
                columns = 1;
            }
        }        
        NEW specificationBox {
            fill = 1;
            MOVE BOX(d) {
                caption = 'Спецификация';
            }
        }
        MOVE TOOLBARBOX;
        PROPERTY(formOk()) {
            caption = 'Провести';
        } 
    }
}

FORM preOrders 'Резервы'

    OBJECTS o = PreOrder 
    PROPERTIES (o) READONLY isClosed, isPosted, nameSupplierStock, nameOperation, includeOperations,
                   number, series, date, time, note
                
    PROPERTIES (o) READONLY countPreOrderDetail
    PROPERTIES (o) NEWSESSION NEW, EDIT, deleter=DELETE   
    PROPERTIES (o) READONLY PANEL createdNameUser, createdTime, createdHostnameComputer 
    PROPERTIES (o) close SHOWIF isOpened(o), open SHOWIF isClosed(o)
        
    OBJECTS d = PreOrderDetail
    PROPERTIES (d) READONLY index
    PROPERTIES (d) READONLY idBarcodeSku, idSku, nameSku, shortNameUOMSku//, nameBatch                   
    PROPERTIES (d) READONLY quantity     
    ORDER index(d)

    FILTERS preOrder(d) == o
                
    LIST PreOrder OBJECT o
;
DESIGN preOrders {
    BOX {
        size = (1024, 768);

        NEW documentContainer BEFORE TOOLBARBOX {
            fill = 1;

            type = SPLITV;
            MOVE BOX(o);    

            NEW documentDetail {
                fill = 1;
                type = TABBED;

                MOVE BOX(d) {
                    fill = 1;
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';
                    type = CONTAINERV;

                    MOVE GROUP(created,o);                       
                }
                NEW printTab {
                    caption = 'Печатные формы';
                    NEW printContainer {
                        caption = 'Печать';
                        type = CONTAINERV;
                    }
                }
            }
        }
    }
}

@defineDocumentLogForm(preOrders, o);

NAVIGATOR {
    saleSaleNavigator {
        NEW preOrders BEFORE orders;
    }
}

@defineDocumentOperationStock(preOrder, supplier, 'Склад поставщика');
@deriveDocumentOperationStock(preOrder, supplier, preOrder);

//---------------------- Проведение по регистру ------------------------//

preOrderDetail 'Резерв' = DATA PreOrderDetail (Sale.OrderDetail) INDEXED;
seriesNumberPreOrderDetail 'Резерв' (Sale.OrderDetail d) = seriesNumber(preOrder(preOrderDetail(d)));

CONSTRAINT preOrderDetail(Sale.OrderDetail d) AND (NOT sku(d) == sku(preOrderDetail(d)) OR dateTime(d) < fromDateTime(preOrderDetail(d)) 
    OR NOT supplierStock(preOrderDetail(d)) == supplierStock(d) OR NOT (operation(preOrderDetail(d)) == operation(d) OR in(preOrderDetail(d), operation(d))))
    CHECKED BY preOrderDetail[Sale.OrderDetail] MESSAGE 'Товар строки резерва должен совпадать с товаром строки накладной';

EXTEND FORM orders
    PROPERTIES(d) READONLY seriesNumberPreOrderDetail
;

EXTEND FORM userOrder
    PROPERTIES(d) seriesNumberPreOrderDetail
;


edit(PreOrderDetail d) += { DIALOG preOrder OBJECTS o = preOrder(d), d = d DOCKED; }

orderedOrderDetail 'Израсходовано' (PreOrderDetail pd) = GROUP
    SUM quantity(Sale.OrderDetail d) IF isPosted(d) AND preOrderDetail(d) == pd;
orderedOrderDetail 'Израсходовано' (PreOrderDetail pd, so) = GROUP SUM quantity(Sale.OrderDetail d) 
    IF isPosted(d) AND preOrderDetail(d) == pd BY Sale.order(d);    
orders 'Заказы' (PreOrderDetail d) = GROUP
                                       CONCAT seriesNumber(Sale.Order so) IF orderedOrderDetail(d, so) , ', '
                                       ORDER Sale.dateTime(so), so CHARWIDTH 20;
    
    
calcQuantity 'Доступно' (PreOrderDetail pd) = IF  (quantity(pd) (-) orderedOrderDetail(pd)) >0 THEN (quantity(pd) (-) orderedOrderDetail(pd)) ELSE 0.0;

EXTEND FORM preOrder
    PROPERTIES (d) READONLY BEFORE deleteid orderedOrderDetail, orders, calcQuantity
;
EXTEND FORM preOrders
    PROPERTIES (d) READONLY orderedOrderDetail, orders, calcQuantity
;

WHEN FORMS userOrder (SETCHANGED(sku(Sale.OrderDetail d)) OR SETCHANGED(supplierStock(d))) DO {
    preOrderDetail(d) <- GROUP LAST PreOrderDetail pd IF calcQuantity(pd) > 0.0 AND sku(d) == sku(pd) AND dateTime(d) >= fromDateTime(pd)
                               AND supplierStock(d) == supplierStock(pd) AND (operation(pd) == operation(d) OR in(pd,operation(d)))
                               ORDER DESC fromDate(pd), pd;
}

fillPreOrderDetail 'Проставить в заказы на продажу ссылки на резерв' () = {
    preOrderDetail(Sale.OrderDetail d) <- [= GROUP LAST PreOrderDetail pd IF calcQuantity(pd) > 0.0 AND sku(d) == sku(pd) AND dateTime(d) >= fromDateTime(pd)
                                                   AND supplierStock(d) == supplierStock(pd) AND (operation(pd) == operation(d) OR in(pd,operation(d)))
                                                   ORDER DESC fromDate(pd), pd]() WHERE NOT preOrderDetail(d);
    APPLY;
}

EXTEND FORM options
    PROPERTIES() fillPreOrderDetail
;

EXTEND CLASS PreOrderDetail : OrderLedger;

dateTime (PreOrderDetail ledger) +=  dateTime(ledger);
isPosted (PreOrderDetail ledger) += isPosted(ledger);
isClosed (PreOrderDetail ledger) += isClosed(ledger);
sku[OrderLedger] (PreOrderDetail ledger) += sku(ledger);
batch[OrderLedger] (PreOrderDetail ledger) += batch(ledger);
stock (PreOrderDetail ledger) += supplierStock(ledger);
description (PreOrderDetail ledger) += description(ledger);
quantity[OrderLedger] (PreOrderDetail ledger) += calcQuantity(ledger);
toShipQuantity (PreOrderDetail ledger) += calcQuantity(ledger);
//contact (PreOrderDetail ledger) += legalEntityCustomerStock(ledger);
//contactStock (PreOrderDetail ledger) += customerStock(ledger);   
operation[OrderLedger](PreOrderDetail ledger) += operation(ledger);

TABLE operationStockSku (Sale.Operation,Stock,Sku);

quantityPreOrder 'Резерв операции' (o,st,s) = GROUP SUM calcQuantity(PreOrderDetail d) 
    IF isPosted(d) AND NOT isClosed(d) AND (operation(d) == Sale.Operation op OR in(d,op)) 
    BY op, sku(d), supplierStock(d) MATERIALIZED;
prevQuantityPreOrder 'Резерв операции' (Sale.Operation o, Sku s, Stock st) = PREV(quantityPreOrder(o, s, st));
    
prevQuantityPreOrder 'Резерв операции' (Sku s, Stock st, UserOrder o) = prevQuantityPreOrder(operation(o), s, st);  

TABLE operationStockBatch (Sale.Operation,Stock,Batch);

quantityPreOrder 'Резерв операции' (o,st,s) = GROUP SUM calcQuantity(PreOrderDetail d) 
    IF isPosted(d) AND NOT isClosed(d) AND (operation(d) == Sale.Operation op OR in(d,op))
    BY op, batch(d), supplierStock(d) MATERIALIZED;
prevQuantityPreOrder 'Резерв операции' (Sale.Operation o, Batch b, Stock st) = PREV(quantityPreOrder(o, b, st));
    
prevQuantityPreOrder 'Резерв операции' (Batch b, Stock st, UserOrder o) = prevQuantityPreOrder(operation(o), b, st);  

EXTEND FORM userOrder
    PROPERTIES READONLY prevQuantityPreOrder(ks, st, o) AFTER prevCurrentReserveSale(ks,st)
;

//------------------------- Значения по умолчанию ------------------------

preOrderRetailOperation 'Операция (розница)' = DATA Sale.Operation ();
namePreOrderRetailOperation 'Операция (розница)' () = name(preOrderRetailOperation());
inPreOrderRetail 'Розница' = DATA BOOLEAN (Sale.Operation);

preOrderWholesaleOperation 'Операция (опт)' = DATA Sale.Operation ();
namePreOrderWholesaleOperation 'Операция (опт)' () = name(preOrderWholesaleOperation());
inPreOrderWholesale 'Опт' = DATA BOOLEAN (Sale.Operation);

preOrderProductionOperation 'Операция (производство)' = DATA Sale.Operation ();
namePreOrderProductionOperation 'Операция (производство)' () = name(preOrderProductionOperation());
inPreOrderProduction 'Производство' = DATA BOOLEAN (Sale.Operation);

EXTEND FORM options
    PROPERTIES() namePreOrderRetailOperation, namePreOrderWholesaleOperation, namePreOrderProductionOperation
    OBJECTS sop = Sale.Operation
    PROPERTIES(sop) READONLY name, id
    PROPERTIES(sop) inPreOrderRetail, inPreOrderWholesale, inPreOrderProduction
;

DESIGN options {
    pane {
        NEW preOrder  {
            type = CONTAINERV;
            caption = 'Резерв';
            MOVE PROPERTY(namePreOrderRetailOperation());
            MOVE PROPERTY(namePreOrderWholesaleOperation());
            MOVE PROPERTY(namePreOrderProductionOperation());
            MOVE PROPERTY(fillPreOrderDetail());
            MOVE BOX(sop);
        }
    }
}