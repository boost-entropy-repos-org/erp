MODULE SaleShipmentInvoiceOrderAggregation;

REQUIRE SaleInvoiceOrderAggregation, InvoiceShipment, SaleShipment, OrderShipmentAggregation;

NAMESPACE Sale;

//createShipmentOrderInvoice = DATA BOOLEAN (OrderInvoice);
////createShipmentInvoice(invoice) += createShipmentOrderInvoice(invoice);
//
//@defineDocumentHeaderTimePrefix(OrderInvoice, shipment, ' поставки');
//
////shipmentDateInvoice(o) += shipmentDateOrderInvoice(o);
////shipmentTimeInvoice(o) += shipmentTimeOrderInvoice(o);
//
////shipmentDateOrderInvoice(o) <- dateOrderInvoice(o) WHEN CHANGED(dateOrderInvoice(o));
////shipmentTimeOrderInvoice(o) <- timeOrderInvoice(o) WHEN CHANGED(timeOrderInvoice(o));
//
//shipmentQuantityOrderInvoiceDetail 'Кол-во (поставленное)' = DATA NUMERIC[14,3] (OrderInvoiceDetail);
////shipmentQuantityInvoiceDetail(invoiceDetail) += shipmentQuantityOrderInvoiceDetail(invoiceDetail);
//
////shipmentQuantityOrderInvoiceDetail(detail) <- invoiceQuantityOrderDetail(orderDetailOrderInvoiceDetail(detail)) 
////    WHEN SET(createShipmentOrderInvoice(orderInvoiceOrderInvoiceDetail(detail)));
//
//shipmentPriceOrderInvoiceDetail 'Цена (учетная)' = DATA NUMERIC[16,4] (OrderInvoiceDetail);
////shipmentPriceInvoiceDetail(detail) += shipmentPriceOrderInvoiceDetail(detail);
//
////WHEN LOCAL (CHANGED(skuOrderDetail(orderDetailOrderInvoiceDetail(detail))) OR
////              CHANGED(supplierStockOrderDetail(orderDetailOrderInvoiceDetail(detail))) OR
////              CHANGED(dateTimeOrderDetail(orderDetailOrderInvoiceDetail(detail))) OR
////              CHANGED(batchOrderDetail(orderDetailOrderInvoiceDetail(detail)))) AND NOT CHANGED(shipmentPriceOrderInvoiceDetail(detail)) DO 
////    shipmentPriceOrderInvoiceDetail (detail)  <- IF batchOrderInvoiceDetail(detail)
////
////                                                    THEN prevPriceBPriceListTypeBatchStockDateTime(SystemLedgerPriceListType.accountPriceListType,
////                                                                                                   batchOrderInvoiceDetail(detail),
////                                                                                                   supplierStockOrderInvoiceDetail(detail),
////                                                                                                   dateTimeOrderInvoiceDetail(detail))
////                                                    ELSE prevPriceBPriceListTypeSkuStockDateTime(SystemLedgerPriceListType.accountPriceListType,
////                                                                                                 skuOrderInvoiceDetail(detail),
////                                                                                                 supplierStockOrderInvoiceDetail(detail),
////                                                                                                 dateTimeOrderInvoiceDetail(detail));
//
//shipmentSumOrderInvoiceDetail 'Сумма (учетная)' = DATA NUMERIC[18,4] (OrderInvoiceDetail);
////shipmentSumInvoiceDetail (OrderInvoiceDetail) += shipmentSumOrderInvoiceDetail(OrderInvoiceDetail);
//                                                                                                   
////shipmentSumOrderInvoiceDetail (detail)  <- roundPriceCurrency(shipmentQuantityOrderInvoiceDetail(detail) * shipmentPriceOrderInvoiceDetail(detail), currencyOrderInvoiceDetail(detail))
////                WHEN DO CHANGED(shipmentQuantityOrderInvoiceDetail(detail)) OR CHANGED (shipmentPriceOrderInvoiceDetail(detail)) OR CHANGED(currencyOrderInvoiceDetail(detail));
      
@defineInvoiceOrderShipment(' (продажа)', Sale);    
disableUpdateShipmentPrice = ABSTRACT BOOLEAN (UserOrderDetail);
WHEN LOCAL (CHANGED(supplierStock(UserOrderDetail detail)) OR
            CHANGED(shipmentDateTime(detail)) OR
            SETCHANGED(batch(detail))) AND batch(detail) AND NOT CHANGED(shipmentPrice(detail)) AND NOT disableUpdateShipmentPrice(detail) DO 
    shipmentPrice (detail) <- prevAccountPriceB(batch(detail), supplierStock(detail), shipmentDateTime(detail));

WHEN LOCAL (CHANGED(sku(UserOrderDetail detail)) OR
            CHANGED(supplierStock(detail)) OR
            CHANGED(shipmentDateTime(detail)) OR
            DROPPED(batch(detail))) AND NOT batch(detail) AND NOT CHANGED(shipmentPrice(detail)) AND NOT disableUpdateShipmentPrice(detail) DO
    shipmentPrice (detail) <- prevAccountPriceB(sku(detail), supplierStock(detail), shipmentDateTime(detail));