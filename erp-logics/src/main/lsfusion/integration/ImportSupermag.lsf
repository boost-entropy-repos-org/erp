MODULE ImportSupermag;

REQUIRE Item, ItemSize, LegalEntityBy, EDI, PriceListOperation, PurchasePack, ItemStorage;

host 'Хост' = DATA VARISTRING[30]();
base 'База' = DATA VARISTRING[100]();
login 'Логин' = DATA VARISTRING[100]();
password 'Пароль' = DATA VARISTRING[100]();

EXTEND FORM integrationData PROPERTIES () host, base, login, password;

DESIGN integrationData {
    pane {
        NEW supermag FIRST {
            caption = 'Супермаг';
            fill = 1;
            NEW supermagParams {
                MOVE PROPERTY (host());
                MOVE PROPERTY (base());
                MOVE PROPERTY (login());
                MOVE PROPERTY (password());
            }
            NEW supermagButtons { }
        }
    }
}

idOrder (ItemGroup g) = GROUP CONCAT TEXT (order(ItemGroup gg)) + '.' IF level(g, gg), '' ORDER DESC level(g, gg); 

importItemGroup 'Импорт товарных групп' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL tree = VARISTRING[100] (INTEGER);
    LOCAL name = VARISTRING[255] (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() EXEC 'SELECT ID, TREE, NAME FROM Supermag.SACARDCLASS' TO file;
    
    IMPORT TABLE FROM file() TO id, tree, name;
    
    IF NOT itemGroup('all') THEN NEW g = ItemGroup {
        id(g) <- 'all';
        name(g) <- 'Все';
    }
    
    FOR id(INTEGER i) AND id(i) != 0 AND NOT itemGroup(TEXT (id(i))) DO NEW g = ItemGroup {
        id(g) <- VARISTRING[100] (id(i));
    }
    
    LOCAL level = INTEGER (INTEGER);
    LOCAL parent = TEXT (INTEGER);
    LOCAL idOrder = VARISTRING[20](ItemGroup);
    
    level(INTEGER i) <- wordCount(tree(i), '.') (-) 1 WHERE imported(i);
    parent(INTEGER i) <- left(tree(i), length(tree(i)) - length((getWord(tree(i), '.', level(i))) + '.')) WHERE imported(i);
    
    FOR level(INTEGER i) AND ItemGroup g = itemGroup(TEXT (id(i))) DO {
    
        name(g) <- name(i);
        order(g) <- INTEGER (getWord(tree(i), '.', level(i)));
        idOrder(g) <- tree(i);
    }
    FOR level(INTEGER i) AND ItemGroup g = itemGroup(TEXT (id(i))) ORDER level(i) DO {
        
        parent(g) <- OVERRIDE (GROUP MAX ItemGroup gg IF idOrder(gg) == parent(i)), itemGroup('all');
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importItemGroup();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importItemGroup()); } }

importUOM 'Импорт единиц измерений' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL name = TEXT (INTEGER);
    LOCAL abb = TEXT (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() EXEC 'SELECT ID, NAME, ABBREV FROM Supermag.SAMEASUREMENT' TO file;
    
    IMPORT TABLE FROM file() TO id, name, abb;
    
    FOR id(INTEGER i) AND NOT UOM(TEXT (id(i))) DO NEW u = UOM {
        id(u) <- VARISTRING[100] (id(i));
    }
    
    FOR UOM u = UOM(TEXT (id(INTEGER i))) DO {
        id(u) <- VARISTRING[100] (id(i));
        name(u) <- name(i);
        shortName(u) <- abb(i);
        factor(u) <- 1;
        base(u) <- u;
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importUOM();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importUOM()); } }

importItem 'Импорт товаров' () {
    
    LOCAL id = TEXT (INTEGER);
    LOCAL name = TEXT (INTEGER);
    LOCAL idMeasurement = INTEGER (INTEGER);
    LOCAL idClass = INTEGER (INTEGER);
    LOCAL country = TEXT (INTEGER);
    LOCAL width = NUMERIC[14,3] (INTEGER);
    LOCAL length = NUMERIC[14,3] (INTEGER);
    LOCAL height = NUMERIC[14,3] (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() 
        EXEC 'SELECT ARTICLE, SHORTNAME, IDMEASUREMENT, IDCLASS, COUNTRY, WIDTH, LENGTH, HEIGHT FROM Supermag.SMCARD' TO file;
    
    IMPORT TABLE FROM file() TO id, name, idMeasurement, idClass, country, width, length, height;
    
    FOR id(INTEGER i) AND NOT item(id(i)) DO NEW s = Item {
        id(s) <-id(i);
    }
    
    FOR Item s = item(id(INTEGER i)) DO {
        caption(s) <- name(i);
        UOM(s) <- UOM(TEXT (idMeasurement(i)));
        itemGroup(s) <- itemGroup(TEXT (idClass(i)));
        country(s) <- GROUP MAX Country c IF upper(name(c)) == upper(country(i));
        width(s) <- max(min(width(i), 99999), -99999);
        length(s) <- max(min(length(i), 99999), -99999);
        height(s) <- max(min(height(i), 99999), -99999);
    }
    
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() EXEC 'SELECT BARCODE, ARTICLE FROM Supermag.SVStoreUnits' TO file;
    
    IMPORT TABLE FROM file() TO name, id;
    name(INTEGER i) <- left(name(i), 15);
    
    FOR imported(INTEGER i) AND NOT barcode(name(i)) DO NEW b = Barcode {
        id(b) <- name(i);
    }
    FOR Barcode b = barcode(name(INTEGER i)) AND Item s = item(id(i)) DO {
        sku(b) <- s;
        barcode(s) <- b;
    }
    
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importItem();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importItem()); } }

importItemAttribute 'Импорт доп. свойств товаров' () {
    
    LOCAL id = VARISTRING[50] (INTEGER);
    LOCAL property = VARISTRING[50] (INTEGER);
    LOCAL value = TEXT (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() 
        EXEC 'SELECT ARTICLE, PROPID, PROPVAL FROM SVCARDPROPERTIES WHERE PROPID IN (\'packsize2\', \'1\', \'manufacturer\', \'manCountry\', \'expDate\', \'storeWetness\', \'storeTemperature\')' TO file;
    
    IMPORT TABLE FROM file() TO id, property, value;
    
    FOR property(INTEGER i) == 'packsize2' DO {
        amount(Barcode b) <- NUMERIC[14,3](trim(value(i))) WHERE b == packBarcode(item(id(i)));
    }
    
    FOR [GROUP SUM 1 IF property(INTEGER i) == '1' BY value(i)](TEXT name) AND name != '' AND NOT brandName(name) DO NEW b = Brand {
        name(b) <- VARISTRING[50] (name);
    }
    FOR property(INTEGER i) == '1' DO {
        brand(Item s) <- brandName(value(i)) WHERE s == item(id(i));
    }
    
    FOR [GROUP SUM 1 IF property(INTEGER i) == 'manufacturer' BY value(i)](TEXT name) AND name != '' AND NOT manufacturerName(name) DO NEW m = Manufacturer {
        name(m) <- VARISTRING[200] (name);
    }
    FOR property(INTEGER i) == 'manufacturer' DO {
        manufacturer(Item s) <- manufacturerName(value(i)) WHERE s == item(id(i));
    }
    
    FOR [GROUP SUM 1 IF property(INTEGER i) == 'manCountry' BY upper(value(i))](TEXT name) AND name != '' AND NOT (GROUP MAX Country c IF upper(name(c)) == name) DO NEW c = Country {
        name(c) <- VARISTRING[50] (name);
    }
    FOR property(INTEGER i) == 'manCountry' DO {
        country(Item s) <- (GROUP MAX Country c IF upper(name(c)) == upper(value(i))) WHERE s == item(id(i));
    }
    
    FOR property(INTEGER i) == 'expDate' DO {
        expiryDays(Item s) <- INTEGER (getWord(value(i), ' ', 1)) WHERE s == item(id(i));
        expiryText(Item s) <- VARISTRING[100] (value(i)) WHERE s = item(id(i));
    }
    FOR property(INTEGER i) == 'storeTemperature' DO {
        conditionsText(Item s) <- VARISTRING[100] (value(i)) WHERE s = item(id(i));
    }
    FOR property(INTEGER i) == 'storeWetness' AND NOT value(i) == 'не обусловлено' AND NOT value(i) == 'не обусловлен' AND NOT value(i) == 'нет' AND NOT value(i) == ','
        AND NOT value(i) == '-' AND NOT value(i) == '"-"' AND NOT value(i) == '_' AND NOT value(i) == '/' AND NOT value(i) == '.' AND NOT value(i) == '--' DO {
        conditionsText(Item s) <- CONCAT '', conditionsText(s), ', влажность: ' + VARISTRING[100] (value(i)) WHERE s = item(id(i));
    }
    APPLY;
}

EXTEND FORM items PROPERTIES (i) READONLY expiryText, conditionsText;

EXTEND FORM integrationData PROPERTIES importItemAttribute();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importItemAttribute()); } }

idOrder (LegalEntityGroup g) = GROUP CONCAT TEXT (order(LegalEntityGroup gg)) + '.' IF level(g, gg), '' ORDER DESC level(g, gg); 

importSupplierGroup 'Импорт групп поставщиков' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL tree = VARISTRING[100] (INTEGER);
    LOCAL name = VARISTRING[255] (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() EXEC 'SELECT ID, TREE, NAME FROM Supermag.SASUPPLIERCLASS' TO file;
    
    IMPORT TABLE FROM file() TO id, tree, name;
    
    FOR id(INTEGER i) AND id(i) != 0 AND NOT legalEntityGroup('S' + id(i)) DO NEW g = LegalEntityGroup {
        id(g) <- 'S' + id(i);
    }
    
    LOCAL level = INTEGER (INTEGER);
    LOCAL parent = TEXT (INTEGER);
    
    level(INTEGER i) <- wordCount(tree(i), '.') (-) 1 WHERE imported(i);
    parent(INTEGER i) <- left(tree(i), length(tree(i)) - length((getWord(tree(i), '.', level(i))) + '.')) WHERE imported(i);
    
    FOR level(INTEGER i) AND LegalEntityGroup g = legalEntityGroup('S' + id(i)) ORDER level(i) DO {
    
        name(g) <- name(i);
        order(g) <- INTEGER (getWord(tree(i), '.', level(i)));
        parent(g) <- OVERRIDE (GROUP MAX LegalEntityGroup gg IF idOrder(gg) == parent(i)), legalEntityGroup('suppliers');
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importSupplierGroup();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importSupplierGroup()); } }


importCustomerGroup 'Импорт групп покупателей' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL tree = VARISTRING[100] (INTEGER);
    LOCAL name = VARISTRING[255] (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() EXEC 'SELECT ID, TREE, NAME FROM Supermag.SACLIENTCLASS' TO file;
    
    IMPORT TABLE FROM file() TO id, tree, name;
    
    FOR id(INTEGER i) AND id(i) != 0 AND NOT legalEntityGroup('C' + id(i)) DO NEW g = LegalEntityGroup {
        id(g) <- 'C' + id(i);
    }
    
    LOCAL level = INTEGER (INTEGER);
    LOCAL parent = TEXT (INTEGER);
    
    level(INTEGER i) <- wordCount(tree(i), '.') (-) 1 WHERE imported(i);
    parent(INTEGER i) <- left(tree(i), length(tree(i)) - length((getWord(tree(i), '.', level(i))) + '.')) WHERE imported(i);
    
    FOR level(INTEGER i) AND LegalEntityGroup g = legalEntityGroup('C' + id(i)) ORDER level(i) DO {
    
        name(g) <- name(i);
        order(g) <- INTEGER (getWord(tree(i), '.', level(i)));
        parent(g) <- OVERRIDE (GROUP MAX LegalEntityGroup gg IF idOrder(gg) == parent(i)), legalEntityGroup('customers');
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importCustomerGroup();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importCustomerGroup()); } }

importLegalEntity 'Импорт организаций' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL name = VARISTRING[255] (INTEGER);
    LOCAL shortName = VARISTRING[255] (INTEGER);
    LOCAL inn = VARISTRING[20] (INTEGER);
    LOCAL address = VARISTRING[255] (INTEGER);
    LOCAL faddress = VARISTRING[255] (INTEGER);
    LOCAL tel = VARISTRING[40] (INTEGER);
    LOCAL fax = VARISTRING[40] (INTEGER);
    LOCAL email = VARISTRING[255] (INTEGER);
    LOCAL okpo = VARISTRING[40] (INTEGER);
    LOCAL kpp = VARISTRING[9] (INTEGER);
    LOCAL commentary = VARISTRING[255] (INTEGER);
    LOCAL gln = VARISTRING[13] (INTEGER);
    LOCAL own = VARISTRING[1] (INTEGER);
    LOCAL clientClass = INTEGER (INTEGER);
    LOCAL supplierClass = INTEGER (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() 
        EXEC 'SELECT ID, NAME, SHORTNAME, INN, ADDRESS, FADDRESS, nvl(TEL,FTEL) AS TEL, nvl(FAX, FFAX) AS FAX, nvl(EMAIL, FEMAIL) AS EMAIL, OKPO, KPP, COMMENTARY, GLN, OWNCLIENT, CLIENTCLASS, SUPPLIERCLASS FROM Supermag.SVCOMPANIES' TO file;

    IMPORT TABLE FROM file() TO id, name, shortName, inn, address, faddress, tel, fax, email, okpo, kpp, commentary, gln, own, clientClass, supplierClass;
    
    FOR id(INTEGER i) AND NOT legalEntity(TEXT (id(i))) DO NEW s = LegalEntity {
        id(s) <- VARISTRING[100] (id(i));
    }
    
    FOR LegalEntity s = legalEntity(TEXT (id(INTEGER i))) DO {
        fullName(s) <- VARISTRING[200] (name(i));
        name(s) <- VARISTRING[150] (OVERRIDE shortName(i), name(i));
        UNP(s) <- left(inn(i), 9);
        dataAddress(s, DATE d) <- VARISTRING[150] (address(i)) WHERE d == currentDate();
        dataPostAddress(s, DATE d) <- VARISTRING[150](faddress(i)) WHERE d == currentDate();
        dataPhone(s, DATE d) <- CONCAT ', ', tel(i), fax(i) WHERE d == currentDate();
        email(s) <- email(i);
        OKPO(s) <- VARISTRING[20] (okpo(i));
        note(s) <- commentary(i);
        GLN(s) <- gln(i);
        isCompany(s) <- own(i) == '1';
        isSupplier(s) <- TRUE IF supplierClass(i);
        isCustomer(s) <- TRUE IF clientClass(i);
        legalEntityGroup(s) <- OVERRIDE legalEntityGroup('companies') IF own(i) == '1', legalEntityGroup('S' + supplierClass(i)), legalEntityGroup('C' + clientClass(i));
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importLegalEntity();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importLegalEntity()); } }

importStore 'Импорт магазинов' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL name = TEXT (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() EXEC 'SELECT ID, NAME FROM Supermag.SASTORECLASS' TO file;
    
    IMPORT TABLE FROM file() TO id, name;
    
    FOR id(INTEGER i) AND id(i) != 0 AND NOT store(TEXT (id(i))) DO NEW g = Store {
        id(g) <- VARISTRING[100] (id(i));
        legalEntity(g) <- legalEntity('534');
    }
    
    FOR Store g = store(TEXT (id(INTEGER i))) DO {
        name(g) <- name(i);
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importStore();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importStore()); } }

importStoreType 'Импорт форматов магазинов' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL name = TEXT (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() EXEC 'SELECT ID, TITLE FROM Supermag.SASTOREFORMATS' TO file;
    
    IMPORT TABLE FROM file() TO id, name;
    
    IF NOT chainStores('main') THEN NEW c = ChainStores {
        id(c) <- 'main';
    }
    
    FOR id(INTEGER i) AND NOT storeType('T' + id(i)) DO NEW g = StoreType {
        id(g) <- 'T' + id(i);
        chainStores(g) <- chainStores('main');
    }
    
    FOR StoreType g = storeType('T' + id(INTEGER i)) DO {
        name(g) <- name(i);
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importStoreType();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importStoreType()); } }

importDepartmentStore 'Импорт отделов магазинов' () {
    
    LOCAL id = INTEGER (INTEGER);
    LOCAL name = VARISTRING[255] (INTEGER);
    LOCAL idClass = INTEGER (INTEGER);
    LOCAL address = VARISTRING[255] (INTEGER);
    LOCAL idFormat = INTEGER (INTEGER);
    LOCAL idCompany = INTEGER (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() 
        EXEC 'SELECT ID, NAME, IDCLASS, ADDRESS, FORMATID, l.CLIENTID AS COMPANYID FROM Supermag.SVGRANTEDLOCS g, Supermag.SMOWNCLIENTLOCS l WHERE g.ID = l.LOCID' TO file;
    
    IMPORT TABLE FROM file() TO id, name, idClass, address, idFormat, idCompany;
    
    FOR id(INTEGER i) AND NOT departmentStore(TEXT (id(i))) DO NEW s = DepartmentStore {
        id(s) <- VARISTRING[100] (id(i));
    }
    
    FOR DepartmentStore s = departmentStore(TEXT (id(INTEGER i))) DO {
        
        name(s) <- VARISTRING[150](name(i));
        store(s) <- store(TEXT (idClass(i)));
    }
    
    FOR INTEGER i = [GROUP LAST INTEGER ii ORDER idFormat(ii), address(ii) BY store(TEXT (idClass(ii)))](Store st) DO {
        address(st) <- VARISTRING[150](address(i));
        storeType(st) <- storeType('T' + idFormat(i));
        legalEntity(st) <- legalEntity(TEXT (idCompany(i)));
    }
    
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importDepartmentStore();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importDepartmentStore()); } }

id = DATA VARISTRING[100](UserPriceListDetail);
userPriceListDetail (id, userPriceList) = GROUP AGGR UserPriceListDetail d WHERE d IS UserPriceListDetail BY id(d), userPriceList(d);
userPriceListDetail (id, idUserPriceList) = GROUP AGGR UserPriceListDetail d WHERE d IS UserPriceListDetail BY id(d), id(userPriceList(d));

importPriceListSupplier 'Импорт прайсов поставщика' () {
    
    LOCAL id = VARISTRING[50] (INTEGER);
    LOCAL date = DATE (INTEGER);
    LOCAL posted = INTEGER (INTEGER);
    LOCAL begin = DATE (INTEGER);
    LOCAL end = DATE (INTEGER);
    LOCAL idCompany = INTEGER (INTEGER);
    LOCAL title = VARISTRING[255] (INTEGER);
    LOCAL paymentDelay = INTEGER (INTEGER);
    LOCAL isCalendarDelay = VARISTRING[1] (INTEGER);
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() 
        EXEC 'SELECT q.ID, q.CREATEDAT, q.DOCSTATE, q.BEGINSAT, q.ENDSAT, q.CLIENTINDEX, cc.TITLE, cc.PAYMENTDELAY, cc.ISCALENDARDELAY FROM Supermag.SvDocNoPriceCQ q, Supermag.SVDocumentsCO cc WHERE q.docco = cc.id AND q.CREATEDAT >= \'11.03.19\'' TO file;
    
    IMPORT TABLE FROM file() TO id, date, posted, begin, end, idCompany, title, paymentDelay, isCalendarDelay;
    
    FOR id(INTEGER i) AND NOT userPriceList(id(i)) DO NEW p = UserPriceList {
        id(p) <- id(i);
    }
    
    FOR UserPriceList p == userPriceList(id(INTEGER i)) DO {
        
        operation(p) <- PriceList.operation('supplier');
        number(p) <- VARISTRING[28] (id(p));
        date(p) <- date(i);
        time(p) <- 00:00;
        isPosted(p) <- posted(i) == 0 OR posted(i) == 2;
        fromDate(p) <- begin(i);
        fromTime(p) <- 00:00;
        toDate(p) <- end(i);
        company(p) <- legalEntity(TEXT (idCompany(i)));
        note(p) <- title(i);
        allStocks(p) <- NULL;
    }
    
    LOCAL type = VARISTRING[2](INTEGER);
    LOCAL idDoc = VARISTRING[50](INTEGER);
    LOCAL specItem = INTEGER (INTEGER);
    LOCAL idItem = VARISTRING[50](INTEGER);
    LOCAL packSize = NUMERIC[14,3](INTEGER);
    LOCAL price = NUMERIC[19,4](INTEGER);
    
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() 
            EXEC 'SELECT qd.DOCTYPE, qd.DOCID, qd.SPECITEM, q.CREATEDAT, qd.ARTICLE, qd.PACKSIZE, cd.itemPrice FROM Supermag.SVSpecNoPriceCQ qd, Supermag.SvDocNoPriceCQ q, Supermag.SVDocumentsCO cc, Supermag.SVSpecCO cd WHERE qd.docid=q.id AND q.docco = cc.id AND cd.docid = cc.id AND cd.article = qd.article AND q.CREATEDAT >= \'11.03.19\'' TO file;
    
    IMPORT TABLE FROM file() TO type, idDoc, specItem, date, idItem, packSize, price;
    
    id(INTEGER i) <- CONCAT '', 'S', type(i), idDoc(i), specItem(i) WHERE imported(i); 
    
    FOR userPriceList(idDoc(INTEGER i)) AND NOT userPriceListDetail(id(i), idDoc(i)) DO NEW d = UserPriceListDetail {
        id(d) <- id(i);
        userPriceList(d) <- userPriceList(idDoc(i));
    }
    
    FOR UserPriceListDetail d = userPriceListDetail(id(INTEGER i), idDoc(i)) DO {
        sku(d) <- item(idItem(i));
        price(d, LedgerPriceListType t) <- NUMERIC[16,4](price(i)) WHERE t == dataPriceListType('supplier');
    }
    
    LOCAL idStock = INTEGER (INTEGER);
    
    EXTERNAL SQL 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base() 
        EXEC 'SELECT q.ID, cl.locationid FROM Supermag.SvDocNoPriceCQ q, Supermag.SMContractLocations cl WHERE q.id = cl.id' TO file;
    
    IMPORT TABLE FROM file() TO idDoc, idStock;
    
    FOR [GROUP SUM 1 BY userPriceList(idDoc(INTEGER i)), departmentStore(TEXT (idStock(i)))](UserPriceList p, DepartmentStore s) DO {
        dataIn(p, s) <- TRUE;
    }
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importPriceListSupplier();
DESIGN integrationData { supermagButtons { MOVE PROPERTY (importPriceListSupplier()); } }
