MODULE ExportCSO;

REQUIRE Image, ExportCSOCustom, Store, Range;


//----------------------------- Экспорт в КСО -----------------------//

//------------------//PI_SAP_ArticleHierarchyObject.xml
//dataExchangeRegisterAddress 'Полный адрес отправки данных КСО' = DATA STRING[255] ();

dataExchangeRegisterAddress 'Полный адрес отправки данных КСО' = DATA STRING[255] (Store) CHARWIDTH 30;
dataExchangeRegisterAddress 'Полный адрес отправки данных КСО' (DepartmentStore ds)= dataExchangeRegisterAddress(store(ds)) IF id(store(ds))==id(ds) CHARWIDTH 30;
customGroupType = DATA CustomGroupType(Store);
nameCustomGroupType 'Справочник КСО' (Store ds) = name(customGroupType(ds)) CHARWIDTH 30;
customGroupType(DepartmentStore ds) = customGroupType(store(ds)) IF id(store(ds))==id(ds);

CONSTRAINT customGroupType(Store st) AND NOT isCSO(customGroupType(st))
    CHECKED BY customGroupType[Store] 
    MESSAGE 'Для магазина олжен быть задан справочник КСО';

EXTEND FORM store
    PROPERTIES (s) dataExchangeRegisterAddress, nameCustomGroupType
;
DESIGN store{
    headerExtraParams{
        MOVE PROPERTY (dataExchangeRegisterAddress(s));
        MOVE PROPERTY (nameCustomGroupType(s));        
    }
}
EXTEND FORM stores
    PROPERTIES (s) READONLYIF isReadonly() dataExchangeRegisterAddress, nameCustomGroupType
;

GROUP Header EXTID 's:Header';
GROUP To EXTID '=http://schemas.microsoft.com/ws/2005/05/addressing/none:To': Header ;
GROUP Action EXTID '=http://schemas.microsoft.com/ws/2005/05/addressing/none:Action': Header ;
GROUP Body EXTID 's:Body';
GROUP Put EXTID '=http://www.uvs.lt/PI_GP:PutArticleHierarchyObjects' :Body;
GROUP head :Put;
GROUP items:Put;
GROUP Message EXTID 'MessageItemOfArticleHierarchyObjectS7N_Sjo7W' :items;
GROUP itemO EXTID 'Item';


inFilter = DATA LOCAL NESTED BOOLEAN (CustomGroupType);
inFilter = DATA LOCAL NESTED BOOLEAN (Item);
activeIndex (Item i, CustomGroupType type) = PARTITION SUM 1 IF customGroup(type, i) AND inFilter(i) ORDER name(i),i BY type;

FORM ArticleHierarchyObject FORMEXTID 's=http://schemas.xmlsoap.org/soap/envelope/:Envelope'  
     
    PROPERTIES  IN head ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i'             
    PROPERTIES  IN head h1 = 'SAP PI' EXTID 'Receiver'
    PROPERTIES  IN head h2 = 'SAP ERP' EXTID 'Sender'
    PROPERTIES  IN head h3 = TRUE EXTID 'SessionEnd'
    PROPERTIES  IN head h33 = 1 EXTID'SessionMessageNumber'
    PROPERTIES  IN head h4 = [FORMULA STRING[20] 'to_char(($1),\'YYYY-MM-DD\') || \'T\' || to_char(($1),\'HH24:MI:SS\')'](currentDateTime()) EXTID 'SessionTimeStamp'
    PROPERTIES  IN head h5 = 'F' EXTID 'SessionType'                      
                           
    PROPERTIES IN items ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i' 
 
    OBJECTS dd =(i = Item, type = CustomGroupType)   EXTID 'MessageItemOfArticleHierarchyObjectS7N_Sjo7W' IN items
    PROPERTIES  = 'I' IF i IS Item EXTID 'ChangeType'  
         
    PROPERTIES  =idBarcode(i) EXTID 'ArticleId' IN itemO
    PROPERTIES  =id(type) IF i IS Item EXTID 'HierarchyId' IN itemO
    PROPERTIES  =id(customGroup(type, i)) EXTID 'NodeId' IN itemO
    PROPERTIES  =activeIndex(i,type) EXTID 'NumberInCatalogue' IN itemO
                    
    FILTERS customGroup(type, i), 
            inFilter(i),
            inFilter(type) 
;
httpHeadersAHO(TEXT name) = CASE
    WHEN name == 'SOAPAction' THEN 'http://www.uvs.lt/PI_GP/I_PI_GP/PutArticleHierarchyObjects';
    
articleHierarchyObject 'Привязка товаров КСО (ArticleHierarchyObject)' (DepartmentStore ds){
    NEWSESSION {
        inFilter(CustomGroupType t) <- NULL;
        inFilter(Item i) <- NULL;
            
        inFilter(customGroupType(ds)) <- TRUE;
        inFilter(Item i) <- TRUE WHERE customGroup(customGroupType(ds), i) AND passScales(i) AND split(i) AND (countRange(i,ds,currentDate()) OR (active(i) AND currentBalance(i,ds)>0.0));
        
        EXPORT ArticleHierarchyObject XML TO System.exportFile;     
        LOCAL result = FILE();
        LOCAL message = TEXT();
        TRY {
            logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ', name(ds), 'ArticleHierarchyObject', 'Sending')));
            EXTERNAL HTTP dataExchangeRegisterAddress(ds) HEADERS httpHeadersAHO PARAMS System.exportFile() TO result;  
            message() <- CONCAT'', name(ds)+': ', 'ArticleHierarchyObject - отправлен';
        } CATCH {
            logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ', name(ds),'ArticleHierarchyObject', messageCaughtException()), lsfStackTraceCaughtException(), javaStackTraceCaughtException()));
            fileToString(result(), 'UTF-8');
            logToFile('CSO', (CONCAT '\n', name(ds)+': ArticleHierarchyObject',resultString()));    
            message() <-  CONCAT'', name(ds)+': ', 'ArticleHierarchyObject - есть ошибки, обратитесь к администратору';        
        }
        IF message()  THEN {
            MESSAGE message() NOWAIT;
        }
    }                
}

//----------- //PI_SAP_ArticleMessage.xml
GROUP PutL EXTID '=http://www.uvs.lt/PI_GP:PutArticleMessage' :Body;
GROUP headL EXTID 'head' :PutL;
GROUP itemsL EXTID 'items' :PutL;
GROUP itemL EXTID 'Item';
GROUP ArticleText : itemL;

Description = ABSTRACT CASE ISTRING[255](Item, INTEGER);
Description (Item i, INTEGER  int) +=  WHEN  int == 1 AND i IS Item THEN ISTRING[255](nameAttribute(i));
countDescription (Item i)= GROUP MAX INTEGER  int IF Description(i, int);

LanguageId = ABSTRACT CASE STRING[3](Item, INTEGER);
LanguageId (Item i, INTEGER  int) +=  WHEN  int == 1 AND i IS Item THEN 'RU';

FORM ArticleMessage FORMEXTID 's=http://schemas.xmlsoap.org/soap/envelope/:Envelope'       
    PROPERTIES IN headL ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i'             
    PROPERTIES  IN headL h1 = 'SAP PI' EXTID 'Receiver'
    PROPERTIES  IN headL h2 = 'SAP ERP' EXTID 'Sender'
    PROPERTIES  IN headL h3 = TRUE EXTID 'SessionEnd'
    PROPERTIES  IN headL h33 = 1 EXTID'SessionMessageNumber'
    PROPERTIES  IN headL h4 = [FORMULA STRING[20] 'to_char(($1),\'YYYY-MM-DD\') || \'T\' || to_char(($1),\'HH24:MI:SS\')'](currentDateTime()) EXTID 'SessionTimeStamp'
    PROPERTIES  IN headL h5 = 'F' EXTID 'SessionType'                      
                           
    PROPERTIES IN itemsL ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i'
    
    OBJECTS dd = (i = Item, type = CustomGroupType) EXTID 'MessageItemOfArticleMessageS7N_Sjo7W' IN itemsL
    PROPERTIES   = 'I' IF i IS Item EXTID 'ChangeType'         
    PROPERTIES  i1=idBarcode(i) EXTID 'ArticleId' IN itemL
    
    OBJECTS gg = (ii = Item, int=INTEGER) EXTID 'ArticleHierarchyDescriptionData' IN ArticleText
    PROPERTIES (ii,int) Description, LanguageId
    FILTERS iterate(int,1,countDescription(ii)), ii==i                    
    FILTERS customGroup(type, i), 
            inFilter(i),
            inFilter(type) 
; 
httpHeadersAM(TEXT name) = CASE
    WHEN name == 'SOAPAction' THEN 'http://www.uvs.lt/PI_GP/I_PI_GP/PutArticleMessage';
    
articleMessage 'Наименование товаров КСО (ArticleMessage)' (DepartmentStore ds){
    NEWSESSION {    
        inFilter(CustomGroupType t) <- NULL;
        inFilter(Item i) <- NULL;
            
        inFilter(customGroupType(ds)) <- TRUE;
        inFilter(Item i) <- TRUE WHERE customGroup(customGroupType(ds), i) AND passScales(i) AND split(i) AND (countRange(i,ds,currentDate()) OR (active(i) AND currentBalance(i,ds)>0.0));
    
        EXPORT ArticleMessage XML TO System.exportFile;
        LOCAL result = FILE();
        LOCAL message = TEXT();    
        TRY {
            logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ', name(ds), 'ArticleMessage', 'Sending')));
            EXTERNAL HTTP dataExchangeRegisterAddress(ds) HEADERS httpHeadersAM PARAMS System.exportFile() TO result; 
            message() <- (CONCAT ': ', name(ds),'ArticleMessage - отправлен');
        } CATCH { 
            logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ',  name(ds),'ArticleMessage', messageCaughtException()), lsfStackTraceCaughtException(), javaStackTraceCaughtException()));
            fileToString(result(), 'UTF-8');
            logToFile('CSO', (CONCAT '\n',  name(ds)+': ArticleMessage',resultString()));    
            message() <- (CONCAT ': ', name(ds),'ArticleMessage - есть ошибки, обратитесь к администратору');      
        }
        IF message()  THEN {
            MESSAGE message() NOWAIT;
        }  
    }                      
}

//------------ //PI_SAP_ArticleDocumentMessage.xml
GROUP PutI EXTID '=http://www.uvs.lt/PI_GP:PutArticleDocumentMessage' :Body;
GROUP headI EXTID 'head' :PutI;
GROUP itemsI EXTID 'items' :PutI;
GROUP itemI EXTID 'Item';
GROUP DocumentData : itemI;
GROUP ArticleDocumentData : DocumentData;

timeStamp = DATA LOCAL STRING ();

localImage = DATA LOCAL IMAGEFILE (Item);
localImage = DATA LOCAL IMAGEFILE (CustomGroup);
countImagesCSO 'Кол-во картинок в одном документе' = DATA INTEGER ();

number = DATA LOCAL INTEGER ();
isEnd = DATA LOCAL BOOLEAN ();

index(Item i, CustomGroupType t) = PARTITION SUM 1 IF customGroup(t, i) AND inFilter(i) ORDER i,t;
countIn() = GROUP SUM 1 IF customGroup(CustomGroupType t, Item i) AND inFilter(i);

FORM ArticleDocumentMessage FORMEXTID 's=http://schemas.xmlsoap.org/soap/envelope/:Envelope'   
          
    PROPERTIES IN headI ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i'             
    PROPERTIES  IN headI         h1 = 'SAP PI' EXTID 'Receiver'
    PROPERTIES  IN headI         h2 = 'SAP ERP' EXTID 'Sender'
    PROPERTIES  IN headI         h3 = (IF isEnd() THEN 'true' ELSE 'false') EXTID 'SessionEnd'
    PROPERTIES  IN headI         h33 = number() EXTID'SessionMessageNumber'
    PROPERTIES  IN headI         h4 = timeStamp() EXTID 'SessionTimeStamp'
    PROPERTIES  IN headI         h5 = 'F' EXTID 'SessionType'                      
                           
    PROPERTIES IN itemsI ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i' 
        
    OBJECTS dd = (i = Item, type = CustomGroupType) EXTID 'MessageItemOfArticleDocumentMessageS7N_Sjo7W' IN itemsI
    PROPERTIES  = 'I' IF i IS Item EXTID 'ChangeType' 
    
    PROPERTIES  i1=idBarcode(i) EXTID 'ArticleId' IN itemI
    PROPERTIES  IN ArticleDocumentData    =idBarcode(i) EXTID 'DokNr' 
    PROPERTIES  IN ArticleDocumentData    =localImage(i) EXTID 'Object'    
    FILTERS inFilter(type),
            index(i,type),
            (index(i,type) > ((number() - 1) * countImagesCSO())) OR NOT countImagesCSO(),
            (index(i,type) <= (number() * countImagesCSO())) OR NOT countImagesCSO()
; 

httpHeadersADM(TEXT name) = CASE
    WHEN name == 'SOAPAction' THEN 'http://www.uvs.lt/PI_GP/I_PI_GP/PutArticleDocumentMessage';

articleDocumentMessage 'Изображения товаров КСО (ArticleDocumentMessage)' (DepartmentStore ds){
    NEWSESSION {    
        inFilter(CustomGroupType t) <- NULL;
        inFilter(Item i) <- NULL;
            
        inFilter(customGroupType(ds)) <- TRUE;
        inFilter(Item i) <- TRUE WHERE customGroup(customGroupType(ds), i) AND passScales(i) AND split(i) AND (countRange(i,ds,currentDate()) OR (active(i) AND currentBalance(i,ds)>0.0));
        
        localImage(Item i) <- NULL;
        FOR inFilter(Item i) AND image(i) DO {
            localImage(i) <- image(i);
            getFileSize(FILE(localImage(i)));
            IF fileSize() > 15000 THEN {
                resizeImage(localImage(i), sqrt(DOUBLE(fileSize())/10000));
                localImage(i) <- resizedImage();
            }
            convertImage(localImage(i), 'png');
            localImage(i) <- convertedImage();
            
        }
        timeStamp() <- [FORMULA STRING[20] 'to_char(($1),\'YYYY-MM-DD\') || \'T\' || to_char(($1),\'HH24:MI:SS\')'](currentDateTime());
        LOCAL countN = INTEGER ();
        countN() <- OVERRIDE divideInteger(countIn(),countImagesCSO()) (+) (IF mod(countIn(),countImagesCSO()) > 0 THEN 1), 1;
        FOR iterate(INTEGER n, 1, countN()) DO {
            number() <- n;
            isEnd() <- n == countN();
            EXPORT ArticleDocumentMessage XML TO System.exportFile;
            LOCAL result = FILE();
            LOCAL message = TEXT();
            TRY {
                logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ', name(ds), 'ArticleDocumentMessage', 'Sending')));
                EXTERNAL HTTP dataExchangeRegisterAddress(ds) HEADERS httpHeadersADM PARAMS System.exportFile() TO result;
                message() <- (CONCAT ': ', name(ds),'ArticleDocumentMessage - отправлен');
            } CATCH {
                logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ', name(ds), 'ArticleDocumentMessage', messageCaughtException()), lsfStackTraceCaughtException(), javaStackTraceCaughtException()));
                fileToString(result(), 'UTF-8');
                logToFile('CSO', (CONCAT '\n', name(ds)+': ArticleDocumentMessage',resultString()));
                message() <- (CONCAT ': ', name(ds),'ArticleDocumentMessage - есть ошибки, обратитесь к администратору');
            }
            IF message()  THEN {
                MESSAGE message() NOWAIT;
            }
        }
    }
}

//------------ //PI_SAP_ArticleHierarchy.xml
GROUP PutC EXTID '=http://www.uvs.lt/PI_GP:PutArticleHierarchies' :Body;
GROUP headC EXTID 'head' :PutC;
GROUP itemsC EXTID 'items' :PutC;
GROUP itemC EXTID 'Item';
GROUP HeaderText: itemC;
GROUP ArticleHierarchyDescriptionData:HeaderText; 
GROUP Node: itemC;
GROUP NodeText;
GROUP ArticleHierarchyDescriptionDataC EXTID 'ArticleHierarchyDescriptionData' :NodeText;

FORM ArticleHierarchy FORMEXTID 's=http://schemas.xmlsoap.org/soap/envelope/:Envelope'     
      
    PROPERTIES IN headC ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i'             
    PROPERTIES  IN headC  = 'SAP PI' EXTID 'Receiver'
    PROPERTIES  IN headC  = 'SAP ERP' EXTID 'Sender'
    PROPERTIES  IN headC  = TRUE EXTID 'SessionEnd'
    PROPERTIES  IN headC  = 1 EXTID'SessionMessageNumber'
    PROPERTIES  IN headC  = [FORMULA STRING[20] 'to_char(($1),\'YYYY-MM-DD\') || \'T\' || to_char(($1),\'HH24:MI:SS\')'](currentDateTime()) EXTID 'SessionTimeStamp'
    PROPERTIES  IN headC  = 'F' EXTID 'SessionType'    

    PROPERTIES IN itemsC ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:i' 
    OBJECTS type = CustomGroupType EXTID 'MessageItemOfArticleHierarchyS7N_Sjo7W' IN itemsC    
    PROPERTIES                                         = 'I' IF type IS CustomGroupType EXTID 'ChangeType'  
    PROPERTIES IN itemC                                = 'P1' IF type IS CustomGroupType EXTID 'DistributionChannel'    
    PROPERTIES IN ArticleHierarchyDescriptionData      = name(type) EXTID  'Description'
    PROPERTIES IN ArticleHierarchyDescriptionData      = 'RU' IF type IS CustomGroupType EXTID  'LanguageId' 
    PROPERTIES IN itemC                                =id(type) EXTID 'HierarchyId'                
    FILTERS inFilter(type)
    
    OBJECTS    i = CustomGroup EXTID 'ArticleHierarchyNode' IN Node          

    PROPERTIES                                        = id(i) EXTID 'NodeId'
    PROPERTIES IN ArticleHierarchyDescriptionDataC    = name(i) EXTID 'Description'
    PROPERTIES IN ArticleHierarchyDescriptionDataC    = 'RU' IF i IS CustomGroup EXTID 'LanguageId'     
    PROPERTIES                                        = id(parent(i)) EXTID 'ParentId'
    PROPERTIES                                        = localImage(i) EXTID 'Picture'    
        
    OBJECTS in = CustomGroupType IN itemC EXTID 'SalesOrganization'
    FILTERS in == type     
    PROPERTIES                                        = '1' IF in IS CustomGroupType  EXTID 'value'       
                                         
    OBJECTS in1 = CustomGroupType IN itemC EXTID 'Type'
    FILTERS in1 == type     
    PROPERTIES                                        = '0' IF in1 IS CustomGroupType  EXTID  'value'  
                
    FILTERS customGroupType(i)==type
;

httpHeadersAH(TEXT name) = CASE
    WHEN name == 'SOAPAction' THEN 'http://www.uvs.lt/PI_GP/I_PI_GP/PutArticleHierarchies';
    
articleHierarchy 'Иерархия групп КСО (ArticleHierarchy)' (DepartmentStore ds){
    NEWSESSION {
        localImage(CustomGroup g) <- NULL;
        
        inFilter(CustomGroupType t) <- NULL;
        inFilter(Item i) <- NULL;    
    
        inFilter(customGroupType(ds)) <- TRUE; 
        
        FOR inFilter(customGroupType(CustomGroup i)) AND image(i) DO {
            convertImage(image(i), 'png');
            localImage(i) <- convertedImage();        
        }
    
        EXPORT ArticleHierarchy XML TO System.exportFile;     
        LOCAL result = FILE();
        LOCAL message = TEXT();    
        TRY {
            logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ', name(ds), 'ArticleHierarchy', 'Sending')));
            EXTERNAL HTTP dataExchangeRegisterAddress(ds) HEADERS httpHeadersAH PARAMS System.exportFile() TO result;  
            message() <- (CONCAT ': ', name(ds), 'ArticleHierarchy - отправлен'); 
        } CATCH { 
            logToFile('CSO',(CONCAT '\n\n', (CONCAT ' - ', name(ds), 'ArticleHierarchy', messageCaughtException()), lsfStackTraceCaughtException(), javaStackTraceCaughtException()));
            fileToString(result(), 'UTF-8');
            logToFile('CSO', (CONCAT '\n', name(ds)+': ArticleHierarchy',resultString()));   
            message() <- (CONCAT ': ', name(ds), 'ArticleHierarchy - есть ошибки, обратитесь к администратору');               
        }
        IF message()  THEN {
            MESSAGE message() NOWAIT;
        } 
    }           
}

exportCSO 'Выгрузить магазин' (DepartmentStore ds)  {
    IF dataExchangeRegisterAddress(ds) AND customGroupType(ds) THEN {
        articleHierarchyObject(ds);
        articleMessage(ds);
        articleDocumentMessage(ds);
        articleHierarchy(ds);  
    }
}
exportCSO 'Выгрузить' (CustomGroupType type)  {
    FOR active(DepartmentStore ds) AND  customGroupType(ds) == type DO {
        exportCSO(ds);  
    }
}
//-- в планировщик
exportCSO 'Выгрузить (планировщик)' ()  {
    FOR isCSO(CustomGroupType type) DO {
        exportCSO(type);  
    }
}

EXTEND FORM integrationData 
    OBJECTS type = CustomGroupType 
    PROPERTIES (type)  READONLY name, id, isCSO
    PROPERTIES (type) TOOLBAR exportCSO
    FILTERS isCSO(type)
    
    OBJECTS cs = DepartmentStore
    PROPERTIES (cs) READONLY id, name, nameLegalEntity, dataExchangeRegisterAddress
    PROPERTIES (cs) TOOLBAR exportCSO, articleHierarchyObject, articleMessage, articleDocumentMessage, articleHierarchy
    PROPERTIES exportCSO() PANEL DRAW cs
    FILTERS customGroupType(cs)==type,
            active(cs)
;

DESIGN integrationData {
    kso {
        MOVE BOX(type);  
        MOVE BOX(cs){ fill = 2;}
    }    
}

