MODULE ExportAjustmentSupermag;
REQUIRE StockAdjustment, ExportSupermag;

NAMESPACE Stock;

EXTEND FORM operation
    PROPERTIES (o) idSupermag
;
DESIGN operation{
    propertyContainer {
        MOVE PROPERTY(idSupermag(o));
    }
}

EXTEND FORM operations
    PROPERTIES (o) READONLY idSupermag
;

//---------------------- Изменение остатков код операции (-1)
GROUP LA;
GROUP SMDOCUMENTS: LA;

inc = DATA LOCAL BOOLEAN (Adjustment);

dateTimeChange = DATA DATETIME (Adjustment);

changeDoc(Adjustment d) = CHANGED(seriesNumber(d))OR CHANGED(stock(d))  OR CHANGED(dateTime(d)) OR CHANGED(operation(d)) OR CHANGED(isPosted(d));

changeDoc(AdjustmentDetail d) = CHANGED(quantity( d)) OR CHANGED(sku(d)) OR CHANGED(price(d)) OR CHANGED(sum(d)); 
changeDocDetail(Adjustment i) = GROUP SUM 1 IF changeDoc(AdjustmentDetail d) AND adjustment(d)==i;

WHEN SET(changeDoc(Adjustment i)) OR SET (changeDocDetail(i)) DO {
    dateTimeChange(i)<- currentDateTime();  
}

FORM exportAdjustmentMagN FORMEXTID 'PACKAGE'  
    PROPERTIES ATTR = exportTime(currentDateTime())  EXTID 'name'

    OBJECTS i = Adjustment EXTID 'POSTOBJECT'
    PROPERTIES ATTR = 'Акт потерь' IF i IS Adjustment EXTID 'description'  
    PROPERTIES ATTR = 'normal' IF i IS Adjustment EXTID 'action'      
    
    PROPERTIES = STRING[100]('LA'+seriesNumber(i)) EXTID 'Id'
    PROPERTIES = STRING[100](STRING[100](seriesNumber(i))) EXTID 'ID' IN SMDOCUMENTS
    PROPERTIES = 'LA' IF i IS Adjustment EXTID 'DOCTYPE' IN SMDOCUMENTS    
    PROPERTIES = idSupermag(stock(i)) EXTID 'BORNIN' IN SMDOCUMENTS    
    PROPERTIES = exportTime(dateTime(i))  EXTID 'CREATEDAT' IN SMDOCUMENTS    
    PROPERTIES = 0 IF i IS Adjustment EXTID 'CURRENCYMULTORDER' IN SMDOCUMENTS      
    PROPERTIES = 1 IF i IS Adjustment  EXTID 'CURRENCYRATE' IN SMDOCUMENTS 
    PROPERTIES = 1 IF i IS Adjustment EXTID 'CURRENCYTYPE' IN SMDOCUMENTS        
    PROPERTIES = IF isPosted(i) THEN 3 ELSE 2 EXTID 'DOCSTATE' IN SMDOCUMENTS           
    PROPERTIES = 1 IF i IS Adjustment  EXTID 'ISROUBLES' IN SMDOCUMENTS      
    PROPERTIES = id(stock(i)) EXTID 'LOCATION' IN SMDOCUMENTS  
    PROPERTIES = idSupermag(operation(i))  EXTID 'OPCODE' IN SMDOCUMENTS  
    PROPERTIES = 0 IF i IS Adjustment  EXTID 'PRICEROUNDMODE' IN SMDOCUMENTS       
    PROPERTIES = 0 IF i IS Adjustment EXTID 'TOTALSUM' IN SMDOCUMENTS    
    PROPERTIES = 0 IF i IS Adjustment EXTID 'TOTALSUMCUR' IN SMDOCUMENTS    
    PROPERTIES = 'Документ изменения остатков' IF i IS Adjustment EXTID 'COMMENTARY' IN SMDOCUMENTS  
                                                            
    OBJECTS d = AdjustmentDetail   EXTID 'SMSPEC' IN LA
    PROPERTIES = STRING[100](seriesNumber(d)) EXTID 'DOCID'    
    PROPERTIES = 'LA' IF d IS AdjustmentDetail EXTID 'DOCTYPE'      
    PROPERTIES = index(d) EXTID 'SPECITEM'        
    PROPERTIES = idSku(d) EXTID 'ARTICLE'                          
    PROPERTIES d1= index(d) EXTID 'DISPLAYITEM'  
    PROPERTIES = - quantity(d) EXTID 'QUANTITY'      
    PROPERTIES = 0 IF d IS AdjustmentDetail EXTID 'TOTALPRICE'  
    PROPERTIES = 0 IF d IS AdjustmentDetail EXTID 'TOTALPRICECUR'      
    PROPERTIES = 0 IF d IS AdjustmentDetail EXTID 'TOTALPRICENOTAX'            
    FILTERS adjustment(d)==i,
            quantity(d) < 0,
            inc(i)                                          
; 

GROUP FA;
GROUP SMDOCUMENTS1 EXTID 'SMDOCUMENTS': FA;


stockDocumentLedgerOver(Adjustment d) = OVERRIDE OutAdjustment(d), InAdjustment(d);
dateTimeChange[StockDocumentLedger](OutAdjustment i) += dateTimeChange(adjustment(i));
dateTimeChange[StockDocumentLedger](InAdjustment i) += dateTimeChange(adjustment(i));

FORM exportAdjustmentMagP FORMEXTID 'PACKAGE'  
    PROPERTIES ATTR = exportTime(currentDateTime())  EXTID 'name'

    OBJECTS i = Adjustment EXTID 'POSTOBJECT'
    PROPERTIES ATTR = 'Акт обнаружений' IF i IS Adjustment EXTID 'description'  
    PROPERTIES ATTR = 'normal' IF i IS Adjustment EXTID 'action'      
    
    PROPERTIES = STRING[100]('FA'+seriesNumber(i)) EXTID 'Id'
    PROPERTIES = STRING[100](STRING[100](seriesNumber(i))) EXTID 'ID' IN SMDOCUMENTS1
    PROPERTIES = 'FA' IF i IS Adjustment EXTID 'DOCTYPE' IN SMDOCUMENTS1    
    PROPERTIES = idSupermag(stock(i)) EXTID 'BORNIN' IN SMDOCUMENTS1    
    PROPERTIES = exportTime(dateTime(i))  EXTID 'CREATEDAT' IN SMDOCUMENTS1    
    PROPERTIES = 0 IF i IS Adjustment EXTID 'CURRENCYMULTORDER' IN SMDOCUMENTS1      
    PROPERTIES = 1 IF i IS Adjustment  EXTID 'CURRENCYRATE' IN SMDOCUMENTS1 
    PROPERTIES = 1 IF i IS Adjustment EXTID 'CURRENCYTYPE' IN SMDOCUMENTS1        
    PROPERTIES = IF isPosted(i) THEN 3 ELSE 2 EXTID 'DOCSTATE' IN SMDOCUMENTS1           
    PROPERTIES = 1 IF i IS Adjustment  EXTID 'ISROUBLES' IN SMDOCUMENTS1      
    PROPERTIES = id(stock(i)) EXTID 'LOCATION' IN SMDOCUMENTS1  
    PROPERTIES = idSupermag(operation(i))  EXTID 'OPCODE' IN SMDOCUMENTS1  
    PROPERTIES = 0 IF i IS Adjustment  EXTID 'PRICEROUNDMODE' IN SMDOCUMENTS1       
    PROPERTIES = 0 IF i IS Adjustment EXTID 'TOTALSUM' IN SMDOCUMENTS1    
    PROPERTIES = 0 IF i IS Adjustment EXTID 'TOTALSUMCUR' IN SMDOCUMENTS1      
    PROPERTIES = 'Документ изменения остатков' IF i IS Adjustment EXTID 'COMMENTARY' IN SMDOCUMENTS1  
                                                                
    OBJECTS d = AdjustmentDetail   EXTID 'SMSPEC' IN FA
    PROPERTIES = STRING[100](seriesNumber(d)) EXTID 'DOCID'    
    PROPERTIES = 'FA' IF d IS AdjustmentDetail EXTID 'DOCTYPE'      
    PROPERTIES = index(d) EXTID 'SPECITEM'        
    PROPERTIES = idSku(d) EXTID 'ARTICLE'                          
    PROPERTIES d1= index(d) EXTID 'DISPLAYITEM'  
    PROPERTIES = quantity(d) EXTID 'QUANTITY'      
    PROPERTIES = 0 IF d IS AdjustmentDetail EXTID 'TOTALPRICE'  
    PROPERTIES = 0 IF d IS AdjustmentDetail EXTID 'TOTALPRICECUR'      
    PROPERTIES = 0 IF d IS AdjustmentDetail EXTID 'TOTALPRICENOTAX'            
    FILTERS adjustment(d)==i,
            quantity(d) > 0,
            inc(i)                                          
; 


exportAdjustmentMag 'Экспорт в супермаг' (Adjustment i) {
    inc(Adjustment ii) <- NULL;
    inc(i) <- TRUE WHERE idSupermag(operation(i)) AND idSupermag(stock(i));    
    LOCAL NESTED dt = DATETIME();
    dt () <- currentDateTime();
    IF (GROUP SUM 1 IF inc(Adjustment ii)) THEN{    
        IF (GROUP SUM 1 IF  inc(adjustment(AdjustmentDetail d)) AND quantity(d)<0) THEN{
            TRY{
                EXPORT exportAdjustmentMagN XML TO System.exportFile;
                WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + 'LA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
                fileExists('file://' + exportDirectorySupermag() + '/' + 'LA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + '.xml'); 
                IF fileExists()  THEN NEWSESSION NESTED LOCAL {
                    FOR inc(Adjustment ii)  DO NEW log = SupermagLog {
                        id(log)<- 'LA_' +STRING[30](LONG(ii))+'_'+(OVERRIDE seriesNumber(ii), '')+'_'+ formulaDateT(dt());  
                        dateTime(log) <- currentDateTime();
                        userLogin(log) <- login(currentUser()); 
                        nameContact(log) <- STRING[100](name(currentUser()));
                        stockDocumentLedger(log)<- stockDocumentLedgerOver(ii);
                    }     
                    APPLY NESTED LOCAL;
                }             
                     
            } CATCH {
                logToFile('supermag', CONCAT '\n', 'Акт потерь', 'file://' + exportDirectorySupermag() + '/' + 'LA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
                MESSAGE  'Акт потерь. Ошибка при экспорте LA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) +'. Обратитесь к администратору' NOWAIT;        
            }         
        }
        IF (GROUP SUM 1 IF  inc(adjustment(AdjustmentDetail d)) AND quantity(d)>0) THEN{
            TRY{
                EXPORT exportAdjustmentMagP XML TO System.exportFile;
                WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + 'FA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
                fileExists('file://' + exportDirectorySupermag() + '/' + 'FA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + '.xml'); 
                IF fileExists()  THEN NEWSESSION NESTED LOCAL {
                    FOR inc(Adjustment ii)  DO NEW log = SupermagLog {
                        id(log)<- 'FA_' +STRING[30](LONG(ii))+'_'+(OVERRIDE seriesNumber(ii), '')+'_'+ formulaDateT(dt());  
                        dateTime(log) <- currentDateTime();
                        userLogin(log) <- login(currentUser()); 
                        nameContact(log) <- STRING[100](name(currentUser()));
                        stockDocumentLedger(log)<- stockDocumentLedgerOver(ii);
                    }     
                    APPLY NESTED LOCAL;
                }             
                     
            } CATCH {
                logToFile('supermag', CONCAT '\n', 'Акт обнаружений', 'file://' + exportDirectorySupermag() + '/' + 'FA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
                MESSAGE  'Акт обнаружений. Ошибка при экспорте FA_' +STRING[30](LONG(i))+'_'+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) +'. Обратитесь к администратору' NOWAIT;        
            }         
        }
    

    }   
    inc(Adjustment ii) <- NULL;
}
exportSupermag(OutAdjustment s) +{
    exportAdjustmentMag(adjustment(s));
}
exportSupermag(InAdjustment s) +{
    exportAdjustmentMag(adjustment(s));
}
exportSupermagAll() +{
    FOR date(Adjustment s AS Adjustment) > sum(currentDate(),-countDaysExportData()) AND dateTimeChange(s) AND NOT (dateTimeChange(s) <lastDateTimeSupermagLog(stockDocumentLedgerOver(s))) AND idSupermag(operation(s)) DO {
        exportAdjustmentMag(s);
    }
}

EXTEND FORM adjustments
    PROPERTIES (i) exportAdjustmentMag TOOLBAR 
;
DESIGN adjustments {
    actionContainer{
        NEW mag {
            caption = 'Супермаг';
            MOVE PROPERTY (exportAdjustmentMag(i));
        }        
    }
}