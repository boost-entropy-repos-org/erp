MODULE ExportZReportSupermag;
REQUIRE ReceiptSkuLedgerReceiptStockDocumentLedger, ExportSupermag;
NAMESPACE ZReport;


//---------------------- Оптовая торговля (Код операции 1)
GROUP CS;
GROUP SMDOCUMENTS : CS;
//GROUP SMWAYBILLSOUT : CS;
//GROUP SMDOCPROPS : CS;

inc = DATA LOCAL BOOLEAN (RetailSales);
index (ReceiptSaleSkuLedger d) = 
        PARTITION SUM 1
        ORDER d BY stockDocumentLedger(d);

FORM exportZReportMag FORMEXTID 'PACKAGE'  
    PROPERTIES ATTR = exportTime(currentDateTime())  EXTID 'name'
//-- продажи
    OBJECTS i = RetailSales  EXTID 'POSTOBJECT'
    PROPERTIES ATTR = 'Продажи по кассе' IF i IS RetailSales EXTID 'description'  
    PROPERTIES ATTR = 'normal' IF i IS RetailSales EXTID 'action'      
    
    PROPERTIES = STRING[100]('CS'+STRING[30](LONG(i))) EXTID 'Id'
    PROPERTIES = STRING[100](LONG(i)) EXTID 'ID' IN SMDOCUMENTS
    PROPERTIES = 'CS' IF i IS RetailSales EXTID 'DOCTYPE' IN SMDOCUMENTS    
    PROPERTIES = idSupermag(departmentStore(i)) EXTID 'BORNIN' IN SMDOCUMENTS    
    PROPERTIES = exportTime(DATETIME(date(i)))  EXTID 'CREATEDAT' IN SMDOCUMENTS
    PROPERTIES = 0 IF i IS RetailSales EXTID 'CURRENCYMULTORDER' IN SMDOCUMENTS  
    PROPERTIES = 1 IF i IS RetailSales EXTID 'CURRENCYRATE' IN SMDOCUMENTS 
    PROPERTIES = 1 IF i IS RetailSales EXTID 'CURRENCYTYPE' IN SMDOCUMENTS    
    PROPERTIES = 3 IF i IS RetailSales EXTID 'DOCSTATE' IN SMDOCUMENTS       
    PROPERTIES = 1 IF i IS RetailSales  EXTID 'ISROUBLES' IN SMDOCUMENTS  
    PROPERTIES = id(departmentStore(i)) EXTID 'LOCATIONFROM' IN SMDOCUMENTS  
    PROPERTIES = 1 IF i IS RetailSales  EXTID 'OPCODE' IN SMDOCUMENTS      
    PROPERTIES = 3 IF i IS RetailSales  EXTID 'PRICEROUNDMODE' IN SMDOCUMENTS     
    PROPERTIES = (sumItem(i) (-) (GROUP SUM sum[SaleLedger](ReceiptReturnSkuLedger h) IF stockDocumentLedger(h)==i AND h IS ReceiptReturnSkuLedger)) EXTID 'TOTALSUM' IN SMDOCUMENTS 
    PROPERTIES i1 = (sumItem(i) (-) (GROUP SUM sum[SaleLedger](ReceiptReturnSkuLedger h) IF stockDocumentLedger(h)==i AND h IS ReceiptReturnSkuLedger)) EXTID 'TOTALSUMCUR' IN SMDOCUMENTS                       
                           
    OBJECTS d = ReceiptSaleSkuLedger   EXTID 'SMSPEC' IN CS
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(d)))) EXTID 'DOCID'    
    PROPERTIES = 'CS' IF d IS ReceiptSaleSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(d) EXTID 'SPECITEM'        
    PROPERTIES = id(sku(d)) EXTID 'ARTICLE'                          
    PROPERTIES d1= index(d) EXTID 'DISPLAYITEM'  
    PROPERTIES = price (d) EXTID 'ITEMPRICE'     
    PROPERTIES d2 = price (d) EXTID 'ITEMPRICECUR'                
    PROPERTIES d4 = round2((sum[SaleLedger](d) (-) sumVAT[SaleLedger](d))/quantity[SaleLedger](d)) EXTID 'ITEMPRICENOTAX'   
    PROPERTIES = quantity[SaleLedger] (d) EXTID 'QUANTITY'  
    PROPERTIES = sum[SaleLedger] (d) EXTID 'TOTALPRICE'   
    PROPERTIES d3 = sum[SaleLedger] (d) EXTID 'TOTALPRICECUR'                
    PROPERTIES d5 = (sum[SaleLedger] (d) (-) sumVAT[SaleLedger](d)) EXTID 'TOTALPRICENOTAX'         
    FILTERS stockDocumentLedger(d)==i,
            inc(i)                                         
                                                                           
    OBJECTS dd = ReceiptSaleSkuLedger   EXTID 'SMSPECTAX' IN CS
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(dd)))) EXTID 'DOCID'    
    PROPERTIES = 'CS' IF dd IS ReceiptSaleSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(dd) EXTID 'SPECITEM'        
    PROPERTIES = 0 IF dd IS ReceiptSaleSkuLedger  EXTID 'TAXID'        
    PROPERTIES = valueVAT[SaleLedger](dd) EXTID 'TAXRATE'
    PROPERTIES = sumVAT[SaleLedger](dd) EXTID 'TAXSUM'            
    FILTERS stockDocumentLedger(dd)==i                              
; 
GROUP CR;
GROUP SMDOCUMENTS1 EXTID 'SMDOCUMENTS': CR;
index (ReceiptReturnSkuLedger d) = 
        PARTITION SUM 1
        ORDER d BY stockDocumentLedger(d);

FORM exportZReportReturnMag FORMEXTID 'PACKAGE'  
    PROPERTIES ATTR = exportTime(currentDateTime())  EXTID 'name'
//-- возвраты
    OBJECTS i = RetailSales  EXTID 'POSTOBJECT'
    PROPERTIES ATTR = 'Возвраты по кассе' IF i IS RetailSales EXTID 'description'  
    PROPERTIES ATTR = 'normal' IF i IS RetailSales EXTID 'action'      

    PROPERTIES = STRING[100]('CR'+STRING[30](LONG(i))) EXTID 'Id'
    PROPERTIES = STRING[100](LONG(i)) EXTID 'ID' IN SMDOCUMENTS1
    PROPERTIES = 'CR' IF i IS RetailSales EXTID 'DOCTYPE' IN SMDOCUMENTS1    
    PROPERTIES = idSupermag(departmentStore(i)) EXTID 'BORNIN' IN SMDOCUMENTS1    
    PROPERTIES = exportTime(DATETIME(date(i)))  EXTID 'CREATEDAT' IN SMDOCUMENTS1
    PROPERTIES = 0 IF i IS RetailSales EXTID 'CURRENCYMULTORDER' IN SMDOCUMENTS1  
    PROPERTIES = 1 IF i IS RetailSales EXTID 'CURRENCYRATE' IN SMDOCUMENTS1 
    PROPERTIES = 1 IF i IS RetailSales EXTID 'CURRENCYTYPE' IN SMDOCUMENTS1    
    PROPERTIES = 3 IF i IS RetailSales EXTID 'DOCSTATE' IN SMDOCUMENTS1       
    PROPERTIES = 1 IF i IS RetailSales  EXTID 'ISROUBLES' IN SMDOCUMENTS1  
    PROPERTIES = id(departmentStore(i)) EXTID 'LOCATIONTO' IN SMDOCUMENTS1  
    PROPERTIES = 3 IF i IS RetailSales  EXTID 'OPCODE' IN SMDOCUMENTS1      
    PROPERTIES = 3 IF i IS RetailSales  EXTID 'PRICEROUNDMODE' IN SMDOCUMENTS1     
    PROPERTIES = -(GROUP SUM sum[SaleLedger](ReceiptReturnSkuLedger h) IF stockDocumentLedger(h)==i AND h IS ReceiptReturnSkuLedger) EXTID 'TOTALSUM' IN SMDOCUMENTS1 
    PROPERTIES i1 = -(GROUP SUM sum[SaleLedger](ReceiptReturnSkuLedger h) IF stockDocumentLedger(h)==i AND h IS ReceiptReturnSkuLedger) EXTID 'TOTALSUMCUR' IN SMDOCUMENTS1                       

    OBJECTS d = ReceiptReturnSkuLedger   EXTID 'SMSPEC' IN CR
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(d)))) EXTID 'DOCID'    
    PROPERTIES = 'CR' IF d IS ReceiptReturnSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(d) EXTID 'SPECITEM'        
    PROPERTIES = id(sku(d)) EXTID 'ARTICLE'                                  
    PROPERTIES d1= index(d) EXTID 'DISPLAYITEM'  
    PROPERTIES = price (d) EXTID 'ITEMPRICE'     
    PROPERTIES d2 = price (d) EXTID 'ITEMPRICECUR'                
    PROPERTIES d4 = round2((sum[SaleLedger](d) (-) sumVAT[SaleLedger](d))/quantity[SaleLedger](d)) EXTID 'ITEMPRICENOTAX'   
    PROPERTIES = -quantity[SaleLedger] (d) EXTID 'QUANTITY'  
    PROPERTIES = -sum[SaleLedger] (d) EXTID 'TOTALPRICE'   
    PROPERTIES d3 = -sum[SaleLedger] (d) EXTID 'TOTALPRICECUR'                
    PROPERTIES d5 = -(sum[SaleLedger] (d) (-) sumVAT[SaleLedger](d)) EXTID 'TOTALPRICENOTAX'         
    FILTERS stockDocumentLedger(d)==i,
            inc(i)                                         

    OBJECTS dd = ReceiptReturnSkuLedger   EXTID 'SMSPECTAX' IN CR
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(dd)))) EXTID 'DOCID'    
    PROPERTIES = 'CR' IF dd IS ReceiptReturnSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(dd) EXTID 'SPECITEM'        
    PROPERTIES = 0 IF dd IS ReceiptReturnSkuLedger  EXTID 'TAXID'        
    PROPERTIES = 0 IF valueVAT(dd) EXTID 'TAXRATE'
    PROPERTIES = -sumVAT[SaleLedger](dd) EXTID 'TAXSUM'            
    FILTERS stockDocumentLedger(dd)==i   
; 

numberExport 'Номер (CM)' (ZReport r) = STRING[100](LONG(retailSales(departmentStore(r),date(r)))) CHARWIDTH 12;
EXTEND FORM zReports
    PROPERTIES (z) READONLY numberExport
;
exportZReportMag 'Экспорт в супермаг' (RetailSales i) {
    inc(RetailSales ii) <- NULL;
    inc(i) <- TRUE IF isPosted(i) AND idSupermag(departmentStore(i));
    LOCAL NESTED dt = DATETIME();
    dt () <- currentDateTime();
    IF (GROUP SUM 1 IF inc(RetailSales ii)) THEN{        
        TRY{
            EXPORT exportZReportMag XML TO System.exportFile;
            WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + 'CS_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
            fileExists('file://' + exportDirectorySupermag() + '/' + 'CS_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + '.xml');  
            IF fileExists()  THEN NEWSESSION NESTED LOCAL {
                FOR inc(RetailSales ii)  DO NEW log = SupermagLog {
                    id(log)<- 'CS_' +STRING[30](LONG(ii))+(OVERRIDE seriesNumber(ii), '')+'_'+ formulaDateT(dt());
                    dateTime(log) <- currentDateTime();
                    userLogin(log) <- login(currentUser()); 
                    nameContact(log) <- STRING[100](name(currentUser()));
                    stockDocumentLedger(log)<- ii;
                }     
                APPLY NESTED LOCAL;
            }  
        
        } CATCH {
            logToFile('supermag', CONCAT '\n', 'Продажи по кассе', 'file://' + exportDirectorySupermag() + '/' + 'CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
            MESSAGE  'Продажи по кассе. Ошибка при экспорте CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) +'. Обратитесь к администратору' NOWAIT;                         
        } 
        TRY{
            IF (GROUP SUM 1 IF inc(stockDocumentLedger(ReceiptReturnSkuLedger h)) AND h IS ReceiptReturnSkuLedger)THEN {
                EXPORT exportZReportReturnMag XML TO System.exportFile;
                WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + 'CR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
                fileExists('file://' + exportDirectorySupermag() + '/' + 'CR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + '.xml');   
                IF fileExists()  THEN NEWSESSION NESTED LOCAL {
                    FOR inc(RetailSales ii)  DO NEW log = SupermagLog {
                        id(log)<- 'CR_' +STRING[30](LONG(ii))+(OVERRIDE seriesNumber(ii), '')+'_'+ formulaDateT(dt());
                        dateTime(log) <- currentDateTime();
                        userLogin(log) <- login(currentUser()); 
                        nameContact(log) <- STRING[100](name(currentUser()));
                        stockDocumentLedger(log)<- ii;
                    }     
                    APPLY NESTED LOCAL;
                }                     
            }           
        } CATCH {
            logToFile('supermag', CONCAT '\n', 'Возвраты по кассе', 'file://' + exportDirectorySupermag() + '/' + 'CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
            MESSAGE  'Возвраты по кассе. Ошибка при экспорте CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) +'. Обратитесь к администратору' NOWAIT;           
        }                                               
    }      
    inc(RetailSales ii) <- NULL;      
}

exportZReportMag 'Экспорт в супермаг' (ZReport i) {
    FOR RetailSales ii == retailSales(departmentStore(i) ,date(i)) AND isPosted(ii) AND idSupermag(departmentStore(i)) DO {
        exportZReportMag(ii);
    }          
}
exportSupermag(RetailSales s) +{
    exportZReportMag(s);
}

//EXTEND FORM zReports
//    PROPERTIES (z) exportZReportMag TOOLBAR 
//;

