MODULE SupermagDisparity;

REQUIRE SupermagSettings, SupermagFormMeta, Utils, TaxItem, Disparity, DisparityOperation;

NAMESPACE Disparity;

@settingOperationSupermag(Disparity);

exportDisparity 'Экспорт в Супермаг' ABSTRACT LIST (Disparity);

EXTEND FORM disparities
    PROPERTIES (dis) exportDisparity TOOLBAR 
;
DESIGN disparities {
    actionContainer{
        NEW mag {
            caption = 'Супермаг';
            MOVE PROPERTY (exportDisparity(dis));
        }        
    }
}

disparityApply 'Сохранить ' (Disparity doc) {
    formApply();
    IF series(doc) THEN { number(doc) <- seriesNumber(doc); series(doc) <- NULL;} 
    exportDisparity(doc);
}

EXTEND FORM disparity  PROPERTIES disparityApply(dis) TOOLBAR;

DESIGN disparity {
    TOOLBARRIGHT {
        MOVE PROPERTY (disparityApply(dis)) BEFORE PROPERTY (formClose()) { imagePath = 'apply.png';} 
        PROPERTY (formOk()) { hide = TRUE; }
        PROPERTY (formApply()) { hide = TRUE; }
    }
}

@settingIntegration(Disparity, DisparityDetail);

@exportFilds(disparity, disparityDetail); 


@exportFormWI(exportDisparityWI, disparity, disparityDetail, 'документ изменения остатков');
EXTEND FORM exportDisparityWI
    PROPERTIES = indexPlus(docd) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd2) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd3) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd4) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd5) EXTID 'SPECITEM'
    FILTERS quantity(docd)  > 0
    FILTERS quantity(docd2) > 0    
    FILTERS quantity(docd3) > 0    
    FILTERS quantity(docd4) > 0    
    FILTERS quantity(docd5) > 0    
;                

@exportFormWO(exportDisparityWO, disparity, disparityDetail, 'документ изменения остатков');

EXTEND FORM exportDisparityWO
    PROPERTIES = indexPlus(docd) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd2) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd3) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd4) EXTID 'SPECITEM'
    PROPERTIES = indexPlus(docd5) EXTID 'SPECITEM'
    FILTERS quantity(docd) > 0
    FILTERS quantity(docd2) > 0
    FILTERS quantity(docd3) > 0
    FILTERS quantity(docd4) > 0
    FILTERS quantity(docd5) > 0
;                

exportDisparityMag 'Экспорт в супермаг' (Disparity doc) {
    inc(Disparity ii) <- NULL;
    IF docTypeSupermag(operation(doc)) AND opcodeSupermag(operation(doc)) THEN {        
        LOCAL NESTED dt = DATETIME();
        dt () <- currentDateTime();
        inc(doc) <- TRUE;
        FOR iterateDown(INTEGER n, wordCount(docTypeSupermag(operation(doc)),';'), 1) DO {
                docid(doc) <- seriesNumber(doc);                 
                doctype(doc) <- STRING[10] (getWord(docTypeSupermag(operation(doc)),';',n));
                opcode(doc) <- STRING[10] (getWord(opcodeSupermag(operation(doc)),';',n));
                userop(doc) <- STRING[10] (getWord(useropSupermag(operation(doc)),';',n));
                bornin(doc) <- OVERRIDE bornin(doc), baseIDSupermag();
                docstate(doc) <- CASE WHEN isPosted(doc) THEN 3 WHEN isClosed(doc) THEN 0 ELSE 1;
                clientIndex(doc) <- id(contragentSupermag(stockGroup(stock(doc))));
                priceRoundMode(doc) <- 4 IF doc IS Disparity; 
                locationFrom(doc) <- stock(doc);
                locationTo(doc) <- stock(doc);
                location(doc)  <- stock(doc);  
                id(doc) <- CONCAT '', doctype(doc), seriesNumber(doc);                              
                                                                               
                CASE WHEN doctype(doc) = 'WI' THEN {
                        quantityExp(DisparityDetail docd) <- quantity(docd);
                        valueTax(DisparityDetail docd) <- valueVAT(sku(docd)) WHERE disparity(docd) = doc;
                        priceNoTax(DisparityDetail docd) <- price(docd) WHERE disparity(docd) = doc;
                        priceWithTax(DisparityDetail docd) <- NUMERIC[18,4] ( abs(round( priceNoTax(docd) * (1 + valueTax(docd)/100),2))) WHERE disparity(docd) = doc; 
                        sumNoTax(DisparityDetail docd) <- abs(sum(docd)) WHERE disparity(docd) = doc;
                        sumWithTax(DisparityDetail docd) <- NUMERIC[18,4] ( abs(round( priceWithTax(docd) * quantityExp(docd),2))) WHERE disparity(docd) = doc;
                        sumTax(DisparityDetail docd) <- sumWithTax(docd) - sumNoTax(docd) WHERE disparity(docd) = doc;
                        sumWithTaxCurr(DisparityDetail docd) <-round(sumWithTax(docd)/curRate(doc),2) WHERE disparity(docd) = doc;
                     }
                     WHEN doctype(doc) = 'WO' THEN {
                        quantityExp(DisparityDetail docd) <- quantity(docd);
                        valueTax(DisparityDetail docd) <- valueVAT(sku(docd)) WHERE disparity(docd) = doc;
                        priceNoTax(DisparityDetail docd) <- inputPrice(docd) WHERE disparity(docd) = doc;
                        priceWithTax(DisparityDetail docd) <- NUMERIC[18,4] ( abs(round( priceNoTax(docd) * (1 + valueTax(docd)/100),2))) WHERE disparity(docd) = doc; 
                        sumNoTax(DisparityDetail docd) <- abs(inputSum(docd)) WHERE disparity(docd) = doc;
                        sumWithTax(DisparityDetail docd) <- NUMERIC[18,4] ( abs(round( priceWithTax(docd) * quantityExp(docd),2))) WHERE disparity(docd) = doc;
                        sumTax(DisparityDetail docd) <- sumWithTax(docd) - sumNoTax(docd) WHERE disparity(docd) = doc;
                        sumWithTaxCurr(DisparityDetail docd) <-round(sumWithTax(docd)/curRate(doc),2) WHERE disparity(docd) = doc;
                     }
                     sumWithTax(doc) <- GROUP SUM sumWithTax(DisparityDetail add) IF disparity(add) = doc;                
                     sumWithTaxCurr(doc) <- GROUP SUM sumWithTaxCurr(DisparityDetail add) IF disparity(add) = doc;                                
           TRY {                
                CASE WHEN doctype(doc) = 'WI' THEN EXPORT exportDisparityWI XML TO System.exportFile;                 
                     WHEN doctype(doc) = 'WO' THEN EXPORT exportDisparityWO XML TO System.exportFile;
           } CATCH {
                logToFile('supermag', CONCAT '\n', 'Изменение сортности ' + id(doc), 'Ошибка формы',  'file://' + exportDirectorySupermag() + '/' + doctype(doc) + '_' + STRING[30](LONG(doc))+'_'+(OVERRIDE id(doc), '')+'_'+ formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
           }
           TRY {          
                WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + doctype(doc) +'_' +STRING[30](LONG(doc))+'_'+(OVERRIDE id(doc), '')+'_'+ formulaDateT(dt());
                WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/COPY/' + doctype(doc) +'_' +STRING[30](LONG(doc))+'_'+(OVERRIDE id(doc), '')+'_'+ formulaDateT(dt());
           } CATCH {
                logToFile('supermag', CONCAT '\n', 'Изменение сортности ' + id(doc), 'Ошибка записи в файл',  'file://' + exportDirectorySupermag() + '/' + doctype(doc) + '_' + STRING[30](LONG(doc))+'_'+(OVERRIDE id(doc), '')+'_'+ formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
           }
           
           TRY 
           {      
                fileExists('file://' + exportDirectorySupermag() + '/' + doctype(doc) +'_' +STRING[30](LONG(doc))+'_'+(OVERRIDE id(doc), '')+'_'+ formulaDateT(dt()) + '.xml'); 
                IF fileExists()  THEN NEWSESSION NESTED LOCAL {
                    FOR inc(Disparity ii)  DO NEW log = SupermagLog {
                        id(log)<- doctype(doc) + '_' +STRING[30](LONG(ii))+'_'+(OVERRIDE id(ii), '')+'_'+ formulaDateT(dt());  
                        dateTime(log) <- currentDateTime();
                        userLogin(log) <- login(currentUser()); 
                        nameContact(log) <- STRING[100](name(currentUser()));
                    }     
                    APPLY NESTED LOCAL;
                }             
                     
           } CATCH {
                logToFile('supermag', CONCAT '\n', 'Изменение сортности ' + id(doc), 'Ошибка чтения файла',  'file://' + exportDirectorySupermag() + '/' + doctype(doc) + '_' + STRING[30](LONG(doc))+'_'+(OVERRIDE id(doc), '')+'_'+ formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
           }
        } 
    }       
    inc(Disparity ii) <- NULL;
    APPLY;
}

exportDisparity (Disparity doc) + {
    IF isPosted(doc) THEN exportDisparityMag(doc);
}

importDisparity 'Изменение сортности' () {
    filterSql() <- 'd.CreateDat >= TO_DATE(\'' + toDateISO(dateFromImportDocument()) + '\',\'YYYY-MM-DD\') AND ( d.location IN ('+ stocks() + ')  OR d.locationfrom IN ('+ stocks() + ') OR locationto IN ('+ stocks() + ')   ) AND ( ' ;
    LOCAL filterDoc = STRING ();
    LOCAL operDoc = STRING ();
    filterDoc() <-'';
    FOR Operation op IF op IS Operation AND getWord(docTypeSupermag(op),';',1) DO {
       operDoc() <- CONCAT ' AND ', ('d.DOCTYPE = \'' + getWord(docTypeSupermag(op),';',1) + '\''), ('d.OPCODE = ' + getWord(opcodeSupermag(op),';',1)), ('d.USEROP = ' + getWord(useropSupermag(op),';',1)) ; 
       filterDoc() <- CONCAT ' OR ',filterDoc(), '(' + operDoc() + ')';
    }
      
//  чтобы не путаться осталяем только 1 документ
//    FOR Operation op IF op IS Operation AND getWord(docTypeSupermag(op),';',2) DO {
//       operDoc() <- CONCAT ' AND ', ('d.DOCTYPE = \'' + getWord(docTypeSupermag(op),';',2) + '\''), ('d.OPCODE = ' + getWord(opcodeSupermag(op),';',2)), ('d.USEROP = ' + getWord(useropSupermag(op),';',2)) ; 
//       filterDoc() <- CONCAT ' OR ',filterDoc(), '(' + operDoc() + ')';
//    }  
    
    filterDoc() <- substrFrom(filterDoc(),4);
    filterSql() <- CONCAT '', filterSql(), filterDoc(),')'; 
       
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base()  
    EXEC 'Select d.ID, d.doctype, d.opcode, d.userop, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(d.bornin)), d.createdat, d.docstate from Supermag.SMDocuments d where ' + filterSql() TO SupermagSettings.file;   

//    MESSAGE 'Select d.ID, d.doctype, d.opcode, d.userop, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(d.bornin)), d.createdat, d.docstate from Supermag.SMDocuments d where ' + filterSql();     
    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, operCode, userOp, bornIn, docDate, docState;
    
    idDoc(INTEGER i) <- STRING[50](CONCAT '', STRING(docType(i)), STRING(docNumber(i)));
    currentVersion (INTEGER i) <-  (CONCAT '~', STRING(idDoc(i)), STRING(operCode(i)), STRING(userOp(i)), STRING(bornIn(i)), STRING(docDate(i)), STRING(docState(i)) ) IF idDoc(i);                 
    codeOperation (INTEGER i) <- CONCAT '~', STRING(docType(i)), STRING(operCode(i)), STRING(userOp(i)) IF idDoc(i);

    FOR Disparity doc == disparity(idDoc(INTEGER i)) AND NOT lastVersion[Disparity](doc) = currentVersion(i) DO {
        isPosted(doc) <- TRUE IF docState(i) = 3;
        isClosed(doc) <- TRUE IF docState(i) = 0;      
        lastVersion[Disparity](doc) <- currentVersion(i);        
    }
    
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importDisparity();
