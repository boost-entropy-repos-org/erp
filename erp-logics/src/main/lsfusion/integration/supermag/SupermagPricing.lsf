MODULE SupermagPricing;

REQUIRE SupermagSettings, Time,  Store, Repricing, SupermagFormMeta, PriceList;

//---------------------------------------------------------------------------------------------------------акты переоценки

imported 'Импортируемая' = DATA BOOLEAN (Repricing.Operation);

EXTEND FORM Repricing.operation PROPERTIES imported(o);
DESIGN Repricing.operation {
    paramsContainer {
        MOVE PROPERTY (imported(o));
    }
}

id = DATA ISTRING[100](UserRepricingDetail) INDEXED;
userRepricingDetail = GROUP AGGR UserRepricingDetail d WHERE d IS UserRepricingDetail BY id(d);

@settingIntegration(Repricing, RepricingDetail);

importRepricing 'Импорт актов переоценки' () {   
                        
    LOCAL reason = INTEGER (INTEGER);
                                                                                                                                                                                  // a.Reason = 0 переоценка по приходу, у нас акт расценки               
    filterSql () <- 'd.location IN ('+ stocks() + ') AND TRUNC(nvl(a.ExecTime,a.ExecDate)) >= TO_DATE(\'' + toDateISO(dateFromImportDocument()) + '\',\'YYYY-MM-DD\') AND d.DocState IN (0,2,3) AND a.Reason > 0';
    IF length(numberImportDocument()) > 0 THEN filterSql() <- 'd.id = \'' + numberImportDocument() + '\''; 
    
    EXTERNAL SQL connectionString() 
        EXEC 'SELECT d.ID, d.DOCTYPE, nvl(a.EXECTIME,a.EXECDATE) AS EXECDATE, a.REASON, d.DOCSTATE, d.LOCATION, d.COMMENTARY FROM Supermag.SMActs a, Supermag.SMDocuments d WHERE d.DocType = \'AC\' AND a.Id(+) = d.Id AND a.DOCTYPE(+) = d.DOCTYPE ' + filterSql() TO SupermagSettings.file;
    
    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, docDate, reason, docState, location, comment;

    FOR [GROUP SUM 1 BY reason(INTEGER i)](INTEGER i) AND NOT Repricing.operation(TEXT (i)) DO NEW o = Repricing.Operation {
        id(o) <- ISTRING[100](i);
        name(o) <- ISTRING[100](i);
        allRoles(o) <- TRUE;
        imported(o) <- TRUE;
    }
    
    idDoc(INTEGER i) <- STRING[50](CONCAT '~', STRING(docType(i)), STRING(docNumber(i)));
    currentVersion (INTEGER i) <-  (CONCAT '~', STRING(idDoc(i)), STRING(docDate(i)), STRING(docState(i)), STRING(reason(i)), STRING(comment(i)), STRING(location(i)) ) IF idDoc(i);                 
    
    FOR idDoc(INTEGER i) AND NOT Repricing.userRepricing(idDoc(i)) DO NEW doc = Repricing.UserRepricing {
        id(doc) <- idDoc(i);
    }
        
    FOR Repricing.UserRepricing rep == Repricing.userRepricing(idDoc(INTEGER i)) AND NOT lastVersion(rep) = currentVersion(i) DO {       
        operation(rep) <- Repricing.operation(TEXT (location(i)));
        number(rep) <- ISTRING[28] (docNumber(i));
        date(rep) <- DATE (docDate(i));
        time(rep) <- TIME (docDate(i));
        note(rep) <- comment(i);
        departmentStore(rep) <- departmentStore(TEXT (location(i)));
        imported(rep) <- TRUE;
        isPosted(rep) <- docState(i) = 3;
        lastStatusSupermag(rep) <- docState(i);
        lastVersion(rep) <- currentVersion(i);
    }
    
    LOCAL oldPrice = NUMERIC[16,4](INTEGER);
    LOCAL actReason = INTEGER (INTEGER);
    LOCAL priceType = INTEGER (INTEGER);

    EXTERNAL SQL connectionString() 
        EXEC 'SELECT d.Id, d.DocType, dd.SpecItem, dd.Article, dd.ItemPrice, ad.OldPrice, dd.Quantity, a.Reason, a.PriceType ' + 
             'FROM Supermag.SMDocuments d, Supermag.SMActs a, Supermag.SMSpec dd, Supermag.SMSpecActs ad ' + 
             'WHERE d.DocType = \'AC\' AND a.Id(+) = d.Id AND dd.DocId = d.Id AND dd.DocType = d.DOCTYPE AND ad.DocId(+) = dd.DOCID AND ad.DocType(+) = dd.DOCTYPE AND ad.SpecItem(+) = dd.SpecItem AND ' + filterSql() TO SupermagSettings.file;
       
    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, specItem, idItem, itemPrice, oldPrice, quantity, actReason, priceType;
    
    idDoc(INTEGER i) <- STRING[50](CONCAT '~', docType(i), docNumber(i)) WHERE docNumber(i) AND docType(i);
    idDet(INTEGER i) <- STRING[50](CONCAT '~', idDoc(i), specItem(i)) WHERE idDoc(i) AND specItem(i);
    currentVersion (INTEGER i) <- ( CONCAT '~', STRING(idDet(i)), STRING(idItem(i)), STRING(actReason(i)), STRING(priceType(i)), STRING(itemPrice(i)), STRING(oldPrice(i)) ) IF idDet(i);                  

    FOR NOT userRepricingDetail(idDet(INTEGER i)) AND userRepricing(idDoc(i)) DO NEW det = UserRepricingDetail {
        id(det) <- idDet(i);
        userRepricing(det) <- userRepricing(idDoc(i));
    }

    FOR UserRepricingDetail det = userRepricingDetail(idDoc(INTEGER i)) AND NOT lastVersion(det) = currentVersion(i) DO {
        sku(det) <- item(idItem(i));
        quantity(det) <- quantity(i);
        curRetailPrice(det) <- oldPrice(i);
        retailPrice(det) <- NUMERIC[16,4](itemPrice(i));
        imported(det) <- TRUE;
        dataIndex(det) <- specItem(i);
        lastVersion(det) <- currentVersion(i);
    }
   
    // импорт документов оснований
    LOCAL baseId = ISTRING[50] (INTEGER);
    LOCAL baseType = ISTRING[50] (INTEGER);
    
    EXTERNAL SQL connectionString() 
    EXEC 'Select d.ID, cb.BASEID, cb.BASEDOCTYPE from Supermag.SMDocuments d, Supermag.SMActs a, Supermag.SMCommonBases cb where a.DocType(+)= D.DocType and a.ID(+)= D.ID AND cb.ID(+) = a.ID AND ' + filterSql() TO SupermagSettings.file;
        
    IMPORT TABLE FROM SupermagSettings.file() TO idDoc, baseId, baseType;
    
    FOR idDoc(INTEGER i) AND (baseType(i) = 'AB' OR baseType(i) = 'MA') DO {  
        basisDoc(Repricing.UserRepricing o, Document d) <- NULL WHERE o = Repricing.userRepricing(idDoc(i));
        basisDoc(Repricing.UserRepricing o, Document d) <- TRUE WHERE o = Repricing.userRepricing(idDoc(i)) AND d = userPriceList(baseId(i)); 
    }

    APPLY;       
}

EXTEND FORM integrationData PROPERTIES () importRepricing;