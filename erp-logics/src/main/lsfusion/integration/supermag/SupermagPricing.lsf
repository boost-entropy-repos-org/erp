MODULE SupermagPricing;

REQUIRE SupermagSettings, Time, PriceListOperation, Store, PriceListStore, Repricing, PriceListBefore, SupermagFormMeta;

id = DATA ISTRING[100](UserPriceListDetail) INDEXED;
userPriceListDetail = GROUP AGGR UserPriceListDetail d WHERE d IS UserPriceListDetail BY id(d);

id = DATA ISTRING[100](UserRepricingDetail) INDEXED;
userRepricingDetail = GROUP AGGR UserRepricingDetail d WHERE d IS UserRepricingDetail BY id(d);

@settingIntegration(UserPriceList, UserPriceListDetail);

//---------------------------------------------------------------------------------------------------------------розничные прайсы (ведомости базовых цен)
daysPriceList 'дней для импорта' = DATA INTEGER ();
dateFromPriceList () = sum(currentDate(), -daysPriceList());
dateFromPriceListT () = toDateDDMMYYYY(dateFromPriceList());

withoutPrice 'Импорт только с товарами без цен' = DATA BOOLEAN ();

importPriceListRetail 'Импорт розничных прайсов' () {

    LOCAL reason = INTEGER (INTEGER);
    LOCAL idStore = INTEGER (INTEGER);
    LOCAL imported = BOOLEAN (UserPriceList);
    LOCAL idPricetype = INTEGER (INTEGER);
//    LOCAL filterSql = TEXT();
//    LOCAL file = FILE ();
    
    filterSql() <- 'TRUNC(nvl(a.EXECTIME,a.EXECDATE)) >= TO_DATE(\'' + toDateISO(dateFromPriceList()) + '\',\'YYYY-MM-DD\') AND d.docState IN (0,2,3)';  
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
        EXEC 'SELECT d.ID, d.DOCTYPE, nvl(a.EXECTIME,a.EXECDATE) AS EXECDATE, d.DOCSTATE, REASON, d.COMMENTARY, a.pricetype FROM Supermag.SMDocuments d , Supermag.SMActs a WHERE d.DocType = \'AB\' AND a.id = d.id AND ' + filterSql() TO SupermagSettings.file;
 
    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, dateFrom, docState, reason, comment, idPricetype;
    
    idDoc(INTEGER i) <- STRING[50](CONCAT '', STRING(docType(i)), STRING(docNumber(i)));
    currentVersion (INTEGER i) <-  (CONCAT '~', STRING(idDoc(i)), STRING(dateFrom(i)), STRING(docState(i)), STRING(reason(i)), STRING(comment(i)), STRING(idPricetype(i)) ) IF idDoc(i);                 
     
    // создаем новые прайслисты 
    FOR idDoc(INTEGER i) AND NOT userPriceList(idDoc(i)) DO NEW p = UserPriceList {
            id(p) <- idDoc(i);
    }

    FOR UserPriceList doc == userPriceList(idDoc(INTEGER i)) AND NOT currentVersion(i) = lastVersion(doc) DO {       
        operation(doc) <- PriceList.operation('retail');
        number(doc) <- ISTRING[28] (id(doc));
        date(doc) <- DATE (dateFrom(i));
        time(doc) <- TIME (dateFrom(i));
        fromDate(doc) <- DATE (dateFrom(i));
        fromTime(doc) <- TIME (IF reason(i) = 5 THEN sumSeconds(dateFrom(i), 1) ELSE dateFrom(i));
        isPosted(doc) <- docState(i) = 3;
        note(doc) <- comment(i);
        in(doc, DataPriceListType t) <- id(t) == 'D' + TEXT (idPricetype(i));
        dataIn(doc, StockGroup s) <- NULL;
        dataIn(doc, Stock s) <- NULL;
        allStocks(doc) <- NULL;
        dataIn(doc, StockGroup s) <- id(retailPriceListType[StoreType](s)) == 'D' + TEXT (idPricetype(i));       
        imported(doc) <- TRUE;
        lastVersion(doc) <- currentVersion(i);        
    } 
      
    // спецификации
    LOCAL aReason = INTEGER (INTEGER);
    LOCAL imported = BOOLEAN (UserPriceListDetail);
    LOCAL skip = BOOLEAN (INTEGER);

    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
            EXEC 'SELECT d.ID, d.DOCTYPE, dd.SPECITEM, dd.ITEMPRICE, dd.ARTICLE, a.REASON, a.pricetype FROM Supermag.SMDocuments d, Supermag.SMActs a, Supermag.SMSpec dd, Supermag.SMSpecActs ad WHERE d.DocType = \'AB\' AND d.id = a.id AND dd.docid = d.id AND dd.DocType = \'AB\' AND ad.docid = dd.docid AND ad.DocType = \'AB\' AND ad.SpecItem = dd.SpecItem AND ' + filterSql() TO SupermagSettings.file;

    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, specItem, itemPrice, idItem, aReason, idPricetype;

    idDoc(INTEGER i) <- STRING[50](CONCAT '', docType(i), docNumber(i)) WHERE docNumber(i) AND docType(i);
    idDet(INTEGER i) <- STRING[50](CONCAT '~', idDoc(i), specItem(i)) WHERE idDoc(i) AND specItem(i);
    currentVersion (INTEGER i) <- ( CONCAT '~', STRING(idDoc(i)), STRING(aReason(i)), STRING(idPricetype(i)), STRING(specItem(i)), STRING(idItem(i)), 
                                                STRING(itemPrice(i)) ) IF idDet(i);                  

    IF withoutPrice() THEN {
        skip(INTEGER i) <- imported(i) AND NOT (GROUP SUM 1 IF in(userPriceList(idDoc(i)), DepartmentStore st) AND NOT prevPriceA(dataPriceListType('retail'), item(idItem(i)), st, 2030_01_01_00:00));
    }

    FOR NOT userPriceListDetail(idDet(INTEGER i)) AND NOT skip(i) DO NEW d = UserPriceListDetail {
            id(d) <- idDet(i);
            userPriceList(d) <- userPriceList(idDoc(i));
    }

    FOR UserPriceListDetail det = userPriceListDetail(idDet(INTEGER i)) AND NOT currentVersion(i) = lastVersion(det) AND NOT skip(i) DO {
        sku(det) <- item(idItem(i));
        price(det, LedgerPriceListType t) <- NUMERIC[16,4](itemPrice(i)) WHERE t == dataPriceListType('D' + TEXT (idPricetype(i)));
        imported(det) <- TRUE;
        dataIndex(det) <- specItem(i);
        lastVersion(det) <- currentVersion(i);
    }

    APPLY;
}

EXTEND FORM integrationData PROPERTIES () importPriceListRetail, daysPriceList, withoutPrice;
DESIGN integrationData { supermagImportButtons { 
        NEW supermagPriceList {
            type = CONTAINERH;
            MOVE PROPERTY (importPriceListRetail());
            MOVE PROPERTY (daysPriceList()) { alignment = CENTER; }
        } 
//        MOVE PROPERTY (withoutPrice());
}}

//----------------------------------------------маркетинговые (акционные) прайслисты
daysPromotion 'дней для импорта' = DATA INTEGER ();
dateFromPromotion () = sum(currentDate(), -daysPromotion());
dateFromPromotionT () = toDateDDMMYY(dateFromPromotion());
numberPromotion 'номер для импорта' = DATA STRING ();

importPriceListPromotion 'Импорт акционных прайсов' () {
    
    LOCAL date = DATETIME (INTEGER);
    LOCAL begin = DATETIME (INTEGER);
    LOCAL end = DATETIME (INTEGER);
    LOCAL name = ISTRING[255] (INTEGER);
    LOCAL imported = BOOLEAN (UserPriceList);  
    
    filterSql() <- 'DATEEND >= TO_DATE(\'' + toDateISO(dateFromPromotion()) + '\',\'YYYY-MM-DD\') AND ma.DOCSTATE IN (0,2,3)';
      
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
        EXEC 'SELECT ma.ID, ma.DOCTYPE, ma.CREATEDAT, ma.DATEBEGIN, ma.DATEEND, ma.DOCSTATE, NAME FROM Supermag.SVDocumentsMA ma WHERE ' + filterSql() TO SupermagSettings.file;
    
    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, docDate, dateFrom, dateTo, docState, name;
    
    idDoc(INTEGER i) <- STRING[50](CONCAT '', STRING(docType(i)), STRING(docNumber(i)));
    currentVersion (INTEGER i) <-  (CONCAT '~', STRING(idDoc(i)), STRING(docDate(i)), STRING(docState(i)), STRING(dateFrom(i)), STRING(dateTo(i)), STRING(comment(i)) ) IF idDoc(i);                 
    
    FOR idDoc(INTEGER i) AND NOT userPriceList(idDoc(i)) DO NEW p = UserPriceList {
        id(p) <- idDoc(i);
    }
    
    FOR UserPriceList doc == userPriceList(idDoc(INTEGER i)) AND NOT currentVersion(i) = lastVersion(doc) DO {       
        operation(doc) <- PriceList.operation('promotion');
        number(doc) <- ISTRING[28] (id(doc));
        date(doc) <- DATE (date(i));
        time(doc) <- 00:00;
        isPosted(doc) <- docState(i) = 3;
        fromDate(doc) <- DATE (begin(i));
        fromTime(doc) <- TIME (begin(i));
        toDate(doc) <- DATE (end(i));
        toTime(doc) <- TIME (end(i));
        note(doc) <- name(i);
        fromPriceBeforeDate(doc) <- sum(DATE (begin(i)), -1);
        fromPriceBeforeTime(doc) <- 00:00;
        toPriceBeforeDate(doc) <- sum(DATE (end(i)), 1);
        allStocks(doc) <- NULL;
        imported(doc) <- TRUE;
        lastVersion(doc) <- currentVersion(i);
    }
    
    LOCAL imported = BOOLEAN (UserPriceListDetail);
    
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
            EXEC 'SELECT ma.DOCID, ma.DOCTYPE, d.SPECITEM, d.ARTICLE, d.ITEMPRICE FROM Supermag.SVSpecMA d, Supermag.SVDocumentsMA ma WHERE d.DOCID = ma.id AND ' + filterSql() TO SupermagSettings.file;
    
    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, specItem, idItem, itemPrice;

    idDoc(INTEGER i) <- STRING[50](CONCAT '', docType(i), docNumber(i)) WHERE docNumber(i) AND docType(i);
    idDet(INTEGER i) <- STRING[50](CONCAT '~', idDoc(i), specItem(i)) WHERE idDoc(i) AND specItem(i);
    currentVersion (INTEGER i) <- ( CONCAT '~', STRING(idDoc(i)), STRING(specItem(i)), STRING(idItem(i)), 
                                                STRING(itemPrice(i)) ) IF idDet(i);                  


    FOR userPriceList(idDoc(INTEGER i)) AND NOT userPriceListDetail(idDet(i)) DO NEW d = UserPriceListDetail {
            id(d) <- idDet(i);
            userPriceList(d) <- userPriceList(idDoc(i));
    }

    FOR UserPriceListDetail det = userPriceListDetail(idDet(INTEGER i)) AND NOT currentVersion(i) = lastVersion(det) DO {
        sku(det) <- item(idItem(i));
        priceBefore(det) <- OVERRIDE (GROUP MAX prevPriceA(dataPriceListType('retail'), item(idItem(i)), Stock st, fromDateTime(userPriceList(idDoc(i)))) IF in(userPriceList(idDoc(i)), st)), 0.0;
        price(det, LedgerPriceListType t) <- NUMERIC[16,4](itemPrice(i)) WHERE t == dataPriceListType('promotion');
        imported(det) <- TRUE;
        dataIndex(det) <- specItem(i);
        lastVersion(det) <- currentVersion(i);
    }   
   
    LOCAL idStock = INTEGER (INTEGER);
    
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
        EXEC 'SELECT a.AUCID, a.LOCID FROM Supermag.SVAuctionAtoms a, Supermag.SVDocumentsMA ma WHERE a.AUCID = ma.id AND ' + filterSql()  TO SupermagSettings.file;
    
    IMPORT TABLE FROM SupermagSettings.file() TO idDoc, idStock;
       
    FOR [GROUP SUM 1 BY userPriceList(idDoc(INTEGER i))](UserPriceList doc) DO {
        dataIn(doc, DepartmentStore s) <- TRUE IF [GROUP SUM 1 BY userPriceList(idDoc(INTEGER i)), departmentStore(TEXT (idStock(i)))](doc, s);
    }
        
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importPriceListPromotion(), daysPromotion();
DESIGN integrationData { supermagImportButtons { 
        NEW supermagPromotion {
            type = CONTAINERH;
            MOVE PROPERTY (importPriceListPromotion());
            MOVE PROPERTY (daysPromotion()) { alignment = CENTER; }
        } 
} }

//---------------------------------------------------------------------------------------------------------акты переоценки
daysRepricing 'дней для импорта' = DATA INTEGER ();
dateFromRepricing() = sum(currentDate(), -daysRepricing());
dateFromRepricingT() = toDateDDMMYYYY(dateFromRepricing());
numberRepricing 'номер для импорта' = DATA STRING[20] ();

imported 'Импортируемая' = DATA BOOLEAN (Repricing.Operation);

EXTEND FORM Repricing.operation PROPERTIES imported(o);
DESIGN Repricing.operation {
    paramsContainer {
        MOVE PROPERTY (imported(o));
    }
}

lastStatusSupermag '' = DATA INTEGER (UserRepricing);

importRepricingRetail 'Импорт актов переоценки' () {
    
    LOCAL id = ISTRING[50] (INTEGER);
    LOCAL dateTime = DATETIME (INTEGER);
    LOCAL reason = INTEGER (INTEGER);
    LOCAL docstate = INTEGER (INTEGER);
    LOCAL idStore = INTEGER (INTEGER);
    LOCAL comment = ISTRING[255] (INTEGER);
    LOCAL imported = BOOLEAN (UserRepricing);
    LOCAL filterSql = TEXT ();
                                                                                                                                                                                   // a.Reason = 0 переоценка по приходу, у нас акт расценки               
    filterSql () <- 'd.location IN ('+ stocks() + ') AND TRUNC(nvl(a.ExecTime,a.ExecDate)) >= TO_DATE(\'' + toDateISO(dateFromRepricing()) + '\',\'YYYY-MM-DD\') AND d.DocState IN (0,2,3) AND a.Reason > 0';
    IF length(numberRepricing()) > 0 THEN
       filterSql() <- 'd.id = \'' + numberRepricing() + '\''; 
    
    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
        EXEC 'SELECT d.ID, nvl(a.EXECTIME,a.EXECDATE) AS EXECDATE, a.REASON, d.DOCSTATE, d.LOCATION, d.COMMENTARY FROM Supermag.SMActs a, Supermag.SMDocuments d WHERE d.DocType = \'AC\' AND a.Id = d.Id AND ' + filterSql() TO file;
    
    IMPORT TABLE FROM file() TO id, dateTime, reason, docstate, idStore, comment;

    FOR [GROUP SUM 1 BY reason(INTEGER i)](INTEGER i) AND NOT Repricing.operation(TEXT (i)) DO NEW o = Repricing.Operation {
        id(o) <- ISTRING[100](i);
        name(o) <- ISTRING[100](i);
        allRoles(o) <- TRUE;
        imported(o) <- TRUE;
    }
   
    FOR id(INTEGER i) AND NOT Repricing.userRepricing(id(i)) DO NEW r = Repricing.UserRepricing {
        id(r) <- id(i);
    }
        
    FOR Repricing.UserRepricing rep == Repricing.userRepricing(id(INTEGER i)) DO {       
        operation(rep) <- Repricing.operation(TEXT (reason(i)));
        Repricing.number(rep) <- ISTRING[28] (id(rep));
        date(rep) <- DATE (dateTime(i));
        time(rep) <- TIME (dateTime(i));
        note(rep) <- comment(i);
        departmentStore(rep) <- departmentStore(TEXT (idStore(i)));
        imported(rep) <- TRUE;
        IF NOT lastStatusSupermag(rep) = docstate(i) AND docstate(i) < 3 THEN isPosted(rep) <- NULL;
        IF NOT lastStatusSupermag(rep) = docstate(i) AND docstate(i) < 3 THEN isClosed(rep) <- NULL;
        lastStatusSupermag(rep) <- docstate(i);
    }
    
    LOCAL type = ISTRING[2](INTEGER);
    LOCAL idDoc = ISTRING[50](INTEGER);
    LOCAL specItem = INTEGER (INTEGER);
    LOCAL quantity = NUMERIC[16,5](INTEGER);   
    LOCAL price = NUMERIC[16,4](INTEGER);
    LOCAL oldPrice = NUMERIC[16,4](INTEGER);
    LOCAL idItem = ISTRING[50](INTEGER);
    LOCAL actReason = INTEGER (INTEGER);
    LOCAL priceType = INTEGER (INTEGER);
    LOCAL imported = BOOLEAN (UserRepricingDetail);
    LOCAL skip = BOOLEAN (INTEGER);

    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
        EXEC 'SELECT d.DocType, d.Id, dd.SpecItem, dd.Article, dd.ItemPrice,  ad.OldPrice, dd.Quantity, a.Reason, a.PriceType FROM Supermag.SMDocuments d, Supermag.SMActs a, Supermag.SMSpec dd, Supermag.SMSpecActs ad WHERE d.DocType = \'AC\' AND a.Id = d.Id AND dd.DocId = d.Id AND dd.DocType = \'AC\' AND ad.DocId = d.Id AND ad.DocType = \'AC\' AND ad.SpecItem = dd.SpecItem AND ' + filterSql() TO file;
       
    IMPORT TABLE FROM file() TO type, idDoc, specItem, idItem, price, oldPrice, quantity, actReason, priceType;
    
    id(INTEGER i) <- CONCAT '', 'R', type(i), idDoc(i), specItem(i) WHERE imported(i); 

//    IF withoutPrice() THEN {
//        skip(INTEGER i) <- imported(i) AND NOT (GROUP SUM 1 IF in(userPriceList(idDoc(i)), DepartmentStore st) AND NOT prevPriceA(dataPriceListType('retail'), item(idItem(i)), st, 2030_01_01_00:00));
//    }

    FOR userRepricing(idDoc(INTEGER i)) AND NOT userRepricingDetail(id(i)) AND NOT skip(i) DO {        
        NEW d = UserRepricingDetail {
            id(d) <- id(i);
            userRepricing(d) <- userRepricing(idDoc(i));
        }       
    }

    FOR UserRepricingDetail d = userRepricingDetail(id(INTEGER i)) AND NOT skip(i) DO {
        sku(d) <- item(idItem(i));
        quantity(d) <- quantity(i);
        curRetailPrice(d) <- oldPrice(i);
        retailPrice(d) <- price(i);
        imported(d) <- TRUE;
        dataIndex(d) <- specItem(i);
    }
    
//    IF NOT withoutPrice() THEN {
//        DELETE UserRepricing p WHERE date(p) >= df AND date(p) <= dt AND imported(operation(p)) AND NOT imported(p);
//        DELETE UserRepricingDetail d WHERE date(d) >= df AND date(d) <= dt AND imported(operation(d)) AND NOT imported(d);
//    }

    // импорт документов оснований
    LOCAL baseId = ISTRING[50] (INTEGER);
    LOCAL baseType = ISTRING[50] (INTEGER);
    
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base() 
    EXEC 'Select d.ID, cb.BASEID, cb.BASEDOCTYPE from Supermag.SMDocuments d, Supermag.SMActs a, Supermag.SMCommonBases cb where a.DocType(+)= D.DocType and a.ID(+)= D.ID AND cb.ID(+) = a.ID AND ' + filterSql() TO file;
        
    IMPORT TABLE FROM file() TO id, baseId, baseType;
    
    FOR id(INTEGER i) AND (baseType(i) = 'AB' OR baseType(i) = 'MA') DO {  
        basisDoc(Repricing.UserRepricing o, Document d) <- NULL WHERE o = Repricing.userRepricing(id(i));
        basisDoc(Repricing.UserRepricing o, Document d) <- TRUE WHERE o = Repricing.userRepricing(id(i)) AND d = userPriceList(baseId(i)); 
    }

    APPLY;       
}

EXTEND FORM integrationData PROPERTIES () importRepricingRetail, daysRepricing, numberRepricing;

DESIGN integrationData { supermagImportButtons { 
        NEW supermagRepricing {
            type = CONTAINERH;
            MOVE PROPERTY (importRepricingRetail());
            MOVE PROPERTY (daysRepricing());
            MOVE PROPERTY (numberRepricing());            
        } 
}}
