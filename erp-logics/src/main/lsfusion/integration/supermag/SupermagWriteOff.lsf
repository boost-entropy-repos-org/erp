MODULE SupermagWriteOff;

REQUIRE SupermagSettings, SupermagExportForms, SupermagFormMeta, Utils, TaxItem, PricingWriteOff;

NAMESPACE WriteOff;

@settingOperationSupermag(WriteOff);

exportWriteOff ABSTRACT LIST (WriteOff);

EXTEND FORM writeOffs
    PROPERTIES (w) exportWriteOff TOOLBAR 
;
DESIGN writeOffs {
    actionContainer{
        NEW mag {
            caption = 'Супермаг';
            MOVE PROPERTY (exportWriteOff(w));
        }        
    }
}

userWriteOffApply 'Сохранить ' (WriteOff doc) {
    formApply();
    IF series(doc) THEN { number(doc) <- seriesNumber(doc); series(doc) <- NULL;} 
    exportWriteOff(doc);
}

EXTEND FORM userWriteOff  PROPERTIES userWriteOffApply(w) TOOLBAR;

DESIGN userWriteOff {
    TOOLBARRIGHT {
        MOVE PROPERTY (userWriteOffApply(w)) BEFORE PROPERTY (formClose()) { imagePath = 'apply.png';} 
        PROPERTY (formOk()) { hide = TRUE; }
        PROPERTY (formApply()) { hide = TRUE; }
    }
}

@settingIntegration(WriteOff, WriteOffDetail);

overExportWriteOff ABSTRACT LIST (WriteOff,DocMain); 
overExportWriteOff ABSTRACT LIST (WriteOffDetail,DocDetail); 

exportWriteOffMag 'Экспорт в супермаг' (WriteOff doc) {
    LOCAL NESTED dt = DATETIME();
    inc(DocMain expMain) <- NULL;
    IF docTypeSupermag(operation(doc)) AND opcodeSupermag(operation(doc)) THEN {        
        FOR iterateDown(INTEGER n, wordCount(docTypeSupermag(operation(doc)),';'), 1) DO {
            inc(DocMain expmain) <- NULL;
            DELETE DocDetail expDet WHERE expDet IS DocDetail;        
            DELETE DocMain expmain WHERE expmain IS DocMain;
            NEW expMain = DocMain {
                inc(expMain) <- TRUE;          
                doctype(expMain) <- STRING[10] (getWord(docTypeSupermag(operation(doc)),';',n));
                id(doc) <- CONCAT '', doctype(expMain), seriesNumber(doc);               
                id(expMain) <- id(doc); 
                docid(expMain) <- seriesNumber(doc);            
                bornin(expMain) <- OVERRIDE bornin(doc), baseIDSupermag();
                opcode(expMain) <- STRING[10] (getWord(opcodeSupermag(operation(doc)),';',n));
                userop(expMain) <- STRING[10] (getWord(useropSupermag(operation(doc)),';',n));
                creatdate(expMain) <- dateTime(doc);                
                docstate(expMain) <- CASE WHEN isPosted(doc) THEN 3 WHEN isClosed(doc) THEN 0 ELSE 1;
                priceRoundMode(expMain) <- 4 IF doc IS WriteOff; 
                clientIndex(expMain) <- id( OVERRIDE contragentSupermag(stockGroup(stock(doc))), contact(doc) );
                locationFrom(expMain) <- id(stock(doc));
                locationTo(expMain) <- id(stock(doc));
                location(expMain)  <- id(stock(doc));     
                ourselfclient(expMain) <- id(legalEntity(stock(doc)));                                              

                FOR writeOff(WriteOffDetail docd) = doc DO NEW expDet = DocDetail {
                        dataIndex(docd) <- index(docd); 
                        id(docd) <- (CONCAT '~',id(doc),index(docd));
                        index(expDet) <- index(docd);
                        docMain(expDet) <- expMain;
                        id(expDet) <- (CONCAT '~',id(expMain),index(expDet));
                        skuId(expDet) <- id(sku(docd));                                                                           
                        quantity(expDet) <- OVERRIDE abs(quantity(docd)), 0;
                        blankquantity(expDet) <- quantity(expDet);
                        priceWithTax(expDet) <- price(docd);
                        priceManufacturer(expDet) <- supplierPrice(docd);
                        valueTax(expDet) <- valueVAT(sku(docd));
                        priceNoTax(expDet) <- NUMERIC[18,4] ( abs(round( priceNoTax(expDet) / (1 + valueTax(expDet)/100),4)));
                        priceCurr(expDet) <- round(priceWithTax(expDet) / curRate(expMain),4);
                        sumWithTax(expDet) <- OVERRIDE abs(sum(docd)), 0;
                        sumNoTax(expDet) <- OVERRIDE NUMERIC[18,4] ( abs(round( sumNoTax(expDet) / (1 + valueTax(expDet)/100),2))), 0;
                        sumTax(expDet) <- OVERRIDE (sumWithTax(expDet) - sumNoTax(expDet)), 0;
                        sumCurr(expDet) <- round(sumWithTax(expDet)/curRate(expMain),4);
                        overExportWriteOff(docd, expDet);
                        
                     //   priceRetail(expDet) <- (OVERRIDE retailPrice(docd), 0);                                        
                }           
                overExportWriteOff(doc, expMain);
                
                sumWithTax(expMain) <- GROUP SUM abs(sumWithTax(DocDetail expDet)) IF docMain(expDet) = expMain;                
                sumCurr(expMain) <- GROUP SUM sumCurr(DocDetail expDet) IF docMain(expDet) = expMain; 
                countSpec(expMain) <- GROUP SUM 1 IF docMain(DocDetail expDet) = expMain;
        
                dt () <- currentDateTime();
                TRY {                
                    CASE WHEN doctype(expMain) = 'WO' THEN EXPORT exportWO XML TO System.exportFile;                 
                } CATCH logToFile('supermag', CONCAT '\n', 'Списание ' + id(doc),'Ошибка формирования формы', ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
           
                TRY {       
                   IF countSpec(expMain) > 0 THEN {   
                        WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + doctype(expMain) +'_' +STRING[30](LONG(doc))+'_'+(OVERRIDE id(expMain), '')+'_'+ formulaDateT(dt());
                        WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/COPY/' + doctype(expMain) +'_' +STRING[30](LONG(doc))+'_'+(OVERRIDE id(expMain), '')+'_'+ formulaDateT(dt());
                   }
                } CATCH logToFile('supermag', CONCAT '\n', 'Списание ' + id(doc), 'Ошибка записи в файл','file://' + exportDirectorySupermag() + '/' + doctype(expMain) + '_' + STRING[30](LONG(doc))+'_'+(OVERRIDE id(expMain), '')+'_'+ formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
            }           
        } 
        inc(DocMain expmain) <- NULL;
    }       
    APPLY;
}

exportWriteOff (WriteOff doc) + {
    IF inExport(stock(doc)) AND isPosted(doc) THEN exportWriteOffMag(doc);
}

overImportWriteOff ABSTRACT LIST();

importWriteOff 'Списания' () {
    filterSql() <- 'd.CreateDat >= TO_DATE(\'' + toDateISO(dateFromImportDocument()) + '\',\'YYYY-MM-DD\') AND ( d.location IN ('+ stocksImport() + ')  OR d.locationfrom IN ('+ stocksImport() + ') OR locationto IN ('+ stocksImport() + ')   ) AND ( ' ;
    LOCAL filterDoc = STRING ();
    LOCAL operDoc = STRING ();
    filterDoc() <-'';
    FOR Operation op IF op IS Operation AND getWord(docTypeSupermag(op),';',1) DO {
       operDoc() <- CONCAT ' AND ', ('d.DOCTYPE = \'' + getWord(docTypeSupermag(op),';',1) + '\''), ('d.OPCODE = ' + getWord(opcodeSupermag(op),';',1)), ('d.USEROP = ' + getWord(useropSupermag(op),';',1)) ; 
       filterDoc() <- CONCAT ' OR ',filterDoc(), '(' + operDoc() + ')';
    }
      
//  чтобы не путаться осталяем только 1 документ
//    FOR Operation op IF op IS Operation AND getWord(docTypeSupermag(op),';',2) DO {
//       operDoc() <- CONCAT ' AND ', ('d.DOCTYPE = \'' + getWord(docTypeSupermag(op),';',2) + '\''), ('d.OPCODE = ' + getWord(opcodeSupermag(op),';',2)), ('d.USEROP = ' + getWord(useropSupermag(op),';',2)) ; 
//       filterDoc() <- CONCAT ' OR ',filterDoc(), '(' + operDoc() + ')';
//    }  
    
    filterDoc() <- substrFrom(filterDoc(),4);
    filterSql() <- CONCAT '', filterSql(), filterDoc(),')'; 
       
    EXTERNAL SQL 'jdbc:oracle:thin:' + SupermagSettings.login() + '/' + SupermagSettings.password() + '@//'+ SupermagSettings.host() + '/' + SupermagSettings.base()  
    EXEC 'Select d.ID, d.doctype, d.opcode, d.userop, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(d.bornin)), d.createdat, d.docstate from Supermag.SMDocuments d where ' + filterSql() TO SupermagSettings.file;   

   // MESSAGE 'Select d.ID, d.doctype, d.opcode, d.userop, d.createdat, d.docstate from Supermag.SMDocuments d where ' + filterSql();     
    IMPORT TABLE FROM SupermagSettings.file() TO docNumber, docType, operCode, userOp, bornIn, docDate, docState;
    
    idDoc(INTEGER i) <- STRING[50](CONCAT '', STRING(docType(i)), STRING(docNumber(i)));
    currentVersion (INTEGER i) <-  (CONCAT '~', STRING(idDoc(i)), STRING(operCode(i)), STRING(userOp(i)), STRING(bornIn(i)), STRING(docDate(i)), STRING(docState(i)) ) IF idDoc(i);                 
    codeOperation (INTEGER i) <- CONCAT '~', STRING(docType(i)), STRING(operCode(i)), STRING(userOp(i)) IF idDoc(i);

    FOR UserWriteOff doc == userWriteOff(idDoc(INTEGER i)) AND NOT lastVersion[WriteOff](doc) = currentVersion(i) DO {
        isPosted(doc) <- TRUE IF docState(i) = 3;
        isClosed(doc) <- TRUE IF docState(i) = 0;      
        lastVersion[WriteOff](doc) <- currentVersion(i);        
    }
    
    overImportWriteOff();
    
    APPLY;
}

EXTEND FORM integrationData PROPERTIES importWriteOff();
