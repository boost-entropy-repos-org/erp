MODULE ImportMila;

REQUIRE System, Barcode, PriceListOperation;

importMilaFile = DATA LOCAL FILE ();
importMila 'Импортировать'  INTERNAL  'lsfusion.erp.region.by.mila.ImportMilaActionProperty' (BOOLEAN);

importMilaLight 'Импорт списка товаров' () { importMila(NULL); open(importMilaFile()); }
importMilaFull 'Импорт всей информации по товарам' () { importMila(TRUE); open(importMilaFile()); }

FORM importMilaEuroopt 'Импорт Mila'
    PROPERTIES() importMilaLight, importMilaFull
;

EXTEND FORM integrationData
    PROPERTIES() importMilaLight, importMilaFull   
;
DESIGN integrationData {
    pane {
        NEW mila {
            caption = 'Мила';
            MOVE PROPERTY(importMilaLight());          
            MOVE PROPERTY(importMilaFull());          
        }
    }
}

gname = DATA LOCAL VARSTRING[100] (INTEGER);

group = DATA LOCAL INTEGER (INTEGER);
tname = DATA LOCAL VARSTRING[100] (INTEGER);
tcode = DATA LOCAL VARSTRING[15] (INTEGER);
price1 = DATA LOCAL NUMERIC[7,3](INTEGER);
price2 = DATA LOCAL NUMERIC[7,3](INTEGER);

FORM importMila
    OBJECTS groups = INTEGER
    PROPERTIES(groups) gname
    
    OBJECTS goods = INTEGER
    PROPERTIES(goods) tname, tcode, price1, price2
    FILTERS group(goods) = groups
;

importPriceList () {
    INPUT f = FILE DO {
        importFile() <- f;
        IMPORT importMila JSON;
        IMPORT importMila JSON ROOT 'groups';
    }
        
    NEW p = UserPriceList {
            
        operation(p) <- GROUP LAST PriceList.Operation o WHERE id(o) == 'mila';
        FOR skuBarcode(tcode(INTEGER i)) AND NOT price1(i) == price2(i) NEW d = UserPriceListDetail DO {
            
            priceList(d) <- p;
            sku(d) <- skuBarcode(tcode(i));
            price(d, DataPriceListType t) <- CASE WHEN id(t) == 'mila' THEN price1(i)
                                                  WHEN id(t) == 'mila_p' THEN price2(i);
        }
        APPLY;
    }
}