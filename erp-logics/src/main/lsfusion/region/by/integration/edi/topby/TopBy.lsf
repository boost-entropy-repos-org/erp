MODULE TopBy;

REQUIRE System, EDIIntegration, Integration, Warehouse, Store;

NAMESPACE EDI;

EXTEND CLASS EDIProvider {
    topBy 'СТТ'
}

loginTopBy 'Имя пользователя TopBy' = DATA VARSTRING[100] ();
passwordTopBy 'Пароль TopBy' = DATA VARSTRING[100] () ECHO;
hostTopBy 'Хост' = DATA VARSTRING[100] ();
portTopBy 'Порт' = DATA INTEGER ();
archiveDirTopBy 'Папка принятых сообщений' = DATA VARSTRING[100] ();
outputDirTopBy 'Папка отправленных сообщений' = DATA VARSTRING[100] ();
disableConfirmationTopBy 'Отключить подтверждение сообщений' = DATA BOOLEAN ();
receiveSupplierMessagesTopBy 'Получать сообщения для поставщика' = DATA BOOLEAN ();
receiveTopByAction 'Получить сообщения'  INTERNAL  'lsfusion.erp.region.by.integration.edi.topby.ReceiveMessagesTopByActionProperty' ();
receiveTopBy 'Получить сообщения' {
    checkIsServer();
    IF isServer() THEN receiveTopByAction();
}

loginInvoiceTopBy 'Имя пользователя TopBy' = DATA VARSTRING[100] ();
passwordInvoiceTopBy 'Пароль TopBy' = DATA VARSTRING[100] () ECHO;
hostInvoiceTopBy 'Хост TopBy' = DATA VARSTRING[100] ();
portInvoiceTopBy 'Порт TopBy' = DATA INTEGER ();

hostEDSServiceTopBy 'Хост EDSService' = DATA VARSTRING[100] ();
portEDSServiceTopBy 'Порт EDSService' = DATA INTEGER ();
useEDSServiceForCustomerTopBy 'Использовать EDSService для подписи покупателем' = DATA BOOLEAN ();

receiveInvoiceTopByAction 'Получить сообщения по электронным накладным'  INTERNAL  'lsfusion.erp.region.by.integration.edi.topby.ReceiveInvoiceMessagesTopByActionProperty' ();
receiveInvoiceTopBy 'Получить сообщения по электронным накладным' () {
    checkIsServer();
    IF isServer() THEN receiveInvoiceTopByAction();  
}

EXTEND FORM integrationData
    PROPERTIES() loginTopBy, passwordTopBy, hostTopBy, portTopBy, archiveDirTopBy, outputDirTopBy, disableConfirmationTopBy, receiveSupplierMessagesTopBy, receiveTopBy,
                 loginInvoiceTopBy, passwordInvoiceTopBy, hostInvoiceTopBy, portInvoiceTopBy, 
                 hostEDSServiceTopBy, portEDSServiceTopBy, useEDSServiceForCustomerTopBy,
                 receiveInvoiceTopBy
;
    
DESIGN integrationData {
    pane {
        NEW vs {
            caption = 'TopBy';
            NEW ovs {
                caption = 'Заказы';
                MOVE PROPERTY(loginTopBy());
                MOVE PROPERTY(passwordTopBy());
                MOVE PROPERTY(hostTopBy());
                MOVE PROPERTY(portTopBy());
                MOVE PROPERTY(receiveTopBy());
            }
            NEW ivs {
                caption = 'Электронные накладные';
                MOVE PROPERTY(loginInvoiceTopBy());
                MOVE PROPERTY(passwordInvoiceTopBy());
                MOVE PROPERTY(hostInvoiceTopBy());
                MOVE PROPERTY(portInvoiceTopBy());
                MOVE PROPERTY(hostEDSServiceTopBy());
                MOVE PROPERTY(portEDSServiceTopBy());           
                MOVE PROPERTY(useEDSServiceForCustomerTopBy());     
                MOVE PROPERTY(receiveInvoiceTopBy());
            }
            MOVE PROPERTY(archiveDirTopBy());
            MOVE PROPERTY(outputDirTopBy());
            MOVE PROPERTY(disableConfirmationTopBy());
            MOVE PROPERTY(receiveSupplierMessagesTopBy());
        }
    }
}

sendTopBy 'Отправить'  INTERNAL  'lsfusion.erp.region.by.integration.edi.topby.SendEOrderTopByActionProperty' (EOrder);

send(EOrder o) + { IF EDIProvider(supplier(o)) == EDIProvider.topBy AND NOT isCancel(o) THEN IF exported(o) THEN MESSAGE 'Заказ уже отправлен'; ELSE sendTopBy(o); }
cancel(EOrder o) + {IF EDIProvider(supplier(o)) == EDIProvider.topBy AND isCancel(o) THEN IF exportedCanceled(o) THEN MESSAGE 'Заказ уже отменен'; ELSE sendTopBy(o);}

good(EOrderMessage m) += WHEN (code(m) == '1250' OR code(m) == '1251' OR code(m) == '1252') THEN TRUE ;
good(EInvoiceMessage m) += WHEN (code(m) == '1250' OR code(m) == '2550' OR code(m) == '2560' OR code(m) == '2551' OR code(m) == '2571' OR code(m) == '2650') THEN TRUE ;

signAndSendCustomerTopBy 'Подписать и отправить (покупатель)'  INTERNAL  'lsfusion.erp.region.by.integration.edi.topby.SendEInvoiceCustomerTopByActionProperty' (EInvoice);
signAndSendCustomer(EInvoice e) + {  IF EDIProvider(supplier(e)) == EDIProvider.topBy THEN IF exportedCustomer(e) THEN MESSAGE 'Накладная (покупатель) уже отправлена'; ELSE signAndSendCustomerTopBy(e); }

signAndSendSupplierTopBy 'Подписать и отправить (поставщик)'  INTERNAL  'lsfusion.erp.region.by.integration.edi.topby.SendEInvoiceSupplierTopByActionProperty' (EInvoice);
signAndSendSupplier(EInvoice e) + {  IF EDIProvider(supplier(e)) == EDIProvider.topBy THEN IF exportedSupplier(e) THEN MESSAGE 'Накладная (поставщик) уже отправлена'; ELSE signAndSendSupplierTopBy(e); }

sendSaleOrderSupplierTopBy 'Отправить (поставщик)' (Sale.UserOrder order) {
    checkIsServer();
    IF isServer() THEN {
        IF loginTopBy() AND passwordTopBy() AND hostTopBy() AND portTopBy() THEN {
            sendSaleOrder(order, outputDirTopBy(), hostTopBy(), portTopBy(), loginTopBy(), passwordTopBy(), CONCAT '', 'http://', hostTopBy(),':', portTopBy(), '/DmcService');  
        } ELSE {
            printToImportLog(CONCAT ' ', 'Заказ', number(order), 'не выгружен: не заданы имя пользователя / пароль / хост / порт');
            MESSAGE CONCAT ' ', 'Заказ', number(order), 'не выгружен: не заданы имя пользователя / пароль / хост / порт';
        }
    }
}
sendSaleOrderSupplier(Sale.UserOrder o) + { IF EDIProvider(supplier(o)) == EDIProvider.topBy THEN IF exported(o) THEN MESSAGE 'Заказ уже отправлен'; ELSE sendSaleOrderSupplierTopBy(o); }