MODULE PurchaseEInvoice;

REQUIRE InvoiceEInvoice, PurchaseInvoice;

PRIORITY Purchase;

NAMESPACE EDI;


eOperation = DATA Operation(LegalEntity);
nameEOperation 'Операция (Закупка) для электронных накладных'(LegalEntity l) = name(eOperation(l));

EXTEND FORM legalEntity
    PROPERTIES (l) nameEOperation;

DESIGN legalEntity {
    EDI{
        MOVE PROPERTY (nameEOperation(l));
    }
} 

receiver = DATA Employee (UserInvoice);
receiver(UserInvoice i) += receiver(i);

nameReceiver 'Приёмщик'(Invoice i) = name(receiver(i));

filterDate 'Дата' = DATA LOCAL DATE ();
filterDate (EInvoice i) = DATE(dateTime(i)) == filterDate() OR NOT filterDate();      

FORM selectEInvoice 'Накладные EDI'
    PROPERTIES filterDate()
    
    OBJECTS ei = EInvoice
    PROPERTIES(ei) READONLY dateTime, number, deliveryNoteNumber, nameSupplier, nameCustomer
    FILTERS filterDate(ei),
            NOT invoice(ei)            
;

DESIGN selectEInvoice {
    NEW filter {
        caption = 'Фильтр';
        MOVE PROPERTY (filterDate());
    }
    
    MOVE BOX(ei);
    MOVE TOOLBARBOX;
}

copyData(EInvoice ei, Invoice i)  { 
    invoice(ei) <- i;
    number(i) <- deliveryNoteNumber(ei);
    series(i) <- NULL;
    operation(i) <- eOperation(supplier(ei)) WHERE eOperation(supplier(ei));
    supplier(i) <- supplier(ei);
    supplierStock(i) <- defaultStock(supplier(ei));
    customer(i) <- customer(ei);
    customerStock(i) <- customerStock(ei);
    date(i) <- DATE(dateTime(ei));
    time(i) <- TIME(dateTime(ei));
    
    FOR eInvoice(EInvoiceDetail eid) == eInvoice(i) NEW id = UserInvoiceDetail DO {
        userInvoice(id) <- i;
        sku(id) <- sku(lineItemBuyerID(eid));
        quantity(id) <- quantityDespatched(eid);
        price(id) <- lineItemPrice(eid);
        VAT(id) <- valueCurrentVAT(country(defaultStock(supplier(ei))), valueVAT(eid));;
        valueVAT(id) <- NUMERIC[10,5](valueVAT(eid));  
        invoicePrice(id) <- round2(price(id) * (100 + valueVAT(id))/100);  
    }
}

importFromEInvoice 'Импорт из накладной EDI' (UserInvoice i)  { 
    IF isPosted(i) THEN {
        MESSAGE 'Вы пытаетесь импортировать в проведенный документ. Распроведите его.';
        RETURN;
    }
    
    filterDate() <- date(i);
    
    DIALOG selectEInvoice OBJECTS ei INPUT DO {
        IF ei THEN
            copyData(ei,i);
    }
}


EXTEND FORM userInvoice 
    PROPERTIES numberEInvoice(i) ON CHANGE changeEInvoice(i)
    PROPERTIES(i) importFromEInvoice, nameReceiver
;

DESIGN userInvoice {
    import {
        NEW importEDI {
            caption = 'Накладная EDI';
            flex = 1;
            type = CONTAINERH;
            MOVE PROPERTY(numberEInvoice(i));
            MOVE PROPERTY(nameReceiver(i));
            MOVE PROPERTY(importFromEInvoice(i));
        }
    }
}

skipNumberCheck(Invoice i) += IF eInvoice(i) AND i IS Invoice THEN TRUE;
 
@defineOption(createPurchaseInvoiceFromEInvoice, 'Автоматически создавать накладную (закупка) при создании накладной EDI', EDI);

WHEN SET(EInvoice ei IS EInvoice) AND createPurchaseInvoiceFromEInvoice() DO {
    NEW i = UserInvoice {
        copyData(ei,i);
    }        
}