MODULE EDN;

REQUIRE System, EDI, Integration, Warehouse, Store;

NAMESPACE EDI;

EXTEND CLASS EDIProvider {
    edn 'EDN'
}

loginEDN 'Имя пользователя EDN' = DATA VARSTRING[100] ();
passwordEDN 'Пароль EDN' = DATA VARSTRING[100] () ECHO;
hostEDN 'Хост' = DATA VARSTRING[100] ();
portEDN 'Порт' = DATA INTEGER ();
archiveDirEDN 'Папка принятых сообщений' = DATA VARSTRING[100] ();
outputDirEDN 'Папка отправленных сообщений' = DATA VARSTRING[100] ();
disableConfirmationEDN 'Отключить подтверждение сообщений' = DATA BOOLEAN ();
receiveSupplierMessagesEDN 'Получать сообщения для поставщика' = DATA BOOLEAN ();
receiveEDN 'Получить сообщения'  CUSTOM  'lsfusion.erp.region.by.integration.edi.edn.ReceiveMessagesEDNActionProperty' ();

loginInvoiceEDN 'Имя пользователя EDN' = DATA VARSTRING[100] ();
passwordInvoiceEDN 'Пароль EDN' = DATA VARSTRING[100] () ECHO;
hostInvoiceEDN 'Хост EDN' = DATA VARSTRING[100] ();
portInvoiceEDN 'Порт EDN' = DATA INTEGER ();

aliasEDSServiceEDN 'Alias EDSService' = DATA VARSTRING[100] ();
passwordEDSServiceEDN 'Пароль EDSService' = DATA VARSTRING[100] () ECHO;
hostEDSServiceEDN 'Хост EDSService' = DATA VARSTRING[100] ();
portEDSServiceEDN 'Порт EDSService' = DATA INTEGER ();
useEDSServiceForCustomerEDN 'Использовать EDSService для подписи покупателем' = DATA BOOLEAN ();

receiveInvoiceEDN 'Получить сообщения по электронным накладным'  CUSTOM  'lsfusion.erp.region.by.integration.edi.edn.ReceiveInvoiceMessagesEDNActionProperty' ();

EXTEND FORM integrationData
    PROPERTIES() loginEDN, passwordEDN, hostEDN, portEDN, receiveEDN, archiveDirEDN, outputDirEDN, disableConfirmationEDN, receiveSupplierMessagesEDN,
                 loginInvoiceEDN, passwordInvoiceEDN, hostInvoiceEDN, portInvoiceEDN,
                 aliasEDSServiceEDN, passwordEDSServiceEDN, hostEDSServiceEDN, portEDSServiceEDN, useEDSServiceForCustomerEDN,
                 receiveInvoiceEDN
;
    
DESIGN integrationData {
    pane {
        NEW vsEDN {
            caption = 'EDN';
            NEW ovsEDN {
                caption = 'Заказы';
                MOVE PROPERTY(loginEDN());
                MOVE PROPERTY(passwordEDN());
                MOVE PROPERTY(hostEDN());
                MOVE PROPERTY(portEDN());
                MOVE PROPERTY(receiveEDN());
            }
            NEW ivsEDN {
                caption = 'Электронные накладные';
                MOVE PROPERTY(loginInvoiceEDN());
                MOVE PROPERTY(passwordInvoiceEDN());
                MOVE PROPERTY(hostInvoiceEDN());
                MOVE PROPERTY(portInvoiceEDN());
                MOVE PROPERTY(aliasEDSServiceEDN());
                MOVE PROPERTY(passwordEDSServiceEDN());
                MOVE PROPERTY(hostEDSServiceEDN());
                MOVE PROPERTY(portEDSServiceEDN());  
                MOVE PROPERTY(useEDSServiceForCustomerEDN());                                                           
                MOVE PROPERTY(receiveInvoiceEDN());
            }
            MOVE PROPERTY(archiveDirEDN());
            MOVE PROPERTY(outputDirEDN());
            MOVE PROPERTY(disableConfirmationEDN());
            MOVE PROPERTY(receiveSupplierMessagesEDN());
        }
    }
}

sendEDN 'Отправить'  CUSTOM  'lsfusion.erp.region.by.integration.edi.edn.SendEOrderEDNActionProperty' (EOrder);

send(EOrder o) + {  IF EDIProvider(supplier(o)) == EDIProvider.edn THEN IF exported(o) THEN MESSAGE 'Заказ уже отправлен'; ELSE sendEDN(o); }

good(EOrderMessage m) += WHEN (code(m) == '1250' OR code(m) == '1252') THEN TRUE;

signAndSendCustomerEDN 'Подписать и отправить (покупатель)'  CUSTOM  'lsfusion.erp.region.by.integration.edi.edn.SendEInvoiceCustomerEDNActionProperty' (EInvoice);
signAndSendCustomer(EInvoice e) + {  IF EDIProvider(supplier(e)) == EDIProvider.edn THEN IF exportedCustomer(e) THEN MESSAGE 'Накладная (покупатель) уже отправлена'; ELSE signAndSendCustomerEDN(e); }

signAndSendSupplierEDN 'Подписать и отправить (поставщик)'  CUSTOM  'lsfusion.erp.region.by.integration.edi.edn.SendEInvoiceSupplierEDNActionProperty' (EInvoice);
signAndSendSupplier(EInvoice e) + {  IF EDIProvider(supplier(e)) == EDIProvider.edn THEN IF exportedSupplier(e) THEN MESSAGE 'Накладная (поставщик) уже отправлена'; ELSE signAndSendSupplierEDN(e); }