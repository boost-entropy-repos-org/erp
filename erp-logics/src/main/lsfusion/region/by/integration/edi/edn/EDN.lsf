MODULE EDN;

REQUIRE System, Integration, Warehouse, Store, PurchaseOrderEDITopBy;

NAMESPACE EDI;

EXTEND CLASS EDIProvider {
    edn 'EDN'
}

loginEDN 'Имя пользователя EDN' = DATA VARSTRING[100] ();
passwordEDN 'Пароль EDN' = DATA VARSTRING[100] () ECHO;
hostEDN 'Хост' = DATA VARSTRING[100] ();
portEDN 'Порт' = DATA INTEGER ();
archiveDirEDN 'Папка принятых сообщений' = DATA VARSTRING[100] ();
outputDirEDN 'Папка отправленных сообщений' = DATA VARSTRING[100] ();
disableConfirmationEDN 'Отключить подтверждение сообщений' = DATA BOOLEAN ();
receiveSupplierMessagesEDN 'Получать сообщения для поставщика' = DATA BOOLEAN ();

@receiveMessages(soap);

receiveMessagesEDN (BOOLEAN invoices) {
    receiveMessagesSoap(loginEDN(), passwordEDN(), hostEDN(), portEDN(), ('https://' +  hostEDN() + ':' + portEDN() + '/topby/DmcService?wsdl'), archiveDirEDN(), disableConfirmationEDN(), receiveSupplierMessagesEDN(), TRUE, invoices, 'EDN');
}

receiveEDNAction 'Получить сообщения'  INTERNAL  'lsfusion.erp.region.by.integration.edi.edn.ReceiveMessagesEDNActionProperty' ();

receiveEDN 'Получить сообщения' {
    checkIsServer();
    IF isServer() THEN {IF useLSF() THEN receiveMessagesEDN(NULL); ELSE receiveEDNAction();};
}

EXTEND FORM integrationData
    PROPERTIES() loginEDN, passwordEDN, hostEDN, portEDN, receiveEDN, archiveDirEDN, outputDirEDN, disableConfirmationEDN, receiveSupplierMessagesEDN
;
    
DESIGN integrationData {
    pane {
        NEW vsEDN {
            caption = 'EDN';
            NEW paramsEDN {
                caption = 'Общие';
                MOVE PROPERTY(loginEDN());
                MOVE PROPERTY(passwordEDN());
                MOVE PROPERTY(hostEDN());
                MOVE PROPERTY(portEDN());
                MOVE PROPERTY(archiveDirEDN());
                MOVE PROPERTY(outputDirEDN());
                MOVE PROPERTY(disableConfirmationEDN());
                MOVE PROPERTY(receiveSupplierMessagesEDN());
            }
            NEW ovsEDN {
                caption = 'Заказы';
                MOVE PROPERTY(receiveEDN());
            }
        }
    }
}

sendPurchaseOrderEDN (EOrder o) {
    checkIsServer();
    IF isServer() THEN {
        sendPurchaseOrder(o, loginEDN(), passwordEDN(), hostEDN(), portEDN(), ('https://' +  hostEDN() + ':' + portEDN() + '/topby/DmcService?wsdl'), outputDirEDN(), 'EDN');
    }
}

sendEDN 'Отправить'  INTERNAL  'lsfusion.erp.region.by.integration.edi.edn.SendEOrderEDNActionProperty' (EOrder);

send(EOrder o) + { IF EDIProvider(supplier(o)) == EDIProvider.edn AND NOT isCancel(o) THEN IF exported(o) THEN MESSAGE 'Заказ уже отправлен'; ELSE {IF useLSF() THEN sendPurchaseOrderEDN(o); ELSE sendEDN(o);} }
cancel(EOrder o) + { IF EDIProvider(supplier(o)) == EDIProvider.edn AND isCancel(o) THEN IF exportedCanceled(o) THEN MESSAGE 'Заказ уже отменен'; ELSE {IF useLSF() THEN sendPurchaseOrderEDN(o); ELSE sendEDN(o);} }

good(EOrderMessage m) += WHEN (code(m) == '1250' OR code(m) == '1252') THEN TRUE;

signAndSendCustomer(EInvoice e) + {  IF EDIProvider(supplier(e)) == EDIProvider.edn THEN MESSAGE 'Операция не поддерживается для данного EDI проавайдера'; }
signAndSendSupplier(EInvoice e) + {  IF EDIProvider(supplier(e)) == EDIProvider.edn THEN MESSAGE 'Операция не поддерживается для данного EDI проавайдера'; }