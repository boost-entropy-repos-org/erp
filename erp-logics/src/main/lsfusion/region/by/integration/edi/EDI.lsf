MODULE EDI;

REQUIRE LegalEntityBy, Item, Store, Warehouse;

DESIGN options {
    pane {
        NEW EDI {
        caption = 'EDI';
        }
    }
}

@defineDoubleItemAttribute(GTIN, STRING[14], 'GTIN', itemBase);

INDEX GTIN(Item i);

GTINBarcode 'GTIN' (Sku s) = OVERRIDE GTIN(s), idBarcode(s);
skuGTINa = GROUP MAX Sku s BY GTINBarcode(s);
skuGTIN(STRING[15] s) = OVERRIDE skuGTINa(s), skuBarcode(s);

CLASS ABSTRACT EOrder 'EDI Заказ';
TABLE eOrder(EOrder); 

exported 'Экспортирован' = DATA BOOLEAN (EOrder);
exportedCanceled 'Экспортирован (отмена)' = DATA BOOLEAN (EOrder);

isClosed 'Закрыт' = ABSTRACT BOOLEAN (EOrder);
isOpened = ABSTRACT BOOLEAN (EOrder);
isCancel 'Отмена заказа' = ABSTRACT BOOLEAN (EOrder);

@defineOption(sendCurrentDateTime, 'Использовать текущую дату при отправке заказа поставщику', EDI);
dateTime 'Дата/время документа' = ABSTRACT DATETIME (EOrder);
sendDateTime (EOrder o) = OVERRIDE currentDateTime() IF sendCurrentDateTime() AND o IS EOrder, dateTime(o); 

shipmentDateTime 'Дата/время поставки' = ABSTRACT DATETIME (EOrder);

number 'Номер' = ABSTRACT STRING[28] (EOrder);
eOrder (number) = GROUP AGGR EOrder e BY number(e);

supplier 'Поставщик' = ABSTRACT LegalEntity (EOrder);
nameSupplier 'Поставщик' (EOrder o) = name(supplier(o));

supplierStock 'Склад поставщика' = ABSTRACT Stock (EOrder);
nameSupplierStock 'Склад поставщика' (EOrder o) = name(supplierStock(o));

customer 'Покупатель' = ABSTRACT LegalEntity (EOrder);
nameCustomer 'Покупатель' (EOrder o) = name(customer(o));

customerStock 'Склад покупателя' = ABSTRACT Stock (EOrder);
nameCustomerStock 'Склад покупателя' (EOrder o) = name(customerStock(o));

note 'Примечание' = ABSTRACT ISTRING[500] (EOrder);

CLASS ABSTRACT EOrderDetail 'Строка EDI Заказа';
TABLE eOrderDetail(EOrderDetail); 

order = ABSTRACT EOrder(EOrderDetail);
numberOrder (EOrderDetail d) = number(order(d)); 

sku = ABSTRACT Sku(EOrderDetail);
idSku 'Код товара' (EOrderDetail o) = id(sku(o));
nameSku 'Наименование' (EOrderDetail o) = name(sku(o));
idBarcode 'Штрихкод' (EOrderDetail o) = idBarcode(sku(o));
GTINBarcode 'GTIN' (EOrderDetail o) = GTINBarcode(sku(o));

extraCodeUOM 'Ед. изм. (EDI)' = DATA STRING[3] (UOM);
UOMExtraCode = GROUP MAX UOM u BY extraCodeUOM(u);
extraCodeUOMSku 'Ед. изм.(EDI)' (EOrderDetail o) = extraCodeUOM(UOM(sku(o)));
EXTEND FORM UOMs PROPERTIES(u) READONLY extraCodeUOM;
EXTEND FORM UOM PROPERTIES(u) extraCodeUOM;

quantity 'Кол-во' = ABSTRACT NUMERIC[16,5] (EOrderDetail);
cancelQuantity 'Кол-во (отмена)' = ABSTRACT NUMERIC[16,5] (EOrderDetail);
overQuantity (EOrderDetail d) = IF isCancel(order(d)) THEN OVERRIDE cancelQuantity(d), quantity(d) ELSE quantity(d);
price 'Цена' = ABSTRACT NUMERIC[16,4] (EOrderDetail);
valueVAT 'НДС, %' = ABSTRACT NUMERIC[10,5] (EOrderDetail);

responseDetail = DATA EOrderResponseDetail(EOrderDetail) INDEXED;
localIndexSku = DATA LOCAL INTEGER (EOrderDetail);
fillIndexSku ABSTRACT LIST (EOrder);
fillIndexSku(EOrder o) + {localIndexSku(EOrderDetail  d) <- PARTITION SUM 1 ORDER d BY sku(d), order(d) WHERE order(d) == o;}

CLASS EDIProvider 'Провайдер EDI' : StaticObject;

FORM EDIProviders 'Провайдеры EDI'
    OBJECTS t=EDIProvider
    PROPERTIES (t) READONLY staticCaption
    LIST EDIProvider OBJECT t
;

DESIGN EDIProviders { 
    size = (600, 400);
    PROPERTY (staticCaption(t)){caption = 'Наименование';};
}


GLN 'GLN' = DATA STRING[13] (LegalEntity);
legalEntityGLN (legalEntity) = GROUP AGGR LegalEntity llegalEntity BY GLN(llegalEntity);
GLNSupplier(EOrder e) = GLN(supplier(e));
GLNCustomer(EOrder e) = GLN(customer(e));

banCancel 'Запретить отмену заказа' = DATA BOOLEAN(LegalEntity);
hourToSend 'Возможна повторная отправка до' = DATA TIME(LegalEntity);
EDIProvider 'Провайдер EDI' = DATA EDIProvider(LegalEntity);
nameEDIProvider 'Провайдер EDI'(LegalEntity l) = staticCaption(EDIProvider(l));
aliasEDSService 'Alias EDSService' = DATA STRING[100] (LegalEntity);
passwordEDSService 'Пароль EDSService' = DATA STRING[100] (LegalEntity) ECHO;
aliasEDSService 'Alias EDSService' = DATA STRING[100] (DepartmentStore);
passwordEDSService 'Пароль EDSService' = DATA STRING[100] (DepartmentStore) ECHO;
EXTEND FORM legalEntity PROPERTIES(l) GLN, nameEDIProvider, banCancel, hourToSend;
DESIGN legalEntity {
    column2{
        NEW EDI {
            caption = 'EDI';
            MOVE PROPERTY (GLN(l));
            MOVE PROPERTY (nameEDIProvider(l));
            MOVE PROPERTY (banCancel(l));
            MOVE PROPERTY (hourToSend(l));
        }
    }
}
EXTEND FORM legalEntities PROPERTIES(l) READONLYIF isReadonly() GLN, nameEDIProvider;

nameEDIProvider'Провайдер EDI'(EOrder o) = nameEDIProvider(supplier(o));

dataGLN 'GLN' = DATA STRING[13] (Stock);
GLN 'GLN' (Stock s) = OVERRIDE dataGLN(s), GLN(legalEntity(s)) IF countStock(legalEntity(s)) == 1 OR s IS Stock AND notCompany(s);

companyStockGLN = GROUP NAGGR Stock stock WHERE isCompany(stock) BY GLN(stock);

stockGLN = GROUP MAX Stock stock BY GLN(stock);
legalEntityStockGLN(STRING[13] GLN) = legalEntity(stockGLN(GLN));

GLNSupplierStock 'GLN поставщика' (EOrder e) = GLN(supplierStock(e));
GLNCustomerStock 'GLN покупателя' (EOrder e) = GLN(customerStock(e));

EXTEND FORM warehouse PROPERTIES(w) GLN;
EXTEND FORM warehouses PROPERTIES(w) READONLY GLN;
DESIGN warehouse {
    OBJECTS {
        NEW EDI BEFORE BOX (e){
            caption = 'EDI';
            MOVE PROPERTY (GLN(w));
        }
    }
}

EXTEND FORM departmentStore PROPERTIES(d) GLN;
DESIGN departmentStore{
    headerRight {
        NEW EDI {
            fill = 1;
            caption = 'EDI';
            MOVE PROPERTY (GLN(d));
        }
    }
}

EXTEND FORM departmentStores PROPERTIES(d) READONLY GLN;

send 'Отправить'  ABSTRACT LIST ( EOrder);
overSend  ABSTRACT LIST ( EOrder);

skipSend = ABSTRACT CASE BOOLEAN (EOrder);

sendApply 'Отправить' (EOrder o)  { 
    IF NOT skipSend(o) THEN NEWSESSION {
        send(o);
        APPLY;
    } ELSE {
        overSend(o);    
    }    
}

cancel 'Отменить'  ABSTRACT LIST ( EOrder);

toSend (EOrder o) = IF NOT exported(o) THEN TRUE ELSE IF banCancel(supplier(o)) AND currentDateTime() < dateTimeToDateTime(DATE(dateTime(o)),hourToSend(supplier(o))) THEN TRUE;
showCancel (EOrder o) = IF NOT banCancel(supplier(o)) THEN TRUE ELSE IF currentDateTime() > dateTimeToDateTime(DATE(dateTime(o)),hourToSend(supplier(o))) THEN TRUE;

FORM eOrders 'Заказы EDI'
    OBJECTS o = EOrder
    PROPERTIES(o) READONLY exported CHANGEABLE, isCancel, exportedCanceled CHANGEABLE, isClosed, dateTime, shipmentDateTime, number, nameSupplier, nameSupplierStock, 
                  nameEDIProvider, GLNSupplierStock, nameCustomer, nameCustomerStock, note
    PROPERTIES(o) sendApply TOOLBAR
    FILTERGROUP isEdi 
        FILTER 'EDI поставщик' EDIProvider(supplier(o)) 'F5' DEFAULT
    FILTERGROUP orderfilters6 
        FILTER 'Открыт' isOpened(o) 'F6' DEFAULT
    
    OBJECTS d = EOrderDetail
    PROPERTIES(d) READONLY idBarcode, GTINBarcode, idSku, nameSku, extraCodeUOMSku, quantity, price
    PROPERTIES(d) NEW, DELETE GRID
    
    FILTERS order(d) == o
;

DESIGN eOrders {
    BOX {
        MOVE BOX(o);
        NEW tab {
            fill = 1;
            type = TABBED;
            MOVE BOX(d);
        }
        MOVE TOOLBARBOX;
    }
}

//-----------------------------------------Сообщение по заказу EDI-----------------------------------------//
CLASS EOrderMessage 'Сообщение по заказу EDI';
TABLE eOrderMessage(EOrderMessage);

number 'Номер' = DATA STRING[24] (EOrderMessage) INDEXED;
eOrderMessage (number) = GROUP AGGR EOrderMessage e BY number(e);
eOrder 'Заказ' = DATA EOrder (EOrderMessage) NONULL DELETE INDEXED;
numberEOrder 'Заказ' (EOrderMessage m) = number(eOrder(m));
dateTime 'Дата/время сообщения' = DATA DATETIME (EOrderMessage);
code 'Код сообщения' = DATA STRING[10] (EOrderMessage);
description 'Текст сообщения' = DATA STRING[1000] (EOrderMessage);
good = ABSTRACT CASE BOOLEAN (EOrderMessage);

EXTEND FORM eOrders
OBJECTS m = EOrderMessage
PROPERTIES(m) READONLY numberEOrder, dateTime, code, description
FILTERS eOrder(m) == o
ORDER dateTime(m);

DESIGN eOrders {
    tab {
        MOVE BOX(m);
    }
}

//-----------------------------------------Ответ по заказу EDI----------------------------------------------//
CLASS EOrderResponse 'Ответ по заказу EDI';
TABLE eOrderResponse(EOrderResponse);

CLASS EOrderResponseType 'Тип ответа' {
    changed 'Принят с  изменениями',
    cancelled 'Не принят',
    accepted 'Принят без изменений'
}

@defineExternalizable(eOrderResponse, STRING[100]);
dateTime 'Дата/время документа' = DATA DATETIME (EOrderResponse);
number 'Номер' = DATA STRING[28] (EOrderResponse);
note 'Примечание' = DATA STRING[100] (EOrderResponse);
responseType 'Тип ответа' = DATA EOrderResponseType (EOrderResponse);
captionResponseType 'Тип ответа' (EOrderResponse e) = staticCaption(responseType(e));

eOrder 'Заказ' = DATA EOrder (EOrderResponse) NONULL DELETE INDEXED;
numberEOrder 'Номер заказа' (EOrderResponse e) = number(eOrder(e));
deliveryDateTime 'Дата/время доставки (с)' = DATA DATETIME (EOrderResponse);
deliveryDateTimeSecond 'Дата/время доставки (по)' = DATA DATETIME (EOrderResponse);

supplier 'Поставщик' = DATA LegalEntity (EOrderResponse);
nameSupplier 'Поставщик' (EOrderResponse o) = name(supplier(o));
nameEDIProvider 'EDI провайдер' (EOrderResponse o) = nameEDIProvider(supplier(o));

customer 'Покупатель' = DATA LegalEntity (EOrderResponse);
nameCustomer 'Покупатель' (EOrderResponse o) = name(customer(o));
customerStock 'Склад покупателя' = DATA Stock (EOrderResponse);
nameCustomerStock 'Склад покупателя' (EOrderResponse o) = name(customerStock(o));

dateTimeCreated 'Дата/время создания' = DATA DATETIME (EOrderResponse);
dateTimeCreated(EOrderResponse e) <- currentDateTime() WHEN SET(e IS EOrderResponse);

CLASS EOrderResponseDetail 'Строка ответа по заказу EDI';
TABLE eOrderResponseDetail(EOrderResponseDetail); 
@defineExternalizable(eOrderResponseDetail, STRING[100]);

CLASS EOrderResponseDetailAction 'Решение' {
    added 'Добавление',
    changed 'Изменение',
    accepted 'Принято без изменений',
    cancelled 'Не принято'
}

orderResponse = DATA EOrderResponse(EOrderResponseDetail) NONULL DELETE INDEXED;
dataGTIN 'GTIN (из XML)' = DATA STRING[15] (EOrderResponseDetail);
sku = DATA Sku(EOrderResponseDetail) INDEXED;
nameSku 'Наименование' (EOrderResponseDetail o) = name(sku(o));
idBarcode 'Штрихкод' (EOrderResponseDetail o) = idBarcode(sku(o));
GTINBarcode 'GTIN' (EOrderResponseDetail o) = GTINBarcode(sku(o));
extraCodeUOMSku 'Ед. изм.(EDI)' (EOrderResponseDetail o) = extraCodeUOM(UOM(sku(o)));

eOrder (EOrderResponseDetail d) = eOrder(orderResponse(d)) MATERIALIZED INDEXED;

action 'Решение' (EOrderResponseDetail) = DATA EOrderResponseDetailAction (EOrderResponseDetail);
captionAction 'Решение' (EOrderResponseDetail e) = staticCaption(action(e));
quantityOrdered 'Кол-во (заказано)' = DATA NUMERIC[16,5] (EOrderResponseDetail) CHARWIDTH 7;
quantityAccepted 'Кол-во (принято)' = DATA NUMERIC[16,5] (EOrderResponseDetail) CHARWIDTH 7;
price 'Цена за единицу' = DATA NUMERIC[16,4] (EOrderResponseDetail);
sumNoNDS 'Сумма без НДС' = DATA NUMERIC[16,4] (EOrderResponseDetail);
sumNDS 'Сумма с НДС' = DATA NUMERIC[16,4] (EOrderResponseDetail);

FORM eOrderResponses 'Ответы по Заказам EDI'
    OBJECTS o = EOrderResponse
    PROPERTIES(o) READONLY dateTime, number, numberEOrder, captionResponseType, nameSupplier, nameEDIProvider, nameCustomer, 
                           nameCustomerStock, deliveryDateTime, deliveryDateTimeSecond, dateTimeCreated, note

    OBJECTS d = EOrderResponseDetail
    PROPERTIES(d) READONLY idBarcode, dataGTIN, GTINBarcode, nameSku, captionAction, quantityOrdered, quantityAccepted, price, sumNoNDS, sumNDS

    FILTERS orderResponse(d) == o
;

//--------------------------------------Уведомление об отгрузке EDI-----------------------------------------//
CLASS EOrderDespatchAdvice 'Уведомление об отгрузке EDI';
TABLE eOrderDespatchAdvice(EOrderDespatchAdvice);

@defineExternalizable(eOrderDespatchAdvice, STRING[100]);
dateTime 'Дата/время документа' = DATA DATETIME (EOrderDespatchAdvice);
number 'Номер' = DATA STRING[28] (EOrderDespatchAdvice);

deliveryNoteNumber 'Серия и номер бумажной накладной' = DATA STRING[28] (EOrderDespatchAdvice);
deliveryNoteDateTime 'Дата бумажной накладной' = DATA DATETIME (EOrderDespatchAdvice);

eOrder 'Заказ' = DATA EOrder (EOrderDespatchAdvice) NONULL DELETE INDEXED;
numberEOrder 'Номер заказа' (EOrderDespatchAdvice e) = number(eOrder(e));
deliveryDateTime 'Дата/время доставки' = DATA DATETIME (EOrderDespatchAdvice);
note 'Примечание' = DATA STRING[100] (EOrderDespatchAdvice);

supplier 'Поставщик' = DATA LegalEntity (EOrderDespatchAdvice);
nameSupplier 'Поставщик' (EOrderDespatchAdvice o) = name(supplier(o));
nameEDIProvider 'EDI провайдер' (EOrderDespatchAdvice o) = nameEDIProvider(supplier(o));

customer 'Покупатель' = DATA LegalEntity (EOrderDespatchAdvice);
nameCustomer 'Покупатель' (EOrderDespatchAdvice o) = name(customer(o));
customerStock 'Склад покупателя' = DATA Stock (EOrderDespatchAdvice);
nameCustomerStock 'Склад покупателя' (EOrderDespatchAdvice o) = name(customerStock(o));

CLASS EOrderDespatchAdviceDetail 'Строка ответа по заказу EDI';
TABLE eOrderEOrderDespatchAdviceDetail(EOrderDespatchAdviceDetail); 
@defineExternalizable(eOrderDespatchAdviceDetail, STRING[100]);

orderDespatchAdvice = DATA EOrderDespatchAdvice(EOrderDespatchAdviceDetail) NONULL DELETE INDEXED;
dataGTIN 'GTIN (из XML)' = DATA STRING[15] (EOrderDespatchAdviceDetail);
sku = DATA Sku(EOrderDespatchAdviceDetail) INDEXED;
nameSku 'Наименование' (EOrderDespatchAdviceDetail o) = name(sku(o));
idBarcode 'Штрихкод' (EOrderDespatchAdviceDetail o) = idBarcode(sku(o));
GTINBarcode 'GTIN' (EOrderDespatchAdviceDetail o) = GTINBarcode(sku(o));
extraCodeUOMSku 'Ед. изм.(EDI)' (EOrderDespatchAdviceDetail o) = extraCodeUOM(UOM(sku(o)));
quantityOrdered 'Кол-во заказываемого товара' = DATA NUMERIC[16,5] (EOrderDespatchAdviceDetail);
quantityDespatch 'Кол-во отгружаемого товара' = DATA NUMERIC[16,5] (EOrderDespatchAdviceDetail);
valueVAT 'НДС, %' = DATA NUMERIC[16,5] (EOrderDespatchAdviceDetail);

lineItemPrice 'Цена за единицу товара' = DATA NUMERIC[16,4] (EOrderDespatchAdviceDetail);
lineItemAmountWithoutCharges 'Стоимость товарной позиции без НДС' = DATA NUMERIC[16,4] (EOrderDespatchAdviceDetail);
lineItemAmount 'Стоимость товарной позиции с НДС' = DATA NUMERIC[16,4] (EOrderDespatchAdviceDetail);
lineItemAmountCharges 'Сумма НДС' = DATA NUMERIC[16,4] (EOrderDespatchAdviceDetail);

FORM eOrderDespatchAdvices 'Уведомления об отгрузке EDI'
OBJECTS o = EOrderDespatchAdvice
PROPERTIES(o) READONLY dateTime, number, numberEOrder, deliveryNoteNumber, deliveryNoteDateTime, nameSupplier, nameEDIProvider, nameCustomer, nameCustomerStock, deliveryDateTime, note

OBJECTS d = EOrderDespatchAdviceDetail
PROPERTIES(d) READONLY idBarcode, dataGTIN, GTINBarcode, nameSku, quantityOrdered, quantityDespatch, valueVAT, lineItemPrice, 
                lineItemAmountWithoutCharges, lineItemAmount, lineItemAmountCharges

FILTERS orderDespatchAdvice(d) == o
;

//-----------------------------------------Электронная накладная----------------------------------------------//
CLASS EInvoice 'Электронная накладная EDI';
TABLE eInvoice(EInvoice);

exportedSupplier 'Экспортирован (поставщик)' = DATA BOOLEAN (EInvoice);
importedCustomer 'Импортирован (покупатель)' = DATA BOOLEAN (EInvoice);
exportedCustomer 'Экспортирован (покупатель)' = DATA BOOLEAN (EInvoice);
importedSupplier 'Импортирован (поставщик)' = DATA BOOLEAN (EInvoice);
importedSupplierCancel 'Импортирован (поставщик) отмена' = DATA BOOLEAN (EInvoice);

dateTimeCreated 'Создана' = DATA DATETIME (EInvoice);
dateTimeCreated(EInvoice i) <- currentDateTime() WHEN (i IS EInvoice); 

@defineExternalizable(eInvoice, STRING[100]);
dateTime 'Дата/время документа' = DATA DATETIME (EInvoice);
number 'Номер' = DATA STRING[28] (EInvoice);
eInvoiceNumber (number) = GROUP NAGGR EInvoice e BY number(e);

blrapn = DATA STRING[14] (EInvoice);
eInvoiceBlrapn (number) = GROUP MAX EInvoice e BY blrapn(e);
numberEInvoiceBlrapn(number) = number(eInvoiceBlrapn(number));
blrwbr = DATA STRING[14] (EInvoice);
eInvoiceBlrwbr (number) = GROUP MAX EInvoice e BY blrwbr(e);
numberEInvoiceBlrwbr(number) = number(eInvoiceBlrwbr(number));
blrwbl = DATA STRING[14] (EInvoice);
blrwblDate = DATA DATETIME (EInvoice);
eInvoiceBlrwbl (number) = GROUP MAX EInvoice e BY blrwbl(e);

reportId 'Номер акта' = DATA STRING[70] (EInvoice);
reportDate 'Дата составления акта' = DATA DATE (EInvoice);
reportName 'Вид  акта' = DATA STRING[512] (EInvoice);

deliveryNoteNumber 'Серия и номер бумажной накладной' = DATA STRING[28] (EInvoice) IN id;
eInvoiceDeliveryNoteNumber (number) = GROUP NAGGR EInvoice e BY deliveryNoteNumber(e);
deliveryNoteDateTime 'Дата бумажной накладной' = DATA DATETIME (EInvoice);
sealIDReceiver 'Номер пломбы (грузоотправитель)' = DATA STRING[35] (EInvoice);

contractId 'Номер Договора (или другого документа, служащего основанием отпуска)' = DATA STRING[70] (EInvoice);
contractDate 'Дата договора в формате ГГГГММДД (или другого документа, служащего основанием отпуска)' = DATA DATE (EInvoice);
waybillId 'Номер путевого листа' = DATA STRING[70] (EInvoice);

deliveryNoteNumberEInvoiceBlrapn(number) = deliveryNoteNumber(eInvoiceBlrapn(number));
deliveryNoteNumberEInvoiceBlrwbr(number) = deliveryNoteNumber(eInvoiceBlrwbr(number));
deliveryNoteNumberEInvoiceBlrwbl(number) = deliveryNoteNumber(eInvoiceBlrwbl(number));

supplier 'Поставщик' = DATA LegalEntity (EInvoice);
glnSupplier 'GLN поставщика' (EInvoice i) = GLN(supplier(i));
nameSupplier 'Поставщик' (EInvoice i) = name(supplier(i));
addressSupplier 'Адрес поставщика' (EInvoice i) = address(supplier(i));
unpSupplier 'УНП поставщика' (EInvoice i) = UNP(supplier(i));
contactSupplier 'Отпуск разрешил (должность и ФИО)' = DATA STRING[150] (EInvoice);

supplierStock 'Пункт погрузки' = DATA Stock (EInvoice);
glnSupplierStock 'GLN пункта погрузки' (EInvoice i) = GLN(supplierStock(i));
addressSupplierStock 'Адрес пункта погрузки' (EInvoice i) = address(supplierStock(i));
contactSupplierStock 'ФИО и должность лица, которое отвечает за передачу груза со стороны грузоотправителя' = DATA STRING[150] (EInvoice);

freightPayer 'Заказчик автомобильной перевозки (плательщик)' = DATA LegalEntity (EInvoice);
glnFreightPayer 'GLN заказчика автомобильной перевозки' (EInvoice i) = GLN(freightPayer(i));
nameFreightPayer 'Заказчик автомобильной перевозки' (EInvoice i) = name(freightPayer(i));
addressFreightPayer 'Адрес заказчика автомобильной перевозки' (EInvoice i) = address(freightPayer(i));
unpFreightPayer 'УНП заказчика автомобильной перевозки' (EInvoice i) = UNP(freightPayer(i));

customer 'Покупатель' = DATA LegalEntity (EInvoice);
nameCustomer 'Покупатель' (EInvoice i) = name(customer(i));
glnCustomer 'GLN покупателя' (EInvoice i) = GLN(customer(i));
addressCustomer 'Адрес покупателя' (EInvoice i) = address(customer(i));
unpCustomer 'УНП покупателя' (EInvoice i) = UNP(customer(i));

customerStock 'Склад покупателя' = DATA Stock (EInvoice);
glnCustomerStock 'GLN склада покупателя' (EInvoice i) = GLN(customerStock(i));
nameCustomerStock 'Склад покупателя' (EInvoice i) = name(customerStock(i));
addressCustomerStock 'Адрес склада покупателя' (EInvoice i) = address(customerStock(i));
contactCustomerStock 'ФИО и должность лица, которое отвечает за получение груза со стороны грузополучателя' = DATA STRING[150] (EInvoice);

aliasEDSServiceSupplier (EInvoice i) = OVERRIDE aliasEDSService(supplierStock(i)), aliasEDSService(supplier(i));
aliasEDSServiceCustomer (EInvoice i) = OVERRIDE aliasEDSService(customerStock(i)), aliasEDSService(customer(i));
passwordEDSServiceSupplier (EInvoice i) = OVERRIDE passwordEDSService(supplierStock(i)), passwordEDSService(supplier(i));
passwordEDSServiceCustomer (EInvoice i) = OVERRIDE passwordEDSService(customerStock(i)), passwordEDSService(customer(i));

transportContact 'ФИО водителя' = DATA STRING[150] (EInvoice);
deliveryContact 'Товар к перевозке принял (должность и ФИО)' = DATA STRING[150] (EInvoice);
proxyID 'Номер доверенности' = DATA STRING[70] (EInvoice);
proxyDate 'Дата доверенности' = DATA DATE (EInvoice);
partyIssuingProxyName 'Название организации, выдавшей доверенность' = DATA STRING[175] (EInvoice);

quantityTrip 'Количество ездок' = DATA STRING[70] (EInvoice);
transportOwnerName 'Владелец автомобиля' = DATA STRING[175] (EInvoice);
transportID 'Марка и гос. номер автомобиля' = DATA STRING[35] (EInvoice);
trailerID 'Марка и гос. номер прицепа' = DATA STRING[35] (EInvoice);
currency '3-х буквенный код валюты, в которой указаны ценовые значения' = DATA STRING[3] (EInvoice);

isCancel 'Отмена накладной' = DATA BOOLEAN (EInvoice);
isCancelNumber (EInvoice e) = IF isCancel(e) THEN 1 ELSE 0;
eInvoiceDeliveryNoteNumberIsCancel (number, isCancel) = GROUP NAGGR EInvoice e BY deliveryNoteNumber(e), isCancelNumber(e);

CLASS EInvoiceDetail 'Строка электронной накладной EDI';
TABLE eInvoiceDetail(EInvoiceDetail); 
@defineExternalizable(eInvoiceDetail, STRING[100]);

certificateEDI 'Сертификат (EDI)' = DATA STRING[100] (Computer);
certificateEDI 'Сертификат (EDI)' () = certificateEDI(currentComputer());
passwordEDI 'Пароль (EDI)' = DATA STRING[100] (Computer) ECHO;
passwordEDI 'Пароль (EDI)' () = passwordEDI(currentComputer());
signerPathEDI 'Путь EDISigner (EDI)' = DATA STRING[100] (Computer);
signerPathEDI 'Путь EDISigner (EDI)' () = signerPathEDI(currentComputer());
outputEDI 'Директория подписанных файлов (EDI)' = DATA STRING[100] (Computer);
outputEDI 'Директория подписанных файлов (EDI)' () = outputEDI(currentComputer());

EXTEND FORM computer PROPERTIES(c) certificateEDI, passwordEDI, signerPathEDI, outputEDI;
EXTEND FORM computers PROPERTIES(c) READONLY certificateEDI, passwordEDI, signerPathEDI, outputEDI;

in 'Вкл.' = DATA LOCAL BOOLEAN (EInvoice);

signAndSendSupplier 'Подписать и отправить (поставщик)'  ABSTRACT LIST ( EInvoice);
signAndSendSupplierEDI 'Подписать и отправить (поставщик)'()  { 
    FOR in(EInvoice i) DO { 
        IF EDIProvider(supplier(i)) THEN
            signAndSendSupplier(i);
        ELSE
            MESSAGE 'Не выбран EDI провайдер для накладной : ' + number(i);
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
    
}

signAndSendCustomer 'Подписать и отправить (покупатель)'  ABSTRACT LIST ( EInvoice);
signAndSendCustomerEDI 'Подписать и отправить (покупатель)'()  { 
    FOR in(EInvoice i) DO { 
        IF EDIProvider(supplier(i)) THEN
            signAndSendCustomer(i);
        ELSE
            MESSAGE 'Не выбран EDI провайдер для накладной : ' + number(i);
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

eInvoice = DATA EInvoice(EInvoiceDetail) NONULL DELETE INDEXED;

lineItemNumber(EInvoiceDetail d) = PARTITION SUM 1 ORDER d BY eInvoice(d) MATERIALIZED;

lineItemID 'GTIN товара' = DATA STRING[100] (EInvoiceDetail);
lineItemBuyerID 'Код товара в ERP системе покупателя (грузополучателя)'= DATA STRING[100] (EInvoiceDetail);
lineItemName 'Наименование товара' = DATA STRING[500] (EInvoiceDetail);
grossWeightValue 'Масса груза, тонн' = DATA NUMERIC[12,6] (EInvoiceDetail);
lineItemQuantityUOM 'Международный 3-х буквенный код единицы измерения из справочника ОКРБ 008-95 Единицы измерения и счета' = DATA STRING[3] (EInvoiceDetail);
despatchUnitQuantityDespatched 'Количество в грузовых местах' = DATA NUMERIC[12,5] (EInvoiceDetail);
additionalInformation 'Примечание, дополнительная информация о товаре' = DATA STRING[512] (EInvoiceDetail);
lineItemAmountExcise 'Сумма акциза' = DATA NUMERIC[12,5] (EInvoiceDetail);

quantityDespatched 'Кол-во отгружаемого товара' = DATA NUMERIC[16,5] (EInvoiceDetail);
valueVAT 'НДС, %' = DATA NUMERIC[16,2] (EInvoiceDetail);

lineItemPrice 'Цена за единицу товара' = DATA NUMERIC[16,4] (EInvoiceDetail);
lineItemAmountWithoutCharges 'Стоимость товарной позиции без НДС' = DATA NUMERIC[18,4] (EInvoiceDetail);
lineItemAmount 'Стоимость товарной позиции с НДС' = DATA NUMERIC[18,4] (EInvoiceDetail);
lineItemAmountCharges 'Сумма НДС' = DATA NUMERIC[18,4] (EInvoiceDetail);

totalAmountWithoutCharges 'Общая сумма без НДС' (eInvoice) = GROUP SUM lineItemAmountWithoutCharges(EInvoiceDetail d) BY eInvoice(d);
totalAmountCharges 'Общая сумма НДС' (eInvoice) = GROUP SUM lineItemAmountCharges(EInvoiceDetail d) BY eInvoice(d);
totalAmount 'Общая сумма с НДС' (eInvoice) = GROUP SUM lineItemAmount(EInvoiceDetail d) BY eInvoice(d);
totalLineItem 'Всего количество товарных позиций' (eInvoice) = GROUP SUM 1 BY eInvoice(EInvoiceDetail d);
totalLineItemQuantity 'Всего количество единиц' (eInvoice) = GROUP SUM quantityDespatched(EInvoiceDetail d) BY eInvoice(d);
totalGrossWeight 'Всего масса груза в тоннах' (eInvoice) = GROUP SUM grossWeightValue(EInvoiceDetail d) BY eInvoice(d);
totalDespatchUnitQuantity 'Всего грузовых мест' (eInvoice) = GROUP SUM despatchUnitQuantityDespatched(EInvoiceDetail d) BY eInvoice(d);
totalAmountExcise 'Всего сумма акциза' (eInvoice) = GROUP SUM lineItemAmountExcise(EInvoiceDetail d) BY eInvoice(d);

FORM dialogEInvoice 'Выбор электронной накладной'
    OBJECTS i = EInvoice
    PROPERTIES(i) READONLY dateTime, number, deliveryNoteNumber, nameSupplier, nameCustomer, nameCustomerStock
    
    LIST EInvoice OBJECT i
;

//-----------------------------------------Сообщение по накладной EDI-----------------------------------------//
CLASS EInvoiceMessage 'Сообщение по накладной EDI';
TABLE eInvoiceMessage(EInvoiceMessage);

number 'Номер' = DATA STRING[24] (EInvoiceMessage);
eInvoiceMessage (number) = GROUP AGGR EInvoiceMessage e BY number(e);
eInvoice 'Накладная' = DATA EInvoice (EInvoiceMessage) NONULL DELETE INDEXED;
numberEInvoice 'Накладная' (EInvoiceMessage m) = number(eInvoice(m));
dateTime 'Дата/время сообщения' = DATA DATETIME (EInvoiceMessage);
code 'Код сообщения' = DATA STRING[10] (EInvoiceMessage);
description 'Текст сообщения' = DATA STRING[1000] (EInvoiceMessage);
good = ABSTRACT CASE BOOLEAN (EInvoiceMessage);
priority(EInvoiceMessage m) = IF good(m) THEN 0 ELSE 1;
currentOrderMessage = GROUP LAST EInvoiceMessage m ORDER priority(m), dateTime(m), m BY eInvoice(m);
statusDescription 'Статус отправки EDI'(EInvoice o) = CONCAT ' ', code(currentOrderMessage(o)), description(currentOrderMessage(o)) CHARWIDTH 15;
backgroundStatusDescription (EInvoice o) = RGB(255,238,238) IF currentOrderMessage(o) AND NOT good(currentOrderMessage(o));

backgroundVAT 'Цвет' (EInvoiceDetail d) = IF sku(lineItemBuyerID(d)) AND NOT valueVAT(d) == valueVAT(sku(lineItemBuyerID(d)))
                                                   THEN RGB(255,0,0);
background = ABSTRACT CASE COLOR (EInvoice);

CLASS EInvoiceMessageType 'Тип сообщения по накладной EDI' {
    systemmessage_blrwbl 'SYSTEMMESSAGE-BLRWBL',
    systemmessage_blrwbr 'SYSTEMMESSAGE-BLRWBR',
    blrapn_blrapn 'BLRAPN-BLRAPN',
    blrapn_blrwbr 'BLRAPN-BLRWBR',
    blrapn_blrwbl 'BLRAPN-BLRWBL'
}

type 'Тип' = DATA EInvoiceMessageType (EInvoiceMessage);
nameType 'Тип' (EInvoiceMessage o) = staticCaption(type(o));

FORM eInvoices 'Электронные накладные EDI'
    OBJECTS e = EInvoice
    PROPERTIES(e) in
    PROPERTIES(e) READONLYIF isReadonly() exportedSupplier, importedCustomer, exportedCustomer, importedSupplier, importedSupplierCancel, isCancel
    PROPERTIES(e) READONLY dateTime BACKGROUND background(e), number BACKGROUND background(e), deliveryNoteNumber, deliveryNoteDateTime, glnSupplier, nameSupplier, addressSupplier, unpSupplier, 
                           nameCustomer, glnCustomer, addressCustomer, unpCustomer, nameCustomerStock, dateTimeCreated, contractDate, contractId
    PROPERTIES(e) contactCustomerStock, reportId, reportDate, reportName
    FILTERGROUP notExported
        FILTER 'Не экспортированы (поставщик)' NOT exportedSupplier(e) 'F8'
        FILTER 'Не импортированы (покупатель)' NOT importedCustomer(e) 'F9'
        FILTER 'Не экспортированы (покупатель)' NOT exportedCustomer(e) 'F10'
        FILTER 'Не импортированы (поставщик)' NOT importedSupplier(e) 'F11'
    
    OBJECTS d = EInvoiceDetail
    PROPERTIES(d) READONLY lineItemID, lineItemBuyerID, lineItemName, quantityDespatched, valueVAT BACKGROUND backgroundVAT(d),
     lineItemPrice, lineItemAmountWithoutCharges, lineItemAmount, lineItemAmountCharges,
     grossWeightValue, lineItemQuantityUOM, despatchUnitQuantityDespatched, additionalInformation, lineItemAmountExcise

    PROPERTIES() DRAW e TOOLBAR signAndSendSupplierEDI, signAndSendCustomerEDI

    FILTERS eInvoice(d) == e

    OBJECTS m = EInvoiceMessage
    PROPERTIES(m) READONLY numberEInvoice, dateTime, nameType, code, description
    FILTERS eInvoice(m) == e
    ORDER dateTime(m);
;
@extendFormEditable(eInvoices);

DESIGN eInvoices {
    BOX {
        MOVE BOX(e);
        NEW tab {
            fill = 1;
            type = TABBED;
            MOVE BOX(d);
            MOVE BOX(m);
        }
        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    financeNavigator {
        NEW FOLDER edi 'EDI' {
            NEW eOrders;
            NEW eOrderResponses;
            NEW eOrderDespatchAdvices;
            NEW eInvoices;
        }
    }
}

FORM eInvoice 'Электронная накладная EDI'
    OBJECTS e = EInvoice PANEL 
    PROPERTIES(e)  dateTime BACKGROUND background(e), number BACKGROUND background(e), deliveryNoteNumber, deliveryNoteDateTime, 
                nameFreightPayer, addressFreightPayer, unpFreightPayer,
                nameSupplier, addressSupplier, unpSupplier, contactSupplier, contactSupplierStock, nameCustomer, addressCustomer, unpCustomer, nameCustomerStock,
                dateTimeCreated, contractDate, contractId, sealIDReceiver, transportContact, waybillId, deliveryContact, transportID, trailerID, contactCustomerStock, currency 
    
    OBJECTS ed = EInvoiceDetail
    PROPERTIES (ed) lineItemID, lineItemBuyerID, lineItemName, quantityDespatched, valueVAT, lineItemPrice, lineItemAmountWithoutCharges, 
                    lineItemAmount, lineItemAmountCharges, grossWeightValue, lineItemQuantityUOM, despatchUnitQuantityDespatched
     FILTERS eInvoice(ed) == e
;

DESIGN eInvoice {
    GROUP (,e) {
        type = COLUMNS;
        columns = 2;
    }
    PROPERTY (contractId(e)){notNull = TRUE;}
    PROPERTY (contractDate(e)){notNull = TRUE;}
    PROPERTY (waybillId(e)){notNull = TRUE;}
    PROPERTY (contactSupplier(e)){notNull = TRUE;}
    PROPERTY (contactSupplierStock(e)){notNull = TRUE;}
    PROPERTY (transportContact(e)){notNull = TRUE;}
    PROPERTY (deliveryContact(e)){notNull = TRUE;}
    PROPERTY (transportID(e)){notNull = TRUE;}
    PROPERTY (currency(e)){notNull = TRUE;}
}

//----------------------- Переход на новый основной классификатор ---------------------------//
overReplaceToItemGroup(CustomGroup g, ItemGroup ng) + {
    userShowGTIN(ng) <- userShowGTIN(itemGroup(g));
}
editAttributesEInvoice 'Заполнить атрибуты ЭТТН' (EInvoice i)  { 
	NEWSESSION {   
	    SHOW eInvoice OBJECTS e = i DOCKED; 
	}
} TOOLBAR IMAGE 'edit.png';

EXTEND FORM eInvoices
    PROPERTIES (e) editAttributesEInvoice
;

//-------------------------- Send Request ------------------------------//
//host, port, login, password, url, xml request, preemptiveAuthentication
sendRequestEDIResponse = DATA LOCAL FILE();
sendRequestEDIStatus = DATA LOCAL INTEGER();
sendRequestEDI 'Отправить'  INTERNAL  'lsfusion.erp.region.by.integration.edi.SendRequestEDIAction' (TEXT, INTEGER, TEXT, TEXT, TEXT, XMLFILE, BOOLEAN);
sendRequestEDI 'Отправить' (TEXT host, INTEGER port, TEXT login, TEXT password, TEXT url, XMLFILE request) {
    sendRequestEDI(host, port, login, password, url, request, NULL);
}

//----------------------- importRequestResult ---------------------------//

succesful = DATA LOCAL TEXT(INTEGER);
message = DATA LOCAL TEXT(INTEGER);
errorCode = DATA LOCAL INTEGER(INTEGER);

requestError = DATA LOCAL NESTED TEXT();
// todo : нужно переделать без входа xml и status
importRequestResult(FILE xml, INTEGER status, TEXT root) {
    IF status == 200 THEN {
        IMPORT XML ROOT root FROM xml TO succesful='Succesful', message='Message', errorCode='ErrorCode';
        IF succesful(0) == 'true' THEN {
            requestError() <- NULL;
        } ELSE {
            IF errorCode(0) == 1300 THEN {
                requestError()<- 'Ошибка авторизации';
            } ELSE {
                requestError() <- CONCAT ' ', 'Неизвестная ошибка', message(0);
            }   
        }
    } ELSE {
        requestError() <- CONCAT ' ', 'Неизвестная ошибка: статус', STRING[3](status);
    }
}