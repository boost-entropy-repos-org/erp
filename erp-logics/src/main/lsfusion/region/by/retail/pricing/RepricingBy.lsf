MODULE RepricingBy;

REQUIRE Repricing, Pricing;

NAMESPACE Repricing;

lastPriceListLedger (Sku sk, Stock s, DATETIME dt) = prevPriceListLedgerB(SystemLedgerPriceListType.retailPricingPriceListType, sk, s, dt);

lastRepricingDetail (Sku sk, Stock s, DATETIME dt) = lastPriceListLedger(sk, s, dt) AS RepricingDetail;
lastPricingDetail (Sku sk, Stock s, DATETIME dt) = lastPriceListLedger(sk, s, dt) AS PricingDetail;

lastVatPriceListLedger (Sku sk, Stock s, DATETIME dt) = OVERRIDE VAT[RepricingDetail](lastRepricingDetail(sk, s, dt)), 
                                                              retailVAT[PricingDetail](lastPricingDetail(sk, s, dt));
lastValueVatPriceListLedger (Sku sk, Stock s, DATETIME dt) = OVERRIDE valueVAT[RepricingDetail](lastRepricingDetail(sk, s, dt)), 
                                                                                    valueRetailVAT[PricingDetail](lastPricingDetail(sk, s, dt));

numberLastVatPriceListLedger 'НДС номер, последний'(Sku sk, Stock s) = number(lastVatPriceListLedger (sk, s, currentDateTime()));
lastValueVatPriceListLedger 'НДС %, последний'(Sku sk, Stock s) = lastValueVatPriceListLedger (sk, s, currentDateTime());

skipChangeVAT = DATA LOCAL BOOLEAN(RepricingDetail);

WHEN LOCAL (CHANGED(sku(UserRepricingDetail detail)) OR CHANGED (departmentStore(detail)) OR CHANGED(dateTime(detail))) AND NOT skipChangeVAT(detail)
    AND Range r = lastVatPriceListLedger (sku(detail), departmentStore(detail), dateTime(detail)) DO {
        curVAT(detail) <- r;   
}

WHEN LOCAL (CHANGED(sku(UserRepricingDetail detail)) OR CHANGED (departmentStore(detail)) OR CHANGED(dateTime(detail))) AND NOT skipChangeVAT(detail)
    AND NUMERIC[10,5] r = lastValueVatPriceListLedger (sku(detail), departmentStore(detail), dateTime(detail)) DO {
        valueCurVAT(detail) <- r;   
}