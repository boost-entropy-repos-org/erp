MODULE GISMTLotInit;

REQUIRE GISMTDocument, LotInit, SkuLedgerLot;

NAMESPACE GISMT;

DESIGN lotInits {
    tabbedPane {
        NEW gismt {
            caption = 'ГИС МТ';
        }
    }
}

EXTEND CLASS LotInit : Document;

id (LotInit i) += Lot.id(i);
dateTime (LotInit i) += Lot.dateTime(i);
type (LotInit i) += Lot.type(i);
gismtType (LotInit i) += 'LP_INTRODUCE_OST' IF i IS LotInit;

legalEntity (LotInit i) += legalEntityStock(i);

isPosted(LotInit i) += Lot.isPosted(i);
canceled(LotInit i) += Lot.canceled(i);

toCreate(LotInit i) += i IS LotInit AND NOT Lot.id(i) AND NOT Lot.canceled(i);

FORM exportLotInit
    OBJECTS i = LotInit PANEL
    
    PROPERTIES trade_participant_inn = inn(legalEntityStock(i))
    
    OBJECTS products_list = (d = LotInitDetail, l = Lot)
    PROPERTIES ki = id(l)
    FILTERS lotInit(d) = i, quantity(d, l)
;

excess (Sku sk, LotInit i) = (quantityLotInitDetail(sk, i) + (OVERRIDE currentBalanceLot(sk, stock(i)), 0)) > OVERRIDE currentBalance(sk, stock(i)), 0;
export (LotInit i) + {
    IF ((GROUP SUM 1 IF excess(Sku sk, i)) > 0) AND checkCurrentBalanceLot() THEN {
        MESSAGE 'Недостаточно остатка для ввода в оборот по следующим товарам : \n' +
            GROUP CONCAT (CONCAT ' ', id(Sku sk), name(sk), idBarcode(sk)) IF excess(sk, i), '\n' ORDER sk;
        stopCreate() <- TRUE;
        RETURN;        
    } 
    EXPORT exportLotInit OBJECTS i = i JSON;
}

EXTEND FORM lotInits
    PROPERTIES(i) READONLY status, downloadDesc PANEL
    PROPERTIES(i) create SHOWIF toCreate(i)
;

DESIGN lotInits {
    gismt {
        MOVE PROPERTY(create(i));
        MOVE PROPERTY(downloadDesc(i));
    }
}