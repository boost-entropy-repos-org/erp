MODULE PriceListArticle;

REQUIRE PriceList, StockArticle;

NAMESPACE PriceList;

TABLE articleUserPriceListDataPriceListType (Article, UserPriceList, DataPriceListType);

// Подбор по артикулу
countDetail(article, priceList) = GROUP SUM 1 BY article(sku(UserPriceListDetail detail)), userPriceList(detail);

countDetailSkus(article, UserPriceList priceList) = GROUP SUM 1 IF detail(Item sku, priceList) BY article(sku); 

in 'Вкл.' (Article article, UserPriceList priceList) = TRUE IF countDetail(article, priceList);
backgroundIn 'Цвет' (Article article, UserPriceList priceList) = RGB(213, 213, 213) IF (countItem(article)!=countDetailSkus(article, priceList));

priceLis 'Цена (новая)' = DATA NUMERIC[16,4] (Article, UserPriceList, DataPriceListType);


changeIn(Article article, UserPriceList priceList) = {
    INPUT b = BOOLEAN DO
        IF NOT countDetail(article, priceList) THEN {
            IF b THEN
                FOR article == article(Item sku) NEW d = UserPriceListDetail DO {
                   userPriceList(d) <- priceList;
                   sku(d) <- sku;
                }        
        } ELSE {        
            IF NOT b THEN
                DELETE UserPriceListDetail detail WHERE article == article(sku(detail)) AND priceList == userPriceList(detail);
        }
}

changePrice(Article article, UserPriceList priceList, DataPriceListType type) = {
    INPUT n = NUMERIC[16,4] DO {
        priceLis(article, priceList, type) <- n;        
        price(UserPriceListDetail d,type) <- n WHERE userPriceList(d) == priceList AND article(sku(d))==article;               
    }
}

maxCurrentPriceData 'Макс. цена' (article, PriceList priceList, PriceListType dataPriceListType, Stock stock) = 
    GROUP MAX currentPriceUser(Item sku, priceList, dataPriceListType, stock) 
        BY article(sku);
minCurrentPriceData 'Мин. цена' (article, PriceList priceList, PriceListType dataPriceListType, Stock stock) = 
    GROUP MIN currentPriceUser(Item sku, priceList, dataPriceListType, stock) 
        BY article(sku);
headerNameMaxCurrentData (PriceListType dataPriceListType) =
    name(dataPriceListType) + ' (старая max)' CHARWIDTH 30;
headerNameMinCurrentData (PriceListType dataPriceListType) =
    name(dataPriceListType) + ' (старая min)' CHARWIDTH 30;    
    
maxCurrentPrice 'Текущая цена (max)' (article, UserPriceList userPriceList, Stock stock)= 
    GROUP MAX currentPrice (Item sku, userPriceList, stock) BY article(sku);
 
    
EXTEND FORM userPriceList
    OBJECTS ar=Article
    PROPERTIES in(ar, p) ON CHANGE changeIn(ar, p) BACKGROUND backgroundIn(ar, p)
    PROPERTIES READONLY id(ar), caption(ar), nameBrand(ar), currentBalance(ar, ts2)
                                             
    PROPERTIES(ar, p, tc) priceLis COLUMNS (tc) HEADER headerNameData(tc) BACKGROUND background(tc) ON CHANGE changePrice(ar, p, tc)
    
    PROPERTIES(ar, p, to, ts2) READONLY maxCurrentPriceData COLUMNS 'arTo' (to) HEADER headerNameMaxCurrentData(to) BACKGROUND backgroundCurrent(to)
    PROPERTIES(ar, p, to, ts2) READONLY minCurrentPriceData COLUMNS 'arTo' (to) HEADER headerNameMinCurrentData(to) BACKGROUND backgroundCurrent(to)
    
    
    FILTERS isParent(sk2, ar)
    FILTERS maxCurrentPrice (ar, p, ts2) OR
            NOT filterPriceListType(p)
            
    FILTERGROUP filters5
        FILTER 'С остатком' currentBalance(ar, ts2) 'F10' DEFAULT
    FILTERGROUP filters6
        FILTER 'Отмеченные' in(ar, p) 'ctrl F10'       
    ORDER id(ar)
;

DESIGN userPriceList {
    tabContainer {
        MOVE BOX(ar) BEFORE BOX(s2) {caption = 'Артикулы';}
    }
}