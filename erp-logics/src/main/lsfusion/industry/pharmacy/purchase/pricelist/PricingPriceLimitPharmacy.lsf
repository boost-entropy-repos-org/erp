MODULE PricingPriceLimitPharmacy;

REQUIRE PricingPharmacy, PricingOperation, PricingManufacturingPrice, PurchasePriceLimitFixedPharmacy;

NAMESPACE Pricing;

@defineDocumentInterfaceProperty (pricing, showLimitPharmacyPrice, 'Предельная надбавка');

@defineDocumentInterfaceDetailMarkupPrefix (pricing, limitPharmacy, ' предельная');

limitPharmacyMarkup(UserPricingDetail detail) <- retailMarkupPharmacy(sku(detail), NUMERIC[16,4](manufacturingPrice(detail)), date(detail)) WHEN
     CHANGED (manufacturingPrice(detail)) OR CHANGED (date(detail)) OR CHANGED (sku(detail));
     
//----------------------------------------------- Операции -----------------------------------------------------//

// Вид цены для расценки для операции
@defineDocumentHeaderProperty (operation, showLimitPharmacyPrice, 'Предельная надбавка (фармация)');

EXTEND FORM Pricing.operation
    PROPERTIES(o) showLimitPharmacyPrice
;

DESIGN Pricing.operation {
    paramsContainer {
        MOVE PROPERTY(showLimitPharmacyPrice(o));
    }
}

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции
showLimitPharmacyPrice (UserPricing pricing) <- showLimitPharmacyPrice(operation(pricing))
    WHEN CHANGED(operation(pricing));

EXTEND FORM userPricing
    PROPERTIES(p) showLimitPharmacyPrice
    PROPERTIES(d) SHOWIF showLimitPharmacyPrice(p) BEFORE retailMarkup(d) limitPharmacyMarkup
;
DESIGN userPricing{
    GROUP(documentPrm,p){
        MOVE PROPERTY (showLimitPharmacyPrice(p));
    }
}

EXTEND FORM pricings
    PROPERTIES(d) READONLY SHOWIF showLimitPharmacyPrice(p) BEFORE retailMarkup(d) limitPharmacyMarkup READONLY BACKGROUND backgroundRetail(p)
;

//расчет предельной цены
maxLimitPrice 'Максимальная цена' (UserPricingDetail d) = prevPriceA(maxLimitPriceListType(), sku(d), stock(d), dateTime(d));
limitPharmacyPrice (UserPricingDetail detail) =
                                       round(
                                           [ (A + B*C/100.0)*(100.0 + D)/100.0](
                                                    price(detail),
                                                    manufacturingPrice(detail),
                                                    limitPharmacyMarkup(detail),
                                                    valueRetailVAT(detail)), limitRetailMarkupPharmacyCondition());
                                                    
WHEN LOCAL FORMS userPricing GOAFTER retailPrice[UserPricingDetail] 
            (SETCHANGED(retailPrice(UserPricingDetail d)) OR CHANGED(manufacturingPrice(d)) OR CHANGED(sku(d)) OR CHANGED(price(d))) AND //  вообще в событии должно быть это условие, но тогда не всегда срабатывает (см. skype с Vitalur за 10.07) 
             showLimitPharmacyPrice(d) NOINLINE DO {
    IF limitPharmacyPrice(d) < retailPrice(d) THEN {
        retailPrice(d) <- OVERRIDE min(limitPharmacyPrice(d), maxLimitPrice(d)), limitPharmacyPrice(d);
        retailMarkup(d) <- calcRetailMarkup(d);
    }
}

     

