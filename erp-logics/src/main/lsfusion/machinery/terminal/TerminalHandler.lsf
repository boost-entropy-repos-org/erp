MODULE TerminalHandler; //для работы терминалов нужна зависимость equ-srv в pom.xml, создать lsfusion-bootstrap.xml 

REQUIRE Terminal, MachineryPriceTransaction, Item, Warehouse;

process 'Обработка документа ТСД' (terminalDocument)  ABSTRACT LIST ( TerminalDocument);
process (TerminalDocument document) + { 
    sku(TerminalDocumentDetail d) <- OVERRIDE skuBarcode(barcode(d)), sku(barcode(d)) WHERE terminalDocument(d) == document;
}; 

priceBefore 'Старая цена' = ABSTRACT NUMERIC[16,4](Sku, Stock);
priceBeforeIdBarcodeId(STRING[15] sku, STRING[100] stock) = priceBefore(skuBarcode(sku), stock(stock));

checkIdTerminal 'Ограничение доступа по коду терминала' = DATA BOOLEAN ();

@defineExternalizable(terminal, STRING[100]);
blocked 'Заблокирован' = DATA BOOLEAN (Terminal);
lastConnectionTime 'Последнее подключение' = DATA DATETIME (Terminal);
lastUser 'Пользователь' = DATA CustomUser (Terminal);
shortNameLastUser 'Пользователь' (Terminal terminal) = shortName(lastUser(terminal));
nameStockLastUser 'Склад пользователя' (Terminal terminal) = nameStock(lastUser(terminal));

maxNpp () = GROUP MAX npp(Terminal t) IF t IS Terminal;
defaultGroupTerminal() = GROUP MIN GroupTerminal gt IF gt IS GroupTerminal AND NOT stock(gt);

manufacturer = ABSTRACT LegalEntity (Item);
nameManufacturer (Barcode barcode) = name(manufacturer(skuBarcode(id(barcode))));

color 'Цвет' = ABSTRACT COLOR (Sku, Stock);

EXTEND FORM groupTerminal PROPERTIES(t) AFTER npp(t) id, blocked, lastConnectionTime, shortNameLastUser, nameStockLastUser;
EXTEND FORM groupsTerminal
    PROPERTIES () checkIdTerminal
    PROPERTIES(t) AFTER npp(t) READONLY id, blocked, lastConnectionTime, shortNameLastUser, nameStockLastUser;


hostTerminalServer 'Хост' = DATA STRING[30] ();
portTerminalServer 'Порт' = DATA INTEGER ();    

useCurrentPriceInTerminal 'Загружать в терминал текущие цены' = DATA BOOLEAN ();
sendAllItems 'Загружать в терминал все товары без цен' = DATA BOOLEAN ();

currentPriceInTerminal 'Розничная цена' (Barcode barcode, Stock stock) = IF stock IS Warehouse
    THEN currentAccountPriceA(sku(barcode), stock) 
    ELSE currentRetailPricingPrice(sku(barcode), stock);     

useCurrentQuantityInTerminal 'Загружать в терминал текущие остатки' = DATA BOOLEAN ();
filterCurrentQuantityInTerminal 'Фильтровать по текущим остаткам' = DATA BOOLEAN ();
currentBalance (Barcode barcode, Stock stock) = currentBalance(sku(barcode), stock);

skipGoodsInReadBase 'Не выгружать товары при выгрузке базы целиком' = DATA BOOLEAN ();
    
dataPriceListTypeTerminal = DATA LedgerPriceListType();
defaultPriceListTypeTerminal = ABSTRACT LedgerPriceListType();
priceListTypeTerminal = OVERRIDE dataPriceListTypeTerminal(), defaultPriceListTypeTerminal();
namePriceListTypeTerminal 'Вид цен (фильтр ассортимента поставщика)' = name(priceListTypeTerminal());

extInfo 'Дополнительная информация' = ABSTRACT TEXT (Barcode, Stock);

EXTEND FORM options
    PROPERTIES() hostTerminalServer, portTerminalServer, useCurrentPriceInTerminal, sendAllItems, useCurrentQuantityInTerminal, filterCurrentQuantityInTerminal, 
    namePriceListTypeTerminal, skipGoodsInReadBase
;
DESIGN options {
    machinery {
        NEW terminalServer {
            caption = 'Настройки ТСД';
            MOVE PROPERTY(hostTerminalServer());
            MOVE PROPERTY(portTerminalServer());
            NEW terminalServerPrices {
                caption = 'Цены';
                MOVE PROPERTY(useCurrentPriceInTerminal());
                MOVE PROPERTY(sendAllItems());
            }
            MOVE PROPERTY(useCurrentQuantityInTerminal());
            MOVE PROPERTY(filterCurrentQuantityInTerminal());
            MOVE PROPERTY(namePriceListTypeTerminal());
            MOVE PROPERTY(skipGoodsInReadBase());
        }
    }
}    

CLASS TerminaFlags {
    FLG_VOP_GROUP 'Включает накопление товаров в документе при вводе',//    0  // 1
    FLG_VOP_NPP 'Включает ввод порядкового номера в документе при вводе',//    1  // 2
    FLG_VOP_ZAYAVKA 'Определяет, что при создании документа будет доступен выбор заявок',//   2  // 4
    FLG_VOP_IN_ZAYAVKA 'Включает контроль наличия товара в документе (работает в паре с флагом 4)',//  3  // 8
    FLG_VOP_IN_ASSORT 'Включает контроль наличия товара в ассортименте поставщика',//  4  // 16
    FLG_VOP_ZEROQUANT_DEFAULT 'При вводе документа нулевое количество по умолчанию',// 5  // 32
    FLG_VOP_NEWGOODS 'Разрешить ввод нового товара',//   6  // 64
    FLG_VOP_NPPDEFAULT 'Фокус по умолчанию на ввод порядкового номера.',//   7  // 128
    FLG_VOP_ONLINE 'ON-LINE запрос товара',//    8  // 256
    FLG_VOP_OL_INTERNAL_GOODS 'FLG_VOP_OL_INTERNAL_GOODS',// 9  // 512
    FLG_VOP_QUANT_CONTROL 'Контроль количества при вводе',//   10  // 1024
    FLG_VOP_INPPRICE 'Запрос цены',//   11  // 2048
    FLG_VOP_DATE1 'Запрос ввода даты 1',//    12  // 4096
    FLG_VOP_DATE2 'Запрос ввода даты 2',//    13  // 8192
    FLG_VOP_ZEROQUANT 'Разрешить нулевое значение в поле "количество"', //  14  // 16384 
    FLG_VOP_FIELD1 'Ввод дополнительного поля 1', //  15  // 32768 
    FLG_VOP_FIELD2 'Ввод дополнительного поля 2', //   16  // 65536 
    FLG_VOP_FIELD3 'Ввод дополнительного поля 3', //   17  // 131072 
    FLG_VOP_NOQUANT 'Скрыть поле "количество"'  //  18  // 262144 
}
TABLE terminaFlags (TerminaFlags);

order(TerminaFlags f) = CASE 
    WHEN f = TerminaFlags.FLG_VOP_GROUP THEN 0 // 1
    WHEN f = TerminaFlags.FLG_VOP_NPP THEN 1  // 2
    WHEN f = TerminaFlags.FLG_VOP_ZAYAVKA THEN 2  // 4
    WHEN f = TerminaFlags.FLG_VOP_IN_ZAYAVKA THEN 3  // 8
    WHEN f = TerminaFlags.FLG_VOP_IN_ASSORT THEN 4  // 16
    WHEN f = TerminaFlags.FLG_VOP_ZEROQUANT_DEFAULT THEN 5  // 32
    WHEN f = TerminaFlags.FLG_VOP_NEWGOODS THEN 6  // 64
    WHEN f = TerminaFlags.FLG_VOP_NPPDEFAULT THEN 7  // 128
    WHEN f = TerminaFlags.FLG_VOP_ONLINE THEN 8  // 256
    WHEN f = TerminaFlags.FLG_VOP_OL_INTERNAL_GOODS THEN 9  // 512
    WHEN f = TerminaFlags.FLG_VOP_QUANT_CONTROL THEN 10  // 1024
    WHEN f = TerminaFlags.FLG_VOP_INPPRICE THEN 11  // 2048
    WHEN f = TerminaFlags.FLG_VOP_DATE1 THEN 12  // 4096
    WHEN f = TerminaFlags.FLG_VOP_DATE2 THEN 13  // 8192
    WHEN f = TerminaFlags.FLG_VOP_ZEROQUANT THEN 14  // 16384
    WHEN f = TerminaFlags.FLG_VOP_FIELD1 THEN 15  // 32768
    WHEN f = TerminaFlags.FLG_VOP_FIELD2 THEN 16  // 65536
    WHEN f = TerminaFlags.FLG_VOP_FIELD3 THEN 17  // 131072
    WHEN f = TerminaFlags.FLG_VOP_NOQUANT THEN 18;  // 262144
    
flag 'Число'(TerminaFlags f) = INTEGER(power(2, order(f))) MATERIALIZED;

in 'Вкл.'  = DATA LOCAL NESTED BOOLEAN (TerminalDocumentType, TerminaFlags);

FORM showFlags 'Флаги'
    OBJECTS t = TerminalDocumentType
    
    OBJECTS f = TerminaFlags
    PROPERTIES in(t, f), flag(f) READONLY, staticCaption(f) READONLY
    ORDER flag(f)
;

showFlags 'Показать расшифровку' (TerminalDocumentType t)  { 
    in(t, TerminaFlags f) <- bitwiseAnd(flag(t), flag(f)) == flag(f);
    NEWSESSION { 
        SHOW showFlags OBJECTS t = t;
        flag(t) <- (GROUP SUM flag(TerminaFlags f) IF in(t, f));
        APPLY;
    }
} ASON CONTEXTMENU flag[TerminalDocumentType];
