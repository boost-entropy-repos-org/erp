MODULE CashRegister;

REQUIRE System, Machinery, Store, LegalEntity, StockDocument;

// Группы
CLASS GroupCashRegister 'Группы касс' : GroupMachinery;

departmentStore = DATA DepartmentStore (GroupCashRegister);
stock (GroupCashRegister groupMachinery) += departmentStore(groupMachinery);
idDepartmentStore(GroupCashRegister groupCashRegister) = id(departmentStore(groupCashRegister));

groupCashRegister (departmentStore) = GROUP MAX GroupCashRegister groupCashRegister BY departmentStore(groupCashRegister); 

TABLE groupCashRegisterCustomUser(GroupCashRegister, CustomUser);
operatorNumber 'Номер в группе касс' = DATA INTEGER (GroupCashRegister, CustomUser);

inactive 'Неактивный' = DATA BOOLEAN (GroupCashRegister);
active 'Активный' (GroupCashRegister group) = group IS GroupCashRegister AND NOT inactive(group);
inactive(GroupCashRegister g) += inactive(g);

pieceCode 'Код для штучных товаров' = DATA STRING[2] (GroupCashRegister) IN base;
weightCode 'Код для весовых товаров' = DATA STRING[2] (GroupCashRegister) IN base;
allowReceiptsAfterDocumentsClosedDate 'Разрешить приём реализации по закрытым документам' = DATA BOOLEAN (GroupCashRegister);

// Модели
CLASS CashRegisterModel 'Модель касс' : Model;

name 'Наименование' = DATA VARISTRING[110](CashRegisterModel);

name(CashRegisterModel model) += name(model) IF model IS CashRegisterModel;

dateTo 'Дата, до которой модель внесена в реестр' = DATA DATE (CashRegisterModel) IN base;

maxSum 'Максимальная сумма чека' = DATA NUMERIC[18,4] (CashRegisterModel) IN base;

ignoreCashRegisterServer 'Не работать с кассовым сервером' = DATA BOOLEAN (CashRegisterModel) IN base;

allUserSnapshot 'Разрешить загрузку целиком всем пользователям' = DATA BOOLEAN(CashRegisterModel);

showSection 'Показывать секции' = DATA BOOLEAN (CashRegisterModel);

useValueIdUOM 'Использовать внутренний id для единиц измерений' = DATA BOOLEAN (CashRegisterModel);

FORM cashRegisterModel 'Модель касс'
    OBJECTS c=CashRegisterModel PANEL
    PROPERTIES(c) name, sid, note, handler, dateTo, maxSum, ignoreCashRegisterServer, allUserSnapshot, showSection, useValueIdUOM
    EDIT CashRegisterModel OBJECT c
;

FORM cashRegistersModels 'Модели касс'
    OBJECTS c=CashRegisterModel
    PROPERTIES(c) READONLY name, sid, handler, note, maxSum, ignoreCashRegisterServer, allUserSnapshot, showSection, useValueIdUOM
    PROPERTIES(c) NEWSESSION NEW, EDIT, DELETE 
    LIST CashRegisterModel OBJECT c
;

NAVIGATOR {
    machineryNavigator {
        NEW FOLDER cashRegisterNavigator 'Кассы'{
            NEW cashRegistersModels;
        }
    }
}

// Кассы
CLASS CashRegister 'Касса' : Machinery;
TABLE cashRegister (CashRegister);
is (GroupCashRegister machinery) = machinery IS GroupCashRegister;

groupCashRegister = DATA GroupCashRegister (CashRegister) NONULL DELETE;
groupMachinery(CashRegister machinery) += groupCashRegister(machinery);

directory 'Директория обмена с кассами' = DATA VARSTRING[200] (GroupCashRegister) IN base;
directory (GroupCashRegister groupMachinery) += directory(groupMachinery);
dataDirectory 'Директория обмена с кассой' = DATA VARSTRING[200] (CashRegister);
dataDirectory (CashRegister machinery) += dataDirectory(machinery);

startDate 'Дата начала продаж' = DATA DATE (GroupCashRegister) IN base;
startDate 'Дата начала продаж' = startDate(groupCashRegister(CashRegister cashRegister));
startDateGroupCashRegister 'Дата начала продаж' = GROUP MIN startDate(GroupCashRegister c) BY departmentStore(c) MATERIALIZED; 

notDetailed 'Не детализировать по чекам' = DATA BOOLEAN (GroupCashRegister) IN base; 
active 'Активный' (CashRegister cashRegister) = active(groupCashRegister(cashRegister));

departmentNumber 'Номер группы касс' = DATA INTEGER (GroupCashRegister) IN recognize;
overDepartmentNumberCashRegister 'Номер группы касс' (GroupMachinery gcr) = OVERRIDE departmentNumber(gcr), npp(gcr);
overDepartmentNumber 'Номер группы касс' (Machinery cr) = overDepartmentNumberCashRegister(groupMachinery(cr));
groupCashRegister (npp) = GROUP AGGR GroupCashRegister groupCashRegister WHERE groupCashRegister IS GroupCashRegister BY npp(groupCashRegister);  
cashRegisterNppGroupCashRegister (g, npp) = GROUP AGGR CashRegister cashRegister BY npp(groupCashRegister(cashRegister)), npp(cashRegister);  
documentsClosedDate(GroupCashRegister gcr) = OVERRIDE documentsClosedDate(stock(gcr)), documentsClosedDate();

cashRegisterModel = DATA CashRegisterModel (GroupCashRegister);
model(GroupCashRegister groupMachinery) += cashRegisterModel(groupMachinery);

departmentStore (CashRegister cashRegister) = departmentStore(groupCashRegister(cashRegister));
nameDepartmentStore 'Склад' (CashRegister cashRegister) = name(departmentStore(cashRegister));

countCashRegister 'Кол-во касс' (departmentStore) = GROUP SUM 1 IF NOT inactive(CashRegister cashRegister) BY departmentStore(cashRegister);
    
countCashRegister 'Кол-во касс' (store) = GROUP SUM countCashRegister(DepartmentStore d) BY store(d);   
countDataCashRegister 'Кол-во магазинов' = DATA INTEGER (Store);
countChainStoresOver 'Кол-во касс' (Store store) = OVERRIDE countDataCashRegister(store), countCashRegister(store); 

registrationNumber 'Регистрационный номер кассы' = DATA VARSTRING[100] (CashRegister) IN base;

date 'Дата фискализации кассового аппарата' = DATA DATE (CashRegister) IN base;

logPath 'Путь логов кассы' = DATA VARSTRING[255] (CashRegister) IN base;
ip 'IP кассы' = DATA VARSTRING[100] (CashRegister) IN base;
comPort 'Порт кассы' = DATA INTEGER (CashRegister) IN base;
baudRate 'Скорость кассы' = DATA INTEGER (CashRegister) IN base;
overBaudRate 'Скорость кассы' (CashRegister c) = OVERRIDE baudRate(c), 9600 IF sidModel(groupCashRegister(c)) == 'VMK';

disableSales 'Без реализации' = DATA BOOLEAN (CashRegister) IN base;
countSalesCashRegister 'Кол-во касс (с реализацией)' = GROUP SUM 1 IF NOT disableSales(CashRegister cashRegister) AND NOT inactive(cashRegister) BY departmentStore(cashRegister);

country 'Страна кассы' (CashRegister cashRegister) = country(stock(groupCashRegister(cashRegister)));

userLegalEntity (cashRegister) = DATA LegalEntity (CashRegister);
legalEntity (CashRegister cashRegister) =
    OVERRIDE userLegalEntity(cashRegister), legalEntity(departmentStore(cashRegister));

nameLegalEntity 'Владелец кассы' (CashRegister cashRegister) = name(legalEntity(cashRegister));

computer = DATA Computer (CashRegister);
hostnameComputer 'Компьютер' (CashRegister cashRegister) = hostname(computer(cashRegister)) IN base;

cashRegister (computer) = GROUP AGGR CashRegister cashRegister WHERE cashRegister IS CashRegister BY computer(cashRegister) MATERIALIZED;

currentCashRegister 'Текущая касса' = cashRegister(currentComputer());

departmentStoreCurrentCashRegister 'Подразделение' = departmentStore(currentCashRegister());
numberCurrentCashRegister 'Номер кассы' = npp(currentCashRegister());
sidModelCurrentCashRegister 'Код модели' = sidModel(groupMachinery(currentCashRegister()));
logPathCurrentCashRegister 'Путь логов' = logPath(currentCashRegister());
ipCurrentCashRegister 'IP кассы' = ip(currentCashRegister());
comPortCurrentCashRegister 'Порт кассы' = comPort(currentCashRegister());
baudRateCurrentCashRegister 'Скорость кассы' = overBaudRate(currentCashRegister());
nppMachineryCurrentCashRegister 'Номер кассового места' = npp(currentCashRegister());
operatorNumberCurrentCashRegister (CustomUser user) = operatorNumber(groupCashRegister(currentCashRegister()), user);
operatorNumberCurrentCashRegisterCurrentUser () = operatorNumberCurrentCashRegister (currentUser());
countryCurrentCashRegister 'Страна кассы' = country(currentCashRegister());
maxSumCurrentCashRegister 'Максимальная сумма чека' = maxSum(cashRegisterModel(groupCashRegister(currentCashRegister())));

ignoreDisplayText = ABSTRACT BOOLEAN (CashRegister);
ignoreDisplayTextCurrentCashRegister 'Страна кассы' = ignoreDisplayText(currentCashRegister());

ignoreCashRegisterServerCashRegisterModel(GroupCashRegister gcr) = ignoreCashRegisterServer(cashRegisterModel(gcr));
notIgnoreCashRegisterServerCashRegisterModel(GroupCashRegister gcr) = gcr IS GroupCashRegister AND NOT ignoreCashRegisterServerCashRegisterModel(gcr);
showSection(GroupCashRegister gcr) = showSection(model(gcr));

overChangeDirectory = ABSTRACT LIST (GroupCashRegister);
changeDirectory(GroupCashRegister group) = {     
    INPUT s = VARSTRING[200] DO {
        directory(group) <- s;
        overChangeDirectory(group);
    }
}

FORM cashRegister 'Касса'
    OBJECTS c=CashRegister PANEL
    PROPERTIES(c) nameGroupMachinery, npp, shortDescription, description, port, 
                  logPath, ip, comPort, overBaudRate, disableSales, dataDirectory, 
                  date, hostnameComputer
    EDIT CashRegister OBJECT c
;

FORM groupCashRegister 'Группа касс'
    OBJECTS grc=GroupCashRegister PANEL
    PROPERTIES(grc) npp, departmentNumber, nameStock, name,
                    pieceCode, weightCode, allowReceiptsAfterDocumentsClosedDate,
                    filterSku, showFilterSku SHOWIF filterSku(grc),
                    namePriceListType, nameModel, 
                    directory SHOWIF notIgnoreCashRegisterServerCashRegisterModel(grc) ON CHANGE changeDirectory(grc),
                    startDate, notDetailed, inactive, section SHOWIF showSection(grc)

    OBJECTS c=CashRegister
    PROPERTIES(c)   nameGroupMachinery, npp, shortDescription, description, port SHOWIF ignoreCashRegisterServerCashRegisterModel(grc),
                    logPath, ip, comPort SHOWIF ignoreCashRegisterServerCashRegisterModel(grc), 
                    overBaudRate SHOWIF ignoreCashRegisterServerCashRegisterModel(grc),
                    disableSales,
                    dataDirectory SHOWIF ignoreCashRegisterServerCashRegisterModel(grc),
                    date, hostnameComputer, nameLegalEntity, NEW, DELETE GRID

    OBJECTS cu=CustomUser
    PROPERTIES(cu) login, firstName, lastName, sidMainRole
    PROPERTIES(grc, cu) operatorNumber

    FILTERGROUP filters2
        FILTER 'Показывать только для данной группы' groupCashRegister(c) == grc 'F10' DEFAULT

    EDIT GroupCashRegister OBJECT grc
;

DESIGN groupCashRegister{
    NEW topContainer{
        type = COLUMNS;
        columns = 3;
            MOVE PROPERTY(npp(grc));
            MOVE PROPERTY(departmentNumber(grc));
            MOVE PROPERTY(nameStock(grc));
            MOVE PROPERTY(name(grc));
            MOVE PROPERTY(pieceCode(grc));
            MOVE PROPERTY(weightCode(grc));
            MOVE PROPERTY(allowReceiptsAfterDocumentsClosedDate(grc));
            MOVE PROPERTY(filterSku(grc));
            MOVE PROPERTY(showFilterSku(grc));
            MOVE PROPERTY(namePriceListType(grc));
            MOVE PROPERTY(nameModel(grc));
            MOVE PROPERTY(directory(grc));
            MOVE PROPERTY(startDate(grc));
            MOVE PROPERTY(notDetailed(grc));
            MOVE PROPERTY(inactive(grc));
            MOVE PROPERTY(section(grc));
    }
    NEW tabContainer {
        type = TABBED;
        fill = 1;
        MOVE BOX(c);
    }    
    MOVE BOX(cu); 
    MOVE TOOLBARBOX; 
}

FORM dialogCashRegister 'Выбор кассы'
    OBJECTS c = CashRegister
    PROPERTIES(c) READONLY npp, shortDescription, description, nameDepartmentStore, nameGroupMachinery, nppGroupMachinery 
    
    LIST CashRegister OBJECT c
;

overCopy = ABSTRACT LIST (GroupCashRegister, GroupCashRegister);
copy 'Копировать'(GroupCashRegister old) = {
	NEWSESSION {
	    NEW new = GroupCashRegister {
	        npp(new) <- npp(old);
	        departmentNumber(new) <- departmentNumber(old);
	        stock(new) <- stock(old);
	        name(new) <- name(old);
	        pieceCode(new) <- pieceCode(old);
	        weightCode(new) <- weightCode(old);
	        allowReceiptsAfterDocumentsClosedDate(new) <- allowReceiptsAfterDocumentsClosedDate(old);
	        filterSku(new) <- filterSku(old);
	        in(new, SkuGroup s) <- in(old, s);
	        priceListType(new) <- priceListType(old);
	        cashRegisterModel(new) <- cashRegisterModel(old);
	        directory(new) <- directory(old);
	        startDate(new) <- startDate(old);
	        notDetailed(new) <- notDetailed(old);
	        inactive(new) <- inactive(old);
	        section(new) <- section(old);
	        
	        overCopy(old, new);
	        
	        ASK 'Копировать кассы?' DO {
	            FOR old == groupCashRegister(CashRegister oldCash) NEW newCash = CashRegister DO {
	                groupCashRegister(newCash) <- new;
	                npp(newCash) <- npp(oldCash);
	                shortDescription(newCash) <- shortDescription(oldCash);
	                description(newCash) <- description(oldCash);
	                port(newCash) <- port(oldCash);
	                logPath(newCash) <- logPath(oldCash);
	                ip(newCash) <- ip(oldCash);
	                comPort(newCash) <- comPort(oldCash);
	                baudRate(newCash) <- baudRate(oldCash);
	                disableSales(newCash) <- disableSales(oldCash);
	                dataDirectory(newCash) <- dataDirectory(oldCash);
	                date(newCash) <- date(oldCash);
	                computer(newCash) <- computer(oldCash);
	            }
	        }
	        
	        SHOW groupCashRegister OBJECTS grc = new DOCKED NOCANCEL;
	    }
	}
} TOOLBAR;

FORM groupsCashRegister 'Группы касс'
    OBJECTS grc=GroupCashRegister, c=CashRegister
    PROPERTIES(grc)  READONLY active, npp, departmentNumber, nameStock, name,
                     filterSku, nameModel, directory,
                     startDate, notDetailed,  pieceCode, weightCode, allowReceiptsAfterDocumentsClosedDate, section
    PROPERTIES(grc)  NEWSESSION NEW, EDIT, DELETE , copy

    PROPERTIES(c) READONLY npp, shortDescription, description, port, logPath, ip, comPort, overBaudRate,
                           disableSales, dataDirectory, date, nameLegalEntity
    FILTERS groupCashRegister(c) == grc
    
    FILTERGROUP active1
        FILTER 'Активные' active(grc) 'F5' DEFAULT
;
@extendFormFilterAccessStock(GroupMachinery, grc, groupsCashRegister, stock, company);


DESIGN groupsCashRegister {
    NEW pane {
        fill = 1;
        type = SPLITV;

        MOVE BOX(grc);
        MOVE BOX(c);
    }
    MOVE TOOLBARBOX;
}

NAVIGATOR {
    cashRegisterNavigator {
        NEW groupsCashRegister;
    }
}

EXTEND FORM departmentStore
    PROPERTIES(d) READONLY countCashRegister
;

DESIGN departmentStore{
    headerExtraParams{
        MOVE PROPERTY(countCashRegister(d));
    }
}
    
EXTEND FORM store
    PROPERTIES(s) countChainStoresOver
    PROPERTIES(d) READONLY countCashRegister BEFORE deleteD
;
    
DESIGN store{
    headerExtraParams{
        MOVE PROPERTY(countChainStoresOver(s));
    }    
}  

EXTEND FORM stores
    PROPERTIES(s) READONLY countChainStoresOver
;

// ------------------------------------------------ Стандартные значения ------------------------------------ //
cashRegisterSID (model) = GROUP MAX CashRegisterModel cmodel BY sid (cmodel) IF cmodel IS CashRegisterModel;

loadDefaultCashRegisterModel 'Добавить модель касс'(VARISTRING[110] iname, VARSTRING[20] isid, VARSTRING[200] ihandler, BOOLEAN iShowSection, BOOLEAN iIgnoreCashRegisterServer, BOOLEAN useValueIdUOM) = {
    IF NOT cashRegisterSID(isid) THEN {
        NEW crm = CashRegisterModel {
             name(crm) <- iname;
             sid(crm) <- isid;
             handler(crm) <- ihandler;
             showSection(crm) <- iShowSection;
             ignoreCashRegisterServer(crm) <- iIgnoreCashRegisterServer;
             useValueIdUOM(crm) <- useValueIdUOM;
        }
    }
}

loadDefaultCashRegisterModels 'Загрузить стандартные модели касс'() = ABSTRACT LIST () IN loadDefault;
@implementLoadDefaultData(loadDefaultCashRegisterModels);

// --------------------------------------- Генерация групп касс -------------------------------- //
loadDefaultGroup 'Сгенерировать группу касс'(PriceListType priceListType, Stock stock, CashRegisterModel model, INTEGER num) = {
    NEW g = GroupCashRegister {
        npp(g) <- (GROUP MAX npp(GroupMachinery gg)) (+) 1;
        departmentStore(g) <- stock;
        priceListType(g) <- priceListType;
        name(g) <- 'Группа касс по умолчанию';

        LOCAL numCashRegister = INTEGER();
        numCashRegister() <- 0;
        WHILE numCashRegister() < num DO {
            NEW c = CashRegister {
                groupCashRegister(c) <- g;
                numCashRegister() <- numCashRegister() + 1;
                npp(c) <- numCashRegister();
                cashRegisterModel(g) <- model;
                description(c) <- CONCAT ' ', 'Касса', VARSTRING[255](numCashRegister()), '(', name(stock), ')';
            }
        }
    }
}

EXTEND FORM defaultData
    OBJECTS         crm=CashRegisterModel PANEL
    PROPERTIES(crm) SELECTOR name

    OBJECTS         cCashReg=INTEGER PANEL
    PROPERTIES(cCashReg)   intValueCashRegister = VALUE
    PROPERTIES (pt, s, crm, cCashReg) loadDefaultGroup
;

DESIGN defaultData {
    PROPERTY(name(crm)) {
        caption = 'Модель касс';
    }
    PROPERTY(intValueCashRegister) {
        caption = 'Количество касс';
    }
    machinery {
        NEW cashRegister {
            caption = 'Кассы';
            MOVE PROPERTY(name(crm));
            MOVE PROPERTY(intValueCashRegister);
            MOVE PROPERTY(loadDefaultGroup(pt,s,crm,cCashReg));
        }
    }
}