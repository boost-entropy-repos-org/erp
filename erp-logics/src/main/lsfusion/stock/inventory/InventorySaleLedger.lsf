MODULE InventorySaleLedger;

REQUIRE Inventory, SaleLedger;

soldSum 'Объем продаж (сумма)' = DATA NUMERIC[18,4] (CollationSheet, Sku);
soldQuantity 'Объем продаж (к-во)' = DATA NUMERIC[14,3] (CollationSheet, Sku);

soldSum 'Объем продаж (сумма)' = DATA NUMERIC[18,4] (CollationSheet, Batch);
soldQuantity 'Объем продаж (к-во)' = DATA NUMERIC[14,3] (CollationSheet, Batch);

fillSoldSum 'Заполнить объем продаж'(CollationSheet cs)   { 
    IF prevDate(cs) THEN {
        soldSum(cs, Sku i) <- NULL;
        soldSum(cs, Sku i) <- sumSold(i, stock(cs),prevDate(cs), date(cs))
                WHERE sumSold(i, stock(cs),prevDate(cs), date(cs)) AND (include(cs, i) OR cs IS RemainsCollationSheet) ;      
        soldQuantity(cs, Sku i) <- NULL;
        soldQuantity(cs, Sku i) <- quantitySold(i, stock(cs),prevDate(cs), date(cs))
                WHERE quantitySold(i, stock(cs),prevDate(cs), date(cs)) AND (include(cs, i) OR cs IS RemainsCollationSheet);           
        IF isBatch(cs) THEN {
            soldSum(cs, Batch i) <- NULL;
            soldSum(cs, Batch bt) <- sumSold(bt, stock(cs),prevDate(cs), date(cs))
                    WHERE sumSold(bt, stock(cs),prevDate(cs), date(cs)) AND (include(cs, bt) OR cs IS RemainsCollationSheet);      
            soldQuantity(cs, Batch bt) <- NULL;
            soldQuantity(cs, Batch bt) <- quantitySold(bt, stock(cs),prevDate(cs), date(cs))
                    WHERE quantitySold(bt, stock(cs),prevDate(cs), date(cs)) AND (include(cs, bt) OR cs IS RemainsCollationSheet);          
        }                    
    } ELSE {
        MESSAGE 'Не задана дата предыдущей инвентаризации.';
    }
} CONFIRM IN inventoryAction;

fillSoldSum 'Заполнить объем продаж'(Inventory in)   { 
    FOR inventory(CollationSheet cs) == in DO {
        fillSoldSum(cs);
    }
} CONFIRM IN inventoryAction;

EXTEND FORM inventory
    PROPERTIES (cs) fillSoldSum GRID
    PROPERTIES (in) fillSoldSum
    
    PROPERTIES soldSum(cs,i), soldQuantity(cs,i)
    PROPERTIES SHOWIF isBatch(in) soldSum(cs,b), soldQuantity(cs,b) 
;