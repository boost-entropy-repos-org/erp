MODULE RepricingZReport;

REQUIRE Repricing, ZReport;

NAMESPACE Repricing;

//----------------- Переоценка товаров, которые были возвращены покупателями по кассе -----------------//

retailPricingPriceB 'Розничная цена (действующая)' (ReceiptReturnDetail d) =
    prevPriceB(SystemLedgerPriceListType.retailPricingPriceListType, sku(d), departmentStore(d), dateTime(d));

userRepricingDetail = DATA  UserRepricingDetail(ReceiptReturnDetail);

soldPrice (ReceiptReturnDetail d) = (sum(d) (+) discountSum(d)) / quantity(d); // priceReceiptReturnDetail(d) просто цену брать не можем, так как при внешнем POS'е в этой цене неправильно 

toRepricing (ReceiptReturnDetail d) = (d IS ReceiptReturnDetail) AND NOT (retailPricingPriceB(d) == soldPrice(d)) AND
            NOT userRepricingDetail(d);
toRepricingReceiptReturnDetail (stock) =  GROUP SUM 1 IF toRepricing(ReceiptReturnDetail d) BY departmentStore(d);

setReceiptReturnDetailUserRepricingStock 'Создать акт переоценки'(DepartmentStore stock, Operation operation)  = {
	NEWSESSION {
	    IF toRepricingReceiptReturnDetail (stock) AND stock IS DepartmentStore THEN {
	    
	        NEW p = UserRepricing {
	            departmentStore(p) <- stock;
	            date(p) <- currentDate();
	            time(p) <- currentTime();
	            skipChangeLedger(p) <- TRUE;
	            operation(p) <- operation;
	            
	            FOR toRepricing(ReceiptReturnDetail detail) AND departmentStore[ReceiptDetail](detail) == stock NEW d = UserRepricingDetail DO {
	                userRepricing(d) <- p;   
	                userRepricingDetail(detail) <- d;  
	                                
	                sku(d) <- sku(detail);
	                quantity(d) <- quantity(detail);
	                curRetailPrice(d) <- soldPrice(detail);
	                retailPrice(d) <- retailPricingPriceB(detail);
	            }  
	            SHOW userRepricing OBJECTS p = p MANAGESESSION DOCKED NOCANCEL;
	        }
	    }     
	}
} TOOLBAR;

FORM returnReceiptDetail 'Дооценка на возврате (касса)'

    OBJECTS st = DepartmentStore PANEL 
    PROPERTIES (st) SELECTOR name
    FILTERS isCompany(st)
    
    OBJECTS o = Operation PANEL 
    PROPERTIES (o) SELECTOR name
        
    OBJECTS d = ReceiptReturnDetail
   
    PROPERTIES(d) READONLY dateTime[ReceiptDetail], idBarcode, nameSku[ReceiptDetail], nameBatch[ReceiptDetail] SHOWIF explicitBatchLedger(st),
                  descriptionSale, quantity[ReceiptDetail], price[ReceiptDetail], sum[ReceiptDetail], discountSum[ReceiptDetail],
                  numberVAT, retailPricingPriceB
    FILTERS departmentStore[ReceiptDetail](d) == st,
            toRepricing(d)
            
    PROPERTIES TODRAW d  setReceiptReturnDetailUserRepricingStock(st,o)
;

@extendFormFilterStockAccess(st, returnReceiptDetail, company);

NAVIGATOR {
    retailDashboardNavigator {       
        ADD returnReceiptDetail;       
    } 
}