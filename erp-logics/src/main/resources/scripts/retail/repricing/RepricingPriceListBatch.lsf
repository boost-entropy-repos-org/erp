MODULE RepricingPriceListBatch;

REQUIRE RepricingPriceList, RepricingPriceLimitFixed;

NAMESPACE Repricing;

managementRetailPriceBatch 'Цена (управленческая)' = DATA LOCAL NESTED NUMERIC[14,2] (Batch);
managementPriceListPriceBatch = DATA LOCAL NESTED NUMERIC[14,2] (Batch); 
inDashboardRepricingBatch 'Вкл' = DATA LOCAL NESTED BOOLEAN (Batch); 
//assignAttributeBatch = ABSTRACT ACTION (Stock, Operation, DATETIME);

skipManagementPriceListPriceBatch = ABSTRACT BOOLEAN (PriceListType, Batch, Stock, DATETIME); 


calculateDashboardManagementRepricingBatch 'По прайсам' = ACTION (d, o, dt) {
    managementRetailPriceBatch(batch) <- NULL;
    IF onStockPriceListRepricing() THEN {
        managementPriceListPriceBatch (batch) <- prevPriceAPriceListTypeBatchStockDateTime((OVERRIDE retailPriceListTypeDepartmentStore(d), priceListTypeOperation(o)),batch, d, dt)
            IF NOT skipManagementPriceListPriceBatch((OVERRIDE retailPriceListTypeDepartmentStore(d), priceListTypeOperation(o)),batch, d, dt);
        managementRetailPriceBatch(batch) <- managementPriceListPriceBatch(batch) WHERE managementPriceListPriceBatch(batch);
    } ELSE {
        managementPriceListPriceBatch (batch) <- prevPriceAPriceListTypeBatchStockDateTime((OVERRIDE retailPriceListTypeDepartmentStore(d), priceListTypeOperation(o)),batch, d, dt) 
            IF currentBalanceBatchStock(batch, d) > 0 AND NOT skipManagementPriceListPriceBatch((OVERRIDE retailPriceListTypeDepartmentStore(d), priceListTypeOperation(o)),batch, d, dt);
        managementRetailPriceBatch(batch) <- managementPriceListPriceBatch(batch) WHERE managementPriceListPriceBatch(batch);
    }
    
//    overSetManagementRetailPriceDepartmentStoreDateTime(d, dt);
    
    inDashboardRepricingBatch(batch) <- managementRetailPriceBatch(batch) != priceABatchLedgerPriceListTypeBatchStockDateTime(SystemLedgerPriceListType.retailPricingPriceListType, batch, d, dt) 
                                            AND skipRepricingSku(skuBatch(batch), d) AND currentBalanceBatchStock(batch, d) > 0; // Берем только те товары, которые исключили из переоценки по товарам
//    includeExtraDashboardRepricingStockDateTime(d, dt);
    
//    assignAttributeBatch(d, o, dt);    
    formRefresh();
} TOOLBAR;

//repForm =  DATA LOCAL UserRepricing();  

createDashboardRepricingNotFormBatch 'Создать переоценку' = ACTION (d, o, dt) {
    IF [ = GROUP SUM 1 IF inDashboardRepricingBatch(batch)]() THEN {
        FOR ADDOBJ r = UserRepricing DO {
            departmentStoreUserRepricing(r) <- d;
            operationUserRepricing(r) <- o;
            dateUserRepricing(r) <- toDate(dt);
            timeUserRepricing(r) <- toTime(dt);  
            isPostedUserRepricing(r) <- TRUE;
    
            FOR inDashboardRepricingBatch(batch) ADDOBJ rd = UserRepricingDetail DO {
                userRepricingUserRepricingDetail(rd) <- r;
                skuUserRepricingDetail(rd) <- skuBatch(batch);
                batchUserRepricingDetail(rd) <- batch;
                quantityUserRepricingDetail(rd) <- currentBalanceBatchStock(batch, d);
                retailPriceUserRepricingDetail(rd) <- managementRetailPriceBatch(batch);
                curRetailPriceUserRepricingDetail(rd) <- prevPriceBLedgerPriceListTypeBatchStockDateTime(SystemLedgerPriceListType.retailPricingPriceListType, batch, d, dt);
                priceUserRepricingDetail(rd) <- prevPriceAPriceListTypeBatchStockDateTime(SystemLedgerPriceListType.supplierPricingPriceListType, batch, d, dt);
//                overPriceListUserRepricingDetail(rd);
            }
            repForm() <- r;
        }
    }
} TOOLBAR;

createDashboardRepricingBatch 'Создать переоценку' = ACTION  (d, o, dt) NEWSESSION NESTED LOCAL  {
    createDashboardRepricingNotFormBatch(d, o, dt);
    FORM userRepricing OBJECTS p = repForm() MANAGESESSION DOCKEDMODAL;
    repForm() <- NULL;      
}  

createOverManagementRepricingStock(department) += ACTION (department) {
    calculateDashboardManagementRepricingBatch(department, toManagementRepricingOperation(), currentDateTime());
    createDashboardRepricingNotFormBatch(department, toManagementRepricingOperation(), currentDateTime());     
}
