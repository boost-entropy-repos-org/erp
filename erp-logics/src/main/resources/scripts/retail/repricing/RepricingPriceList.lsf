MODULE RepricingPriceList;

REQUIRE PricingPriceList, Repricing, PriceListLedger;

NAMESPACE Repricing;


minManagementQuantityToRepricing 'Минимальное количество для управленческой переоценки' = DATA NUMERIC[14,4] ();

EXTEND FORM options 
    PROPERTIES () minManagementQuantityToRepricing
;
DESIGN options {
    repricings {
        MOVE PROPERTY(minManagementQuantityToRepricing());
    }
}

overPriceListUser = ABSTRACT LIST (RepricingDetail);

calculateDashboardRepricing 'По надбавкам и прайсам'(DepartmentStore d, Operation o, DATETIME dt) = {
    calculateDashboardRepricing(d, (OVERRIDE calcPriceListType(o), retailCalcPriceListType(d)), (OVERRIDE priceListType(o), retailPriceListType(d)), dt);
} TOOLBAR;

calculateDashboardManagementRepricing 'По прайсам'(DepartmentStore d, Operation o, DATETIME dt) = {
    calculateDashboardManagementRepricing(d, (OVERRIDE priceListType(o), retailPriceListType(d)), dt);
}

calculateDashboardManagementRepricingForm 'По прайсам'(DepartmentStore d, Operation o, DATETIME dt) = {
    calculateDashboardManagementRepricing(d, o, dt);
    formRefresh();
} TOOLBAR;

repForm =  DATA LOCAL UserRepricing();  

overCreateDashboardRepricingNotForm = ABSTRACT LIST (UserRepricing);

createDashboardRepricingNotForm 'Создать переоценку'(Stock d, Operation o, DATETIME dt) = {
    IF [ = GROUP SUM 1 IF inDashboardRepricing(Sku sku)]() THEN {
        NEW r = UserRepricing {
            departmentStore(r) <- d;
            operation(r) <- o;
            date(r) <- toDate(dt);
            time(r) <- toTime(dt);  
            isPosted(r) <- TRUE;
    
            FOR inDashboardRepricing(Sku sku) AND NOT skipRepricing(sku, d) ORDER orderRepricingDetail(sku) NEW rd = UserRepricingDetail DO {
                userRepricing(rd) <- r;
                sku(rd) <- sku;
                quantity(rd) <- currentBalance(sku, d) IF currentBalance(sku, d) > 0;
                quantity(rd) <- NULL  WHERE quantity(rd) < minManagementQuantityToRepricing();
                retailPrice(rd) <- managementRetailPrice(sku);
                curRetailPrice(rd) <- prevRetailPricingPriceB(sku, d, dt);
                price(rd) <- round2(prevPriceA[PriceListType,Sku,Stock,DATETIME](SystemLedgerPriceListType.supplierPricingPriceListType, sku, d, dt));
                overPriceListUser(rd);
            }
            overCreateDashboardRepricingNotForm(r);            
            repForm() <- r;
        }
    }
} TOOLBAR;

createDashboardRepricing 'Создать переоценку'(Stock d, Operation o, DATETIME dt) = {
	NEWSESSION NESTED LOCAL  {
	    createDashboardRepricingNotForm(d, o, dt);
	    DIALOG userRepricing OBJECTS p = repForm() DOCKED NOCANCEL DO {
	        inDashboardRepricing(Sku sku) <- NULL;
	    }
	    repForm() <- NULL;      
	}
}  

skipManagementRepricing = ABSTRACT BOOLEAN (DepartmentStore);

toManagementRepricingOperation  = DATA Repricing.Operation ();
nameToManagementRepricingOperation 'Операция для переоценки упр.' = name(toManagementRepricingOperation());

createOverManagementRepricing = ABSTRACT LIST (Stock);

createManagementRepricingAllStocks 'Создать автоматическую переоценку упр.'() = {
    FOR active(DepartmentStore department) AND isCompany(department) AND NOT skipManagementRepricing(department)  DO {
    	NEWSESSION {
            calculateDashboardManagementRepricing(department, toManagementRepricingOperation(), currentDateTime());
            createDashboardRepricingNotForm(department, toManagementRepricingOperation(), currentDateTime()); 
            createOverManagementRepricing(department);
            APPLY;
        }
	}
}
//--------------------------------
//FORM cc 'Дооценка'
//    OBJECTS d = DepartmentStore PANEL
//    PROPERTIES (d) SELECTOR nameDepartmentStore
//
//    OBJECTS tf=DATETIME PANEL
//    PROPERTIES(tf) VALUE
//    
//    OBJECTS o=Repricing.Operation PANEL
//    PROPERTIES(o) SELECTOR Repricing.nameOperation    
//
//;
//DESIGN cc {
//    BOX {
//        type = CONTAINERV;
//
//        NEW topContainer {
//            type = CONTAINERH;
//            MOVE BOX(d) { caption = 'Выберите отдел магазина';}
//            MOVE BOX(tf) { caption = 'Дата/время с'; }
//            MOVE BOX(o) { caption = 'Выберите операцию переоценки'; }
//        }
//        MOVE TOOLBARBOX;
//    }
//} 
//aaaaa 'Создать переоценку упр.' = () NEWSESSION {
//    FORM cc  MODAL;
//    IF formResult() == FormResult.ok THEN {  
//        calculateDashboardManagementRepricing(chosenObject('d'), chosenObject('o'), currentDateTime());
//        createDashboardRepricingNotForm(chosenObject('d'), chosenObject('o'), currentDateTime());      
////        createExtraValuationStockTimeOperation(chosenObject('d'), chosenDateTime('tf'), chosenObject('o'));                               
//    }
//    apply();
//} TOOLBAR;


EXTEND FORM options
    PROPERTIES() nameToManagementRepricingOperation, createManagementRepricingAllStocks
;
DESIGN options {
    repricings {
        NEW managementRepricing {
            caption = 'Автоматическая переоценка упр.';
            MOVE PROPERTY(nameToManagementRepricingOperation());
            MOVE PROPERTY(createManagementRepricingAllStocks());
        }
    }
}