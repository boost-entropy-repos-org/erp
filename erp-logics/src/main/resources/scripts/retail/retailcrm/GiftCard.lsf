MODULE GiftCard;

REQUIRE ZReportReceiptDetailPayment;

//подарочные сертификаты
CLASS GiftCard 'Подарочный сертификат';
TABLE giftCard(GiftCard);

@defineExternalizable(giftCard, VARSTRING[100]);

@defineNumbered(GiftCard);

@defineNumeratedDefault(GiftCard, 'Подарочные сертификаты', 'ПС');

// Уникальность
giftCardSeriesNumber (string) =
    GROUP AGGR GiftCard giftCard
        BY seriesNumber(giftCard) WHERE giftCard IS GiftCard;


date 'Дата' = DATA DATE(GiftCard);
expiryDays 'Срок действия (дней)' = DATA INTEGER(GiftCard);

price 'Цена' = DATA NUMERIC[14,2] (GiftCard);

//регистр движений подарочного сертификата
CLASS ABSTRACT GiftCardLedger 'Движение подарочных сертификатов';

giftCard = ABSTRACT GiftCard (GiftCardLedger);
dateTime 'Дата/время' = ABSTRACT DATETIME (GiftCardLedger);
seriesNumber 'Серия/Номер' = ABSTRACT STRING[20] (GiftCardLedger);
sum 'Сумма' = ABSTRACT NUMERIC[16,2] (GiftCardLedger);
description 'Описание' = ABSTRACT STRING[15] (GiftCardLedger);

//продажа подарочных сертификатов
CLASS ReceiptGiftCardSaleDetail 'Строка продажи сертификата' : ReceiptDetail, GiftCardLedger;

@defineExternalizable(receiptGiftCardSaleDetail, VARSTRING[100]);

giftCard = DATA GiftCard (ReceiptGiftCardSaleDetail);

receipt = DATA Receipt (ReceiptGiftCardSaleDetail);
receipt(ReceiptGiftCardSaleDetail detail) += receipt(detail);
zReport(ReceiptGiftCardSaleDetail d) = zReport(receipt(d)); 

@defineDocumentDetailPosted(receipt, ReceiptGiftCardSaleDetail);
isPosted(ReceiptGiftCardSaleDetail d) += isPosted(d); 

@defineDocumentDetailClosed(receipt, ReceiptGiftCardSaleDetail);
isClosed(ReceiptGiftCardSaleDetail d) += isPosted(d); 

@defineDocumentDetailDepartmentStoreCustom(receipt, receiptGiftCardSaleDetail);
departmentStore (ReceiptGiftCardSaleDetail d) += departmentStore(d);

sold (giftCard) =
    GROUP AGGR ReceiptGiftCardSaleDetail detail
        BY giftCard(detail) WHERE detail IS ReceiptGiftCardSaleDetail;
isSold 'Продан' (GiftCard giftCard) = TRUE IF sold(giftCard);
dateSold 'Дата продажи' (GiftCard giftCard) = date(receipt(sold(giftCard)));
nameDepartmentStoreSold 'Где продан' (GiftCard giftCard) = nameDepartmentStore(receipt(sold(giftCard)));

type(ReceiptGiftCardSaleDetail detail) += 'Сертификат' IF detail IS ReceiptGiftCardSaleDetail;
quantity(ReceiptGiftCardSaleDetail detail) += 1.0 IF detail IS ReceiptGiftCardSaleDetail;

price 'Цена' = DATA NUMERIC[14,2] (ReceiptGiftCardSaleDetail);
price(ReceiptGiftCardSaleDetail detail) += price(detail);

sum 'Сумма' = DATA NUMERIC[16,2] (ReceiptGiftCardSaleDetail);
sum[ReceiptDetail](ReceiptGiftCardSaleDetail detail) += sum(detail);
signedSum(ReceiptGiftCardSaleDetail detail) += sum(detail);

sumReceiptDetailGiftCard 'Сумма проданных сертификатов' (zReport)= GROUP SUM sum[ReceiptDetail](ReceiptGiftCardSaleDetail d) IF d IS ReceiptGiftCardSaleDetail BY zReport[ReceiptDetail](d);

//имплемент в GiftCardLedger
giftCard(ReceiptGiftCardSaleDetail detail) += giftCard(detail);
dateTime(ReceiptGiftCardSaleDetail detail) += dateTime(receipt(detail));
seriesNumber(ReceiptGiftCardSaleDetail detail) += seriesNumber(giftCard(detail));
sum(ReceiptGiftCardSaleDetail detail) += sum(detail);
description(ReceiptGiftCardSaleDetail detail) += 'Продажа' IF detail IS ReceiptGiftCardSaleDetail;

edit 'Редактировать' (ReceiptGiftCardSaleDetail d) = ACTION NEWSESSION {
    FORM zReport OBJECTS z = zReport(d), b = receipt(d), d = d MANAGESESSION DOCKEDMODAL NOCANCEL;
}
edit(ReceiptGiftCardSaleDetail d) += ACTION edit(d);

//генерация подарочных сертификатов
FORM generationGiftCards 'Генерация подарочных сертификатов'
    OBJECTS n=Numerator  FIXED PANEL
    PROPERTIES(n) SELECTOR name

    OBJECTS quantityCards=INTEGER FIXED PANEL
    PROPERTIES(quantityCards) intValueQuantityCards = OBJVALUE

    OBJECTS priceCards=NUMERIC[14,2] FIXED PANEL
    PROPERTIES(priceCards) valuePriceCards = OBJVALUE
    
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES(dt) valueDt = OBJVALUE   
     
    OBJECTS d=INTEGER FIXED PANEL
    PROPERTIES(d) valueD = OBJVALUE        
    
;

DESIGN generationGiftCards {
    main{
        NEW topContainer{
            caption = 'Параметры';
            MOVE PROPERTY(name(n));
            MOVE PROPERTY(intValueQuantityCards) {caption = 'Количество подарочных сертификатов';}
            MOVE PROPERTY(valuePriceCards) {caption = 'Цена подарочных сертификатов';}
            MOVE PROPERTY(valueDt) {caption = 'Дата';}
            MOVE PROPERTY(valueD) {caption = 'Срок действия (дней)';}            
            
        }
        MOVE functions.box;
    }
}

generateGiftCards 'Сгенерировать подарочные сертификаты'() = ACTION {
    FORM generationGiftCards OBJECTS n=defaultNumeratorGiftCard() MODAL CHECK;
    IF formResult() == FormResult.ok THEN {
        LOCAL num = INTEGER();
        ASSIGN num() <- 0;
        WHILE num() < chosenInteger('quantityCards') DO {
            FOR ADDOBJ g = GiftCard DO {
                numerator(g) <- chosenObject('n');
                number(g) <- curStringValue(numerator(g));
                series(g) <- series(numerator(g));
                price(g) <- chosenNumeric('priceCards');
                date(g) <- chosenDate('dt');                
                expiryDays(g) <- chosenInteger('d');
                
                curValue(Numerator numerator) <- curValue(numerator) + 1 WHERE numerator == numerator(g);
            }

            num() <- num() + 1;
        }
    }
} TOOLBAR;

//формы
FORM giftCard 'Подарочный сертификат'
    OBJECTS g = GiftCard FIXED PANEL
    PROPERTIES(g) nameNumerator, number, series, date, price, expiryDays

    EDIT GiftCard OBJECT g
;

DESIGN giftCard {
    NEW topContainer{
        caption = 'Подарочный сертификат';
        MOVE PROPERTY(nameNumerator(g));
        MOVE PROPERTY(number(g));
        MOVE PROPERTY(series(g));
        MOVE PROPERTY(date(g));
        MOVE PROPERTY(expiryDays(g));
        MOVE PROPERTY(price(g));
    }
    MOVE functions.box;
}

FORM giftCards 'Подарочные сертификаты'
    OBJECTS g = GiftCard
    PROPERTIES(g) READONLY number, series, date, 
                           dateSold, nameDepartmentStoreSold, expiryDays, price
    PROPERTIES generateGiftCards() TODRAW g FORCE PANEL
    PROPERTIES(g) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    OBJECTS l = GiftCardLedger
    PROPERTIES(l) READONLY dateTime, seriesNumber, sum, description
    ORDER BY dateTime(l)
    FILTERS giftCard(l) == g
;

NAVIGATOR {
    retailMasterData {
        ADD giftCards;
    }
}

//использование подарочных сертификатов при оплате
CLASS PaymentGiftCard : Payment, GiftCardLedger;

@defineExternalizable(paymentGiftCard, VARSTRING[100]);

giftCard = DATA GiftCard (PaymentGiftCard);
seriesNumberGiftCard 'Серия/номер' (PaymentGiftCard payment) = seriesNumber(giftCard(payment));

//имплемент в GiftCardLedger
giftCard(PaymentGiftCard payment) += giftCard(payment);
dateTime(PaymentGiftCard payment) += dateTime(receipt(payment)) IF payment IS PaymentGiftCard;
seriesNumber(PaymentGiftCard payment) += seriesNumber(giftCard(payment));
sum(PaymentGiftCard payment) += sum[Payment](payment) IF payment IS PaymentGiftCard;
description(PaymentGiftCard payment) += 'Погашение' IF payment IS PaymentGiftCard;

sumGiftCard 'Сумма подарочных сертификатов в чеке' (receipt) =
    GROUP SUM sum[Payment](PaymentGiftCard payment) IF payment IS PaymentGiftCard
    BY receipt(payment);
    
CONSTRAINT sumGiftCard(Receipt receipt) > sumReceiptDetail(receipt) 
    CHECKED BY sumGiftCard[Receipt] MESSAGE 'Сумма сертификатов не может превышать всего суммы чека';

CONSTRAINT giftCard(PaymentGiftCard p) AND p IS PaymentGiftCard AND NOT (price(giftCard(p)) == sum[Payment](p)) 
    MESSAGE 'Сумма оплаты сертификатом должна быть равно цене сертификата';

used (giftCard) =
    GROUP AGGR PaymentGiftCard payment
        BY giftCard(payment) WHERE payment IS PaymentGiftCard;
isUsed 'Погашен' (GiftCard giftCard) = TRUE IF used(giftCard);
dateUsed 'Дата использования' (GiftCard giftCard) = toDate(dateTime(receipt(used(giftCard))));

expireDate 'Дата истечения' (GiftCard giftCard) = sum(toDate(dateTime(receipt(sold(giftCard)))), expiryDays(giftCard));
isExpiredDate 'Истек срок' (GiftCard giftCard) = expireDate(giftCard) < currentDate(); 

nameDepartmentStoreUsed 'Где использован' (GiftCard giftCard) = nameDepartmentStore(receipt(used(giftCard)));
numberReceiptUsed 'Номер чека' (GiftCard giftCard) = number(receipt(sold(giftCard)));

sumCard 'Сумма (карточка)' (giftCard) = GROUP SUM sum(sold(GiftCard giftCard), Payment payment) IF 
    paymentMeans(paymentType(payment))==  PaymentMeans.paymentMeansCard AND isPosted[ReceiptDetail](sold(giftCard)) BY giftCard;

EXTEND FORM giftCards
    PROPERTIES(g) READONLY BEFORE expiryDays(g) dateUsed, nameDepartmentStoreUsed,
                  numberReceiptUsed 
    PROPERTIES(g) READONLY AFTER expiryDays(g) expireDate  
    PROPERTIES(g) READONLY sumCard    

    FILTERGROUP filter1
        FILTER 'Просрочен' expireDate(g) < currentDate() 'F10'
        FILTER 'Не просрочен' sold(g) AND NOT (expireDate(g) < currentDate()) 'F9'
 
        
    FILTERGROUP filter2
        FILTER 'Погашен' used(g) 'F8' 
        FILTER 'Не погашен' sold(g) AND NOT used(g) 'F7'                                                      
;

EXTEND CLASS PaymentMeans { paymentMeansGiftCard 'Подарочный сертификат'}

overLoadDefaultPaymentTypes() += ACTION {
    loadDefaultType('Подарочный сертификат', PaymentMeans.paymentMeansGiftCard, 'giftcard');
}

sumGiftCardPayment 'Сумма продаж (сертификат)' (receipt) = GROUP SUM sum(Payment payment) IF paymentMeans(payment) == PaymentMeans.paymentMeansGiftCard BY receipt(payment);
sumGiftCardPayment 'Сумма продаж (сертификат)' (zReport) = GROUP SUM sumGiftCardPayment(Receipt r) BY zReport(r) IN documentSum;

minGiftCardPaymentType() = GROUP MIN PaymentType paymentType IF paymentMeans(paymentType) == PaymentMeans.paymentMeansGiftCard;

sumGiftCardReceiptDetail 'Сумма (сертификат) по товарам' (ZReport zReport, Range range) = sumSkuReceiptDetail(zReport, PaymentMeans.paymentMeansGiftCard, range);
sumGiftCardReceiptDetail 'Сумма (сертификат) по товарам' (zReport) = GROUP SUM  sumGiftCardReceiptDetail(ZReport zReport, Range range) BY zReport;
sumVATGiftCardReceiptDetail 'Сумма НДС (сертификат) по товарам' (ZReport zReport, Range range) = sumVATSkuReceiptDetail(zReport, PaymentMeans.paymentMeansGiftCard, range);

EXTEND FORM zReports
    PROPERTIES (z) READONLY BEFORE sumNegativeCashPayment(z) sumGiftCardPayment
    PROPERTIES (z) READONLY  sumReceiptDetailGiftCard
;

overCopy(ReceiptGiftCardSaleDetail detail,Receipt r) += ACTION {
    IF detail IS ReceiptGiftCardSaleDetail THEN {
        FOR ADDOBJ d=ReceiptGiftCardSaleDetail DO {
            receipt(d) <- r;
            giftCard(d) <- giftCard(detail);
            price(d) <- price(detail);            
            sum(d) <- sum(detail);
            overCopy(d, detail);
        }
    }
}
