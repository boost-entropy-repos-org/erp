MODULE POSGiftCard;

REQUIRE GiftCard, POS;

NAMESPACE POS;

giftCardAsDiscountGroupCashRegister 'Пробивать сертификат как скидку' = DATA BOOLEAN (GroupCashRegister) IN base;
giftCardAsDiscountCurrentCashRegister 'Пробивать сертификат как скидку' = giftCardAsDiscountGroupCashRegister(groupCashRegisterCashRegister(currentCashRegister()));

//продажа подарочных сертификатов
overChangeBarcodeGiftCard = ACTION (string, receipt) {
    IF giftCardSeriesNumber(string) AND receipt IS Receipt AND string IS STRING[15] THEN {
        LOCAL giftCard = GiftCard();
        giftCard() <- giftCardSeriesNumber(string);

        IF soldGiftCard(giftCard()) THEN {
            MESSAGE 'Сертификат ' + seriesNumberGiftCard(giftCard()) +' был использован';
        } ELSE {
            FOR ADDOBJ d = ReceiptGiftCardSaleDetail DO {
                receiptReceiptGiftCardSaleDetail(d) <- receipt;
                giftCardReceiptGiftCardSaleDetail(d) <- giftCard();
                idBarcodeReceiptDetail(d) <- string;
                priceReceiptGiftCardSaleDetail(d) <- priceGiftCard(giftCard());
                sumReceiptGiftCardSaleDetail(d) <- priceGiftCard(giftCard());
                seek(d);
            }
        }
        consumedChangeBarcodeSaleReceipt() <- TRUE;
    }
} TOOLBAR;

overChangeBarcodeSaleReceipt(string, receipt) += ACTION overChangeBarcodeGiftCard(string, receipt);

// Оплата сертификатом

addPaymentGiftCard 'Оплатить сертификатом' = ACTION (receipt) {
    FOR ADDOBJ pg = PaymentGiftCard DO {
        FORM barcodeInput MODAL;
        IF formResult() == FormResult.ok AND isSoldGiftCard(giftCardSeriesNumber(barcodeInput())) AND barcodeInput() IS STRING[15] AND 
           NOT isExpiredDateGiftCard(giftCardSeriesNumber(barcodeInput())) THEN {
            LOCAL giftCard = GiftCard();
            giftCard() <- giftCardSeriesNumber(barcodeInput());
            giftCardPaymentGiftCard(pg) <- giftCard();
            receiptPayment(pg) <- receipt;
            paymentTypePayment(pg) <- minGiftCardPaymentType();
            sumPayment(pg) <- priceGiftCard(giftCard());
        } ELSE {
            DELETE pg;
            MESSAGE 'Сертификат не найден или истек';
        }
    }
}

EXTEND FORM groupCashRegister PROPERTIES(grc) giftCardAsDiscountGroupCashRegister;

EXTEND FORM groupsCashRegister PROPERTIES(grc) READONLY giftCardAsDiscountGroupCashRegister;

EXTEND FORM postReceiptPayment
    PROPERTIES addPaymentGiftCard(r) TODRAW p FORCE PANEL SHOWIF allowPaymentGiftCard()
;

DESIGN postReceiptPayment {
    rightControls{
        ADD PROPERTY(addPaymentGiftCard(r)) BEFORE PROPERTY(formOk()){
            fill = 1;
            font = 'bold 28';
        }
    }
}
