MODULE POSInvoice;

REQUIRE POS, SaleInvoiceContract, ContractPayment;

NAMESPACE Sale;

sumPrePayment 'Сумма предоплаты' = DATA SESSION NUMERIC[16,2] ();

FORM paymentInstallments 'Рассрочка'
    OBJECTS l = LegalEntity FIXED PANEL
    PROPERTIES(l) SELECTOR nameLegalEntity
    OBJECTS n = NUMERIC[16,2] FIXED PANEL
    PROPERTIES(n) sumPayment = OBJVALUE
;

DESIGN paymentInstallments FROM DEFAULT {
    PROPERTY(sumPayment) {
        caption = 'Сумма первоначального платежа';
    }
}

printReceiptInvoicePayment = ABSTRACT ACTION LIST (Sale.Invoice, Payment.Payment);
printReceiptResult = DATA SESSION BOOLEAN ();

createInvoiceReceipt 'Создать' = ACTION (receipt, customer, sum) {       // todo: сделать необходимые округления
    FOR ADDOBJ i = UserInvoice DO {
        supplierStockUserInvoice(i) <- departmentStoreReceipt(receipt);
        supplierUserInvoice(i) <- legalEntityStock(departmentStoreReceipt(receipt));
        customerUserInvoice(i) <- customer;
        customerStockUserInvoice(i) <- defaultStockLegalEntity(customer);
        dateUserInvoice(i) <- dateReceipt(receipt);
        timeUserInvoice(i) <- timeReceipt(receipt);
        
        FOR ADDOBJ c = UserContractSku DO {
            supplierContractSku(c) <- legalEntityStock(departmentStoreReceipt(receipt));
            customerContractSku(c) <- customer;
            dateFromContract(c) <- dateReceipt(receipt);
            currencyContract(c) <- defaultCurrency();
            contractSkuUserInvoice(i) <- c;            
        }
        
        FOR receiptReceiptDetail(detail) == receipt ADDOBJ d = UserInvoiceDetail DO {
            userInvoiceUserInvoiceDetail(d) <- i;
            skuUserInvoiceDetail(d) <- skuReceiptDetail(detail);
            quantityUserInvoiceDetail(d) <- quantityReceiptDetail(detail);
            invoiceSumUserInvoiceDetail(d) <- sumReceiptDetail(detail);
            invoicePriceUserInvoiceDetail(d) <- sumReceiptDetail(detail)/quantityReceiptDetail(detail);
            priceUserInvoiceDetail(d) <- invoicePriceUserInvoiceDetail (d) * 100/(100 + calcValueVATUserInvoiceDetail(d));
        }
        
        FOR ADDOBJ p = Payment.Payment DO {
            datePayment(p) <- dateReceipt(receipt);
            timePayment(p) <- timeReceipt(receipt); 
            payerPayment(p) <- customer;
            beneficiaryPayment(p) <- legalEntityStock(departmentStoreReceipt(receipt));
            sumPayment(p) <- sum;
            contractPayment(p) <- contractSkuUserInvoice(i);
            costOutContractLedgerInContractLedger(p, i) <- sum;
            
            DELETE detail WHERE receiptReceiptDetail(detail) == receipt;                                   
            DELETE receipt;
            
            IF modelGroupMachinery(groupCashRegisterCashRegister(currentCashRegister())) THEN {
                printReceiptInvoicePayment(i, p); 
                IF printReceiptResult() THEN 
                    apply();
                    createCurrentReceipt();
            }                 
            ELSE {
                apply();
                createCurrentReceipt(); 
            }
        }
    }
}

createPaymentInstallments 'Рассрочка' = ACTION (receipt) {
    FORM paymentInstallments MODAL;
    IF formResult() == FormResult.ok THEN
        createInvoiceReceipt(receipt, chosenObject('l'), chosenNumeric('n'));
}

EXTEND FORM POS
    PROPERTIES(r) SHOWIF currentZReport() createPaymentInstallments
;
EXTEND DESIGN POS {
    misc {
        NEW invoice {
            alignment = STRETCH;
            caption = 'Накладная';
            ADD PROPERTY(createPaymentInstallments(r)) { fill = 1; focusable = FALSE; font = 'bold 24';  }
        }
    }
}