MODULE CashOperation;

REQUIRE CashRegister, Numerator, Document;

// ----------------------------- Кассовые документы ---------------------------- //

// Интерфейс для по работе с центральной кассой (кассовым счетом)
CLASS ABSTRACT CashDocument 'Кассовый документ';
TABLE cashDocument (CashDocument);

@defineExternalizable(cashDocument, VARSTRING[100]);

dateCashDocument 'Дата документа' = ABSTRACT DATE (CashDocument) IN documentHeader;
timeCashDocument 'Время документа' = ABSTRACT TIME (CashDocument) IN documentHeader;
dateTimeCashDocument 'Дата/время документа' (cashDocument) = dateTimeToDateTime(dateCashDocument(cashDocument), timeCashDocument(cashDocument)) IN documentHeader;

numberCashDocument 'Номер' (cashDocument) = ABSTRACT STRING[200] (CashDocument) IN documentPrm; ///

departmentStoreCashDocument (cashDocument) = ABSTRACT DepartmentStore (CashDocument);
nameDepartmentStoreCashDocument 'Подразделение' (cashDocument) =
    nameDepartmentStore(departmentStoreCashDocument(cashDocument)) IN documentHeader;
nameLegalEntityCashDocument 'Компания' (cashDocument) = nameLegalEntityDepartmentStore(departmentStoreCashDocument(cashDocument)) IN documentHeader;

basisCashDocument 'Основание' = ABSTRACT VARSTRING[100] (CashDocument) IN documentPrm;

cashRegisterCashDocument = ABSTRACT CashRegister(CashDocument);
numberCashRegisterCashDocument 'Касса' (cashDocument) = nppMachinery(cashRegisterCashDocument(cashDocument)) IN documentPrm;

isPostedCashDocument 'Закрыт' = ABSTRACT BOOLEAN (CashDocument);

CLASS ABSTRACT IncomeCashOrder 'ПКО': CashDocument;
CLASS ABSTRACT OutcomeCashOrder 'РКО': CashDocument;

sumCashIncomeCashOrder 'Сумма' = ABSTRACT NUMERIC[16,2] (IncomeCashOrder) IN documentSum;
isPrintedIncomeCashOrder 'Напечатан' = DATA BOOLEAN (IncomeCashOrder);
isNotPrintedIncomeCashOrder 'Не распечатан' (incomeCashOrder) =
    incomeCashOrder IS IncomeCashOrder  AND NOT isPrintedIncomeCashOrder(incomeCashOrder);

isPrintedOutcomeCashOrder 'Напечатан' = DATA BOOLEAN (OutcomeCashOrder);
isNotPrintedOutcomeCashOrder 'Не распечатан' (outcomeCashOrder) =
    outcomeCashOrder IS OutcomeCashOrder  AND NOT isPrintedOutcomeCashOrder(outcomeCashOrder);

curSumIncomeCashOrder 'Текущая сумма ПКО' (departmentStore) =
    GROUP SUM sumCashIncomeCashOrder(incomeCashOrder) IF isPostedCashDocument(incomeCashOrder)
    BY departmentStoreCashDocument(incomeCashOrder);

sumAIncomeCashOrderDateTime 'Сумма ПКО после даты/время' (departmentStore, date) =
    GROUP SUM sumCashIncomeCashOrder(incomeCashOrder) IF isPostedCashDocument(incomeCashOrder) AND
              dateTimeCashDocument(incomeCashOrder) > date
    BY departmentStoreCashDocument(incomeCashOrder), date;

sumIncomeCashOrderDateTime 'Сумма ПКО на дату/время' (departmentStore, date) =
    curSumIncomeCashOrder(departmentStore) (-)
    sumAIncomeCashOrderDateTime(departmentStore, date);

sumCashOutcomeCashOrder 'Сумма' = ABSTRACT NUMERIC[16,2] (OutcomeCashOrder) IN documentSum;

curSumOutcomeCashOrder 'Текущая сумма РКО' (departmentStore) =
    GROUP SUM sumCashOutcomeCashOrder(outcomeCashOrder) IF isPostedCashDocument(outcomeCashOrder)
    BY departmentStoreCashDocument(outcomeCashOrder);

sumAOutcomeCashOrderDateTime 'Сумма РКО после даты/время' (departmentStore, date) =
    GROUP SUM sumCashOutcomeCashOrder(outcomeCashOrder) IF isPostedCashDocument(outcomeCashOrder) AND
              dateTimeCashDocument(outcomeCashOrder) > date
    BY departmentStoreCashDocument(outcomeCashOrder), date;

sumOutcomeCashOrderDateTime 'Сумма РКО на дату/время' (departmentStore, date) =
    curSumOutcomeCashOrder(departmentStore) (-)
    sumAOutcomeCashOrderDateTime(departmentStore, date);

curSumCashDepartmentStore 'Текущая сумма наличных в центральной кассе' (departmentStore) =
    curSumIncomeCashOrder(departmentStore) (-) curSumOutcomeCashOrder(departmentStore);

sumCashDepartmentStoreDateTime 'Сумма наличных в центральной кассе на дату/время' (departmentStore, date) =
    sumIncomeCashOrderDateTime(departmentStore, date) (-) sumOutcomeCashOrderDateTime(departmentStore, date);

//---------------------------- Операции с фискальным регистратором ---------------------------------------//

fiscalXReport 'X-отчёт' = ABSTRACT ACTION LIST();
fiscalAdvancePaper 'Прогон ленты' = ABSTRACT ACTION LIST();
fiscalCutReceipt 'Отрезать чек' = ABSTRACT ACTION LIST();
fiscalPrintCopyReceipt 'Копия чека'() = ABSTRACT ACTION LIST ();

//--------------------------------- Операции с наличными -------------------------------------------------//

// Интерфес для внесения/изъятия денег с кассы
CLASS ABSTRACT CashOperation 'Операция с наличными';
TABLE cashOperation(CashOperation);

dateCashOperation 'Дата документа' = ABSTRACT DATE (CashOperation) IN documentHeader;
timeCashOperation 'Время документа' = ABSTRACT TIME (CashOperation) IN documentHeader;
dateTimeCashOperation 'Дата/время документа'(cashOperation) = dateTimeToDateTime(dateCashOperation(cashOperation), timeCashOperation(cashOperation)) IN documentHeader;

numberCashOperation 'Номер' (cashOperation) = ABSTRACT STRING[20] (CashOperation) IN documentPrm;

basisCashOperation 'Основание' = ABSTRACT VARSTRING[100] (CashOperation) IN documentPrm;

cashRegisterCashOperation = ABSTRACT CashRegister(CashOperation);
cashRegisterModelCashOperation (cashOperation) = cashRegisterModelCashRegister(cashRegisterCashOperation(cashOperation));
sidCashRegisterModelCashOperation 'Код модели' (cashOperation) = sidModel(cashRegisterModelCashOperation (cashOperation));
numberCashRegisterCashOperation 'Касса' (cashOperation) = nppMachinery(cashRegisterCashOperation(cashOperation)) IN documentPrm;

fiscalServiceCashOperation 'Движение денег в фискальном регистраторе' (cashOperation) = ABSTRACT ACTION LIST (CashOperation) CONFIRM;
fiscalServiceCashRegisterCashOperation 'Движение денег в фискальном регистраторе' (cashOperation) = ACTION IF cashRegisterCashOperation(cashOperation) == currentCashRegister() THEN fiscalServiceCashOperation(cashOperation);

sumCashOperation 'Сумма' (cashOperation) = ABSTRACT NUMERIC[16,2] (CashOperation);

isCompleteCashOperation 'Фискализировано' = DATA BOOLEAN (CashOperation);

//---------------------------- Внесение денег ----------------------------------------------------------------//

CLASS IncomeCashOperation 'Внесение денег' : OutcomeCashOrder, CashOperation;
TABLE incomeCashOperation (IncomeCashOperation);

isIncomeCashOperation (cashOperation) = cashOperation IS IncomeCashOperation;

@defineDocumentHeaderCreated(IncomeCashOperation);
@defineDocumentHeaderNumber(IncomeCashOperation);

@defineNumeratedDefault(IncomeCashOperation, 'Внесения денег', 'ВД');

@defineDocumentHeaderTime(IncomeCashOperation);
@deriveDocumentHeaderTimePrefix(IncomeCashOperation, );
@defineDocumentHeaderDepartmentStore(incomeCashOperation);

cashRegisterIncomeCashOperation (incomeCashOperation) = DATA CashRegister (IncomeCashOperation);
numberCashRegisterIncomeCashOperation 'Касса внесения денег' (incomeCashOperation) = nppMachinery(cashRegisterIncomeCashOperation(incomeCashOperation)) IN documentPrm MINCHARWIDTH 20 PREFCHARWIDTH 40;
sumCashIncomeCashOperation 'Сумма внесения' = DATA NUMERIC[16,2] (IncomeCashOperation) IN documentSum;
castBasisIncomeCashOperation =
    FORMULA VARSTRING[100] '\'Внесение денег №\' || CAST($1 AS TEXT) || \' с кассы \' || CAST($2 AS TEXT) || \' от \' || CAST($3 AS TEXT)';
basisIncomeCashOperation 'Основание' (incomeCashOperation) =
    castBasisIncomeCashOperation(seriesNumberIncomeCashOperation(incomeCashOperation), numberCashRegisterIncomeCashOperation(incomeCashOperation), dateIncomeCashOperation(incomeCashOperation)) IN documentPrm;

curSumIncomeCashOperation 'Текущая сумма внесенных денег' (cashRegister) =
    GROUP SUM sumCashIncomeCashOperation(incomeCashOperation)
    BY cashRegisterCashOperation(incomeCashOperation);

sumAIncomeCashOperationDateTime 'Сумма внесенных денег после даты/время' (cashRegister, date) =
    GROUP SUM sumCashIncomeCashOperation(incomeCashOperation) IF
              dateTimeCashOperation(incomeCashOperation) > date
    BY cashRegisterCashOperation(incomeCashOperation), date;

sumIncomeCashOperationDateTime 'Сумма внесенных денег на дату/время' (cashRegister, date) =
    curSumIncomeCashOperation(cashRegister) (-)
    sumAIncomeCashOperationDateTime(cashRegister, date);

dateCashDocument(incomeCashOperation) += dateIncomeCashOperation(incomeCashOperation);
timeCashDocument(incomeCashOperation) += timeIncomeCashOperation(incomeCashOperation);
numberCashDocument(incomeCashOperation) += seriesNumberIncomeCashOperation(incomeCashOperation);
departmentStoreCashDocument(incomeCashOperation) += departmentStoreIncomeCashOperation(incomeCashOperation);
basisCashDocument(incomeCashOperation) += basisIncomeCashOperation(incomeCashOperation);
cashRegisterCashDocument(incomeCashOperation) += cashRegisterIncomeCashOperation(incomeCashOperation);
sumCashOutcomeCashOrder(incomeCashOperation) += sumCashIncomeCashOperation(incomeCashOperation);
isPostedCashDocument(incomeCashOperation) += incomeCashOperation IS IncomeCashOperation;
dateCashOperation(incomeCashOperation) += dateIncomeCashOperation(incomeCashOperation);
timeCashOperation(incomeCashOperation) += timeIncomeCashOperation(incomeCashOperation);
numberCashOperation(incomeCashOperation) += seriesNumberIncomeCashOperation(incomeCashOperation);
basisCashOperation(incomeCashOperation) += basisIncomeCashOperation(incomeCashOperation);
sumCashOperation(incomeCashOperation) += sumCashIncomeCashOperation(incomeCashOperation);
cashRegisterCashOperation(incomeCashOperation) += cashRegisterIncomeCashOperation(incomeCashOperation);

//------------------------------ Изъятие денег -----------------------------------------------------------//

CLASS OutcomeCashOperation 'Изъятие денег' : IncomeCashOrder, CashOperation;
TABLE outcomeCashOperation (OutcomeCashOperation);

isOutcomeCashOperation (cashOperation) = cashOperation IS OutcomeCashOperation;

@defineDocumentHeaderCreated(OutcomeCashOperation);
@defineDocumentHeaderNumber(OutcomeCashOperation);

@defineNumeratedDefault(OutcomeCashOperation, 'Изъятия денег', 'ВД');

@defineDocumentHeaderTime(OutcomeCashOperation);
@deriveDocumentHeaderTimePrefix(OutcomeCashOperation, );

cashRegisterOutcomeCashOperation (outcomeCashOperation) = DATA CashRegister (OutcomeCashOperation);
numberCashRegisterOutcomeCashOperation 'Касса изъятия денег' (outcomeCashOperation) = nppMachinery(cashRegisterOutcomeCashOperation(outcomeCashOperation)) IN documentPrm MINCHARWIDTH 20 PREFCHARWIDTH 40;

departmentStoreOutcomeCashOperation = departmentStoreCashRegister(cashRegisterOutcomeCashOperation(outcomeCashOperation));
nameDepartmentStoreOutcomeCashOperation 'Отдел магазина' (outcomeCashOperation) = nameDepartmentStore(departmentStoreOutcomeCashOperation(outcomeCashOperation)) IN documentHeader
        MINCHARWIDTH 20 PREFCHARWIDTH 20;
fullNameDepartmentStoreOutcomeCashOperation 'Отдел магазина' (outcomeCashOperation) = fullNameDepartmentStore(departmentStoreOutcomeCashOperation(outcomeCashOperation)) IN documentHeader
        MINCHARWIDTH 20 PREFCHARWIDTH 20;
        
legalEntityStockOutcomeCashOperation (outcomeCashOperation) = legalEntityDepartmentStore(departmentStoreOutcomeCashOperation(outcomeCashOperation));
nameLegalEntityStockOutcomeCashOperation 'Компания (Отдел магазина)' (outcomeCashOperation) = nameLegalEntity(legalEntityStockOutcomeCashOperation (outcomeCashOperation));
fullNameLegalEntityStockOutcomeCashOperation 'Компания (Отдел магазина) полное наим-ие' (outcomeCashOperation) = fullNameLegalEntity(legalEntityStockOutcomeCashOperation (outcomeCashOperation));       
addressLegalEntityStockOutcomeCashOperation 'Адрес компании (Отдел магазина)' (outcomeCashOperation) = addressLegalEntity(legalEntityStockOutcomeCashOperation (outcomeCashOperation));

addressStockOutcomeCashOperation 'Адрес (Отдел магазина)' (outcomeCashOperation) = addressDepartmentStore(departmentStoreOutcomeCashOperation(outcomeCashOperation));

countryOutcomeCashOperation (outcomeCashOperation) = countryStock(departmentStoreOutcomeCashOperation(outcomeCashOperation));
                
sumCashOutcomeCashOperation 'Сумма изъятия' = DATA NUMERIC[16,2] (OutcomeCashOperation) IN documentSum;
castBasisOutcomeCashOperation =
    FORMULA VARSTRING[100] '\'Изъятие денег №\' || CAST($1 AS TEXT) || \' с кассы \' || CAST($2 AS TEXT) || \' от \' || CAST($3 AS TEXT)';
basisOutcomeCashOperation 'Основание' (outcomeCashOperation) =
    castBasisOutcomeCashOperation(seriesNumberOutcomeCashOperation(outcomeCashOperation), numberCashRegisterOutcomeCashOperation(outcomeCashOperation), dateOutcomeCashOperation(outcomeCashOperation)) IN documentPrm;

curSumOutcomeCashOperation 'Текущая сумма изъятых денег' (cashRegister) =
    GROUP SUM sumCashOutcomeCashOperation(outcomeCashOperation)
    BY cashRegisterCashOperation(outcomeCashOperation);

sumAOutcomeCashOperationDateTime 'Сумма изъятых денег после даты/время' (cashRegister, date) =
    GROUP SUM sumCashOutcomeCashOperation(outcomeCashOperation) IF
              dateTimeCashOperation(outcomeCashOperation) > date
    BY cashRegisterCashOperation(outcomeCashOperation), date;

sumOutcomeCashOperationDateTime 'Сумма изъятых денег на дату/время' (cashRegister, date) =
    curSumOutcomeCashOperation(cashRegister) (-)
    sumAOutcomeCashOperationDateTime(cashRegister, date);

dateCashDocument(outcomeCashOperation) += dateOutcomeCashOperation(outcomeCashOperation);
timeCashDocument(outcomeCashOperation) += timeOutcomeCashOperation(outcomeCashOperation);
numberCashDocument(outcomeCashOperation) += seriesNumberOutcomeCashOperation(outcomeCashOperation);
departmentStoreCashDocument(outcomeCashOperation) += departmentStoreOutcomeCashOperation(outcomeCashOperation);
basisCashDocument(outcomeCashOperation) += basisOutcomeCashOperation(outcomeCashOperation);
cashRegisterCashDocument(outcomeCashOperation) += cashRegisterOutcomeCashOperation(outcomeCashOperation);
sumCashIncomeCashOrder(outcomeCashOperation) += sumCashOutcomeCashOperation(outcomeCashOperation);
isPostedCashDocument(outcomeCashOperation) += outcomeCashOperation IS OutcomeCashOperation;
dateCashOperation(outcomeCashOperation) += dateOutcomeCashOperation(outcomeCashOperation);
timeCashOperation(outcomeCashOperation) += timeOutcomeCashOperation(outcomeCashOperation);
numberCashOperation(outcomeCashOperation) += seriesNumberOutcomeCashOperation(outcomeCashOperation);
basisCashOperation(outcomeCashOperation) += basisOutcomeCashOperation(outcomeCashOperation);
sumCashOperation(outcomeCashOperation) += -sumCashOutcomeCashOperation(outcomeCashOperation);
cashRegisterCashOperation(outcomeCashOperation) += cashRegisterOutcomeCashOperation(outcomeCashOperation);

//------------------------------ Формы ---------------------------------------------------------------------------//

sumCashForIncomeCashOperation 'Сумма внесения денег' = DATA SESSION NUMERIC[16,2] (CashRegister);

FORM addIncomeCashOperation 'Внесение денег'

    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES(dt) date = OBJVALUE

    OBJECTS t = TIME FIXED PANEL
    PROPERTIES(t) time = OBJVALUE

    OBJECTS d = DepartmentStore FIXED PANEL
    PROPERTIES(d) nameDepartmentStore SELECTOR

    OBJECTS c = CashRegister
    PROPERTIES(c) READONLY nppMachinery
    PROPERTIES(c) sumCashForIncomeCashOperation

    FILTERS departmentStoreCashRegister(c) == d
    FILTERGROUP filtersCashRegister
        FILTER 'Только для текущей кассы' 'F9' c==currentCashRegister() DEFAULT;

;

DESIGN addIncomeCashOperation FROM DEFAULT {
    NEW topContainer {
        fill = 1;
        NEW firstCase {
            type = CONTAINERH;
            NEW dateTimeContainer{
                caption = 'Дата/время';
                ADD PROPERTY(date);
                ADD PROPERTY(time);
            }
            ADD d.box;
        }

        ADD c.box;
    }
    ADD functions.box;
}

FORM incomeCashOperation 'Внесение денег'

    OBJECTS i = IncomeCashOperation FIXED PANEL
    PROPERTIES(i) numberIncomeCashOperation, seriesIncomeCashOperation, dateIncomeCashOperation, timeIncomeCashOperation, nameDepartmentStoreIncomeCashOperation,
                  numberCashRegisterIncomeCashOperation, sumCashIncomeCashOperation, basisIncomeCashOperation

    EDIT IncomeCashOperation OBJECT i
;

DESIGN incomeCashOperation FROM DEFAULT {
    NEW topContainer{
        type = CONTAINERH;
        NEW firstCase{
            type = CONTAINERH;
            caption = 'Шапка документа';
            ADD PROPERTY(numberCashRegisterIncomeCashOperation(i));
            ADD PROPERTY(numberIncomeCashOperation(i));
            ADD PROPERTY(seriesIncomeCashOperation(i));
            ADD PROPERTY(dateIncomeCashOperation(i));
            ADD PROPERTY(timeIncomeCashOperation(i));
        }
        NEW secondCase{
            caption = 'Параметры документа';
            ADD PROPERTY(nameDepartmentStoreIncomeCashOperation(i));
            ADD PROPERTY(basisIncomeCashOperation(i));
        }
        NEW thirdCase{
            caption = 'Суммы';
            ADD PROPERTY(sumCashIncomeCashOperation(i));
        }
    }
    ADD functions.box;
}

addIncomeCashOperationForm 'Внесение денег' () = ACTION () NEWSESSION {

    FORM addIncomeCashOperation OBJECTS d = departmentStoreCashRegister(currentCashRegister()) MODAL;
    IF formResult() == FormResult.ok THEN {
        LOCAL fail = BOOLEAN();
        FOR sumCashForIncomeCashOperation(cashRegister) DO {
            FOR ADDOBJ c = IncomeCashOperation DO {
                cashRegisterIncomeCashOperation(c) <- cashRegister;
                departmentStoreIncomeCashOperation(c) <- departmentStoreCashRegister(cashRegister);
                sumCashIncomeCashOperation(c) <- sumCashForIncomeCashOperation(cashRegister);
                generateSeriesNumberIncomeCashOperation(c);
                fiscalServiceCashRegisterCashOperation(c);
                IF cashRegisterModelCashRegister(cashRegister) AND NOT isCompleteCashOperation(c) THEN
                    fail() <- TRUE;
            }
        }
        IF NOT fail() THEN
            apply();
    }
} TOOLBAR;

editIncomeCashOperation 'Редактировать' (incomeCashOperation) = ACTION EDITFORM IncomeCashOperation;

sumCashForOutcomeCashOperation 'Сумма изъятия денег' = DATA SESSION NUMERIC[16,2] (CashRegister);

FORM addOutcomeCashOperation 'Изъятие денег'

    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES(dt) date = OBJVALUE

    OBJECTS t = TIME FIXED PANEL
    PROPERTIES(t) time = OBJVALUE

    OBJECTS d = DepartmentStore FIXED PANEL
    PROPERTIES(d) nameDepartmentStore SELECTOR

    OBJECTS c = CashRegister
    PROPERTIES(c) READONLY nppMachinery
    PROPERTIES(c) sumCashForOutcomeCashOperation

    FILTERS departmentStoreCashRegister(c) == d
    FILTERGROUP filtersCashRegister
        FILTER 'Только для текущей кассы' 'F9' c==currentCashRegister() DEFAULT;

;

DESIGN addOutcomeCashOperation FROM DEFAULT {
    NEW topContainer {
        fill = 1;
        NEW firstCase {
            type = CONTAINERH;
            NEW dateTimeContainer{
                caption = 'Дата/время';
                ADD PROPERTY(date);
                ADD PROPERTY(time);
            }
            ADD d.box;
        }
        ADD c.box;
    }
    ADD functions.box;
}

FORM outcomeCashOperation 'Изъятие денег'

    OBJECTS o = OutcomeCashOperation FIXED PANEL
    PROPERTIES(o) numberOutcomeCashOperation, seriesOutcomeCashOperation, dateOutcomeCashOperation, timeOutcomeCashOperation, nameDepartmentStoreOutcomeCashOperation,
                  numberCashRegisterOutcomeCashOperation, sumCashOutcomeCashOperation, basisOutcomeCashOperation

    EDIT OutcomeCashOperation OBJECT o;
;

DESIGN outcomeCashOperation FROM DEFAULT {
    NEW topContainer{
        type = CONTAINERH;
        NEW firstCase{
            type = CONTAINERH;
            caption = 'Шапка документа';
            ADD PROPERTY(numberCashRegisterOutcomeCashOperation(o));
            ADD PROPERTY(numberOutcomeCashOperation(o));
            ADD PROPERTY(seriesOutcomeCashOperation(o));
            ADD PROPERTY(dateOutcomeCashOperation(o));
            ADD PROPERTY(timeOutcomeCashOperation(o));
        }
        NEW secondCase{
            caption = 'Параметры документа';
            ADD PROPERTY(nameDepartmentStoreOutcomeCashOperation(o));
            ADD PROPERTY(basisOutcomeCashOperation(o));
        }
        NEW thirdCase{
            caption = 'Суммы';
            ADD PROPERTY(sumCashOutcomeCashOperation(o));
        }
    }
    ADD functions.box;
}

addOutcomeCashOperationForm 'Изъятие денег' () = ACTION () NEWSESSION {
    FORM addOutcomeCashOperation OBJECTS d = departmentStoreCashRegister(currentCashRegister()) MODAL;
    IF formResult() == FormResult.ok THEN {
        LOCAL fail = BOOLEAN();
        FOR sumCashForOutcomeCashOperation(cashRegister) ADDOBJ c = OutcomeCashOperation DO {
            cashRegisterOutcomeCashOperation(c) <- cashRegister;
            sumCashOutcomeCashOperation(c) <- sumCashForOutcomeCashOperation(cashRegister);
            generateSeriesNumberOutcomeCashOperation(c);
            fiscalServiceCashRegisterCashOperation(c);
            IF cashRegisterModelCashRegister(cashRegister) AND NOT isCompleteCashOperation(c) THEN
                fail() <- TRUE;
        }
         IF NOT fail() THEN
            apply();
    }
} TOOLBAR;

editOutcomeCashOperation 'Редактировать' (outcomeCashOperation) = ACTION EDITFORM OutcomeCashOperation;

FORM operationCashRegister 'Кассовые операции'

    OBJECTS interval = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES objFrom = OBJVALUE(dFrom), objTo = OBJVALUE(dTo)

    PROPERTIES numberCurrentCashRegister() TODRAW interval FORCE PANEL

    OBJECTS c = CashOperation
    PROPERTIES(c) READONLY objectClassName, numberCashOperation, dateCashOperation, timeCashOperation,
                           numberCashRegisterCashOperation, sumCashOperation, basisCashOperation
    PROPERTIES(c) DELETE FORCE PANEL TOOLBAR
    PROPERTIES(c) isCompleteCashOperation FORCE GRID
//    PROPERTIES addIncomeCashOperationForm() TODRAW c FORCE PANEL TOOLBAR
//    PROPERTIES addOutcomeCashOperationForm() TODRAW c FORCE PANEL TOOLBAR
    PROPERTIES editIncomeCashOperation(c) SHOWIF isIncomeCashOperation(c)
    PROPERTIES editOutcomeCashOperation(c) SHOWIF isOutcomeCashOperation(c)

    FILTERS dateCashOperation(c) >= dFrom,
            dateCashOperation(c) <= dTo,
            cashRegisterCashOperation(c) == currentCashRegister()

    PROPERTIES fiscalXReport() SHOWIF currentCashRegister()
    ORDER BY dateCashOperation(c), timeCashOperation(c)
;

DESIGN operationCashRegister FROM DEFAULT {

    NEW top {
        type = CONTAINERH;
        ADD interval.box {
            caption = 'Шапка документа';
            type = CONTAINERH;
            PROPERTY(objFrom) {
                caption = 'Дата (с)';
            }
            PROPERTY(objTo) {
                caption = 'Дата (по)';
            }
        }
    }

    NEW actions {
        caption = 'Действия с кассой';
        type = CONTAINERH;
        ADD PROPERTY(fiscalXReport()) { font = '24'; }
    }
    ADD c.box;
    ADD functions.box;
}

NAVIGATOR {
    retailDashboardNavigator {
        ADD operationCashRegister;
    }
}