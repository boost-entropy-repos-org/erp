MODULE CashOperation;

REQUIRE CashRegister, Numerator, Document, Bank;

// ----------------------------- Кассовые документы ---------------------------- //

CLASS ABSTRACT CashDocument 'Кассовый документ' : PaymentLedger;
TABLE cashDocument (CashDocument);

dateCashDocument 'Дата документа' = ABSTRACT DATE (CashDocument) IN documentHeaderGroup;
timeCashDocument 'Время документа' = ABSTRACT TIME (CashDocument) IN documentHeaderGroup;
dateTimeCashDocument 'Дата/время документа' (cashDocument) = dateTimeToDateTime(dateCashDocument(cashDocument), timeCashDocument(cashDocument)) IN documentHeaderGroup;

numberCashDocument 'Номер' (cashDocument) = ABSTRACT STRING[200] (CashDocument) IN documentPrmGroup; ///

departmentStoreCashDocument (cashDocument) = ABSTRACT DepartmentStore (CashDocument);
nameDepartmentStoreCashDocument 'Подразделение' (cashDocument) =
    nameDepartmentStore(departmentStoreCashDocument(cashDocument)) IN documentHeaderGroup;
nameLegalEntityCashDocument 'Компания' (cashDocument) = nameLegalEntityDepartmentStore(departmentStoreCashDocument(cashDocument)) IN documentHeaderGroup;

basisCashDocument 'Основание' = ABSTRACT VARSTRING[100] (CashDocument) IN documentPrmGroup;

cashRegisterCashDocument = ABSTRACT CashRegister(CashDocument);
numberCashRegisterCashDocument 'Касса' (cashDocument) = numberCashRegister(cashRegisterCashDocument(cashDocument)) IN documentPrmGroup;

isPostedCashDocument 'Закрыт' = ABSTRACT BOOLEAN (CashDocument);

CLASS ABSTRACT IncomeCashOrder 'ПКО': CashDocument;
CLASS ABSTRACT OutcomeCashOrder 'РКО': CashDocument;

sumCashIncomeCashOrder 'Сумма' = ABSTRACT NUMERIC[16,2] (IncomeCashOrder) IN documentSumGroup;
isPrintedIncomeCashOrder 'Напечатан' = DATA BOOLEAN (IncomeCashOrder);
isNotPrintedIncomeCashOrder 'Не распечатан' (incomeCashOrder) =
    incomeCashOrder IS IncomeCashOrder  AND NOT isPrintedIncomeCashOrder(incomeCashOrder);

isPrintedOutcomeCashOrder 'Напечатан' = DATA BOOLEAN (OutcomeCashOrder);
isNotPrintedOutcomeCashOrder 'Не распечатан' (outcomeCashOrder) =
    outcomeCashOrder IS OutcomeCashOrder  AND NOT isPrintedOutcomeCashOrder(outcomeCashOrder);

curSumIncomeCashOrder 'Текущая сумма ПКО' (departmentStore) =
    GROUP SUM sumCashIncomeCashOrder(incomeCashOrder) IF isPostedCashDocument(incomeCashOrder)
    BY departmentStoreCashDocument(incomeCashOrder);

sumAIncomeCashOrderDateTime 'Сумма ПКО после даты/время' (departmentStore, date) =
    GROUP SUM sumCashIncomeCashOrder(incomeCashOrder) IF isPostedCashDocument(incomeCashOrder) AND
              dateTimeCashDocument(incomeCashOrder) > date
    BY departmentStoreCashDocument(incomeCashOrder), date;

sumIncomeCashOrderDateTime 'Сумма ПКО на дату/время' (departmentStore, date) =
    curSumIncomeCashOrder(departmentStore) (-)
    sumAIncomeCashOrderDateTime(departmentStore, date);

sumCashOutcomeCashOrder 'Сумма' = ABSTRACT NUMERIC[16,2] (OutcomeCashOrder) IN documentSumGroup;

curSumOutcomeCashOrder 'Текущая сумма РКО' (departmentStore) =
    GROUP SUM sumCashOutcomeCashOrder(outcomeCashOrder) IF isPostedCashDocument(outcomeCashOrder)
    BY departmentStoreCashDocument(outcomeCashOrder);

sumAOutcomeCashOrderDateTime 'Сумма РКО после даты/время' (departmentStore, date) =
    GROUP SUM sumCashOutcomeCashOrder(outcomeCashOrder) IF isPostedCashDocument(outcomeCashOrder) AND
              dateTimeCashDocument(outcomeCashOrder) > date
    BY departmentStoreCashDocument(outcomeCashOrder), date;

sumOutcomeCashOrderDateTime 'Сумма РКО на дату/время' (departmentStore, date) =
    curSumOutcomeCashOrder(departmentStore) (-)
    sumAOutcomeCashOrderDateTime(departmentStore, date);

curSumCashDepartmentStore 'Текущая сумма наличных в центральной кассе' (departmentStore) =
    curSumIncomeCashOrder(departmentStore) (-) curSumOutcomeCashOrder(departmentStore);

sumCashDepartmentStoreDateTime 'Сумма наличных в центральной кассе на дату/время' (departmentStore, date) =
    sumIncomeCashOrderDateTime(departmentStore, date) (-) sumOutcomeCashOrderDateTime(departmentStore, date);

// Implement шапки документа
dateTimePaymentLedger(cashDocument) += dateTimeCashDocument(cashDocument);
isPostedPaymentLedger(cashDocument) += isPostedCashDocument(cashDocument);
descriptionPaymentLedger(cashDocument) += basisCashDocument(cashDocument);

accountToPaymentLedger(incomeCashOrder) += cashAccountDepartmentStore(departmentStoreCashDocument(incomeCashOrder)) IF incomeCashOrder IS IncomeCashOrder;
legalEntityToPaymentLedger(incomeCashOrder) += legalEntityDepartmentStore(departmentStoreCashDocument(incomeCashOrder)) IF incomeCashOrder IS IncomeCashOrder;
sumPaymentLedger(incomeCashOrder) += sumCashIncomeCashOrder(incomeCashOrder);

accountFromPaymentLedger(outcomeCashOrder) += cashAccountDepartmentStore(departmentStoreCashDocument(outcomeCashOrder)) IF outcomeCashOrder IS OutcomeCashOrder;
legalEntityFromPaymentLedger(outcomeCashOrder) += legalEntityDepartmentStore(departmentStoreCashDocument(outcomeCashOrder)) IF outcomeCashOrder IS OutcomeCashOrder;
sumPaymentLedger(outcomeCashOrder) += sumCashOutcomeCashOrder(outcomeCashOrder);

//---------------------------- Операции с фискальным регистратором ---------------------------------------//

fiscalXReport 'X-отчёт' = ABSTRACT ACTION LIST();
fiscalAdvancePaper 'Прогон ленты' = ABSTRACT ACTION LIST();
fiscalCutReceipt 'Отрезать чек' = ABSTRACT ACTION LIST();
fiscalCancelReceipt 'Отменить чек' = ABSTRACT ACTION LIST();

//---------------------------- Инкассация ----------------------------------------------------------------//

CLASS Collection 'Инкассация' : OutcomeCashOrder, Historizable;
TABLE collection (Collection);

isCollection (collection) = collection IS Collection;

@defineDocumentHeaderNumber(Collection);

@defineNumeratedObjectDefault(Collection, 'Инкассации', 'ИН');

@defineDocumentHeaderTime(Collection);
@deriveDocumentHeaderTimePrefix(Collection, );
@defineDocumentHeaderDepartmentStore(collection);

bankAccountCollection = DATA Bank.Account (Collection);
bankAccountCollection(collection) <- bankAccountStore(storeDepartmentStore(departmentStoreCollection(collection)))
    WHEN SET(departmentStoreCollection(collection));

sumCashCollection 'Сумма инкассации' = DATA NUMERIC[16,2] (Collection) IN documentSumGroup;
castBasisCollection =
    FORMULA VARSTRING[100] '\'Инкассация №\' || CAST($1 AS TEXT) || \' от \' || CAST($2 AS TEXT)';
basisCollection 'Основание' (collection) =
    castBasisCollection(seriesNumberCollection(collection), dateCollection(collection)) IN documentPrmGroup;

dateCashDocument(collection) += dateCollection(collection);
timeCashDocument(collection) += timeCollection(collection);
numberCashDocument(collection) += seriesNumberCollection(collection) IF collection IS Collection;
departmentStoreCashDocument(collection) += departmentStoreCollection(collection);
sumCashOutcomeCashOrder(collection) += sumCashCollection(collection);
basisCashDocument(collection) += basisCollection(collection);
isPostedCashDocument(collection) += collection IS Collection;

accountToPaymentLedger(collection) += bankAccountCollection(collection);
legalEntityToPaymentLedger(collection) += legalEntityDepartmentStore(departmentStoreCollection(collection));

sumCashForCollection 'Сумма инкассации' = DATA SESSION NUMERIC[16,2] (DepartmentStore);
sessionDepartmentStore 'Отдел' = DATA SESSION DepartmentStore ();

FORM addCollection 'Инкассация'

    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES(dt) date = OBJVALUE

    OBJECTS t = TIME FIXED PANEL
    PROPERTIES(t) time = OBJVALUE

    OBJECTS d = DepartmentStore FIXED PANEL
    PROPERTIES(d) nameDepartmentStore SELECTOR, sumCashForCollection
;

DESIGN addCollection FROM DEFAULT {
    NEW topContainer {
        type = SPLITV;
        NEW firstCase {
            type = CONTAINERH;
            NEW dateTimeContainer{
                caption = 'Дата/время';
                ADD PROPERTY(date);
                ADD PROPERTY(time);
            }
            ADD d.box;
        }
    }
    ADD functions.box;
}

FORM collection 'Инкассация'
    OBJECTS c = Collection FIXED PANEL
    PROPERTIES(c) numberCollection, seriesCollection, dateCollection, timeCollection, nameDepartmentStoreCollection,
                  sumCashCollection, basisCollection

    EDIT Collection OBJECT c
;

DESIGN collection FROM DEFAULT {
    NEW topContainer{
        type = CONTAINERH;
        NEW firstCase{
            type = CONTAINERH;
            caption = 'Шапка документа';
            ADD PROPERTY(numberCollection);
            ADD PROPERTY(seriesCollection);
            ADD PROPERTY(dateCollection);
            ADD PROPERTY(timeCollection);
        }
        NEW secondCase{
            caption = 'Параметры документа';
            ADD PROPERTY(nameDepartmentStoreCollection);
            ADD PROPERTY(basisCollection);
        }
        NEW thirdCase{
            caption = 'Суммы';
            ADD PROPERTY(sumCashCollection);
        }
    }
    ADD functions.box;
}

addCollectionForm 'Инкасация' () = ACTION () {
    FORM addCollection MODAL;
    IF formResult() == FormResult.ok THEN {
        FOR sumCashForCollection(departmentStore) DO {
            FOR ADDOBJ c = Collection DO {
                departmentStoreCollection(c) <- departmentStore;
                dateCollection(c) <- chosenDate('dt');
                timeCollection(c) <- chosenTime('t');
                sumCashCollection(c) <- sumCashForCollection(departmentStore);
                generateSeriesNumberCollection(c);
            }
        }
        EXEC apply();
    }
} TOOLBAR;

editCollection 'Редактировать' (collection) = ACTION EDITFORM Collection;

//--------------------------------- Операции с наличными -------------------------------------------------//

CLASS CashOperation 'Операция с наличными';
TABLE cashOperation(CashOperation);

dateCashOperation 'Дата документа' = ABSTRACT DATE (CashOperation) IN documentHeaderGroup;
timeCashOperation 'Время документа' = ABSTRACT TIME (CashOperation) IN documentHeaderGroup;
dateTimeCashOperation 'Дата/время документа'(cashOperation) = dateTimeToDateTime(dateCashOperation(cashOperation), timeCashOperation(cashOperation)) IN documentHeaderGroup;

numberCashOperation 'Номер' (cashOperation) = ABSTRACT STRING[20] (CashOperation) IN documentPrmGroup;

basisCashOperation 'Основание' = ABSTRACT VARSTRING[100] (CashOperation) IN documentPrmGroup;

cashRegisterCashOperation = ABSTRACT CashRegister(CashOperation);
cashRegisterModelCashOperation (cashOperation) = cashRegisterModelCashRegister(cashRegisterCashOperation(cashOperation));
sidCashRegisterModelCashOperation 'Код модели' (cashOperation) = sidModel(cashRegisterModelCashOperation (cashOperation));
numberCashRegisterCashOperation 'Касса' (cashOperation) = numberCashRegister(cashRegisterCashOperation(cashOperation)) IN documentPrmGroup;

fiscalServiceCashOperation 'Движение денег в фискальном регистраторе' (cashOperation) = ABSTRACT ACTION LIST (CashOperation) CONFIRM;
fiscalServiceCashRegisterCashOperation 'Движение денег в фискальном регистраторе' (cashOperation) = ACTION IF cashRegisterCashOperation(cashOperation) == currentCashRegister() THEN fiscalServiceCashOperation(cashOperation);

sumCashOperation 'Сумма' (cashOperation) = ABSTRACT NUMERIC[16,2] (CashOperation);

isCompleteCashOperation 'Фискализировано' = DATA BOOLEAN (CashOperation);

//---------------------------- Внесение денег ----------------------------------------------------------------//

CLASS IncomeCashOperation 'Внесение денег' : OutcomeCashOrder, Historizable, CashOperation;
TABLE incomeCashOperation (IncomeCashOperation);

isIncomeCashOperation (cashOperation) = cashOperation IS IncomeCashOperation;

@defineDocumentHeaderNumber(IncomeCashOperation);

@defineNumeratedObjectDefault(IncomeCashOperation, 'Внесения денег', 'ВД');

@defineDocumentHeaderTime(IncomeCashOperation);
@deriveDocumentHeaderTimePrefix(IncomeCashOperation, );
@defineDocumentHeaderDepartmentStore(incomeCashOperation);

cashRegisterIncomeCashOperation (incomeCashOperation) = DATA CashRegister (IncomeCashOperation);
numberCashRegisterIncomeCashOperation 'Касса внесения денег' (incomeCashOperation) = numberCashRegister(cashRegisterIncomeCashOperation(incomeCashOperation)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;
sumCashIncomeCashOperation 'Сумма внесения' = DATA NUMERIC[16,2] (IncomeCashOperation) IN documentSumGroup;
castBasisIncomeCashOperation =
    FORMULA VARSTRING[100] '\'Внесение денег №\' || CAST($1 AS TEXT) || \' с кассы \' || CAST($2 AS TEXT) || \' от \' || CAST($3 AS TEXT)';
basisIncomeCashOperation 'Основание' (incomeCashOperation) =
    castBasisIncomeCashOperation(seriesNumberIncomeCashOperation(incomeCashOperation), numberCashRegisterIncomeCashOperation(incomeCashOperation), dateIncomeCashOperation(incomeCashOperation)) IN documentPrmGroup;

curSumIncomeCashOperation 'Текущая сумма внесенных денег' (cashRegister) =
    GROUP SUM sumCashIncomeCashOperation(incomeCashOperation)
    BY cashRegisterCashOperation(incomeCashOperation);

sumAIncomeCashOperationDateTime 'Сумма внесенных денег после даты/время' (cashRegister, date) =
    GROUP SUM sumCashIncomeCashOperation(incomeCashOperation) IF
              dateTimeCashOperation(incomeCashOperation) > date
    BY cashRegisterCashOperation(incomeCashOperation), date;

sumIncomeCashOperationDateTime 'Сумма внесенных денег на дату/время' (cashRegister, date) =
    curSumIncomeCashOperation(cashRegister) (-)
    sumAIncomeCashOperationDateTime(cashRegister, date);

dateCashDocument(incomeCashOperation) += dateIncomeCashOperation(incomeCashOperation);
timeCashDocument(incomeCashOperation) += timeIncomeCashOperation(incomeCashOperation);
numberCashDocument(incomeCashOperation) += seriesNumberIncomeCashOperation(incomeCashOperation);
departmentStoreCashDocument(incomeCashOperation) += departmentStoreIncomeCashOperation(incomeCashOperation);
basisCashDocument(incomeCashOperation) += basisIncomeCashOperation(incomeCashOperation);
cashRegisterCashDocument(incomeCashOperation) += cashRegisterIncomeCashOperation(incomeCashOperation);
sumCashOutcomeCashOrder(incomeCashOperation) += sumCashIncomeCashOperation(incomeCashOperation);
isPostedCashDocument(incomeCashOperation) += incomeCashOperation IS IncomeCashOperation;
dateCashOperation(incomeCashOperation) += dateIncomeCashOperation(incomeCashOperation);
timeCashOperation(incomeCashOperation) += timeIncomeCashOperation(incomeCashOperation);
numberCashOperation(incomeCashOperation) += seriesNumberIncomeCashOperation(incomeCashOperation);
basisCashOperation(incomeCashOperation) += basisIncomeCashOperation(incomeCashOperation);
sumCashOperation(incomeCashOperation) += sumCashIncomeCashOperation(incomeCashOperation);
cashRegisterCashOperation(incomeCashOperation) += cashRegisterIncomeCashOperation(incomeCashOperation);

//------------------------------ Изъятие денег -----------------------------------------------------------//

CLASS OutcomeCashOperation 'Изъятие денег' : IncomeCashOrder, Historizable, CashOperation;
TABLE outcomeCashOperation (OutcomeCashOperation);

isOutcomeCashOperation (cashOperation) = cashOperation IS OutcomeCashOperation;

@defineDocumentHeaderNumber(OutcomeCashOperation);

@defineNumeratedObjectDefault(OutcomeCashOperation, 'Изъятия денег', 'ВД');

@defineDocumentHeaderTime(OutcomeCashOperation);
@deriveDocumentHeaderTimePrefix(OutcomeCashOperation, );
@defineDocumentHeaderDepartmentStore(outcomeCashOperation);

cashRegisterOutcomeCashOperation (outcomeCashOperation) = DATA CashRegister (OutcomeCashOperation);
numberCashRegisterOutcomeCashOperation 'Касса изъятия денег' (outcomeCashOperation) = numberCashRegister(cashRegisterOutcomeCashOperation(outcomeCashOperation)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;
sumCashOutcomeCashOperation 'Сумма изъятия' = DATA NUMERIC[16,2] (OutcomeCashOperation) IN documentSumGroup;
castBasisOutcomeCashOperation =
    FORMULA VARSTRING[100] '\'Изъятие денег №\' || CAST($1 AS TEXT) || \' с кассы \' || CAST($2 AS TEXT) || \' от \' || CAST($3 AS TEXT)';
basisOutcomeCashOperation 'Основание' (outcomeCashOperation) =
    castBasisOutcomeCashOperation(seriesNumberOutcomeCashOperation(outcomeCashOperation), numberCashRegisterOutcomeCashOperation(outcomeCashOperation), dateOutcomeCashOperation(outcomeCashOperation)) IN documentPrmGroup;

curSumOutcomeCashOperation 'Текущая сумма изъятых денег' (cashRegister) =
    GROUP SUM sumCashOutcomeCashOperation(outcomeCashOperation)
    BY cashRegisterCashOperation(outcomeCashOperation);

sumAOutcomeCashOperationDateTime 'Сумма изъятых денег после даты/время' (cashRegister, date) =
    GROUP SUM sumCashOutcomeCashOperation(outcomeCashOperation) IF
              dateTimeCashOperation(outcomeCashOperation) > date
    BY cashRegisterCashOperation(outcomeCashOperation), date;

sumOutcomeCashOperationDateTime 'Сумма изъятых денег на дату/время' (cashRegister, date) =
    curSumOutcomeCashOperation(cashRegister) (-)
    sumAOutcomeCashOperationDateTime(cashRegister, date);

curSumCashCashOperation 'Текущая сумма наличных в кассе(без Z-отчета)' (cashRegister) =
    curSumIncomeCashOperation(cashRegister) (-) curSumOutcomeCashOperation(cashRegister);

sumCashCashOperationDateTime 'Сумма наличных в кассе на дату/время(без Z-отчета)' (cashRegister, date) =
    sumIncomeCashOperationDateTime(cashRegister, date) (-) sumOutcomeCashOperationDateTime(cashRegister, date);

dateCashDocument(outcomeCashOperation) += dateOutcomeCashOperation(outcomeCashOperation);
timeCashDocument(outcomeCashOperation) += timeOutcomeCashOperation(outcomeCashOperation);
numberCashDocument(outcomeCashOperation) += seriesNumberOutcomeCashOperation(outcomeCashOperation);
departmentStoreCashDocument(outcomeCashOperation) += departmentStoreOutcomeCashOperation(outcomeCashOperation);
basisCashDocument(outcomeCashOperation) += basisOutcomeCashOperation(outcomeCashOperation);
cashRegisterCashDocument(outcomeCashOperation) += cashRegisterOutcomeCashOperation(outcomeCashOperation);
sumCashIncomeCashOrder(outcomeCashOperation) += sumCashOutcomeCashOperation(outcomeCashOperation);
isPostedCashDocument(outcomeCashOperation) += outcomeCashOperation IS OutcomeCashOperation;
dateCashOperation(outcomeCashOperation) += dateOutcomeCashOperation(outcomeCashOperation);
timeCashOperation(outcomeCashOperation) += timeOutcomeCashOperation(outcomeCashOperation);
numberCashOperation(outcomeCashOperation) += seriesNumberOutcomeCashOperation(outcomeCashOperation);
basisCashOperation(outcomeCashOperation) += basisOutcomeCashOperation(outcomeCashOperation);
sumCashOperation(outcomeCashOperation) += -sumCashOutcomeCashOperation(outcomeCashOperation);
cashRegisterCashOperation(outcomeCashOperation) += cashRegisterOutcomeCashOperation(outcomeCashOperation);

//------------------------------ Формы ---------------------------------------------------------------------------//

sumCashForIncomeCashOperation 'Сумма внесения денег' = DATA SESSION NUMERIC[16,2] (CashRegister);

FORM addIncomeCashOperation 'Внесение денег'

    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES(dt) date = OBJVALUE

    OBJECTS t = TIME FIXED PANEL
    PROPERTIES(t) time = OBJVALUE

    OBJECTS d = DepartmentStore FIXED PANEL
    PROPERTIES(d) nameDepartmentStore SELECTOR

    OBJECTS c = CashRegister
    PROPERTIES(c) READONLY numberCashRegister
    PROPERTIES(c) sumCashForIncomeCashOperation

    FILTERS departmentStoreCashRegister(c) == d
    FILTERGROUP filtersCashRegister
        FILTER 'Только для текущей кассы' 'F9' c==currentCashRegister() DEFAULT;

;

DESIGN addIncomeCashOperation FROM DEFAULT {
    NEW topContainer {
        type = SPLITV;
        NEW firstCase {
            type = CONTAINERH;
            NEW dateTimeContainer{
                caption = 'Дата/время';
                ADD PROPERTY(date);
                ADD PROPERTY(time);
            }
            ADD d.box;
        }

        ADD c.box;
    }
    ADD functions.box;
}

FORM incomeCashOperation 'Внесение денег'

    OBJECTS i = IncomeCashOperation FIXED PANEL
    PROPERTIES(i) numberIncomeCashOperation, seriesIncomeCashOperation, dateIncomeCashOperation, timeIncomeCashOperation, nameDepartmentStoreIncomeCashOperation,
                  numberCashRegisterIncomeCashOperation, sumCashIncomeCashOperation, basisIncomeCashOperation

    EDIT IncomeCashOperation OBJECT i
;

DESIGN incomeCashOperation FROM DEFAULT {
    NEW topContainer{
        type = CONTAINERH;
        NEW firstCase{
            type = CONTAINERH;
            caption = 'Шапка документа';
            ADD PROPERTY(numberCashRegisterIncomeCashOperation);
            ADD PROPERTY(numberIncomeCashOperation);
            ADD PROPERTY(seriesIncomeCashOperation);
            ADD PROPERTY(dateIncomeCashOperation);
            ADD PROPERTY(timeIncomeCashOperation);
        }
        NEW secondCase{
            caption = 'Параметры документа';
            ADD PROPERTY(nameDepartmentStoreIncomeCashOperation);
            ADD PROPERTY(basisIncomeCashOperation);
        }
        NEW thirdCase{
            caption = 'Суммы';
            ADD PROPERTY(sumCashIncomeCashOperation);
        }
    }
    ADD functions.box;
}

addIncomeCashOperationForm 'Внесение денег' () = ACTION () NEWSESSION {

    ASSIGN sessionDepartmentStore() <- NULL;
    ASSIGN sessionDepartmentStore() <- departmentStoreCashRegister(currentCashRegister());
    FORM addIncomeCashOperation OBJECTS d = sessionDepartmentStore() MODAL;
    IF formResult() == FormResult.ok THEN {
        FOR sumCashForIncomeCashOperation(cashRegister) DO {
            FOR ADDOBJ c = IncomeCashOperation DO {
                cashRegisterIncomeCashOperation(c) <- cashRegister;
                departmentStoreIncomeCashOperation(c) <- departmentStoreCashRegister(cashRegister);
                sumCashIncomeCashOperation(c) <- sumCashForIncomeCashOperation(cashRegister);
                generateSeriesNumberIncomeCashOperation(c);
                fiscalServiceCashRegisterCashOperation(c);
            }
        }
        EXEC apply();
    }
    ASSIGN sessionDepartmentStore() <- NULL;
} TOOLBAR;

editIncomeCashOperation 'Редактировать' (incomeCashOperation) = ACTION EDITFORM IncomeCashOperation;

sumCashForOutcomeCashOperation 'Сумма изъятия денег' = DATA SESSION NUMERIC[16,2] (CashRegister);

FORM addOutcomeCashOperation 'Изъятие денег'

    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES(dt) date = OBJVALUE

    OBJECTS t = TIME FIXED PANEL
    PROPERTIES(t) time = OBJVALUE

    OBJECTS d = DepartmentStore FIXED PANEL
    PROPERTIES(d) nameDepartmentStore SELECTOR

    OBJECTS c = CashRegister
    PROPERTIES(c) READONLY numberCashRegister
    PROPERTIES(c) sumCashForOutcomeCashOperation

    FILTERS departmentStoreCashRegister(c) == d
    FILTERGROUP filtersCashRegister
        FILTER 'Только для текущей кассы' 'F9' c==currentCashRegister() DEFAULT;

;

DESIGN addOutcomeCashOperation FROM DEFAULT {
    NEW topContainer {
        type = SPLITV;
        NEW firstCase {
            type = CONTAINERH;
            NEW dateTimeContainer{
                caption = 'Дата/время';
                ADD PROPERTY(date);
                ADD PROPERTY(time);
            }
            ADD d.box;
        }
        ADD c.box;
    }
    ADD functions.box;
}

FORM outcomeCashOperation 'Изъятие денег'

    OBJECTS o = OutcomeCashOperation FIXED PANEL
    PROPERTIES(o) numberOutcomeCashOperation, seriesOutcomeCashOperation, dateOutcomeCashOperation, timeOutcomeCashOperation, nameDepartmentStoreOutcomeCashOperation,
                  numberCashRegisterOutcomeCashOperation, sumCashOutcomeCashOperation, basisOutcomeCashOperation

    EDIT OutcomeCashOperation OBJECT o;
;

DESIGN outcomeCashOperation FROM DEFAULT {
    NEW topContainer{
        type = CONTAINERH;
        NEW firstCase{
            type = CONTAINERH;
            caption = 'Шапка документа';
            ADD PROPERTY(numberCashRegisterOutcomeCashOperation);
            ADD PROPERTY(numberOutcomeCashOperation);
            ADD PROPERTY(seriesOutcomeCashOperation);
            ADD PROPERTY(dateOutcomeCashOperation);
            ADD PROPERTY(timeOutcomeCashOperation);
        }
        NEW secondCase{
            caption = 'Параметры документа';
            ADD PROPERTY(nameDepartmentStoreOutcomeCashOperation);
            ADD PROPERTY(basisOutcomeCashOperation);
        }
        NEW thirdCase{
            caption = 'Суммы';
            ADD PROPERTY(sumCashOutcomeCashOperation);
        }
    }
    ADD functions.box;
}

addOutcomeCashOperationForm 'Изъятие денег' () = ACTION () NEWSESSION {
    ASSIGN sessionDepartmentStore() <- NULL;
    ASSIGN sessionDepartmentStore() <- departmentStoreCashRegister(currentCashRegister());
    FORM addOutcomeCashOperation OBJECTS d = sessionDepartmentStore() MODAL;
    IF formResult() == FormResult.ok THEN {
        FOR sumCashForOutcomeCashOperation(cashRegister) DO {
            ADDOBJ OutcomeCashOperation;
            FOR c == addedObject() DO {
                cashRegisterOutcomeCashOperation(c) <- cashRegister;
                departmentStoreOutcomeCashOperation(c) <- departmentStoreCashRegister(cashRegister);
                sumCashOutcomeCashOperation(c) <- sumCashForOutcomeCashOperation(cashRegister);
                generateSeriesNumberOutcomeCashOperation(c);
                fiscalServiceCashRegisterCashOperation(c);
            }
        }
        EXEC apply();
    }
    ASSIGN sessionDepartmentStore() <- NULL;
} TOOLBAR;

editOutcomeCashOperation 'Редактировать' (outcomeCashOperation) = ACTION EDITFORM OutcomeCashOperation;

FORM operationCashRegister 'Кассовые операции'

    OBJECTS interval = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES objFrom = OBJVALUE(dFrom), objTo = OBJVALUE(dTo)

    PROPERTIES numberCurrentCashRegister() TODRAW interval FORCE PANEL

    OBJECTS c = CashOperation
    PROPERTIES(c) READONLY objectClassName, numberCashOperation, dateCashOperation, timeCashOperation,
                           numberCashRegisterCashOperation, sumCashOperation, basisCashOperation
    PROPERTIES(c) DELETE
    PROPERTIES(c) isCompleteCashOperation FORCE GRID
    PROPERTIES addIncomeCashOperationForm() TODRAW c FORCE PANEL TOOLBAR
    PROPERTIES addOutcomeCashOperationForm() TODRAW c FORCE PANEL TOOLBAR
    PROPERTIES editIncomeCashOperation(c) SHOWIF isIncomeCashOperation(c)
    PROPERTIES editOutcomeCashOperation(c) SHOWIF isOutcomeCashOperation(c)

    FILTERS dateCashOperation(c) >= dFrom,
            dateCashOperation(c) <= dTo

    PROPERTIES fiscalXReport() SHOWIF currentCashRegister()
    ORDER BY dateCashOperation, timeCashOperation
;

DESIGN operationCashRegister FROM DEFAULT {

    NEW top {
        type = CONTAINERH;
        ADD interval.box {
            caption = 'Шапка документа';
            type = CONTAINERH;
            PROPERTY(objFrom) {
                caption = 'Дата (с)';
            }
            PROPERTY(objTo) {
                caption = 'Дата (по)';
            }
        }
    }

    NEW actions {
        caption = 'Действия с кассой';
        type = CONTAINERH;
        ADD PROPERTY(fiscalXReport) { font = '24'; }
    }
    ADD c.box;
    ADD functions.box;
}

FORM centralCashRegister 'Центральная касса'

    OBJECTS interval = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES objFrom = OBJVALUE(dFrom), objTo = OBJVALUE(dTo)

    OBJECTS d = DepartmentStore FIXED PANEL
    PROPERTIES(d) nameDepartmentStore SELECTOR
    PROPERTIES(d) READONLY curSumCashDepartmentStore

    OBJECTS i = IncomeCashOrder
    PROPERTIES(i) READONLY objectClassName, numberCashDocument, dateCashDocument, timeCashDocument, nameDepartmentStoreCashDocument,
                           numberCashRegisterCashDocument, sumCashIncomeCashOrder, basisCashDocument, isPrintedIncomeCashOrder
    PROPERTIES(i) READONLY isCompleteCashOperation FORCE GRID
    PROPERTIES addOutcomeCashOperationForm() TODRAW i FORCE PANEL TOOLBAR
    PROPERTIES editOutcomeCashOperation(i) SHOWIF isOutcomeCashOperation(i)
    PROPERTIES(i) DELETE
    ORDER BY dateCashDocument, timeCashDocument

    FILTERS departmentStoreCashDocument(i) == d,
            dateCashDocument(i) >= dFrom,
            dateCashDocument(i) <= dTo

    OBJECTS o = OutcomeCashOrder
    PROPERTIES(o) READONLY numberCashDocument, dateCashDocument, timeCashDocument, nameDepartmentStoreCashDocument,
                           numberCashRegisterCashDocument, sumCashOutcomeCashOrder, basisCashDocument, isPrintedOutcomeCashOrder
    PROPERTIES addIncomeCashOperationForm() TODRAW o FORCE PANEL TOOLBAR
    PROPERTIES addCollectionForm() TODRAW o FORCE PANEL TOOLBAR
    PROPERTIES editIncomeCashOperation(o) SHOWIF isIncomeCashOperation(o)
    PROPERTIES editCollection(o) SHOWIF isCollection(o)
    PROPERTIES(o) DELETE
    ORDER BY dateCashDocument(o), timeCashDocument(o)
    FILTERS departmentStoreCashDocument(o) == d,
            dateCashDocument(o) >= dFrom,
            dateCashDocument(o) <= dTo,
            isPostedCashDocument(i),
            isPostedCashDocument(o)
;
@extendFormFilterStockAccess(DepartmentStore, d, centralCashRegister);

DESIGN centralCashRegister FROM DEFAULT {

    NEW top {
        type = CONTAINERH;
        ADD interval.box {
            caption = 'Период';
            type = CONTAINERH;
            PROPERTY(objFrom) {
                caption = 'Дата (с)';
            }
            PROPERTY(objTo) {
                caption = 'Дата (по)';
            }
        }
        ADD d.box;
    }

    NEW center {
        fill = 1;
        type = SPLITV;
        ADD i.box{
            caption = 'ПКО';
        }
        ADD o.box{
            caption = 'РКО';
        }
    }
    ADD functions.box;
}