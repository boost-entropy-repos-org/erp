MODULE SalePurchasePriceLimit;

REQUIRE PurchasePriceLimit, PricingSalePurchase;

NAMESPACE Sale;

//------------------ Предельные надбавки ----------------------//

@defineDocumentInterfaceProperty (invoice, showPurchaseLimitPrice, 'Предельная надбавка');
@defineDocumentInterfaceDetailMarkupPrefix (invoice, purchaseLimit, ' (закупка) предельная');

purchaseLimitMarkup(UserInvoiceDetail detail) <- markup(priceLimitPriceListType(customerStock(detail)), sku(detail))
    WHEN CHANGED (customerStock(detail)) OR
         CHANGED (sku(detail));

changePurchaseLimitMarkup(UserInvoiceDetail detail) = {
    INPUT n = NUMERIC[8,2] DO
        dataMarkup(CalcPriceListType t, Sku s) <- n WHERE t == priceLimitPriceListType(customerStock(detail)) AND s == sku(detail);
}

//----------------------------------------------- Операции -----------------------------------------------------//

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции
showPurchaseLimitPrice (UserInvoice invoice) <- showLimitPrice(purchasePricingOperation(invoice))
    WHEN CHANGED(purchasePricingOperation(invoice));

EXTEND FORM userInvoice
    PROPERTIES(i) showPurchaseLimitPrice SHOWIF createPurchasePricing(i)
    PROPERTIES(d) SHOWIF showPurchaseLimitPrice(i) BEFORE purchaseRetailMarkup(d) purchaseLimitMarkup ON CHANGE changePurchaseLimitMarkup(d)
;
DESIGN userInvoice{
    headerCreateSalePricing {
        MOVE PROPERTY (showPurchaseLimitPrice(i));
    }
}

EXTEND FORM invoices
    PROPERTIES(d) READONLY SHOWIF showPurchaseLimitPrice(i) BEFORE purchaseRetailMarkup(d) purchaseLimitMarkup//, overLimitPriceUserInvoiceDetail
;

// Имплементим для расчета оптимальной розничной цены

overLimitPrice (UserInvoiceDetail detail) += round([= X*(Y+100)*(Z+100)/10000](
                                                purchasePricingPrice(detail),
                                                purchaseLimitMarkup(detail),
                                                valuePurchaseRetailVAT(detail)), roundCondition(priceLimitPriceListType(customerStock(detail)), sku(detail)))
                                            IF showPurchaseLimitPrice(detail);

showLimitPrice(PurchaseInvoice invoice) += showPurchaseLimitPrice(invoice(invoice));
limitMarkup(PurchaseInvoiceDetail detail) += purchaseLimitMarkup(invoiceDetail(detail));


