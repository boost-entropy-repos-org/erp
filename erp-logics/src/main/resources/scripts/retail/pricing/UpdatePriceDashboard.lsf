MODULE UpdatePriceDashboard;

REQUIRE Barcode, Pricing, Label, MachineryPriceTransaction;

NAMESPACE Pricing;

FORM priceLabelTransactionDetails 'Цена на ценниках' 
    
    OBJECTS s = Sku FIXED PANEL 
    PROPERTIES READONLY nameSku(s)
    OBJECTS st = Stock FIXED PANEL     
    
    OBJECTS d = LabelTransactionDetail FIXED GRID
    PROPERTIES READONLY dateLabelTransactionDetail(d), timeLabelTransactionDetail(d), nameLabelTypeLabelTransactionDetail(d), priceLabelTransactionDetail(d)
    ORDER BY dateLabelTransactionDetail(d), timeLabelTransactionDetail(d)
    FILTERS skuLabelTransactionDetail(d) == s,
            departmentStoreLabelTransactionDetail(d) == st
;
showPriceLabelTransactionDetailSkuStock 'Показать изменение цены' (sku, stock) = ACTION FORM priceLabelTransactionDetails OBJECTS s = sku, st = stock MODAL SHORTCUT priceLabelTransactionDetailSkuDepartmentStore;

FORM priceMachineryPriceTransactionBarcode 'Цена в оборудовании' 
    
    OBJECTS b = Barcode FIXED PANEL 
    PROPERTIES READONLY nameSkuBarcode(b)
    OBJECTS st = Stock FIXED PANEL     
    
    OBJECTS t= MachineryPriceTransaction FIXED GRID
    PROPERTIES READONLY dateMachineryPriceTransaction(t), timeMachineryPriceTransaction(t), nameGroupMachineryMachineryPriceTransaction(t), nameMachineryPriceTransactionBarcode(t,b), priceMachineryPriceTransactionBarcode(t,b)
    ORDER BY dateMachineryPriceTransaction(t), timeMachineryPriceTransaction(t)
    
    FILTERS stockGroupMachinery(groupMachineryMachineryPriceTransaction(t)) == st,
            inMachineryPriceTransactionBarcode(t,b),
            NOT canceledMachineryPriceTransaction(t)
;
showPriceMachineryPriceTransactionSkuStock 'Показать изменение цены' (sku, stock) = ACTION FORM priceMachineryPriceTransactionBarcode OBJECTS b = barcodeSku(sku), st = stock MODAL SHORTCUT transactionPriceSkuStock;


showMovementPriceSkuSkuStocks 'Показать изменение цены товара' (sku, stock) = ACTION (sku, stock)  {
    dialogPriceListTypeSkuStock(sku, stock) <- SystemLedgerPriceListType.retailPricingPriceListType;
    FORM movementPriceSkuStock OBJECTS s = sku, st = stock MODAL;
} SHORTCUT retailPricingPriceASkuStock;

FORM updatePriceDashboard 'Обновление розничных цен'
    OBJECTS d = DepartmentStore FIXED PANEL
    PROPERTIES(d) nameDepartmentStore SELECTOR
    FILTERS isCompanyStock(d)
    
    TREE skuGroupTree sg=SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY orderSkuGroup(sg), nameSkuGroup(sg)
    ORDER BY orderSkuGroup(sg), nameSkuGroup(sg)
    FILTERGROUP sginactive FILTER 'Активные' activeSkuGroup(sg) 'F5' DEFAULT

    OBJECTS sk = Sku
    PROPERTIES(sk) selectSku
    PROPERTIES(sk) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    PROPERTIES(sk, d) READONLY currentBalanceSkuStock, retailPricingDescriptionASkuStock, retailPricingPriceASkuStock, priceLabelTransactionDetailSkuDepartmentStore, transactionPriceSkuStock
    PROPERTIES(d) TODRAW sk printSelectedSkuLabelTransactionDepartmentStore, printSelectedSkuSnapshotLabelTransactionDepartmentStore, createSelectedSkuPriceTransactionDocumentStock
    FILTERS isParentSkuGroupSku(sg, sk)
    ORDER BY nameSku(sk)
    FILTERGROUP inactive FILTER 'Активные' activeSku(sk) 'F5' DEFAULT
    FILTERGROUP diffPrice
        FILTER 'Ценники' retailPricingPriceASkuStock(sk, d) AND NOT retailPricingPriceASkuStock(sk, d) == priceLabelTransactionDetailSkuDepartmentStore(sk, d) 'F11' 
        FILTER 'Оборудование' retailPricingPriceASkuStock(sk, d) AND barcodeSku(sk) AND NOT retailPricingPriceASkuStock(sk, d) == transactionPriceSkuStock(sk, d) 'F10'
        FILTER 'Ценники и оборуд.' retailPricingPriceASkuStock(sk, d) 
                                                            AND (NOT (retailPricingPriceASkuStock(sk, d) == priceLabelTransactionDetailSkuDepartmentStore(sk, d)) OR 
                                                                 (barcodeSku(sk) AND NOT retailPricingPriceASkuStock(sk, d) == transactionPriceSkuStock(sk, d))) 'F9' DEFAULT 
    PROPERTIES() READONLY countSelectSkus SHOWIF countSelectSkus() TODRAW sk                                                                                 
;

@extendFormFilterStockAccess(d, updatePriceDashboard);

DESIGN updatePriceDashboard {
    NEW header {
        type = CONTAINERH;
        ADD d.box;
    }
    
    NEW pane {
        fill = 1;
        type = SPLITH;
        ADD skuGroupTree.tree.box;
        ADD sk.box {
            fill = 3;
        }
    }
    
    ADD functions.box;
}

NAVIGATOR { 
    purchaseDashboardNavigator {
        ADD updatePriceDashboard;
    }
}
