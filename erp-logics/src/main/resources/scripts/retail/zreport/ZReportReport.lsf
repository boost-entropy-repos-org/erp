MODULE ZReportReport;

REQUIRE ZReport;

NAMESPACE ZReport;

inReportStock 'Отм.' = DATA LOCAL BOOLEAN (Stock);

sumReceiptDetailZReportDateDateFromTo 'Сумма Z-отчета' (date, dateFrom, dateTo)= GROUP SUM sumReceiptDetailZReport(zReport) IF 
    dateZReport(zReport) >= (dateFrom AS DATE) AND dateZReport(zReport) <= (dateTo AS DATE) AND isPostedZReport(zReport) AND
    inReportStock(departmentStoreZReport(zReport))
        BY dateZReport(zReport), dateFrom, dateTo;
    
sumReceiptDetailZReportStockDate 'Сумма Z-отчета' (stock, date)= GROUP SUM sumReceiptDetailZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport);

sumPositiveCashPaymentZReportStockDate 'Сумма продажа (наличные)' (stock, date)= GROUP SUM sumPositiveCashPaymentZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport);
sumPositiveCardPaymentZReportStockDate 'Сумма продажа (карточка)' (stock, date)= GROUP SUM sumPositiveCardPaymentZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport);
discountSumReceiptDetailZReportStockDate 'Сумма скидок Z-отчета по строкам чека' (stock, date)= GROUP SUM discountSumReceiptDetailZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport);        
discountSumZReportStockDate 'Сумма скидок Z-отчета' (stock, date)= GROUP SUM discountSumZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport);        
VATSumSaleZReportStockDate 'Сумма НДС по продажам' (stock, date)= GROUP SUM sumVATReceiptDetailZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport);    
              
sumNegativeCashPaymentZReportStockDate 'Сумма возврата (наличные)' (stock, date)= GROUP SUM sumNegativeCashPaymentZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport); 
sumNegativeCardPaymentZReportStockDate 'Сумма возврата (карточка)' (stock, date)= GROUP SUM sumNegativeCardPaymentZReport(zReport) IF isPostedZReport(zReport)
        BY departmentStoreZReport(zReport), dateZReport(zReport);  

nameReceiptDetailZReportStock (stock)= nameStock(stock) + ' (сумма Z-отчета)';    
namePositiveCashStock (stock)= nameStock(stock) + ' (сумма продажа (наличные))';    
namePositiveCardStock (stock)= nameStock(stock) + ' (сумма продажа (карточка))';    
nameGiftCardStock (stock)= nameStock(stock) + ' (сумма продаж (сертификат))';    
nameReceiptDetailGiftCardStock (stock) = nameStock(stock) + ' (сумма проданных сертификатов)';    
nameDiscountSumStock (stock)= nameStock(stock) + ' (сумма скидок)';    
nameVATSumSaleStock (stock)= nameStock(stock) + ' (сумма НДС по продажам)';        
                                  
nameNegativeCashStock (stock)= nameStock(stock) + ' (сумма возврата (наличные)';    
nameNegativeCardStock (stock)= nameStock(stock) + ' (сумма возврата (карточка)';    
nameVATSumReturnStock (stock)= nameStock(stock) + ' (сумма НДС по возвратам)';                                     
countReceiptDepartmentStoreDate 'Кол-во чеков в магазине за день' (departmentStore, date) = 
    GROUP SUM countReceiptZReport(zReport) IF isPostedZReport(zReport) BY departmentStoreZReport(zReport), dateZReport(zReport);
    
countReturnReceiptZReport 'Кол-во возвратных чеков' (o) =
    GROUP SUM 1 IF [ = GROUP SUM 1 BY receiptReceiptReturnDetail(d) ](d) BY zReportReceipt(d) PERSISTENT IN documentSum;
    
countReturnReceiptDepartmentStoreDate 'Кол-во возвратных чеков за день' (departmentStore, date) = 
    GROUP SUM countReturnReceiptZReport(zReport) IF isPostedZReport(zReport) BY departmentStoreZReport(zReport), dateZReport(zReport);    

countFiscalReceiptDepartmentStoreDate 'Кол-во фискальных чеков за день' = countReceiptDepartmentStoreDate(departmentStore, date) (-) countReturnReceiptDepartmentStoreDate(departmentStore, date);    
    
averageSumReceiptDepartmentStoreDate 'Средняя сумма чека в магазине за день' (departmentStore, date) = 
    sumReceiptDetailZReportStockDate(departmentStore, date) / countReceiptDepartmentStoreDate(departmentStore, date);

countReceiptDetailZReport (zReport) = GROUP SUM countReceiptDetailReceipt(receipt) BY zReportReceipt(receipt);
countReceiptDetailDepartmentStoreDate 'Кол-во позиций чеков в магазине за период' (departmentStore, date) =
    GROUP SUM countReceiptDetailZReport(zReport) IF isPostedZReport(zReport) BY departmentStoreZReport(zReport), dateZReport(zReport);
averageCountReceiptDetailDepartmentStoreDate 'Среднее кол-во позиций в чеке в магазине за париод' (departmentStore, date) = 
    NUMERIC[14,2](countReceiptDetailDepartmentStoreDate(departmentStore, date)) / NUMERIC[14,2](countReceiptDepartmentStoreDate(departmentStore, date));
    
countReceiptStock (stock)= nameStock(stock) + ' (кол-во чеков)';        
averageSumReceiptStock (stock)= nameStock(stock) + ' (cредняя сумма чека)';        
countReceiptDetailStock (stock)= nameStock(stock) + ' (кол-во позиций чеков)';
averageCountReceiptDetailStock (stock)= nameStock(stock) + ' (среднее кол-во позиций в чеке)'; 
countFiscalReceiptStock (stock)= nameStock(stock) + ' (фискальных чеков)';      
  
                         
sumReceiptDetailZReportStocksDate 'Сумма Z-отчета' = GROUP SUM sumReceiptDetailZReportStockDate(st,dt) IF inReportStock(st) BY dt;
sumPositiveCashPaymentZReportStocksDate 'Сумма продажа (наличные)' = GROUP SUM sumPositiveCashPaymentZReportStockDate(st,dt) IF inReportStock(st) BY dt;
sumPositiveCardPaymentZReportStocksDate 'Сумма продажа (карточка)' = GROUP SUM sumPositiveCardPaymentZReportStockDate(st,dt) IF inReportStock(st) BY dt;
discountSumZReportStocksDate 'Сумма скидок Z-отчета' = GROUP SUM discountSumZReportStockDate(st,dt) IF inReportStock(st) BY dt;
VATSumSaleZReportStocksDate 'Сумма НДС по продажам' = GROUP SUM VATSumSaleZReportStockDate(st,dt) IF inReportStock(st) BY dt;
sumNegativeCashPaymentZReportStocksDate  'Сумма возврата (наличные)' = GROUP SUM sumNegativeCashPaymentZReportStockDate(st,dt) IF inReportStock(st) BY dt;
sumNegativeCardPaymentZReportStocksDate 'Сумма возврата (карточка)' = GROUP SUM sumNegativeCardPaymentZReportStockDate(st,dt) IF inReportStock(st) BY dt;
countReceiptStocksDate 'Кол-во чеков в магазине за день' = GROUP SUM countReceiptDepartmentStoreDate(st,dt) IF inReportStock(st) BY dt;
countFiscalReceiptStocksDate 'Кол-во фискальных чеков за день' = GROUP SUM countFiscalReceiptDepartmentStoreDate(st,dt) IF inReportStock(st) BY dt;
averageSumReceiptStocksDate 'Средняя сумма чека в магазине за день' (date) =     sumReceiptDetailZReportStocksDate(date) / countReceiptStocksDate(date);    
countReceiptDetailStocksDate 'Кол-во позиций чеков в магазине за период' = GROUP SUM countReceiptDetailDepartmentStoreDate(st,dt) IF inReportStock(st) BY dt;
sumReceiptDetailZReportDate 'Сумма Z-отчета' = GROUP SUM sumReceiptDetailZReportStockDate(st,dt) IF inReportStock(st) BY dt;
averageCountReceiptDetailStocksDate 'Среднее кол-во позиций в чеке в магазине за париод' (date) =  NUMERIC[14,2](countReceiptDetailStocksDate(date)) / NUMERIC[14,2](countReceiptStocksDate(date));

allStocks 'Только итоги' = DATA LOCAL BOOLEAN ();
showPropertyDepartmentStore = ds IS DepartmentStore AND NOT allStocks();
        
FORM saleZreportStock 'Отчет по магазинам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo), allStocks()        
     
    OBJECTS ts = DepartmentStore FIXED GRID
    PROPERTIES nameStock(ts) READONLY, nameLegalEntityStock(ts) READONLY, inReportStock(ts)
    ORDER BY nameStock(ts)
    FILTERS isCompanyStock(ts)     
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(ts) 'ctrl F10' DEFAULT  
    
    OBJECTS st = DepartmentStore FIXED GRID     
    FILTERS isCompanyStock(st),
            inReportStock(st)   
    
    OBJECTS sts = DepartmentStore FIXED GRID     
    FILTERS isCompanyStock(sts),
            inReportStock(sts)            
         
    OBJECTS d = DATE FIXED GRID
    PROPERTIES READONLY OBJVALUE(d)
    PROPERTIES(d) READONLY extractMonthName, extractDOWName     
    FILTERS    sumReceiptDetailZReportDateDateFromTo(d,dFrom,dTo)       
    
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(sts) sumReceiptDetailZReportStockDate(sts,d)  COLUMNS (sts) HEADER nameReceiptDetailZReportStock(sts)
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(sts) discountSumZReportStockDate(sts,d)  COLUMNS (sts) HEADER nameDiscountSumStock(sts)                                 

    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(sts) countReceiptDepartmentStoreDate(sts,d) COLUMNS (sts) HEADER countReceiptStock(sts)    
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(sts) countFiscalReceiptDepartmentStoreDate(sts,d) COLUMNS (sts) HEADER countFiscalReceiptStock(sts)                                 
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(sts) averageSumReceiptDepartmentStoreDate(sts,d) COLUMNS (sts) HEADER averageSumReceiptStock(sts)      
//--                               
    PROPERTIES READONLY SHOWIF allStocks() sumReceiptDetailZReportStocksDate(d) 
    PROPERTIES READONLY SHOWIF allStocks() discountSumZReportStocksDate(d)                                       
    
    PROPERTIES READONLY SHOWIF allStocks() countReceiptStocksDate(d)  
    PROPERTIES READONLY SHOWIF allStocks() countFiscalReceiptStocksDate(d)                               
    PROPERTIES READONLY SHOWIF allStocks() averageSumReceiptStocksDate(d)                              
                               
    
    OBJECTS dt = DATE FIXED GRID
    PROPERTIES READONLY valDt = OBJVALUE(dt)
    PROPERTIES(dt) READONLY extractMonthName, extractDOWName 
    
    FILTERS    sumReceiptDetailZReportDateDateFromTo(dt,dFrom,dTo)
                         
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) sumReceiptDetailZReportStockDate(st,dt)  COLUMNS (st) HEADER nameReceiptDetailZReportStock(st)
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) sumPositiveCashPaymentZReportStockDate(st,dt)  COLUMNS (st) HEADER namePositiveCashStock(st)
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) sumPositiveCardPaymentZReportStockDate(st,dt)  COLUMNS (st) HEADER namePositiveCardStock(st)                                    
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) discountSumZReportStockDate(st,dt)  COLUMNS (st) HEADER nameDiscountSumStock(st)                                 
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) VATSumSaleZReportStockDate(st,dt)  COLUMNS (st) HEADER nameVATSumSaleStock(st)   
                                  
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) sumNegativeCashPaymentZReportStockDate(st,dt)  COLUMNS (st) HEADER nameNegativeCashStock(st)                                 
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) sumNegativeCardPaymentZReportStockDate(st,dt)  COLUMNS (st) HEADER nameNegativeCardStock(st)                             
    
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) countReceiptDepartmentStoreDate(st,dt) COLUMNS (st) HEADER countReceiptStock(st)   
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) countFiscalReceiptDepartmentStoreDate(st,dt) COLUMNS (st) HEADER countFiscalReceiptStock(st)                                 
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) averageSumReceiptDepartmentStoreDate(st,dt) COLUMNS (st) HEADER averageSumReceiptStock(st)                                 
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) countReceiptDetailDepartmentStoreDate(st,dt) COLUMNS (st) HEADER countReceiptDetailStock(st)                                 
    PROPERTIES READONLY SHOWIF showPropertyDepartmentStore(st) averageCountReceiptDetailDepartmentStoreDate(st,dt) COLUMNS (st) HEADER averageCountReceiptDetailStock(st)   

//-- Итоги
    PROPERTIES READONLY SHOWIF allStocks() sumReceiptDetailZReportStocksDate(dt) 
    PROPERTIES READONLY SHOWIF allStocks() sumPositiveCashPaymentZReportStocksDate(dt) 
    PROPERTIES READONLY SHOWIF allStocks() sumPositiveCardPaymentZReportStocksDate(dt)                                  
    PROPERTIES READONLY SHOWIF allStocks() discountSumZReportStocksDate(dt)                 
    PROPERTIES READONLY SHOWIF allStocks() VATSumSaleZReportStocksDate(dt)    
                                  
    PROPERTIES READONLY SHOWIF allStocks() sumNegativeCashPaymentZReportStocksDate(dt)                
    PROPERTIES READONLY SHOWIF allStocks() sumNegativeCardPaymentZReportStocksDate(dt)                            
    
    PROPERTIES READONLY SHOWIF allStocks() countReceiptStocksDate(dt)  
    PROPERTIES READONLY SHOWIF allStocks() countFiscalReceiptStocksDate(dt)                               
    PROPERTIES READONLY SHOWIF allStocks() averageSumReceiptStocksDate(dt)                              
    PROPERTIES READONLY SHOWIF allStocks() countReceiptDetailStocksDate(dt)                                 
    PROPERTIES READONLY SHOWIF allStocks() averageCountReceiptDetailStocksDate(dt)   
                                       
    FILTERS (ts IS DepartmentStore AND NOT limitAccessEmployee(currentUser())) OR accessCompanyEmployeeStock(currentUser(),ts);
;

DESIGN saleZreportStock {

    MOVE dates.box {
        caption = 'Период';
        type = CONTAINERH;
        MOVE PROPERTY (allStocks());
    }

    REMOVE st.box;
    NEW detail {
        type = SPLITH;
        fill = 1;
        MOVE ts.box;
        NEW tab {
            fill = 3;
            type = TABBED;
            MOVE d.box {
                caption = 'Краткий';
            } 
            MOVE dt.box {
                caption = 'Детализированный';
            }                       
        }
        PROPERTY(discountSumZReportStockDate(sts,d)) { background = #EEFFEE; }          
        PROPERTY(discountSumZReportStocksDate(d)) { background = #EEFFEE; }  
        

        PROPERTY(sumPositiveCashPaymentZReportStockDate(st,dt)) { background = #FFEEEE; } 
        PROPERTY(sumPositiveCardPaymentZReportStockDate(st,dt)) { background = #F4FFBD; }    

        PROPERTY(discountSumZReportStockDate(st,dt)) { background = #EEFFEE; }  
        PROPERTY(VATSumSaleZReportStockDate(st,dt)) { background = #E4FFBD; }             
        
        PROPERTY(sumNegativeCashPaymentZReportStockDate(st,dt)) { background = #D4FFFF; }              
        PROPERTY(sumNegativeCardPaymentZReportStockDate(st,dt)) { background = #C4FFBD; }    
                  
//-- итоги                  
        PROPERTY(sumPositiveCashPaymentZReportStocksDate(dt)) { background = #FFEEEE; } 
        PROPERTY(sumPositiveCardPaymentZReportStocksDate(dt)) { background = #F4FFBD; }    

        PROPERTY(discountSumZReportStocksDate(dt)) { background = #EEFFEE; }  
        PROPERTY(VATSumSaleZReportStocksDate(dt)) { background = #E4FFBD; }             
        
        PROPERTY(sumNegativeCashPaymentZReportStocksDate(dt)) { background = #D4FFFF; }              
        PROPERTY(sumNegativeCardPaymentZReportStocksDate(dt)) { background = #C4FFBD; }                                                         
    }                                                                                
    MOVE functions.box;
}

NAVIGATOR {
    retailReports  {
        ADD saleZreportStock;
    }
}

divider 'Диапозон суммы'  = DATA LOCAL NUMERIC[16,2] ();

dividerReceipt 'Диапозон суммы' (r)  = INTEGER (sumReceiptDetailReceipt(r) / divider())*divider();

filterReceiptSumFrom 'Сумма с' = DATA LOCAL NUMERIC[16,2] ();
filterSumFromReceipt (r) = sumReceiptDetailReceipt(r) >= filterReceiptSumFrom() OR (r IS Receipt AND NOT filterReceiptSumFrom());   

filterReceiptSumTo 'Сумма по' = DATA LOCAL NUMERIC[16,2] ();
filterSumToReceipt (r) = sumReceiptDetailReceipt(r) <= filterReceiptSumTo() OR (r IS Receipt AND NOT filterReceiptSumTo());   

FORM receiptListPeriod 'Реестр чеков'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)     
       
    PROPERTIES () filterReceiptSumFrom, filterReceiptSumTo, divider
    
    OBJECTS st = DepartmentStore FIXED PANEL 
    PROPERTIES nameStock(st) SELECTOR 
    FILTERS isCompanyStock(st), activeStock(st)    
    
    OBJECTS r = Receipt
    PROPERTIES(r) READONLY  nameDepartmentStoreReceipt, numberReceipt, dateReceipt, timeReceipt, numberCashRegisterReceipt, nameEmployeeReceipt,
                            sumReceiptDetailReceipt, discountSumReceiptDetailReceipt,
                            discountSumReceipt, sumVATReceiptDetailReceipt, countReceiptDetailReceipt, quantityReceiptDetailReceipt,
                            sumCashPaymentReceipt, sumCardPaymentReceipt, dividerReceipt SHOWIF divider()
    ORDER BY dateReceipt(r), timeReceipt(r)                                            
    FILTERS dateReceipt(r) >= dFrom,
            dateReceipt(r) <= dTo,
            isPostedReceipt(r),
            filterSumFromReceipt(r),
            filterSumToReceipt(r)
            
    FILTERGROUP department
        FILTER 'По магазину' departmentStoreReceipt(r) == st 'F9' DEFAULT
;
DESIGN receiptListPeriod {
    main {
        NEW top {
            type = CONTAINERH;
            MOVE dates.box {caption ='Период';}
            MOVE st.box;
        }
        NEW mid {
            type = CONTAINERH;
         
            NEW filter {
                type = CONTAINERH;
                caption = 'Фильтры';
                MOVE PROPERTY (filterReceiptSumFrom());
                MOVE PROPERTY (filterReceiptSumTo());
            }
            NEW mid1 {
                caption = 'Делитель';
                MOVE PROPERTY (divider());
            }
        }
        MOVE r.box;
        MOVE functions.box;
    }
}
@extendFormFilterStockAccess(st, receiptListPeriod, company);
@extendFormFilterAccessStock(receipt, r, receiptListPeriod, departmentStore, company);

NAVIGATOR {
    retailReports  {
        ADD receiptListPeriod;
    }
}
