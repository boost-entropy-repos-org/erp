MODULE ReceiptSkuLedger;

REQUIRE ZReport,SkuLedger;
   
//---------------------- Продажа ----------------//
CLASS ReceiptSaleSkuLedger 'Продажа за день (общ.)' : OutFIFOSkuLedger, SaleLedger; //-- агрегированный объект
TABLE ReceiptSaleSkuLedger (ReceiptSaleSkuLedger);
TABLE departmentStoreSkuDatePrice(DepartmentStore, Sku, DATE, NUMERIC[14,2]);

quantityReceiptSaleDetailDepartmentSkuDatePrice 'Кол-во' (department, sku, date, price) = GROUP SUM quantityReceiptSaleDetail(d) IF isPostedReceiptSaleDetail(d)
    BY departmentStoreReceiptSaleDetail(d), skuReceiptSaleDetail(d), dateZReportReceiptSaleDetail(d), priceReceiptSaleDetail(d) PERSISTENT;
sumReceiptSaleDetailDepartmentSkuDatePrice 'Сумма' (department, sku, date, price) = GROUP SUM sumReceiptSaleDetail(d) IF isPostedReceiptSaleDetail(d)
    BY departmentStoreReceiptSaleDetail(d), skuReceiptSaleDetail(d), dateZReportReceiptSaleDetail(d), priceReceiptSaleDetail(d) PERSISTENT;
discountSumReceiptSaleDetailDepartmentSkuDatePrice 'Сумма скидки' (department, sku, date, price) = GROUP SUM discountSumReceiptSaleDetail(d) IF isPostedReceiptSaleDetail(d)
    BY departmentStoreReceiptSaleDetail(d), skuReceiptSaleDetail(d), dateZReportReceiptSaleDetail(d), priceReceiptSaleDetail(d) PERSISTENT;
countReceiptSaleDetailDepartmentStoreSkuDatePrice (department, sku, date, price) = GROUP SUM 1 IF isPostedReceiptSaleDetail(d)
    BY departmentStoreReceiptSaleDetail(d), skuReceiptSaleDetail(d), dateZReportReceiptSaleDetail(d), priceReceiptSaleDetail(d) PERSISTENT;

VATReceiptSaleDetailDepartmentStoreSkuDatePrice (department, sku, date, price) = GROUP MAX VATReceiptSaleDetail(d) IF isPostedReceiptSaleDetail(d)
    BY departmentStoreReceiptSaleDetail(d), skuReceiptSaleDetail(d), dateZReportReceiptSaleDetail(d), priceReceiptSaleDetail(d) PERSISTENT;

@defineAggregationClass (departmentStore, DepartmentStore, sku, Sku, date, DATE, price, NUMERIC[14,2], receiptSaleSkuLedger, ReceiptSaleSkuLedger, countReceiptSaleDetail);

dateTimeDataSkuLedger (ledger) += dateTimeToDateTime(dateReceiptSaleSkuLedger(ledger), 23:59);
isPostedDataSkuLedger (ledger) += ledger IS ReceiptSaleSkuLedger;
isClosedDataSkuLedger (ledger) += ledger IS ReceiptSaleSkuLedger;
skuDataSkuLedger (ledger) += skuReceiptSaleSkuLedger(ledger);
stockDataSkuLedger (ledger) += departmentStoreReceiptSaleSkuLedger(ledger);
descriptionDataSkuLedger (ledger) += VARSTRING[200]('Продажа за день')IF ledger IS ReceiptSaleSkuLedger;

skipSkuLedger (ledger) += dateReceiptSaleSkuLedger(ledger) < startDateGroupCashRegisterDepartmentStore(departmentStoreReceiptSaleSkuLedger(ledger)) OR
                           skuTypeSku(skuReceiptSaleSkuLedger(ledger)) == SkuType.skuTypeCharge;

quantityOutFIFOSkuLedger (ledger) += NUMERIC[14,3](quantityReceiptSaleDetailDepartmentSkuDatePrice(departmentStoreReceiptSaleSkuLedger(ledger), skuReceiptSaleSkuLedger(ledger), dateReceiptSaleSkuLedger(ledger), priceReceiptSaleSkuLedger(ledger)));
sumOutSkuLedger (ledger) += NUMERIC[16,2](sumReceiptSaleDetailDepartmentSkuDatePrice(departmentStoreReceiptSaleSkuLedger(ledger), skuReceiptSaleSkuLedger(ledger), dateReceiptSaleSkuLedger(ledger), priceReceiptSaleSkuLedger(ledger))
    (+) discountSumReceiptSaleDetailDepartmentSkuDatePrice(departmentStoreReceiptSaleSkuLedger(ledger), skuReceiptSaleSkuLedger(ledger), dateReceiptSaleSkuLedger(ledger), priceReceiptSaleSkuLedger(ledger)));

//---------------------- SaleLedger ----------------//

dateTimeSaleLedger (ledger) += toDateTime(dateReceiptSaleSkuLedger(ledger));
isPostedSaleLedger (ledger) += ledger IS ReceiptSaleSkuLedger;
isClosedSaleLedger (ledger) += ledger IS ReceiptSaleSkuLedger;
skuSaleLedger (ledger) += skuReceiptSaleSkuLedger(ledger);
stockSaleLedger (ledger) += departmentStoreReceiptSaleSkuLedger(ledger);
descriptionSaleLedger (ledger) += VARSTRING[200]('Продажа за день')IF ledger IS ReceiptSaleSkuLedger;

costSaleLedgerBatch(ledger, batch) +=  costSkuLedgerBatch(ledger, batch) IF ledger IS ReceiptSaleSkuLedger;
quantitySaleLedger (ledger) += NUMERIC[14,3](quantityReceiptSaleDetailDepartmentSkuDatePrice(departmentStoreReceiptSaleSkuLedger(ledger), skuReceiptSaleSkuLedger(ledger), dateReceiptSaleSkuLedger(ledger), priceReceiptSaleSkuLedger(ledger)));
VATSaleLedger (ledger) += VATReceiptSaleDetailDepartmentStoreSkuDatePrice(departmentStoreReceiptSaleSkuLedger(ledger), skuReceiptSaleSkuLedger(ledger), dateReceiptSaleSkuLedger(ledger), priceReceiptSaleSkuLedger(ledger));
sumSaleLedger (ledger) += NUMERIC[16,2](sumReceiptSaleDetailDepartmentSkuDatePrice(departmentStoreReceiptSaleSkuLedger(ledger), skuReceiptSaleSkuLedger(ledger), dateReceiptSaleSkuLedger(ledger), priceReceiptSaleSkuLedger(ledger)));
priceSaleLedger (ledger) += priceReceiptSaleSkuLedger(ledger);

discountSumSaleLedger (ledger) += NUMERIC[16,2](discountSumReceiptSaleDetailDepartmentSkuDatePrice(departmentStoreReceiptSaleSkuLedger(ledger), skuReceiptSaleSkuLedger(ledger), dateReceiptSaleSkuLedger(ledger), priceReceiptSaleSkuLedger(ledger)));

costSumSaleLedger (ledger) += costSumSkuLedger(ledger) IF ledger IS ReceiptSaleSkuLedger;

//---------------------- Возврат ----------------//

CLASS ReceiptReturnSkuLedger 'Возврат за день (общ.)' : InLIFOSkuLedger, SaleLedger; //-- агрегированный объект
TABLE ReceiptReturnSkuLedger (ReceiptReturnSkuLedger);

quantityReceiptReturnDetailDepartmentSkuDatePrice 'Кол-во' (department, sku, date, price) = GROUP SUM quantityReceiptReturnDetail(d) IF isPostedReceiptReturnDetail(d)
    BY departmentStoreReceiptReturnDetail(d), skuReceiptReturnDetail(d), dateZReportReceiptReturnDetail(d), priceReceiptReturnDetail(d) PERSISTENT;
sumReceiptReturnDetailDepartmentSkuDatePrice 'Сумма' (department, sku, date, price) = GROUP SUM sumReceiptReturnDetail(d) IF isPostedReceiptReturnDetail(d)
    BY departmentStoreReceiptReturnDetail(d), skuReceiptReturnDetail(d), dateZReportReceiptReturnDetail(d), priceReceiptReturnDetail(d) PERSISTENT;
discountSumReceiptReturnDetailDepartmentSkuDatePrice 'Сумма скидки' (department, sku, date, price) = GROUP SUM discountSumReceiptReturnDetail(d) IF isPostedReceiptReturnDetail(d)
    BY departmentStoreReceiptReturnDetail(d), skuReceiptReturnDetail(d), dateZReportReceiptReturnDetail(d), priceReceiptReturnDetail(d) PERSISTENT;
countReceiptReturnDetailDepartmentStoreSkuDatePrice  (department, sku, date, price) = GROUP SUM 1 IF isPostedReceiptReturnDetail(d)
    BY departmentStoreReceiptReturnDetail(d), skuReceiptReturnDetail(d), dateZReportReceiptReturnDetail(d), priceReceiptReturnDetail(d) PERSISTENT;
VATReceiptReturnDetailDepartmentStoreSkuDatePrice  (department, sku, date, price) = GROUP MAX VATReceiptReturnDetail(d) IF isPostedReceiptReturnDetail(d)
    BY departmentStoreReceiptReturnDetail(d), skuReceiptReturnDetail(d), dateZReportReceiptReturnDetail(d), priceReceiptReturnDetail(d) PERSISTENT;

@defineAggregationClass (departmentStore, DepartmentStore, sku, Sku, date, DATE, price, NUMERIC[14,2], receiptReturnSkuLedger, ReceiptReturnSkuLedger, countReceiptReturnDetail);
dateTimeDataSkuLedger (ledger) += dateTimeToDateTime(dateReceiptReturnSkuLedger(ledger), 23:59);
isPostedDataSkuLedger (ledger) += ledger IS ReceiptReturnSkuLedger;
isClosedDataSkuLedger (ledger) += ledger IS ReceiptReturnSkuLedger;
skuDataSkuLedger (ledger) += skuReceiptReturnSkuLedger(ledger);
stockDataSkuLedger (ledger) += departmentStoreReceiptReturnSkuLedger(ledger);
descriptionDataSkuLedger (ledger) += VARSTRING[200]('Возврат за день')IF ledger IS ReceiptReturnSkuLedger;

skipSkuLedger (ledger) += dateReceiptReturnSkuLedger(ledger) < startDateGroupCashRegisterDepartmentStore(departmentStoreReceiptReturnSkuLedger(ledger));

quantityInLIFOSkuLedger (ledger) += NUMERIC[14,3](quantityReceiptReturnDetailDepartmentSkuDatePrice(departmentStoreReceiptReturnSkuLedger(ledger), skuReceiptReturnSkuLedger(ledger), dateReceiptReturnSkuLedger(ledger), priceReceiptReturnSkuLedger(ledger)));
sumInSkuLedger (ledger) += NUMERIC[16,2](sumReceiptReturnDetailDepartmentSkuDatePrice(departmentStoreReceiptReturnSkuLedger(ledger), skuReceiptReturnSkuLedger(ledger), dateReceiptReturnSkuLedger(ledger), priceReceiptReturnSkuLedger(ledger))
    (+) discountSumReceiptReturnDetailDepartmentSkuDatePrice(departmentStoreReceiptReturnSkuLedger(ledger), skuReceiptReturnSkuLedger(ledger), dateReceiptReturnSkuLedger(ledger), priceReceiptReturnSkuLedger(ledger)));

//---------------------- SaleLedger ----------------//

dateTimeSaleLedger (ledger) += toDateTime(dateReceiptReturnSkuLedger(ledger));
isPostedSaleLedger (ledger) += ledger IS ReceiptReturnSkuLedger;
isClosedSaleLedger (ledger) += ledger IS ReceiptReturnSkuLedger;
skuSaleLedger (ledger) += skuReceiptReturnSkuLedger(ledger);
stockSaleLedger (ledger) += departmentStoreReceiptReturnSkuLedger(ledger);
descriptionSaleLedger (ledger) += VARSTRING[200]('Возврат за день')IF ledger IS ReceiptReturnSkuLedger;

costSaleLedgerBatch(ledger, batch) += -costSkuLedgerBatch(ledger, batch) IF ledger IS ReceiptReturnSkuLedger;
quantitySaleLedger (ledger) += -NUMERIC[14,3](quantityReceiptReturnDetailDepartmentSkuDatePrice(departmentStoreReceiptReturnSkuLedger(ledger), skuReceiptReturnSkuLedger(ledger), dateReceiptReturnSkuLedger(ledger), priceReceiptReturnSkuLedger(ledger)));
VATSaleLedger (ledger) += VATReceiptReturnDetailDepartmentStoreSkuDatePrice(departmentStoreReceiptReturnSkuLedger(ledger), skuReceiptReturnSkuLedger(ledger), dateReceiptReturnSkuLedger(ledger), priceReceiptReturnSkuLedger(ledger));
priceSaleLedger (ledger) += priceReceiptReturnSkuLedger(ledger);
sumSaleLedger (ledger) += -NUMERIC[16,2](sumReceiptReturnDetailDepartmentSkuDatePrice(departmentStoreReceiptReturnSkuLedger(ledger), skuReceiptReturnSkuLedger(ledger), dateReceiptReturnSkuLedger(ledger), priceReceiptReturnSkuLedger(ledger)));
discountSumSaleLedger (ledger) += -NUMERIC[16,2](discountSumReceiptReturnDetailDepartmentSkuDatePrice(departmentStoreReceiptReturnSkuLedger(ledger), skuReceiptReturnSkuLedger(ledger), dateReceiptReturnSkuLedger(ledger), priceReceiptReturnSkuLedger(ledger)));
costSumSaleLedger (ledger) += -costSumSkuLedger(ledger) IF ledger IS ReceiptReturnSkuLedger;

isReceiptDetailLedger (d) = d IS ReceiptSaleSkuLedger OR d IS ReceiptReturnSkuLedger;