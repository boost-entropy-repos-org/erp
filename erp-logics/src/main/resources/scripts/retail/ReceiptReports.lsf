MODULE ReceiptReports;

REQUIRE ZReport, PurchaseLedger;

NAMESPACE ZReport;


CLASS ReceiptReport 'Отчет по чекам';
CLASS ReceiptReportDetail 'Строка отчета по чекам';

CLASS IntervalReport 'Диапозон суммы по чеку';
TABLE intervalReport (IntervalReport);

CLASS IntervalReportDetail 'Диапозон';
TABLE intervalReportDetail (IntervalReportDetail);

@defineDocument(receiptReport);
@deriveDocumentHeaderTimePrefix(ReceiptReport, );

@defineDocumentHeaderNumber(ReceiptReport);
@defineNumeratedDefault(ReceiptReport, 'Отчет по чекам', 'ОЧ');


@defineDocumentDescription (receiptReport, 'Отчет по чекам');

//--

sum 'Верхний порог суммы' = DATA NUMERIC[16,2] (IntervalReport) NOT NULL DELETE;

@defineDocumentRelation (receiptReport, IntervalReport, '');

intervalPrev (IntervalReport interval) = PARTITION PREV interval 
    BY receiptReport(interval) ORDER sum(interval) PERSISTENT;
fromSumIntervalReportReceipt 'Сумма с' (IntervalReport interval)= sum(intervalPrev (interval));   

@defineDocumentRelation (receiptReportDetail, IntervalReportDetail, '');
@defineDocumentDetailActions(receiptReportDetail, IntervalReportDetail);

intervalReport  = DATA IntervalReport (IntervalReportDetail);
sum 'Верхний порог суммы'  = sum(intervalReport(IntervalReportDetail d));

fromDate 'Дата с' = DATA DATE (ReceiptReport) IN documentPrm;
fromDate 'Дата с' (ReceiptReportDetail d)= fromDate(receiptReport(d));

toDate 'Дата по' = DATA DATE (ReceiptReport) IN documentPrm;
toDate 'Дата по' (ReceiptReportDetail d)= toDate(receiptReport(d));

fromTime 'Время с' = DATA TIME (ReceiptReport) IN documentPrm;
fromTime 'Время с' (ReceiptReportDetail d)= fromDate(receiptReport(d));

toTime 'Время по' = DATA TIME (ReceiptReport) IN documentPrm;
toTime 'Время по' (ReceiptReportDetail d)= toDate(receiptReport(d));

fromDate (ReceiptReport o) <- currentDate() WHEN SET(o IS ReceiptReport);
toDate (ReceiptReport o) <- currentDate() WHEN SET(o IS ReceiptReport);
fromTime (ReceiptReport o) <- 00:00 WHEN SET(o IS ReceiptReport);
toTime (ReceiptReport o) <- 23:59 WHEN SET(o IS ReceiptReport);


TABLE storeReceiptReport (Store, ReceiptReport);
in 'Вкл.' = DATA BOOLEAN (Store, ReceiptReport);

TABLE groupReceiptReport (Group, ReceiptReport);
inData 'Вкл.' = DATA BOOLEAN (Group, ReceiptReport);

countInDataGroup (report)= GROUP SUM 1 IF inData(Group group, ReceiptReport report) BY report;

levelParent (group, report) = GROUP MIN level(Group group, Group parent) IF inData(parent, ReceiptReport report)
    BY group, report;

inParent (Group group, ReceiptReport report) = TRUE IF levelParent(group, report);

in 'Вкл.' (Group group, ReceiptReport report) = OVERRIDE
    inParent(group, report),
    inData(group, report);
    
TABLE legalEntityGroupReceiptReport (LegalEntityGroup, ReceiptReport);
inData 'Вкл.' = DATA BOOLEAN (LegalEntityGroup, ReceiptReport);

TABLE legalEntityReceiptReport (LegalEntity, ReceiptReport);
inData 'Вкл.' = DATA BOOLEAN (LegalEntity, ReceiptReport);

levelParent (group, report) = GROUP MIN level(LegalEntityGroup group, LegalEntityGroup parent) IF inData(parent, ReceiptReport report)
    BY group, report;
inParent (LegalEntityGroup group, ReceiptReport report) = TRUE IF levelParent(group, report);

in 'Вкл.' (LegalEntityGroup legalEntityGroup, ReceiptReport report) = OVERRIDE
    inParent(legalEntityGroup, report),
    inData(legalEntityGroup, report);

in 'Вкл.' (LegalEntity company, ReceiptReport report) = OVERRIDE
    in(legalEntityGroup(company), report),    
    inData(company, report);

countInLegalEntity (report)= GROUP SUM 1 IF in(LegalEntity company, ReceiptReport report) BY report;

groupType = DATA GroupType (ReceiptReport);
nameGroupType 'Классификатор' (ReceiptReport g) =  name(groupType(g));

groupType (ReceiptReport o) <- SystemGroupType.skuGroupType WHEN SET(o IS ReceiptReport);

countBon 'Кол-во чеков' = DATA NUMERIC[14,3] (ReceiptReport) IN documentSum;
countBonDetail 'Ср. кол-во позиций в чеке' = DATA NUMERIC[14,3] (ReceiptReport) IN documentSum;
countSelectedBonDetail 'Ср. кол-во выб. позиций в чеке' = DATA NUMERIC[14,3] (ReceiptReport) IN documentSum;
sumBon 'Ср. сумма чека' = DATA NUMERIC[16,2] (ReceiptReport) IN documentSum;
sumSelectedBonDetail 'Ср. сумма выб. позиций в чеке' = DATA NUMERIC[16,2] (ReceiptReport) IN documentSum;

store = DATA Store (ReceiptReportDetail);
nameStore 'Магазин' (ReceiptReportDetail d) = name(store(d));

countBon 'Кол-во чеков' = DATA NUMERIC[14,3] (ReceiptReportDetail);
countBonDetail 'Ср. кол-во позиций в чеке' = DATA NUMERIC[14,3] (ReceiptReportDetail);
countSelectedBonDetail 'Ср. кол-во выб. позиций в чеке' = DATA NUMERIC[14,3] (ReceiptReportDetail);
sumBon 'Ср. сумма чека' = DATA NUMERIC[16,2] (ReceiptReportDetail);
sumSelectedBonDetail 'Ср. сумма выб. позиций в чеке' = DATA NUMERIC[16,2] (ReceiptReportDetail);

countBon 'Кол-во чеков' = DATA NUMERIC[14,3] (IntervalReportDetail);
countBonDetail 'Ср. кол-во позиций в чеке' = DATA NUMERIC[14,3] (IntervalReportDetail);
countSelectedBonDetail 'Ср. кол-во выб. позиций в чеке' = DATA NUMERIC[14,3] (IntervalReportDetail);
sumBon 'Ср. сумма чека' = DATA NUMERIC[16,2] (IntervalReportDetail);
sumSelectedBonDetail 'Ср. сумма выб. позиций в чеке' = DATA NUMERIC[16,2] (IntervalReportDetail);
            
            
in (ReceiptReport r, ReceiptDetail d) = 
    date(d) >= fromDate(r) AND date(d) <= toDate(r)
    AND toTime(dateTime(d)) >= fromTime(r) AND toTime(dateTime(d)) <= toTime(r)  
    AND in(store(d), r) AND sku(d) AND isPosted(d)
    AND (in(group(groupType(r), sku(d)), r) OR (sku(d) AND NOT countInDataGroup(r)))
    AND (in(supplierLastOrderBatch(sku(d), departmentStore(d)),r) OR (sku(d) AND NOT countInLegalEntity(r)));

in (report, receipt) = GROUP SUM 1 IF in (ReceiptReport report, ReceiptDetail d) BY report, receipt(d);

countBon 'Кол-во чеков' = GROUP SUM 1 IF in(ReceiptReport report, Receipt receipt) BY store(receipt), report;
countBonDetail 'Кол-во позиций в выбранных чеках' = GROUP SUM countReceiptDetail(Receipt receipt) IF in (ReceiptReport report, receipt) BY store(receipt), report;
in 'Кол-во выбранных позиций' = GROUP SUM 1 IF in (ReceiptReport report, ReceiptDetail d) BY report, store(d);
sumBonDetail 'Сумма выбранных чеков' = GROUP SUM sumReceiptDetail(Receipt receipt) IF in (ReceiptReport report, receipt) BY store(receipt), report;
sumSelectedBonDetail 'Сумма выбранных позиций' = GROUP SUM sum(ReceiptDetail d) IF in (ReceiptReport report, d) BY store(d), report;

//-- С диапазонами сумм
in (ReceiptReport report, Receipt receipt, IntervalReport interval) = in (report, receipt) IF
    receiptReport(interval) == report AND sumReceiptDetail(receipt) <= sum(interval) AND 
    ((fromSumIntervalReportReceipt(interval) < sumReceiptDetail(receipt)) OR  (NOT fromSumIntervalReportReceipt(interval)));

countBon 'Кол-во чеков' = GROUP SUM 1 IF
    in(ReceiptReport report, Receipt receipt, IntervalReport interval) 
        BY store(receipt), report, interval;
countBonDetail 'Кол-во позиций в выбранных чеках' = GROUP SUM countReceiptDetail(Receipt receipt) IF 
    in(ReceiptReport report, receipt, IntervalReport interval) 
        BY store(receipt), report, interval;        
        
in 'Кол-во выбранных позиций' = GROUP SUM 1 IF 
    in (ReceiptReport report, ReceiptDetail d) AND in(report, receipt(d), IntervalReport interval)  
        BY report, store(d), interval;
        
sumBonDetail 'Сумма выбранных чеков' = GROUP SUM sumReceiptDetail(Receipt receipt) IF
     in(ReceiptReport report, receipt, IntervalReport interval) 
        BY store(receipt), report, interval;
sumSelectedBonDetail 'Сумма выбранных позиций' = GROUP SUM sum(ReceiptDetail d) IF
    in (ReceiptReport report, d) AND in(report, receipt(d), IntervalReport interval)  
        BY store(d), report, interval;


//--
calcCountBon 'Кол-во чеков' = GROUP SUM 1 IF in(ReceiptReport report, Receipt receipt) BY report;
calcCountBonDetail 'Кол-во позиций в выбранных чеках' = GROUP SUM countReceiptDetail(Receipt receipt) IF in (ReceiptReport report, receipt) BY report;
calcIn 'Кол-во выбранных позиций' = GROUP SUM 1 IF in (ReceiptReport report, ReceiptDetail d) BY  report;
calcSumBonDetail 'Сумма выбранных чеков' = GROUP SUM sumReceiptDetail(Receipt receipt) IF in (ReceiptReport report, receipt) BY report;
calcSumSelectedBonDetail 'Сумма выбранных позиций' = GROUP SUM sum(ReceiptDetail d) IF in (ReceiptReport report, d) BY report;


fillData 'Заполнить данные'(ReceiptReport report) = ACTION {
    DELETE ReceiptReportDetail d WHERE d IS ReceiptReportDetail AND receiptReport(d)== report;

    
    countBon(report) <- NUMERIC[14,3](calcCountBon(report));
    countBonDetail(report) <- NUMERIC[14,3](calcCountBonDetail(report) /(countBon(report)));        
    countSelectedBonDetail(report) <- NUMERIC[14,3](calcIn(report) /(countBon(report)));        
    sumBon(report) <- NUMERIC[16,2](calcSumBonDetail(report)/(countBon(report)));        
    sumSelectedBonDetail(report) <- NUMERIC[16,2](calcSumSelectedBonDetail(report)/(calcIn(report)));    
    
    
    FOR in(Store store,report) ADDOBJ d = ReceiptReportDetail DO {
        receiptReport(d) <- report;
        store(d) <- store;
        
        countBon(d) <- NUMERIC[14,3](countBon(store, report));
        countBonDetail(d) <- NUMERIC[14,3](countBonDetail(store, report) /(countBon(d)));
        countSelectedBonDetail(d) <- NUMERIC[14,3](in(report, store) /(countBon(d)));        
        sumBon(d) <- NUMERIC[16,2](sumBonDetail(store, report)/(countBon(d)));
        sumSelectedBonDetail(d) <- NUMERIC[16,2](sumSelectedBonDetail(store, report)/(in(report, store)));
        
        FOR receiptReport(IntervalReport interval) == report ADDOBJ dd = IntervalReportDetail DO {
            intervalReport(dd) <- interval;
            receiptReportDetail(dd) <- d;
//            todo: Валится ассоршен, без -еа- работает. Разобраться. Начиная со свойства (countBonStoreReceiptReportIntervalReport(store, report, interval))

            countBon(dd) <- NUMERIC[14,3](countBon(store, report, interval));
            countBonDetail(dd) <- NUMERIC[14,3](countBonDetail(store, report, interval) /(countBon(dd)));
            countSelectedBonDetail(dd) <- NUMERIC[14,3](in(report, store,interval) /(countBon(dd)));        
            sumBon(dd) <- NUMERIC[16,2](sumBonDetail(store, report, interval)/(countBon(dd)));
            sumSelectedBonDetail(dd) <- NUMERIC[16,2](sumSelectedBonDetail(store, report,interval)/(in(report, store,interval)));            
            
        }        
    }        
}

FORM receiptReport 'Отчет по чекам'

    OBJECTS r = ReceiptReport FIXED PANEL
    PROPERTIES (r) nameNumerator, number, series, date, time,
                   fromDate, toDate, 
                   fromTime, toTime, nameGroupType
    PROPERTIES (r) READONLY countBon, countBonDetail, countSelectedBonDetail, 
                   sumBon, sumSelectedBonDetail
                   
    OBJECTS s = Store             
    PROPERTIES  name(s)READONLY, in(s,r)  
                 
    TREE groupTree g=Group PARENT parent
    PROPERTIES READONLY order(g), id(g), name(g), in(g,r) EDITABLE 
    FILTERS groupType(g) == groupType(r)
    ORDER BY order(g), name(g)
    FILTERGROUP inactive1 FILTER 'Активные' active(g) 'F5' DEFAULT      
               
    TREE legalEntityTree lg = LegalEntityGroup PARENT parent
    PROPERTIES READONLY  name(lg)
    ORDER BY name(lg)
    PROPERTIES(lg,r) in

    OBJECTS l = LegalEntity
    PROPERTIES(l) READONLY id SHOWIF showIDs(), legalEntityName = name
    ORDER BY legalEntityName
    FILTERS isParent(lg, l) OR (l IS LegalEntity AND NOT lg)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    PROPERTIES(l,r) in
    
    OBJECTS i = IntervalReport
    PROPERTIES(i) sum
    PROPERTIES ADDOBJ(i), deletei = DELETESESSION(i)
    FILTERS receiptReport(i) == r

    OBJECTS d = ReceiptReportDetail
    PROPERTIES (d) index, nameStore, countBon, countBonDetail, countSelectedBonDetail,
                   sumBon, sumSelectedBonDetail
                  
    PROPERTIES (d) ADDOBJ, deleteid=DELETESESSION
    
    PROPERTIES(r)  fillData FORCE PANEL TOOLBAR TODRAW d  
    
    ORDER BY index(d)

    PROPERTIES(r) TODRAW d deleteReceiptReportDetail
    
    FILTERS receiptReport(d) == r
    
    OBJECTS dd = IntervalReportDetail
    PROPERTIES (dd) sum, countBon, countBonDetail, countSelectedBonDetail,
                    sumBon, sumSelectedBonDetail    
    PROPERTIES (dd) ADDOBJ, deleteidd=DELETESESSION                    
    PROPERTIES deleteIntervalReportDetail(d) TODRAW dd 
    
    ORDER BY sum(dd)  
                 
    FILTERS receiptReportDetail(dd) == d
            

    EDIT ReceiptReport OBJECT r
;

DESIGN receiptReport {
    main {
        preferredSize = (1024, 768);
        MOVE r.box {
            type = CONTAINERH;
            NEW r1 {
                type = CONTAINERV;
                MOVE r.numbered;
                MOVE r.documentHeader;
                MOVE r.documentPrm;
            }
            MOVE r.documentSum {type = CONTAINERV;}
            
        }        
        NEW header.box {
            type = TABBED;
            fill = 1;
            NEW headerParams {
                fill = 1;
                caption = 'Параметры отчета';
                type = TABBED;
                NEW store {
                    fill = 1;
                    caption ='Выбор магазинов';
                    MOVE s.box;
                }
                NEW company {
                    fill = 1;
                    caption ='Выбор поставщиков';
                    type = SPLITH;
                    MOVE legalEntityTree.tree.box {caption = 'Группы организаций';}
                    MOVE l.box;
                }
                NEW group {
                    fill = 1;
                    caption ='Выбор товарных групп';
                    type = CONTAINERV;
                    NEW group1 {
                        caption = 'Классификатор';
                        MOVE PROPERTY(nameGroupType(r));
                    }                    
                    MOVE groupTree.tree.box {fill = 1; caption = 'Группы товаров';}
                } 
//                NEW row5 {
//                    fill = 1;
                    MOVE i.box{                    
                        caption = 'Задание диапазона сумм'; 
                    }
//                    ADD o.box;
//                }
            }
            NEW specContainer{
                fill = 1;
                caption = 'Спецификация';
                MOVE d.box;
                MOVE dd.box {caption = 'Диапозоны сумм';}
            }           
        }        

        MOVE functions.box;

    }
}

FORM receiptReports 'Отчеты по чекам'

    OBJECTS r = ReceiptReport 
    PROPERTIES (r) READONLY number, series, date, time, fromDate, toDate, 
                   fromTime, toTime, nameGroupType
    PROPERTIES (r) READONLY countBon, countBonDetail, countSelectedBonDetail, 
                   sumBon, sumSelectedBonDetail, countReceiptReportDetail

    PROPERTIES (r) ADDFORM, EDITFORM, deleter=DELETE FORCE PANEL TOOLBAR  
    PROPERTIES (r) READONLY FORCE PANEL createdNameUser, createdTime, createdHostnameComputer 
        
    OBJECTS d = ReceiptReportDetail
    PROPERTIES (d) READONLY index, nameStore, countBon, 
                   countBonDetail, countSelectedBonDetail,
                   sumBon, sumSelectedBonDetail
    
    ORDER BY index(d)

    FILTERS receiptReport(d) == r
                
    DIALOG ReceiptReport OBJECT r
;
DESIGN receiptReports {
    main {
        preferredSize = (1024, 768);
        PROPERTY (deleter) {
            askConfirm = TRUE;
        }
        NEW documentContainer BEFORE functions.box {
            fill = 1;
            type = SPLITV;
            MOVE r.box;   

            NEW documentDetail {
                fill = 1;
                type = TABBED;

                MOVE d.box {
                    fill = 1;
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';
                    type = CONTAINERV;

                    MOVE r.created;                       
                }
                NEW printTab {
                    caption = 'Печатные формы';
                    NEW printContainer {
                        caption = 'Печать';
                        type = CONTAINERV;
                    }
                }
            }
        }
    }
}



NAVIGATOR {
    retailReports {
        ADD receiptReports;
    }
}