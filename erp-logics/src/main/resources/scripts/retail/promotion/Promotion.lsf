MODULE Promotion;

REQUIRE ItemManager, PriceListDashboard, PriceListPromotion;

NAMESPACE Promotion;

CLASS Promotion 'Акция';
TABLE promotion (Promotion);

CLASS PromotionDetail 'Строка акции';
TABLE promotionDetail (PromotionDetail);

changedTime 'Время последнего изменения'= DATA DATETIME (PromotionDetail);
changedTime (PromotionDetail detail) <- currentDateTime() WHEN CHANGED(detail IS PromotionDetail);
    
changedUser = DATA CustomUser (PromotionDetail);
changedNameUser 'Изменен пользователем' (PromotionDetail detail) = name[Contact](changedUser(detail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;
changedUser (PromotionDetail detail) <- currentUser() WHEN CHANGED (detail IS PromotionDetail);
    
changedComputer = DATA Computer (PromotionDetail);
changedHostnameComputer 'Изменен на компьютере' (PromotionDetail detail) = hostname(changedComputer(detail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;
changedComputer (PromotionDetail detail) <- currentComputer() WHEN CHANGED(detail IS PromotionDetail);

promotion 'Акция' = DATA Promotion (PromotionDetail);

name 'Наименование' = DATA VARSTRING[100] (Promotion) MINCHARWIDTH 30 PREFCHARWIDTH 50;
fromDate 'Дата с' = DATA DATE (Promotion);
toDate 'Дата по' = DATA DATE (Promotion);

CLASS PromotionType 'Тип акции';
TABLE promotionType (PromotionType);

id 'Код' = DATA VARISTRING[100] (PromotionType) IN base;
promotionType(id) = GROUP AGGR (PromotionType type) BY id(type);

name 'Наименование' = DATA VARSTRING[100] (PromotionType) IN base;

promotionType 'Тип акции' = DATA PromotionType (Promotion);
namePromotionType 'Тип акции' (Promotion promotion) = name(promotionType(promotion));

CLASS ExtraPromotionType 'Тип подакции';
TABLE extraPromotionType (ExtraPromotionType);

id 'Код' = DATA VARSTRING[100] (ExtraPromotionType) IN base;
extraPromotionType(id) = GROUP AGGR (ExtraPromotionType type) BY id(type);

name 'Наименование' = DATA VARSTRING[100] (ExtraPromotionType) IN base;

extraPromotionType 'Тип подакции' = DATA ExtraPromotionType (Promotion);
nameExtraPromotionType 'Тип подакции' (Promotion promotion) = name(extraPromotionType(promotion));

extraPromotionType 'Тип подакции' = DATA ExtraPromotionType (PromotionDetail);
nameExtraPromotionType 'Тип подакции' (PromotionDetail detail) = name(extraPromotionType(detail));
overExtraPromotionType 'Тип подакции' (PromotionDetail detail) = OVERRIDE extraPromotionType(detail), extraPromotionType(promotion(detail));
nameOverExtraPromotionType 'Тип подакции' (PromotionDetail detail) = name(overExtraPromotionType(detail));

sku 'Товар' = DATA Sku (PromotionDetail);

idBarcode 'Штрихкод' (PromotionDetail detail) = idBarcode(sku(detail));
nameSkuGroup2 'Категория' (PromotionDetail detail) = nameSkuGroup2(sku(detail));
nameSkuGroup3 'Направление' (PromotionDetail detail) = nameSkuGroup3(sku(detail));
nameSkuGroup4 'Группа' (PromotionDetail detail) = nameSkuGroup4(sku(detail));
nameBrand 'Бренд' (PromotionDetail detail) = nameBrand(sku(detail));
nameCustomUser 'Категорийный менеджер' (PromotionDetail detail) = nameCustomUser(skuGroup(sku(detail)));
nameSku 'Товар' (PromotionDetail detail) = name(sku(detail));


CLASS Flyer 'Листовка';
TABLE flyer (Flyer);

id 'Код' = DATA VARSTRING[100] (Flyer) IN base;
flyer(id) = GROUP AGGR (Flyer flyer) BY id(flyer);

name 'Наименование' = DATA VARSTRING[100] (Flyer) IN base;

flyer 'Листовка' = DATA Flyer (Promotion);
nameFlyer 'Листовка' (Promotion promotion) = name(flyer(promotion));

flyer 'Листовка' = DATA Flyer (PromotionDetail);
nameFlyer 'Листовка' (PromotionDetail detail) = name(flyer(detail));
overFlyer 'Листовка' (PromotionDetail detail) = OVERRIDE flyer(detail), flyer(promotion(detail));
nameOverFlyer 'Листовка' (PromotionDetail detail) = name(overFlyer(detail));

paymentForFlyer 'Оплата участия в листовке' = DATA BOOLEAN (PromotionDetail);
decreaseSupplierPercent 'Уменьшение % маркетинга поставщика' = DATA BOOLEAN (PromotionDetail);

supplierPromotionDiscount 'Скидка поставщика в Акцию' = DATA NUMERIC[8,3] (PromotionDetail);
valueVAT 'Ставка НДС' = DATA NUMERIC[10,5] (PromotionDetail);
price 'Стандартная цена без НДС' = DATA NUMERIC[16,4] (PromotionDetail);
markup 'Стандартная наценка' = DATA NUMERIC[8,3] (PromotionDetail);
retailPrice 'Розничная цена стандартная' = DATA NUMERIC[16,4] (PromotionDetail);

promotionPrice 'Цена для акции без НДС' = DATA NUMERIC[16,4] (PromotionDetail);
promotionVATPrice 'Цена для акции с НДС' = DATA NUMERIC[16,4] (PromotionDetail);
promotionMarkup 'Акционная наценка' = DATA NUMERIC[8,3] (PromotionDetail);
proposedPromotionPrice 'Предлагаемая акционная цена' = DATA NUMERIC[16,4] (PromotionDetail);
promotionMarkupSum 'Сумма акционной наценки' = DATA NUMERIC[16,4] (PromotionDetail);
discount 'Акционная скидка' = DATA NUMERIC[8,3] (PromotionDetail);

CLASS StatusSku 'Статус товара';
TABLE statusSku (StatusSku);

id 'Код' = DATA VARSTRING[100] (StatusSku) IN base;
statusSku(id) = GROUP AGGR (StatusSku status) BY id(status);

name 'Наименование' = DATA VARSTRING[100] (StatusSku) IN base;

statusSku 'Статус товара после акции' = DATA StatusSku (PromotionDetail);
nameStatusSku 'Статус товара после акции' (PromotionDetail detail) = name(statusSku(detail));

CLASS PromoType 'Тип промо';
TABLE promoType (PromoType);

id 'Код' = DATA VARSTRING[100] (PromoType) IN base;
promoType(id) = GROUP AGGR (PromoType type) BY id(type);

name 'Наименование' = DATA VARSTRING[100] (PromoType) IN base;

promoType 'Тип промо' = DATA PromoType (Promotion);
namePromoType 'Тип промо' (Promotion promotion)= name(promoType(promotion));
 
promoType 'Тип промо' = DATA PromoType (PromotionDetail);
namePromoType 'Тип промо' (PromotionDetail detail) = name(promoType(detail));
overPromoType 'Тип промо' (PromotionDetail detail) = OVERRIDE promoType(detail), promoType(promotion(detail));
nameOverPromoType 'Тип промо' (PromotionDetail detail) = name(overPromoType(detail)); 

CLASS DiscountType 'Тип скидки';
TABLE discountType (DiscountType);

id 'Код' = DATA VARSTRING[100] (DiscountType) IN base;
discountType(id) = GROUP AGGR (DiscountType type) BY id(type);

name 'Наименование' = DATA VARSTRING[100] (DiscountType) IN base;

discountType 'Тип скидки' = DATA DiscountType (PromotionDetail);
nameDiscountType 'Тип скидки' (PromotionDetail detail) = name(discountType(detail));

CLASS DiscountingType 'Тип начисления скидки';
TABLE discountingType (DiscountingType);

id 'Код' = DATA VARSTRING[100] (DiscountingType) IN base;
discountingType(id) = GROUP AGGR (DiscountingType type) BY id(type);

name 'Наименование' = DATA VARSTRING[100] (DiscountingType) IN base;

discountingType 'Тип начисления скидки/бонуса' = DATA DiscountingType (PromotionDetail);
nameDiscountingType 'Тип начисления скидки/бонуса' (PromotionDetail detail) = name(discountingType(detail));

bonusSum 'Сумма бонусов' = DATA NUMERIC[16,5] (PromotionDetail);
bonusPercent 'Процент бонусов' = DATA NUMERIC[8,3] (PromotionDetail);

//актуальные виды акции
subway 'Метро' = DATA BOOLEAN (Promotion);
radio 'Радио' = DATA BOOLEAN (Promotion);
citylight 'Ситилайт' = DATA BOOLEAN (Promotion);
billboard 'Билборд' = DATA BOOLEAN (Promotion);
TVcommercial 'ТВ реклама' = DATA BOOLEAN (Promotion);
stockTVcommercial 'ТВ реклама в магазинах' = DATA BOOLEAN (Promotion);
elevator 'Лифты' = DATA BOOLEAN (Promotion);
newspaper 'Газеты/журналы' = DATA BOOLEAN (Promotion);
internet 'Интернет' = DATA BOOLEAN (Promotion);
transport 'Реклама на транспорте' = DATA BOOLEAN (Promotion);
sms 'СМС рассылка' = DATA BOOLEAN (Promotion);
email 'E-mail рассылка' = DATA BOOLEAN (Promotion);
shoppingRoomPoster 'Плакат в торговом зале' = DATA BOOLEAN (Promotion);

//расчетные данные
WHEN LOCAL CHANGED(sku(PromotionDetail detail)) DO {
    valueVAT(detail) <- valueVAT(sku(detail));
    price(detail) <- [=GROUP MAX priceB(defaultPriceListType(), Sku sku, Stock stock, currentDateTime()) BY sku](sku(detail));
    retailPrice(detail) <- [=GROUP MAX priceB(promotionPriceListType(), Sku sku, Stock stock, currentDateTime()) BY sku](sku(detail));
}
WHEN LOCAL (CHANGED(promotionPrice(PromotionDetail detail)) OR CHANGED(price(detail))) AND price(detail) > 0.0 DO {
    supplierPromotionDiscount(detail) <- NUMERIC[8,3]((1.0 - promotionPrice(detail)/price(detail)) * 100.0);
}
WHEN LOCAL (CHANGED(retailPrice(PromotionDetail detail)) OR CHANGED(valueVAT(detail)) OR CHANGED(price(detail))) AND price(detail) > 0.0 DO {
    markup(detail) <- NUMERIC[8,3]((((retailPrice(detail)/(1.0+valueVAT(detail)/100.0))-price(detail))/price(detail)) * 100.0);
}
WHEN LOCAL (CHANGED(promotionPrice(PromotionDetail detail)) OR CHANGED(valueVAT(detail))) DO {
    promotionVATPrice(detail) <- NUMERIC[16,4](promotionPrice(detail)*(1.0+valueVAT(detail)/100.0));
}
WHEN LOCAL (CHANGED(promotionMarkupSum(PromotionDetail detail)) OR CHANGED(promotionPrice(detail))) AND promotionPrice(detail) > 0.0 DO {
    promotionMarkup(detail) <- NUMERIC[8,3]((promotionMarkupSum(detail)/promotionPrice(detail)) * 100.0);
}
WHEN LOCAL (CHANGED(proposedPromotionPrice(PromotionDetail detail)) OR CHANGED(valueVAT(detail)) OR CHANGED(promotionPrice(detail))) DO {
    promotionMarkupSum(detail) <- NUMERIC[16,4]((proposedPromotionPrice(detail)/(1.0+valueVAT(detail)/100.0))-promotionPrice(detail));
}
WHEN LOCAL (CHANGED(proposedPromotionPrice(PromotionDetail detail)) OR CHANGED(retailPrice(detail))) AND retailPrice(detail) > 0.0 DO {
    discount(detail) <- NUMERIC[8,3]((1.0-proposedPromotionPrice(detail)/retailPrice(detail)) * 100.0);
}

FORM promotion 'Акция'
    OBJECTS p = Promotion PANEL 
    PROPERTIES(p) name, fromDate, toDate, namePromotionType, nameExtraPromotionType, namePromoType, nameFlyer,
                  subway, radio, citylight, billboard, TVcommercial, stockTVcommercial, elevator, newspaper,
                  internet, transport, sms, email, shoppingRoomPoster
    
    OBJECTS d = PromotionDetail
    PROPERTIES(d) idBarcode, nameSkuGroup2, nameSkuGroup3, nameSkuGroup4, nameCustomUser, nameBrand, nameSku, nameOverExtraPromotionType,
                  nameOverFlyer, paymentForFlyer, decreaseSupplierPercent, supplierPromotionDiscount, valueVAT, price, markup, retailPrice,
                  promotionPrice, promotionVATPrice, promotionMarkup, proposedPromotionPrice, promotionMarkupSum, discount, nameStatusSku,
                  nameOverPromoType,nameDiscountType, nameDiscountingType, bonusSum, bonusPercent, changedTime, changedNameUser,
                  changedHostnameComputer, NEW, deleted = DELETE GRID
    ORDER nameSku(d)
    FILTERS promotion(d) == p,
            access(currentUser(), sku(d)) OR NOT sku(d)
    
    
                 
    EDIT Promotion OBJECT p
;

DESIGN promotion {
    NEW top {
        type = CONTAINERH;
        NEW headContainer {
            caption = 'Шапка документа';       
            type = CONTAINERV;
            NEW first {
                type = CONTAINERH;
                MOVE PROPERTY(name(p));                
            }
            NEW second {
                type = CONTAINERH;
                MOVE PROPERTY(namePromotionType(p));
                MOVE PROPERTY(nameExtraPromotionType(p));  
            }
            NEW third {
                type = CONTAINERH;
                 MOVE PROPERTY(namePromoType(p));
                 MOVE PROPERTY(nameFlyer(p));
            }
            NEW fourth {
                caption = 'Период действия';
                type = CONTAINERH;
                MOVE PROPERTY(fromDate(p));
                MOVE PROPERTY(toDate(p));
            }
        }
        NEW types {
            caption = 'Актуальные виды акции';
            type = COLUMNS;
            columns = 2;
            MOVE PROPERTY(subway(p));
            MOVE PROPERTY(radio(p));
            MOVE PROPERTY(citylight(p));
            MOVE PROPERTY(billboard(p));
            MOVE PROPERTY(TVcommercial(p));
            MOVE PROPERTY(stockTVcommercial(p));
            MOVE PROPERTY(elevator(p));
            MOVE PROPERTY(newspaper(p));
            MOVE PROPERTY(internet(p));
            MOVE PROPERTY(transport(p));
            MOVE PROPERTY(sms(p));
            MOVE PROPERTY(email(p));
            MOVE PROPERTY(shoppingRoomPoster(p));
        }
    }
    NEW detailContainer {
        fill = 1;
        MOVE BOX(d);
    }

    MOVE TOOLBARBOX;
}

FORM promotions 'Акции'
    OBJECTS p = Promotion
    PROPERTIES(p) READONLY name, fromDate, toDate, namePromotionType, nameExtraPromotionType, namePromoType, nameFlyer
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE
    ORDER toDate(p) DESC, name(p) 
    
    OBJECTS d = PromotionDetail
    PROPERTIES(d) READONLY idBarcode, nameSkuGroup2, nameSkuGroup3, nameSkuGroup4, nameCustomUser, nameBrand, nameSku, nameOverExtraPromotionType,
                  nameOverFlyer, paymentForFlyer, decreaseSupplierPercent, supplierPromotionDiscount, valueVAT, price, markup, retailPrice,
                  promotionPrice, promotionVATPrice, promotionMarkup, proposedPromotionPrice, promotionMarkupSum, discount, nameStatusSku,
                  nameOverPromoType,nameDiscountType, nameDiscountingType, bonusSum, bonusPercent, changedTime, changedNameUser, changedHostnameComputer
    ORDER nameSku(d)
    FILTERS promotion(d) == p,
            access(currentUser(), sku(d)) OR NOT sku(d)
    
    LIST Promotion OBJECT p
;

NAVIGATOR {
    priceListDocuments {
        ADD promotions;
    }
}