MODULE ArticleGroupsDashboard;

REQUIRE ItemArticle, ArticleTranslateDashboard;

NAMESPACE Item;

// Обработка статуса

completedGroupsItem 'Обработан' = DATA BOOLEAN (Item);
notCompletedGroupsArticle 'Не обработан' (article) = GROUP SUM 1 IF i IS Item AND NOT completedGroupsItem(i) BY articleItem(i);
completedGroupsArticle 'Обработан' = a IS Article AND NOT notCompletedGroupsArticle(a);

changeCompletedGroupsArticle (article) = ACTION (article) {
    REQUEST BOOLEAN INPUT;
    IF requestedLogical() THEN {
        FOR articleItem(item) == article DO {
            completedGroupsItem(item) <- TRUE;
        }
    } ELSE {
        FOR articleItem(item) == article DO {
            completedGroupsItem(item) <- NULL;
        }                
    }        
}

// Подсчет непереведенных артикулов для групп
countNotCompletedGroupsArticlesItemGroup 'Не обработано (к-во)' (group) = GROUP SUM 1 IF completedTranslateArticle(article) AND notCompletedGroupsArticle(article) BY itemGroupArticle(article);
recCountNotCompletedGroupsArticlesItemGroup 'Не обработано (к-во)' (parent) = GROUP SUM countNotCompletedGroupsArticlesItemGroup(child) IF isParentItemGroupItemGroup(child, parent) BY parent;


// необходимость заполнения группы 
childNumberItemGroupItem 'Количество непосредственных потомков' (item) = childNumberItemGroup(itemGroupItem(item));
childNumberItemGroupArticle 'Количество непосредственных потомков' (article) = childNumberItemGroup(itemGroupArticle(article));
backgroundChildNumberItemGroupArticle 'Цвет' (article) = RGB(224, 224, 255) IF childNumberItemGroupArticle(article) OR (article IS Article AND NOT itemGroupArticle(article));

// Не заполнены атрибуты
overNullGroupsItem = ABSTRACT BOOLEAN (Item);
nullGroupsItem (item)= item IS Item AND NOT completedGroupsItem(item) AND 
    (NOT itemGroupItem(item) OR childNumberItemGroupItem(item) OR overNullGroupsItem(item));
nullGroupsArticle (article)= GROUP SUM 1 IF nullGroupsItem(item) AND NOT completedGroupsItem(item) BY articleItem(item);    

filterGroupsInvoice= DATA SESSION Purchase.Invoice ();
descriptionFilterGroupsInvoice 'Накладная' = Purchase.descriptionInvoice(filterGroupsInvoice());

FORM articleGroupsDashboard 'Классификация'
    PROPERTIES seriesNumberDateInvoicesCurrentUser() READONLY, selectPurchaseInvoicesCurrentUser()
    
    TREE groupTree g=ItemGroup PARENT parentItemGroup
    PROPERTIES READONLY nameItemGroup(g), recCountNotCompletedGroupsArticlesItemGroup(g)
    ORDER BY nameItemGroup(g)
    FILTERS activeItemGroup(g)
    FILTERGROUP notGroupsFilters
        FILTER 'Не обработан' 'F6' recCountNotCompletedGroupsArticlesItemGroup(g)

    OBJECTS a=Article
    PROPERTIES(a) READONLY nameBrandArticle, idArticle, captionArticle, nameUOMArticle
    PROPERTIES(a) BACKGROUND backgroundChildNumberItemGroupArticle(a) canonicalNameItemGroupArticle
    PROPERTIES(a) completedGroupsArticle ON CHANGE changeCompletedGroupsArticle(a)
    PROPERTIES(a) EDITFORM
    
    FILTERGROUP attributesFilters
        FILTER 'Без атрибутов' 'F7' nullGroupsArticle(a)                   
        FILTER 'С атрибутами' 'F6' NOT nullGroupsArticle(a)
                           
    FILTERGROUP stickerFilters
        FILTER 'Переведены' 'F10' completedTranslateArticle(a) DEFAULT
        
    FILTERS isParentGroupArticle(g, a)
//    FILTERGROUP groupFilters
//        FILTER 'По группам' 'F11' isParentGroupArticle(g, a) DEFAULT
//        FILTER 'Без групп' 'ctrl F11' captionArticle(a) IF NOT itemGroupArticle(a)        
        
    FILTERGROUP articleFilters
        FILTER 'Не обработан' 'F8' notCompletedGroupsArticle(a) DEFAULT
        FILTER 'Обработан' 'F9' completedGroupsArticle(a)   
               
    FILTERS isParentGroupArticle(g, a) OR (g IS ItemGroup AND NOT itemGroupArticle(a))

    OBJECTS i=Item
    PROPERTIES(i) READONLY descriptionDefaultPurchaseInvoiceSku, idBarcodeSku, idItem, captionItem, nameUOMItem, imageItem FORCE PANEL
    PROPERTIES(i) BACKGROUND hintEditableBackground() canonicalNameItemGroupItem
    PROPERTIES(i) completedGroupsItem
    PROPERTIES(i) EDITFORM
    
    FILTERGROUP attributesFilters
        FILTER 'Без атрибутов' 'F7' nullGroupsItem(i)
        FILTER 'С атрибутами' 'F6' NOT nullGroupsItem(i)
          
    FILTERGROUP itemFilters
        FILTER 'По артикулам' 'F4' articleItem(i) == a DEFAULT
        FILTER 'По группам (не обработан)' 'shift F4' completedTranslateItem(i) AND NOT completedGroupsItem(i) AND isParentItemGroupItem(g,i)
        FILTER 'По группам ' 'ctrl F4' isParentItemGroupItem(g,i)
        
    FILTERS quantityInvoiceDetailArticleUser(a, currentUser()) OR (a IS Article AND NOT countInvoicesUser(currentUser()))
        
;

DESIGN articleGroupsDashboard FROM DEFAULT {
    NEW filter {
        caption = 'Фильтр';
        type = CONTAINERH;
        ADD PROPERTY(seriesNumberDateInvoicesCurrentUser());
        ADD PROPERTY(selectPurchaseInvoicesCurrentUser());
    }
    NEW pane {
        type = SPLITH;
        fill = 1;
        NEW tree4{
            type = SPLITV;
            fill = 1;
            ADD groupTree.tree.box {fill = 2;}
            NEW imageBox4 {
                fill = 3;
                caption = 'Изображение';                     
                ADD PROPERTY(imageItem(i)) {                           
                    caption = '';
                    fill = 1;
                }
            }
        }
        NEW row511 {
            fill = 3;
            type = SPLITV;
            ADD a.box {
                defaultComponent = TRUE;
                fill = 2;
            }
            ADD i.box;
        }
    }
    
    ADD functions.box;
}

completeArticleGroupsDashboard 'Подтвердить все' = ACTION () {   
    LOCAL k = INTEGER ();
    k() <- 0;
    
    FOR [= FILTER articleGroupsDashboard.a](article) AND nullGroupsArticle(article) DO{   
        k() <- k() + 1;              
    }    
    IF k() > 0 THEN {
        MESSAGE 'Для артикула не задана группа товара, статистическая группа или нужна доп. классификация ('+k()+' шт.)';
    } ELSE {
        FOR [= FILTER articleGroupsDashboard.a](article) DO {
            completedGroupsItem(item) <- TRUE WHERE articleItem(item) ==article;
        }
    }      
} TOOLBAR CONFIRM;

EXTEND FORM  articleGroupsDashboard
    PROPERTIES() TODRAW a completeArticleGroupsDashboard FORCE PANEL
;

NAVIGATOR {
    customsDashboardNavigator {
        ADD articleGroupsDashboard;
    }
}
