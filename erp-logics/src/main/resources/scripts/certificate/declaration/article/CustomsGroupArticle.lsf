MODULE CustomsGroupArticle;

REQUIRE CustomsGroupItem, ItemArticle;

NAMESPACE CustomsGroup;

//-- ТН ВЭД
TABLE countryArticle(Country, Article);
customsGroup = DATA CustomsGroup(Country, Article);
codeCustomsGroup 'ТН ВЭД' (Country country, Article article) = code(customsGroup(country, article)) MINCHARWIDTH 10 PREFCHARWIDTH 15;
nameCustomsGroup 'Позиция ТН ВЭД' (Country country, Article article) = name(customsGroup(country, article)) MINCHARWIDTH 30 PREFCHARWIDTH 40;
codeCustomsGroupDefaultCountry 'ТН ВЭД' (Article article) = code(customsGroup(defaultCountry(), article)) MINCHARWIDTH 10 PREFCHARWIDTH 15;

originalCustomsGroup 'Код ТНВЭД (ориг.)' = DATA STRING[10] (Article) IN base FIXEDCHARWIDTH 10;

// Действие по изменению кода ТНВЭД через ручной ввод
changeCodeCustomsGroup(Country country, Article article) = ACTION {
    IF requestInputChangeCustomsCode() THEN {
        REQUEST STRING[10] INPUT;
        IF requestedString() THEN {
            IF customsGroup(rpad(requestedString(),10,'0')) THEN {
                customsGroup(country, article) <- customsGroup(rpad(requestedString(),10,'0')); 
            } ELSE {
                caption() <- caption(article);
                article() <- id(article);
                originalCustomsGroup() <- originalCustomsGroup(article);
                composition() <- composition(article);
                gender() <- nameGender(article);
                REQUEST OBJECT cg
                    FORM customsGroups OBJECTS cz = customsZone(country), cg = nearestCustomsGroup(requestedString()) ;
                IF formResult() == FormResult.ok THEN {
                    customsGroup(country, article) <- chosenObject('cg');
                }
            }
        } ELSE
            customsGroup(country, article) <- NULL;
    } ELSE {
        REQUEST OBJECT cg
            FORM customsGroups OBJECTS cz = customsZone(country), cg = customsGroup(country, article) CONTEXTFILTER cg = customsGroup(country, article) DIALOG SHOWDROP;
        IF formResult() == FormResult.ok THEN {
            customsGroup(country, article) <- requestedObject();
        } ELSE IF formResult() == FormResult.drop THEN {
            customsGroup(country, article) <- NULL;
        }
    }
}

changeWYSCodeCustomsGroup(Country country, Article article) = ACTION {
    REQUEST STRING[10] INPUT;
    IF requestedString() THEN {
        IF customsGroup(rpad(requestedString(),10,'0')) THEN {
            customsGroup(country, article) <- customsGroup(rpad(requestedString(),10,'0')); 
        } ELSE {
            caption() <- caption(article);
            article() <- id(article);
            originalCustomsGroup() <- originalCustomsGroup(article);
            composition() <- composition(article);
            gender() <- nameGender(article);
            REQUEST OBJECT cg
                FORM customsGroups OBJECTS cz = customsZone(country), cg = nearestCustomsGroup(requestedString()) ;
            IF formResult() == FormResult.ok THEN {
                customsGroup(country, article) <- chosenObject('cg');
            }
        }
    } ELSE
        customsGroup(country, article) <- NULL;
}

changeCustomsGroupDefaultCountry(Article article) = ACTION {
    REQUEST OBJECT cg
    FORM customsGroups OBJECTS cz = customsZoneDefaultCountry() DIALOG SHOWDROP;
    IF formResult() == FormResult.ok THEN {
        customsGroup(Country country, article) <- requestedObject() WHERE country == defaultCountry();

    } ELSE IF formResult() == FormResult.drop THEN {
        customsGroup(Country country, article) <- NULL WHERE country == defaultCountry();
    }
}

CONSTRAINT customsZone(customsGroup(Country country, Article article)) != customsZone(country) CHECKED BY customsGroup[Country,Article]
    MESSAGE 'Таможенная зона должна соответствовать стране';

EXTEND FORM article
    PROPERTIES(a)    originalCustomsGroup,
                     codeCustomsGroupDefaultCountry  ON CHANGE changeCustomsGroupDefaultCountry(a)
    PROPERTIES(c, a) codeCustomsGroup
    
    PROPERTIES(i) BEFORE deletei codeCustomsGroupDefaultCountry ON CHANGE changeCustomsGroupDefaultCountry(i) 
;
DESIGN article  {
    regionPrm {
        MOVE PROPERTY(originalCustomsGroup(a));
        MOVE PROPERTY(codeCustomsGroupDefaultCountry(a));
    }
}

EXTEND FORM articles
    PROPERTIES(a) originalCustomsGroup
;

WHEN SESSION FORMS article CHANGED(customsGroup(Country country, Article article)) DO         
    customsGroup(country, Item i) <- customsGroup(country, article) WHERE article(i) == article;      

WHEN SESSION FORMS article SET(Item i IS Item) DO
    customsGroup(Country country, i) <- customsGroup(country, article(i));      
    

EXTEND FORM articles
    PROPERTIES(a)  READONLYIF isReadonly() BEFORE deletea  codeCustomsGroupDefaultCountry
;
