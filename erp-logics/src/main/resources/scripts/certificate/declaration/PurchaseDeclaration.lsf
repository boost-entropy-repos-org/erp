MODULE PurchaseDeclaration;

REQUIRE Declaration, PurchaseCertificate, PurchaseInvoiceCharge; ///

NAMESPACE Purchase;

// добавляем в инвойс декларацию
@defineDocumentCertificate(declaration, invoice, i, 'Таможенная декларация');

sumInvoiceDetail 'Сумма (по накладным)' = GROUP SUM sum(InvoiceDetail d)
                                                          BY declaration(d) MINCHARWIDTH 15;
sumUserInvoiceDetail 'Сумма (по накладным)' = GROUP SUM sum(UserInvoiceDetail d)
                                                              BY declaration(d) MINCHARWIDTH 15;

// проставляем в строку инвойса декларацию из партии
WHEN LOCAL FORMS userInvoice
    (CHANGED (batch(UserInvoiceDetail detail)) OR
    CHANGED (sku(detail)) OR
    CHANGED (customerStock(detail)))
    AND NOT isHomeCurrency(userInvoice(detail)) DO
    dataDeclaration(detail)  <- IF batch(detail)
                                                    THEN prevDeclaration(batch(detail))
                                                    ELSE prevDeclaration(prevLastOrderBatch(sku(detail), customerStock(detail)));

// добавляем в поставку декларацию
@defineDocumentCertificate(declaration, shipment, s, 'Таможенная декларация');
@deriveDocumentPurchaseCertificate(declaration, shipment, customerStock, data);

// Проставляем автоматически декларацию от строки инвойса
WHEN CHANGED(declaration(invoiceDetail(UserShipmentDetail d))) AND 
     NOT CHANGED(declaration(d)) DO
     dataDeclaration(d) <- declaration(invoiceDetail(d)); 

declaration(InvoiceShipmentDetail detail) += declaration(invoiceDetail(detail));

overFillInvoice(UserShipmentDetail s, InvoiceDetail i) += {
    ASSIGN dataDeclaration(s) <- declaration(i);
}

declaration (ShipmentBatch batch) += declaration(shipmentDetail(batch));
dateDeclaration 'Дата декларации' (Batch batch) = date(declaration(batch));