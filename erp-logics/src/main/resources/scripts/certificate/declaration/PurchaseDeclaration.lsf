MODULE PurchaseDeclaration;

REQUIRE Declaration, PurchaseCertificate, PurchaseInvoiceCharge; ///

NAMESPACE Purchase;

// добавляем в инвойс декларацию
@defineDocumentCertificate(declaration, invoice, i, 'Таможенная декларация');

inInvoiceDeclaration (invoice, declaration)= GROUP SUM 1 BY invoiceInvoiceDetail(d), declarationInvoiceDetail(d);

invoicesDeclaration 'Накладные' (declaration) =
    GROUP CONCAT shortDescriptionInvoice(invoice) IF inInvoiceDeclaration (invoice, declaration), ','
              BY declaration ORDER invoice MINCHARWIDTH 40 PREFCHARWIDTH 80 MAXCHARWIDTH 120;

inInvoiceDeclarationInvoiceDetail = inInvoiceDeclaration(invoiceInvoiceDetail(detail), declarationInvoiceDetail(detail)); 

sumInvoiceDetailDeclaration 'Сумма (по накладным)' = GROUP SUM sumInvoiceDetail(d)
                                                          BY declarationInvoiceDetail(d) MINCHARWIDTH 15;
sumUserInvoiceDetailDeclaration 'Сумма (по накладным)' = GROUP SUM sumUserInvoiceDetail(d)
                                                              BY declarationUserInvoiceDetail(d) MINCHARWIDTH 15;

// проставляем в строку инвойса декларацию из партии
WHEN SESSION FORMS userInvoice
    (CHANGED (batchUserInvoiceDetail(detail)) OR
    CHANGED (skuUserInvoiceDetail(detail)) OR
    CHANGED (customerStockUserInvoiceDetail(detail)))
    AND NOT isHomeCurrencyUserInvoice(userInvoiceUserInvoiceDetail(detail)) DO
    dataDeclarationUserInvoiceDetail(detail)  <- IF batchUserInvoiceDetail(detail)
                                                    THEN prevDeclarationBatch(batchUserInvoiceDetail(detail))
                                                    ELSE prevDeclarationBatch(lastOrderBatchSkuStock(skuUserInvoiceDetail(detail), customerStockUserInvoiceDetail(detail)));

// добавляем в поставку декларацию
@defineDocumentCertificate(declaration, shipment, s, 'Таможенная декларация');
@deriveDocumentPurchaseCertificate(declaration, shipment, customerStock, data);

// Проставляем автоматически декларацию от строки инвойса
WHEN CHANGED(declarationInvoiceDetail(invoiceDetailUserShipmentDetail(d))) AND 
     NOT CHANGED(declarationUserShipmentDetail(d)) DO
     dataDeclarationUserShipmentDetail(d) <- declarationInvoiceDetail(invoiceDetailUserShipmentDetail(d)); 

declarationShipmentDetail(detail) += declarationInvoiceDetail(invoiceDetailInvoiceShipmentDetail(detail));

overFillInvoiceUserShipmentDetailInvoiceDetail(s, i) += ACTION (s, i) {
    ASSIGN dataDeclarationUserShipmentDetail(s) <- declarationInvoiceDetail(i);
}

declarationBatch (batch) += declarationShipmentDetail(shipmentDetailShipmentBatch(batch));
dateDeclarationBatch 'Дата декларации' (batch) = dateDeclaration(declarationBatch(batch));