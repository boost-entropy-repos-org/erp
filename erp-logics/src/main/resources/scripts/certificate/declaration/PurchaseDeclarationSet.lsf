MODULE PurchaseDeclarationSet;

REQUIRE PurchaseDeclarationDetail;

NAMESPACE Purchase;

CLASS Set 'Комплект' ;
TABLE set (Set);

nameSet 'Наименование'= DATA VARISTRING[255] (Set);
@defineExternalizable(set, VARSTRING[100]);

CLASS SetDetail 'Строка комплекта' ;
TABLE setDetail (SetDetail);

@defineDocumentRelation(set, SetDetail, );
@defineDocumentDetailIndex(set, SetDetail, recognize);

nameSetDetail 'Наименование'= DATA VARISTRING[255] (SetDetail);
	
coefficientQuantitySetDetail 'Коэффициент кол-ва' = DATA NUMERIC[8,2] (SetDetail);
percentSumSetDetail '% суммы' = DATA NUMERIC[8,2] (SetDetail);

percentNetWeightSetDetail '% вес нетто' = DATA NUMERIC[8,2] (SetDetail);
percentGrossWeightSetDetail '% вес брутто' = DATA NUMERIC[8,2] (SetDetail);

customsGroupSetDetail = DATA CustomsGroup (SetDetail);
codeCustomsGroupSetDetail 'ТН ВЭД' (d) = codeCustomsGroup(customsGroupSetDetail(d));

VATCustomsExceptionSetDetail = DATA VATCustomsException (SetDetail);
nameVATCustomsExceptionSetDetail 'Льгота НДС' (d) = nameVATCustomsException(VATCustomsExceptionSetDetail(d));


FORM set 'Комплект'
    OBJECTS s=Set FIXED PANEL
    PROPERTIES(s) nameSet, idSet SHOWIF showIDs()
    
    OBJECTS d=SetDetail 
    PROPERTIES(d) indexSetDetail READONLY, nameSetDetail, percentNetWeightSetDetail, percentGrossWeightSetDetail, 
                  codeCustomsGroupSetDetail, nameVATCustomsExceptionSetDetail, coefficientQuantitySetDetail, percentSumSetDetail,
                  ADDOBJ, deleteid=DELETESESSION
                  
    FILTERS setSetDetail(d) == s
    EDIT Set OBJECT s
;

FORM sets 'Комплекты'
    OBJECTS s=Set
    PROPERTIES(s) nameSet READONLY, idSet SHOWIF showIDs() READONLY, DELETE
    PROPERTIES(s) ADDFORM, EDITFORM            
    ORDER BY nameSet
    
    OBJECTS d=SetDetail 
    PROPERTIES(d) READONLY indexSetDetail, nameSetDetail, percentNetWeightSetDetail, percentGrossWeightSetDetail, 
                  codeCustomsGroupSetDetail, nameVATCustomsExceptionSetDetail, coefficientQuantitySetDetail, percentSumSetDetail
    FILTERS setSetDetail(d) == s
               
    DIALOG Set OBJECT s
;
DESIGN sets FROM DEFAULT { main{ preferredSize = (600, 400); } }

inDeclarationInvoiceDetail 'Отм.' = DATA SESSION BOOLEAN (DeclarationInvoiceDetail);
inDeclarationInvoiceDetailDeclaration (declaration)= GROUP SUM 1 IF inDeclarationInvoiceDetail(d) BY  declarationDeclarationInvoiceDetail(d);

overCreateSetDeclarationInvoiceDetail = ABSTRACT ACTION LIST (DeclarationDetail);
createSetDeclarationInvoiceDetail 'Разбить комплекты' = ACTION (declaration) {
    IF inDeclarationInvoiceDetailDeclaration(declaration) THEN {
        LOCAL set = Set(); 
        
        FORM sets MODAL;
        IF formResult() == FormResult.ok THEN {
            set() <- chosenObject('s');
            DELETE d WHERE declarationDeclarationDetail(d) == declaration AND inDeclarationInvoiceDetail(declarationInvoiceDetailDeclarationDetail(d));
            
            FOR inDeclarationInvoiceDetail(did) AND declarationDeclarationInvoiceDetail(did) == declaration AND setSetDetail(sd) == set() ADDOBJ dd = DeclarationDetail DO {                              
                
                declarationDeclarationDetail(dd) <- declaration;
                declarationInvoiceDetailDeclarationDetail(dd) <- did;                             
                
                nameCustomsDeclarationDetail(dd) <- nameSetDetail(sd);
                UOMDeclarationDetail(dd) <- UOMDeclarationInvoiceDetail(did);
                
                quantityDeclarationDetail(dd) <- quantityDeclarationInvoiceDetail(did) * coefficientQuantitySetDetail(sd);
                
                sumNetWeightDeclarationDetail(dd) <- sumNetWeightDeclarationInvoiceDetail(did) * percentNetWeightSetDetail(sd) / 100;
                sumGrossWeightDeclarationDetail(dd) <- sumGrossWeightDeclarationInvoiceDetail(did) * percentGrossWeightSetDetail(sd) / 100;
                
                customsGroupDeclarationDetail(dd) <- customsGroupSetDetail (sd);
                VATCustomsExceptionDeclarationDetail(dd) <- VATCustomsExceptionSetDetail(sd);                   
                          
                priceDeclarationDetail(dd) <- sumDeclarationInvoiceDetail(did) * percentSumSetDetail(sd) / quantityDeclarationDetail(dd) / 100;                          
                overCreateSetDeclarationInvoiceDetail(dd);
            } 
        }       
    } ELSE {
        MESSAGE 'Не отмечены строки, которые следует разукомплектовать';
    } 

} TOOLBAR;

setDeclarationInvoiceDetail= DATA Set (DeclarationInvoiceDetail);
nameSetDeclarationInvoiceDetail 'Комплект' (d) = nameSet(setDeclarationInvoiceDetail(d)) MINCHARWIDTH 15 PREFCHARWIDTH 20;

EXTEND FORM declaration   
    PROPERTIES(di) inDeclarationInvoiceDetail BEFORE nameCustomsDeclarationInvoiceDetail 
    PROPERTIES(di) nameSetDeclarationInvoiceDetail AFTER nameCountryDeclarationInvoiceDetail(di)
       
    PROPERTIES(d) createSetDeclarationInvoiceDetail TODRAW di FORCE PANEL TOOLBAR 
;

NAVIGATOR {
    customsMasterData {
        ADD sets;
    }
}