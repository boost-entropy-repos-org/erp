MODULE PurchaseDeclarationSet;

REQUIRE PurchaseDeclarationDetail;

NAMESPACE Purchase;

CLASS Set 'Комплект' ;
TABLE set (Set);

nameSet 'Наименование'= DATA VARISTRING[255] (Set);
@defineExternalizable(set, VARSTRING[100]);

CLASS SetDetail 'Строка комплекта' ;
TABLE setDetail (SetDetail);

@defineDocumentRelation(set, SetDetail, );
@defineDocumentDetailIndex(set);

nameSetDetail 'Наименование'= DATA VARISTRING[255] (SetDetail);
	
coefficientQuantitySetDetail 'Коэффициент кол-ва' = DATA NUMERIC[8,2] (SetDetail);
percentSumSetDetail '% суммы' = DATA NUMERIC[8,2] (SetDetail);

percentNetWeightSetDetail '% вес нетто' = DATA NUMERIC[8,2] (SetDetail);
percentGrossWeightSetDetail '% вес брутто' = DATA NUMERIC[8,2] (SetDetail);

sumPercentSumSetDetailSet 'Итого % суммы' (set) = GROUP SUM percentSumSetDetail(detail) BY setSetDetail(detail) IN documentSum;
sumPercentNetWeightSetDetailSet 'Итого % вес нетто' (set) = GROUP SUM percentNetWeightSetDetail(detail) BY setSetDetail(detail) IN documentSum;
sumPercentGrossWeightSetDetailSet 'Итого % вес брутто' (set) = GROUP SUM percentGrossWeightSetDetail(detail) BY setSetDetail(detail) IN documentSum;

backgroundPercentSumSet 'Цвет' (set)= RGB(255,128,128) IF sumPercentSumSetDetailSet(set) != 100.0;
backgroundPercentNetWeightSet 'Цвет' (set)= RGB(255,128,128) IF sumPercentNetWeightSetDetailSet(set) != 100.0;
backgroundPercentPercentGrossWeightSet 'Цвет' (set)= RGB(255,128,128) IF sumPercentGrossWeightSetDetailSet(set) != 100.0;

customsGroupSetDetail = DATA CustomsGroup (SetDetail);
codeCustomsGroupSetDetail 'ТН ВЭД' (d) = codeCustomsGroup(customsGroupSetDetail(d));

VATCustomsExceptionSetDetail = DATA VATCustomsException (SetDetail);
nameVATCustomsExceptionSetDetail 'Льгота НДС' (d) = nameVATCustomsException(VATCustomsExceptionSetDetail(d));

CONSTRAINT customsGroupSetDetail(d) AND VATCustomsExceptionSetDetail(d) 
           AND NOT customsGroupVATCustomsException(VATCustomsExceptionSetDetail(d)) == customsGroupSetDetail(d)
    CHECKED BY VATCustomsExceptionSetDetail MESSAGE 'Льгота НДС должна соответствовать ТН ВЭД для строки комплекта';

FORM set 'Комплект'
    OBJECTS s=Set FIXED PANEL
    PROPERTIES(s) nameSet, idSet SHOWIF showIDs(), sumPercentSumSetDetailSet BACKGROUND backgroundPercentSumSet(s), 
                  sumPercentNetWeightSetDetailSet BACKGROUND backgroundPercentNetWeightSet(s), 
                  sumPercentGrossWeightSetDetailSet BACKGROUND backgroundPercentPercentGrossWeightSet(s) 
    
    OBJECTS d=SetDetail 
    PROPERTIES(d) indexSetDetail READONLY, nameSetDetail, percentNetWeightSetDetail, percentGrossWeightSetDetail, 
                  codeCustomsGroupSetDetail, nameVATCustomsExceptionSetDetail, coefficientQuantitySetDetail, percentSumSetDetail,
                  ADDOBJ, deleteid=DELETESESSION
                  
    FILTERS setSetDetail(d) == s
    EDIT Set OBJECT s
;

FORM sets 'Комплекты'
    OBJECTS s=Set
    PROPERTIES(s) nameSet READONLY, idSet SHOWIF showIDs() READONLY, sumPercentSumSetDetailSet, sumPercentNetWeightSetDetailSet, sumPercentGrossWeightSetDetailSet 
    PROPERTIES(s) DELETE FORCE PANEL TOOLBAR, ADDFORM, EDITFORM            
    ORDER BY nameSet(s)
    
    OBJECTS d=SetDetail 
    PROPERTIES(d) READONLY indexSetDetail, nameSetDetail, percentNetWeightSetDetail, percentGrossWeightSetDetail, 
                  codeCustomsGroupSetDetail, nameVATCustomsExceptionSetDetail, coefficientQuantitySetDetail, percentSumSetDetail
    FILTERS setSetDetail(d) == s
               
    DIALOG Set OBJECT s
;
DESIGN sets FROM DEFAULT { main{ preferredSize = (600, 400); } }

inDeclarationInvoiceDetail 'Отм.' = DATA SESSION BOOLEAN (DeclarationInvoiceDetail);
inDeclarationInvoiceDetailDeclaration (declaration)= GROUP SUM 1 IF inDeclarationInvoiceDetail(d) BY  declarationDeclarationInvoiceDetail(d);

overCreateSetDeclarationInvoiceDetail = ABSTRACT ACTION LIST (DeclarationDetail);
setDeclarationInvoiceDetail= DATA Set (DeclarationInvoiceDetail);
nameSetDeclarationInvoiceDetail 'Комплект' (d) = nameSet(setDeclarationInvoiceDetail(d)) MINCHARWIDTH 15 PREFCHARWIDTH 20;
countSetDeclarationInvoiceDetailDeclaration (declaration)= GROUP SUM 1 IF setDeclarationInvoiceDetail(d) BY  declarationDeclarationInvoiceDetail(d);

//maxUserNumberDeclarationDetailDeclaration (declaration) = GROUP MAX userNumberDeclarationDetail(declarationDetail) BY declarationDeclarationDetail(declarationDetail);
//minSetDetailSet (set) = GROUP MIN indexSetDetail(d) BY setSetDetail(d);


createOverSetDeclarationDetailDeclarationInvoiceDetail = ACTION (did) {                         
        
    FOR setSetDetail(sd) == setDeclarationInvoiceDetail(did) ADDOBJ dd = DeclarationDetail DO {

        declarationDeclarationDetail(dd) <- declarationDeclarationInvoiceDetail(did);
        declarationInvoiceDetailDeclarationDetail(dd) <- did;                             
        
        nameCustomsDeclarationDetail(dd) <- nameSetDetail(sd);
        UOMDeclarationDetail(dd) <- UOMDeclarationInvoiceDetail(did);
        
        quantityDeclarationDetail(dd) <- quantityDeclarationInvoiceDetail(did) * coefficientQuantitySetDetail(sd);
        
        sumNetWeightDeclarationDetail(dd) <- sumNetWeightDeclarationInvoiceDetail(did) * percentNetWeightSetDetail(sd) / 100;
        sumGrossWeightDeclarationDetail(dd) <- sumGrossWeightDeclarationInvoiceDetail(did) * percentGrossWeightSetDetail(sd) / 100;
        
        customsGroupDeclarationDetail(dd) <- customsGroupSetDetail (sd);
        VATCustomsExceptionDeclarationDetail(dd) <- VATCustomsExceptionSetDetail(sd);                   
                  
        priceDeclarationDetail(dd) <- sumDeclarationInvoiceDetail(did) * percentSumSetDetail(sd) / quantityDeclarationDetail(dd) / 100;                          
        overCreateSetDeclarationInvoiceDetail(dd);        
//        userNumberDeclarationDetail(dd) <- IF minSetDetailSet(setSetDetail(sd))== indexSetDetail(sd) THEN
//                
//            (maxUserNumberDeclarationDetailDeclaration(declarationDeclarationInvoiceDetail(did)) + 1)  WHERE isExportedDeclarationDetail(dd);
        
        
    } 
}
isSetDeclarationInvoiceDetail(did) += TRUE IF setDeclarationInvoiceDetail(did);
overSetDeclarationInvoiceDetail (did) += ACTION (did) {
    EXEC createOverSetDeclarationDetailDeclarationInvoiceDetail(did);
}

createSetDeclarationInvoiceDetail 'Разбить комплекты' = ACTION (declaration) {
    IF inDeclarationInvoiceDetailDeclaration(declaration) THEN {     
        IF  inDeclarationInvoiceDetailDeclaration(declaration) == countSetDeclarationInvoiceDetailDeclaration (declaration) THEN {          
            DELETE d WHERE declarationDeclarationDetail(d) == declaration AND inDeclarationInvoiceDetail(declarationInvoiceDetailDeclarationDetail(d)) AND setDeclarationInvoiceDetail(declarationInvoiceDetailDeclarationDetail(d));           
            
            FOR inDeclarationInvoiceDetail(did) AND declarationDeclarationInvoiceDetail(did) == declaration DO {                              
                EXEC createOverSetDeclarationDetailDeclarationInvoiceDetail(did);   
            }         
        } ELSE {
            CONFIRM 'Не для всех отмеченных позиций указан комплект. Продолжить?';
            IF (confirmed()) THEN {
                DELETE d WHERE declarationDeclarationDetail(d) == declaration AND inDeclarationInvoiceDetail(declarationInvoiceDetailDeclarationDetail(d)) AND setDeclarationInvoiceDetail(declarationInvoiceDetailDeclarationDetail(d));           
                
                FOR inDeclarationInvoiceDetail(did) AND declarationDeclarationInvoiceDetail(did) == declaration DO {                              
                    EXEC createOverSetDeclarationDetailDeclarationInvoiceDetail(did);   
                }             
            }
        }        
    } ELSE {
        MESSAGE 'Не отмечены строки, которые следует разукомплектовать';
    } 
} TOOLBAR;

EXTEND FORM declaration   
    PROPERTIES(di) inDeclarationInvoiceDetail BEFORE nameCustomsDeclarationInvoiceDetail(di)
    PROPERTIES(di) nameSetDeclarationInvoiceDetail AFTER nameCountryDeclarationInvoiceDetail(di)
       
    PROPERTIES(d) createSetDeclarationInvoiceDetail TODRAW di FORCE PANEL TOOLBAR 
;

NAVIGATOR {
    customsMasterData {
        ADD sets;
    }
}