MODULE PurchaseDeclarationSet;

REQUIRE PurchaseDeclarationDetail;

NAMESPACE Purchase;

CLASS Set 'Комплект' ;
TABLE set (Set);

name 'Наименование'= DATA VARISTRING[255] (Set);
@defineExternalizable(set, VARSTRING[100]);

CLASS SetDetail 'Строка комплекта' ;
TABLE setDetail (SetDetail);

@defineDocumentRelation(set, SetDetail, );
@defineDocumentDetailIndex(set);

name 'Наименование'= DATA VARISTRING[255] (SetDetail);
	
coefficientQuantity 'Коэффициент кол-ва' = DATA NUMERIC[8,2] (SetDetail);
percentSum '% суммы' = DATA NUMERIC[8,2] (SetDetail);

percentNetWeight '% вес нетто' = DATA NUMERIC[8,2] (SetDetail);
percentGrossWeight '% вес брутто' = DATA NUMERIC[8,2] (SetDetail);

sumPercentSumSetDetail 'Итого % суммы' (set) = GROUP SUM percentSum(SetDetail detail) BY set(detail) IN documentSum;
sumPercentNetWeightSetDetail 'Итого % вес нетто' (set) = GROUP SUM percentNetWeight(SetDetail detail) BY set(detail) IN documentSum;
sumPercentGrossWeightSetDetail 'Итого % вес брутто' (set) = GROUP SUM percentGrossWeight(SetDetail detail) BY set(detail) IN documentSum;

backgroundPercentSum 'Цвет' (Set set)= RGB(255,128,128) IF sumPercentSumSetDetail(set) != 100.0;
backgroundPercentNetWeight 'Цвет' (Set set)= RGB(255,128,128) IF sumPercentNetWeightSetDetail(set) != 100.0;
backgroundPercentPercentGrossWeight 'Цвет' (Set set)= RGB(255,128,128) IF sumPercentGrossWeightSetDetail(set) != 100.0;

customsGroup = DATA CustomsGroup (SetDetail);
codeCustomsGroup 'ТН ВЭД' (SetDetail d) = code(customsGroup(d));

VATCustomsException = DATA VATCustomsException (SetDetail);
nameVATCustomsException 'Льгота НДС' (SetDetail d) = name(VATCustomsException(d));

CONSTRAINT customsGroup(SetDetail d) AND VATCustomsException(d) 
           AND NOT customsGroup(VATCustomsException(d)) == customsGroup(d)
    CHECKED BY VATCustomsException[SetDetail] MESSAGE 'Льгота НДС должна соответствовать ТН ВЭД для строки комплекта';

FORM set 'Комплект'
    OBJECTS s=Set FIXED PANEL
    PROPERTIES(s) name, id SHOWIF showIDs(), sumPercentSumSetDetail BACKGROUND backgroundPercentSum(s), 
                  sumPercentNetWeightSetDetail BACKGROUND backgroundPercentNetWeight(s), 
                  sumPercentGrossWeightSetDetail BACKGROUND backgroundPercentPercentGrossWeight(s) 
    
    OBJECTS d=SetDetail 
    PROPERTIES(d) index READONLY, name, percentNetWeight, percentGrossWeight, 
                  codeCustomsGroup, nameVATCustomsException, coefficientQuantity, percentSum,
                  NEW, deleteid=DELETE
                  
    FILTERS set(d) == s
    EDIT Set OBJECT s
;

FORM sets 'Комплекты'
    OBJECTS s=Set
    PROPERTIES(s) name READONLY, id SHOWIF showIDs() READONLY, sumPercentSumSetDetail, sumPercentNetWeightSetDetail, sumPercentGrossWeightSetDetail 
    PROPERTIES(s) NEWSESSION DELETE FORCE PANEL TOOLBAR, NEW, EDIT            
    ORDER BY name(s)
    
    OBJECTS d=SetDetail 
    PROPERTIES(d) READONLY index, name, percentNetWeight, percentGrossWeight, 
                  codeCustomsGroup, nameVATCustomsException, coefficientQuantity, percentSum
    FILTERS set(d) == s
               
    LIST Set OBJECT s
;
DESIGN sets { main{ preferredSize = (600, 400); } }

in 'Отм.' = DATA LOCAL BOOLEAN (DeclarationInvoiceDetail);
inDeclarationInvoiceDetail (declaration)= GROUP SUM 1 IF in(DeclarationInvoiceDetail d) BY  declaration(d);

overCreateSetDeclarationInvoice = ACTION ABSTRACT LIST (DeclarationDetail);
set= DATA Set (DeclarationInvoiceDetail);
nameSet 'Комплект' (DeclarationInvoiceDetail d) = name(set(d)) MINCHARWIDTH 15 PREFCHARWIDTH 20;
countSetDeclarationInvoiceDetail (declaration)= GROUP SUM 1 IF set(DeclarationInvoiceDetail d) BY  declaration(d);

//maxUserNumberDeclarationDetailDeclaration (declaration) = GROUP MAX userNumberDeclarationDetail(declarationDetail) BY declarationDeclarationDetail(declarationDetail);
//minSetDetailSet (set) = GROUP MIN indexSetDetail(d) BY setSetDetail(d);


createOverSetDeclarationDetail(DeclarationInvoiceDetail did) = ACTION {                         
        
    FOR set(SetDetail sd) == set(did) ADDOBJ dd = DeclarationDetail DO {

        declaration(dd) <- declaration(did);
        declarationInvoiceDetail(dd) <- did;                             
        
        nameCustoms(dd) <- name(sd);
        UOM(dd) <- UOM(did);
        
        quantity(dd) <- quantity(did) * coefficientQuantity(sd);
        sum(dd) <- sum(did) * coefficientQuantity(sd);
        
        sumNetWeight(dd) <- sumNetWeight(did) * percentNetWeight(sd) / 100;
        sumGrossWeight(dd) <- sumGrossWeight(did) * percentGrossWeight(sd) / 100;
        
        customsGroup(dd) <- customsGroup (sd);
        VATCustomsException(dd) <- VATCustomsException(sd);                   
                  
        price(dd) <- sum(did) * percentSum(sd) / quantity(dd) / 100;                          
        overCreateSetDeclarationInvoice(dd);        
//        userNumberDeclarationDetail(dd) <- IF minSetDetailSet(setSetDetail(sd))== indexSetDetail(sd) THEN
//                
//            (maxUserNumberDeclarationDetailDeclaration(declarationDeclarationInvoiceDetail(did)) + 1)  WHERE isExportedDeclarationDetail(dd);
        
        
    } 
}
isSet(DeclarationInvoiceDetail did) += TRUE IF set(did);
overSet (DeclarationInvoiceDetail did) += ACTION {
    EXEC createOverSetDeclarationDetail(did);
}

createSetInvoiceDetail 'Разбить комплекты'(Declaration declaration) = ACTION {
    IF inDeclarationInvoiceDetail(declaration) THEN {     
        IF  inDeclarationInvoiceDetail(declaration) == countSetDeclarationInvoiceDetail (declaration) THEN {          
            DELETE DeclarationDetail d WHERE declaration(d) == declaration AND in(declarationInvoiceDetail(d)) AND set(declarationInvoiceDetail(d));           
            
            FOR in(DeclarationInvoiceDetail did) AND declaration(did) == declaration DO {                              
                EXEC createOverSetDeclarationDetail(did);   
            }         
        } ELSE {
            CONFIRM 'Не для всех отмеченных позиций указан комплект. Продолжить?';
            IF (confirmed()) THEN {
                DELETE DeclarationDetail d WHERE declaration(d) == declaration AND in(declarationInvoiceDetail(d)) AND set(declarationInvoiceDetail(d));           
                
                FOR in(DeclarationInvoiceDetail did) AND declaration(did) == declaration DO {                              
                    EXEC createOverSetDeclarationDetail(did);   
                }             
            }
        }        
    } ELSE {
        MESSAGE 'Не отмечены строки, которые следует разукомплектовать';
    } 
} TOOLBAR;

EXTEND FORM declaration   
    PROPERTIES(di) in BEFORE nameCustoms(di)
    PROPERTIES(di) nameSet AFTER nameCountry(di)
       
    PROPERTIES(d) createSetInvoiceDetail TODRAW di FORCE PANEL TOOLBAR 
;

NAVIGATOR {
    customsMasterData {
        ADD sets;
    }
}