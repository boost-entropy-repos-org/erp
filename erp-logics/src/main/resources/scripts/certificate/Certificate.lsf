MODULE Certificate;

REQUIRE Document, SkuLedger, Dashboard;

CLASS ABSTRACT Certificate 'Документ качества';
TABLE certificate(Certificate);

@defineDocumentAbstractHeaderTimePrefix(Certificate, ,' документа');
@defineDocumentAbstractHeaderTimePrefix(Certificate, from, ' с');
@defineDocumentAbstractHeaderTimePrefix(Certificate, to, ' по');

numberCertificate 'Номер' = ABSTRACT STRING[100] (Certificate) IN numbered PERSISTENT MINCHARWIDTH 10;
seriesCertificate 'Серия' = ABSTRACT STRING[2] (Certificate) IN numbered PERSISTENT FIXEDCHARWIDTH 3; 

seriesNumberCertificate 'Серия/Номер' (o) = 
    CONCAT '', seriesCertificate(o), numberCertificate(o) 
    MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;

descriptionCertificate 'Документ качества' (certificate) = CONCAT ' ', seriesNumberCertificate(certificate), 'от ' + fromDateCertificate(certificate), 'по ' + toDateCertificate(certificate);

// -------------------------- Подготовка документов под расширение сертификатами -------------------- //

META defineDocumentCertificate(document, object, prefix)

    EXTEND FORM user###document
        OBJECTS dc = User###document##Detail
        PROPERTIES (dc) indexUser###document##Detail, idBarcodeSkuUser###document##Detail, nameSkuUser###document##Detail,
                        nameBatchUser###document##Detail ON CHANGE changeBatchUser###document##Detail(dc), DELETESESSION
        FILTERS user###document##User###document##Detail(dc) == object
    ;

    DESIGN user###document{
        specification.box{
            NEW certificateContainer AFTER d.box {
                caption = 'Сертификаты';
                NEW headerCertificateContainer { type = CONTAINERH; }
                MOVE dc.box;
            }
        }
    }

    EXTEND FORM document##s
        OBJECTS dc = ###document##Detail
        PROPERTIES(dc) READONLY index###document##Detail, idBarcodeSku###document##Detail, nameSku###document##Detail,
                                nameBatch###document##Detail
        FILTERS document###document##Detail(dc) == object
    ;

    DESIGN document##s{
        documentDetail{
            NEW certificateContainer AFTER d.box {
                caption = 'Сертификаты';
                NEW headerCertificateContainer;
                MOVE dc.box;
            }
        }
    }

END

// ------------------------------------ Добавление сертификатов к документам ----------------------------------- //

META defineDocumentTextBatchPrefix(prefix, caption)

    prefix###text###batch  caption = ABSTRACT TEXT (Batch) PERSISTENT;
    prev###prefix###text###batch (batch) = PREV(prefix###text###batch(batch));
END

META defineDocumentCertificateTextPrefix(document, prefix, caption)

    prefix###text###document##Detail caption = ABSTRACT TEXT (###document##Detail);
    prefix###textUser###document##Detail caption = DATA TEXT (User###document##Detail);
    prefix###text###document##Detail(detail) += prefix###textUser###document##Detail(detail);
    
    overCopy###document##Detail(d, detail) += ACTION (d, detail) {      
        prefix###textUser###document##Detail(d) <- prefix###textUser###document##Detail(detail);
    } 

    EXTEND FORM user###document PROPERTIES(dc) prefix###textUser###document##Detail;
    DESIGN user###document {
        PROPERTY(prefix###textUser###document##Detail(dc)){
            minimumSize = (200, 36);
            preferredSize = (300, 36);
            maximumSize = (300, 36);
        }
    }

    EXTEND FORM document##s PROPERTIES(dc) READONLY prefix###text###document##Detail;
    DESIGN document##s {
        PROPERTY(prefix###text###document##Detail(dc)){
            minimumSize = (200, 36);
            preferredSize = (300, 36);
            maximumSize = (300, 36);
        }
    }

END

META defineDocumentCertificate(prop, document, object, caption)
    @defineDocumentCertificate(prop, ###prop, document, object, caption);
END

META defineDocumentCertificate(prop, propClass, document, object, caption)

    prop###document##Detail = ABSTRACT propClass (###document##Detail);
    description###prop###document##Detail caption (detail) = description###prop(prop###document##Detail(detail));

    prop###user###document = DATA propClass (User###document);
    description###prop###user###document caption (document) = description###prop(prop###user###document(document));

    data###prop###user###document##Detail = DATA propClass (User###document##Detail);
    prop###user###document##Detail (detail) =
        OVERRIDE prop###user###document(user###document##User###document##Detail(detail)), data###prop###user###document##Detail(detail) PERSISTENT INDEXED;
    prop###document##Detail(detail) += prop###user###document##Detail(detail);

    description###prop###user###document##Detail caption (detail) = description###prop(prop###user###document##Detail(detail));

    overCopy###document##Detail(d, detail) += ACTION (d, detail) {      
        data###prop###user###document##Detail(d) <- data###prop###user###document##Detail(detail);
    } 
    
    backgroup###prop###user###document##Detail = ABSTRACT COLOR (###document##Detail);

    EXTEND FORM user###document
        PROPERTIES(object) description###prop###user###document
        PROPERTIES(d) BACKGROUND backgroup###prop###user###document##Detail(d) description###prop###user###document##Detail
        PROPERTIES(dc) BACKGROUND backgroup###prop###user###document##Detail(dc) description###prop###user###document##Detail
    ;

    DESIGN user###document {
        headerCertificateContainer {
            MOVE PROPERTY(description###prop###user###document(object));
        }
    }

    EXTEND FORM document##s
        PROPERTIES(d) READONLY description###prop###document##Detail
        PROPERTIES(dc) READONLY description###prop###document##Detail
    ;
END

// ------------------------------------ Сертификаты для партий ----------------------------------- //

META defineBatchCertificate(prop, propClass, caption)
    prop###batch = ABSTRACT propClass (Batch) PERSISTENT;
    prev###prop###batch (batch) = PREV(prop###batch(batch));
    number###prop###batch caption (batch) = number###prop(prop###batch(batch));
    series###prop###batch caption (batch) = series###prop(prop###batch(batch));
    seriesNumber###prop###batch caption (batch) = seriesNumber###prop(prop###batch(batch));

    description###prop###batch caption (batch) = description###prop(prop###batch(batch));
    batchCount###prop##Sku(prop, sku) = GROUP SUM 1 BY prop##Batch(batch), skuBatch(batch);

    EXTEND FORM currentBalanceSkuStock PROPERTIES READONLY description###prop###batch(bt);
    EXTEND FORM balanceSkuStock PROPERTIES READONLY description###prop###batch(bt);
    EXTEND FORM currentBalanceBatchStock PROPERTIES READONLY description###prop###batch(bt);
    EXTEND FORM balanceBatchStock PROPERTIES READONLY description###prop###batch(bt);
END

@defineDocumentTextBatchPrefix(certificate, 'Дополнительные сертификаты');

// пока не добавляем, так как увеличивают размер поля
//EXTEND FORM currentBalanceSkuStock PROPERTIES READONLY certificateTextBatch(bt);
//EXTEND FORM balanceSkuStock PROPERTIES READONLY certificateTextBatch(bt);
//EXTEND FORM currentBalanceBatchStock PROPERTIES READONLY certificateTextBatch(bt);
//EXTEND FORM balanceBatchStock PROPERTIES READONLY certificateTextBatch(bt);

// ------------------------------------ Ограничение на выбор объектов ----------------------------------- //

banNotShippedCompliance 'Запретить выбирать сертификаты по партиям без прихода' = DATA BOOLEAN();

EXTEND FORM options
    PROPERTIES () banNotShippedCompliance
;

DESIGN options {
    commons {
        MOVE PROPERTY(banNotShippedCompliance());
    }
}

META defineDocumentCertificateConstraint(prop, document, caption)
    CONSTRAINT prop###user###document##Detail(detail) AND NOT batchCount###prop##Sku(prop###user###document##Detail(detail), skuUser###document##Detail(detail)) 
               AND banNotShippedCompliance() 
        CHECKED BY description###prop###user###document##Detail
        MESSAGE 'Выберите '##caption##', по которой есть поставка';
END

// ------------------------------------ Автоматическое проставление ----------------------------------- //

autoDeriveLastCertificate 'Не подставлять последний сертификат для партии на закупке' = DATA BOOLEAN (); 

EXTEND FORM options PROPERTIES() autoDeriveLastCertificate;
DESIGN options {
    commons {
        MOVE PROPERTY(autoDeriveLastCertificate());
    }
}

META deriveDocumentPurchaseCertificate(prop, document, stockProp, prefix)
    prefix###prop###user###document##Detail(detail)  <- IF batchUser###document##Detail(detail) 
                                                            THEN prev###prop###batch(batchUser###document##Detail(detail))
                                                            ELSE prev###prop###batch(prevLastOrderBatchSkuStock(skuUser###document##Detail(detail), stockProp##User###document##Detail(detail)))
        WHEN (CHANGED (batchUser###document##Detail(detail)) OR
              CHANGED (skuUser###document##Detail(detail)) OR
              CHANGED (stockProp##User###document##Detail(detail))) AND NOT autoDeriveLastCertificate();
END

META deriveDocumentSaleCertificate(prop, document, stockProp, prefix)
    prefix###prop###user###document##Detail(detail)  <- IF batchUser###document##Detail(detail) 
                                                            THEN prev###prop###batch(batchUser###document##Detail(detail))
                                                            ELSE prev###prop###batch(prevLastOrderBatchSkuStock(skuUser###document##Detail(detail), stockProp##User###document##Detail(detail)))
        WHEN (CHANGED (batchUser###document##Detail(detail)) OR
              CHANGED (skuUser###document##Detail(detail)) OR
              CHANGED (stockProp##User###document##Detail(detail)));
END

META deriveDocumentCertificate(prop, document, prefix)
    prefix###prop###user###document##Detail(detail)  <-  prev###prop###batch(batchUser###document##Detail(detail))
        WHEN CHANGED (batchUser###document##Detail(detail));
END

NAVIGATOR {
    dashboardNavigator {
        NEW customsDashboardNavigator 'ВЭД';
    }
    NEW customsNavigator 'ВЭД' BEFORE administration WINDOW toolbar IMAGE '/images/cop.png' {
        NEW customsDocuments 'Документы';
        NEW customsMasterData 'Справочники';
    }
}

DESIGN options {
    pane {
        NEW customs {
            caption = 'ВЭД';
        }
    }
}