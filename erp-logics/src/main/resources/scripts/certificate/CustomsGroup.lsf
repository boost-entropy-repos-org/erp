MODULE CustomsGroup;

REQUIRE Certificate, Hierarchy, Utils, Historizable, Tax, Stock;

CLASS CustomsZone 'Таможенная зона';
TABLE customsZone(CustomsZone);

nameCustomsZone 'Наименование' = DATA ISTRING[50](CustomsZone) IN recognize;

customsZoneName (name) = GROUP AGGR customsZone BY nameCustomsZone(customsZone) WHERE customsZone IS CustomsZone;

currencyCustomsZone = DATA Currency(CustomsZone);
nameCurrencyCustomsZone 'Валюта' (customsZone) = nameCurrency(currencyCustomsZone(customsZone)) IN base;

CLASS CustomsGroup 'Позиция ТН ВЭД';
TABLE customsGroup (CustomsGroup);

nameCustomsGroup 'Наименование' = DATA VARISTRING[1000](CustomsGroup);

hasCodeCustomsGroup 'Есть код' = DATA BOOLEAN (CustomsGroup) IN base;
dateFromCustomsGroup 'Дата с' = DATA DATE (CustomsGroup) IN base;
dateToCustomsGroup 'Дата по' = DATA DATE (CustomsGroup) IN base;
codeCustomsGroup 'Код' = DATA STRING[10](CustomsGroup) IN base MINCHARWIDTH 10;
customsGroupCode (code) = GROUP AGGR customsGroup BY codeCustomsGroup(customsGroup) WHERE customsGroup IS CustomsGroup;

numberCustomsGroup 'Номер строки' = DATA INTEGER(CustomsGroup) IN base;

TABLE customsGroupCustomsGroup (CustomsGroup, CustomsGroup);
@defineHierarchy(customsGroup);

customsZoneCustomsGroup = DATA CustomsZone(CustomsGroup) AUTOSET;
nameCustomsZoneCustomsGroup 'Таможенная зона' (customsGroup) = nameCustomsZone(customsZoneCustomsGroup(customsGroup)) IN base;

customsZoneCountry = DATA CustomsZone(Country);
nameCustomsZoneCountry 'Таможенная зона' (country) = nameCustomsZone(customsZoneCountry(country)) IN base;

isCompliancedDataCustomsGroup 'Необходимость сертификации' = DATA BOOLEAN (CustomsGroup) IN base;

levelParentCustomsGroup (customsGroup) = GROUP MIN levelCustomsGroupCustomsGroup(customsGroup, parent) IF isCompliancedDataCustomsGroup(parent)
                                                BY customsGroup PERSISTENT;

isCompliancedParentCustomsGroup (customsGroup) = TRUE IF levelParentCustomsGroup(customsGroup);

isCompliancedCustomsGroup 'Необходимость сертификации' (customsGroup) = OVERRIDE isCompliancedParentCustomsGroup(customsGroup), isCompliancedDataCustomsGroup(customsGroup);

TABLE customsGroupData(CustomsGroup, DATE);

@defineHistorizableCustom(supplierVATCustomsGroup, 'НДС', Range, numberRange, customsGroup, codeCustomsGroup, base);

dataValueSupplierVATCustomsGroupDate 'НДС, %' (customsGroup, date) = valueRateRangeDate(supplierVATCustomsGroupDate(customsGroup, date), date);
valueCurrentRateSupplierVATCustomsGroup 'НДС, %' (customsGroup) = valueCurrentRateRange(supplierVATCustomsGroup(customsGroup));

@defineHistorizable(percentDutyCustomsGroup, 'Пошлина (%)', NUMERIC[14,3], customsGroup, codeCustomsGroup, base);
@defineHistorizable(weightDutyCustomsGroup, 'Пошлина (валют.)', NUMERIC[14,3], customsGroup, codeCustomsGroup, base);

@defineHistorizable(registrationCustomsGroup, 'Таможенный сбор', NUMERIC[14,3], customsGroup, codeCustomsGroup, base);

customsGroupCountrySku = ABSTRACT CustomsGroup(Country, Sku);
codeCustomsGroupCountrySku 'ТН ВЭД' (country, sku) = codeCustomsGroup(customsGroupCountrySku(country, sku));

EXTEND FORM country
    PROPERTIES(c) nameCustomsZoneCountry
;

EXTEND FORM countries
    PROPERTIES(c) READONLY nameCustomsZoneCountry
;

FORM customsZone 'Таможенная зона'
    OBJECTS cz = CustomsZone FIXED PANEL
    PROPERTIES(cz) nameCustomsZone, nameCurrencyCustomsZone
    EDIT CustomsGroup OBJECT cz
;

FORM customsZones 'Таможенная зона'
    OBJECTS cz = CustomsZone
    PROPERTIES(cz) READONLY nameCustomsZone, nameCurrencyCustomsZone
    PROPERTIES(cz) ADDFORM, EDITFORM, DELETE
;

FORM customsGroup 'Позиция ТН ВЭД'
    OBJECTS cg = CustomsGroup FIXED PANEL
    PROPERTIES(cg) codeCustomsGroup, nameCustomsGroup, nameParentCustomsGroup, nameCustomsZoneCustomsGroup,
                   dateFromCustomsGroup, dateToCustomsGroup, isCompliancedCustomsGroup, registrationCustomsGroup,
                   valueCurrentRateSupplierVATCustomsGroup ON CHANGE dialogSupplierVATCustomsGroup(cg),
                   percentDutyCustomsGroup, weightDutyCustomsGroup, numberCustomsGroup

    EDIT CustomsGroup OBJECT cg
;

addCustomsGroup 'Добавить' = ACTION (customsGroup) NEWSESSION {
    FOR ADDOBJ cg = CustomsGroup DO {
        ASSIGN parentCustomsGroup(cg) <- customsGroup;
        FORM customsGroup OBJECTS cg=cg MODAL;
        IF formResult() == FormResult.ok THEN
            EXEC apply();
    }
} TOOLBAR IMAGE 'add.png' EDITKEY 'INSERT';

FORM customsGroups 'Позиции ТН ВЭД'
    OBJECTS cz = CustomsZone FIXED PANEL
    PROPERTIES(cz) SELECTOR nameCustomsZone, nameCurrencyCustomsZone

    TREE treeGroups a=STRING[3], gcg=CustomsGroup PARENT parentCustomsGroup
    PROPERTIES READONLY OBJVALUE(a), nameCustomsGroup(gcg), codeCustomsGroup(gcg), isCompliancedDataCustomsGroup(gcg)
    PROPERTIES(gcg) addCustomsGroup, EDITFORM
    ORDER BY nameCustomsGroup

    OBJECTS cg = CustomsGroup
    PROPERTIES(cg) READONLY codeCustomsGroup, nameCustomsGroup, canonicalNameCustomsGroup,
                   dateFromCustomsGroup, dateToCustomsGroup, isCompliancedCustomsGroup, registrationCustomsGroup,
                   valueCurrentRateSupplierVATCustomsGroup, percentDutyCustomsGroup, weightDutyCustomsGroup, numberCustomsGroup
    PROPERTIES(cg) ADDFORM, EDITFORM, DELETE
    ORDER BY numberCustomsGroup

    FILTERS stringEqualsAll(a), customsZoneCustomsGroup(cg) == cz
    //FILTERS (d IS EmployeeDivision AND NOT dg IS EmployeeDivisionGroup) OR isParentEmployeeDivisionGroupEmployeeDivision(dg, d)

    FILTERGROUP hasCode
        FILTER 'Только с кодом' 'F7' hasCodeCustomsGroup(gcg) DEFAULT

    FILTERGROUP filters
        FILTER 'Все листья' 'F10' isParentLeafCustomsGroupCustomsGroup(cg, gcg) OR (cg IS CustomsGroup AND isLeafCustomsGroup(cg) AND NOT gcg)
        FILTER 'Всех потомков' 'F9' isParentCustomsGroupCustomsGroup(cg, gcg) OR (cg IS CustomsGroup AND NOT gcg) DEFAULT
        FILTER 'Только непосредственных потомков' 'F8' parentCustomsGroup(cg) == gcg OR (cg IS CustomsGroup AND NOT parentCustomsGroup(cg) AND NOT gcg)

    DIALOG CustomsGroup OBJECT cg
;

DESIGN customsGroups FROM DEFAULT{
    main {
        NEW split {
            childConstraints = TO THE RIGHT;
            type = SPLITH;
            ADD treeGroups.tree.box{
                fillHorizontal = 1;
            };

            ADD cg.box {
                cg.grid {
                    fillHorizontal = 2;
                    defaultComponent = TRUE;
                }
            }

            POSITION treeGroups.tree.box TO THE LEFT cg.box;
        }

        ADD functions.box;
    }
}


NAVIGATOR {
    customsMasterData {
        ADD customsZones;
        ADD customsGroups;
    }
}