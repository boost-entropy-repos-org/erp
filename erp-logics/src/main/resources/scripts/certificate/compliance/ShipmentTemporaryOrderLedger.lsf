MODULE ShipmentTemporaryOrderLedger;

REQUIRE ShipmentOrderLedger, PurchaseCompliance, ComplianceType;

NAMESPACE Purchase;

@defineDocumentInterfaceProperty (invoice, createTemporaryOrderLedger, 'Только временные сертификаты');

EXTEND FORM userInvoice 
    PROPERTIES(i) BACKGROUND backgroundShippedInvoice(i) SHOWIF createOrderLedgerUserInvoice(i) createTemporaryOrderLedgerUserInvoice
;

EXTEND DESIGN userInvoice {
    headerCreateShipment {
        ADD PROPERTY(createTemporaryOrderLedgerUserInvoice(i));
    }
}

@defineDocumentInterfaceProperty (shipment, createTemporaryOrderLedger, 'Только временные сертификаты');

EXTEND FORM userShipment 
    PROPERTIES(s)  createTemporaryOrderLedgerUserShipment SHOWIF createOrderLedgerUserShipment(s)
;

EXTEND DESIGN userShipment {
    headerCreateDocuments {
        headerCreateOrderLedger {
            ADD PROPERTY(createTemporaryOrderLedgerUserShipment(s));
        }            
    }          
}

createTemporaryOrderLedgerShipment(s) += createTemporaryOrderLedgerInvoice(invoiceInvoiceShipment(s));

excludeOrderLedgerShipmentDetail(d) += WHEN createTemporaryOrderLedgerShipmentDetail(d) AND NOT (complianceTypeCompliance(complianceShipmentDetail(d)) == ComplianceType.temporary) THEN TRUE ;