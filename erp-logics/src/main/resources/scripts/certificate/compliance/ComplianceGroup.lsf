MODULE ComplianceGroup;

REQUIRE Compliance;

NAMESPACE Compliance;

CLASS ComplianceGroup 'Группа сертификации';
TABLE complianceGroup (ComplianceGroup);

@defineExternalizable(complianceGroup, VARSTRING[100]);
name 'Наименование' = DATA VARISTRING[200](ComplianceGroup) MINCHARWIDTH 45 PREFCHARWIDTH 50;

TABLE complianceGroupComplianceGroup (ComplianceGroup, ComplianceGroup);
@defineHierarchy(complianceGroup);

FORM complianceGroup 'Группа сертификации'
    OBJECTS cg = ComplianceGroup FIXED PANEL
    PROPERTIES(cg) id SHOWIF showIDs(), name, nameParent

    EDIT ComplianceGroup OBJECT cg
;

add 'Добавить'(ComplianceGroup complianceGroup) = ACTION NEWSESSION {
    FOR ADDOBJ cg = ComplianceGroup DO {
        parent(cg) <- complianceGroup;
        FORM complianceGroup OBJECTS cg=cg MANAGESESSION DOCKEDMODAL;
    }
} TOOLBAR IMAGE 'add.png' EDITKEY 'INSERT';

FORM complianceGroups 'Группы сертификации'

    TREE treeGroups a=STRING[3], gcg=ComplianceGroup PARENT parent
    PROPERTIES READONLY OBJVALUE(a), name(gcg)
    PROPERTIES(gcg) add, EDITFORM
    ORDER BY name(gcg)

    OBJECTS cg = ComplianceGroup
    PROPERTIES(cg) READONLY id SHOWIF showIDs(), name, canonicalName
    PROPERTIES(cg) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    ORDER BY name(gcg)

    FILTERS stringEqualsAll(a)

    FILTERGROUP filters
        FILTER 'Все листья' isParentLeaf(cg, gcg) OR (cg IS ComplianceGroup AND isLeaf(cg) AND NOT gcg) 'F10'
        FILTER 'Всех потомков' isParent(cg, gcg) OR (cg IS ComplianceGroup AND NOT gcg) 'F9' DEFAULT
        FILTER 'Только непосредственных потомков' parent(cg) == gcg OR (cg IS ComplianceGroup AND NOT parent(cg) AND NOT gcg) 'F8'

    DIALOG ComplianceGroup OBJECT cg
;

DESIGN complianceGroups {
    main {
        NEW split {
            type = SPLITH;
            fill = 1;
            MOVE treeGroups.tree.box;
            MOVE cg.box {
                fill = 2;
                cg.grid {
                    defaultComponent = TRUE;
                }
            }
        }
        MOVE functions.box;
    }
}

@extendFormEditable(complianceGroups);

NAVIGATOR {
    customsMasterData {
        ADD complianceGroups;
    }
}

// ---------------------- Расширение логики сертификатов ---------------------------------- //

TABLE complianceGroupCompliance(ComplianceGroup, Compliance);
in 'Вкл.' = DATA BOOLEAN(ComplianceGroup, Compliance);

countComplianceGroup 'Кол-во' (compliance) =
    GROUP SUM 1 IF in(ComplianceGroup complianceGroup, Compliance compliance) BY compliance PERSISTENT;

EXTEND FORM compliance
    OBJECTS cg = ComplianceGroup
    PROPERTIES(cg) READONLY id SHOWIF showIDs(), name, nameParent

    PROPERTIES(cg, c) in
;
DESIGN compliance {
    firstTab{
        MOVE cg.box;
    }
}

EXTEND FORM compliances
    OBJECTS cg = ComplianceGroup FIXED GRID
    PROPERTIES(cg) READONLY name, nameParent
    PROPERTIES(cg, c) READONLY in

    FILTERS in(cg, c)
    
    FILTERGROUP countComplianceGroup FILTER 'С группами' countComplianceGroup(c) 'ctrl F10'      
;

DESIGN compliances {
    documentDetail{
        NEW complianceGroup BEFORE documentHistory {
            fill = 1;
            caption = 'Группы сертификации';
            MOVE cg.box;
        }
        
    }
} 

EXTEND FORM complianceGroup
    OBJECTS c = Compliance
    PROPERTIES(c) READONLY number, series, date, time, fromDate,
                            toDate, nameLegalEntity
    PROPERTIES(cg, c) in
;

// ------------------- По товарам --------------------- //
complianceGroup = ABSTRACT ComplianceGroup(Country, Sku);

// Цвета по умолчанию
backgroundCompliance 'Цвет' () = RGB(224, 224, 255);