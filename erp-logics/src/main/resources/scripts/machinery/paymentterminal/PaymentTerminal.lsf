MODULE PaymentTerminal;

REQUIRE System, Machinery, Store, LegalEntity;

// Модели
CLASS PaymentTerminalModel 'Модель платёжных терминалов' : Model;

namePaymentTerminalModel 'Наименование' = DATA VARISTRING[110](PaymentTerminalModel);

nameModel(model) += namePaymentTerminalModel(model) IF model IS PaymentTerminalModel;

FORM paymentTerminalModel 'Модель платёжных терминалов'
    OBJECTS p=PaymentTerminalModel FIXED PANEL
    PROPERTIES(p) namePaymentTerminalModel, sidModel, noteModel, handlerModel
    EDIT PaymentTerminalModel OBJECT p
;

FORM paymentTerminalsModels 'Модели платёжных терминалов'
    OBJECTS p=PaymentTerminalModel
    PROPERTIES(p) READONLY namePaymentTerminalModel, sidModel, handlerModel, noteModel
    PROPERTIES(p) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG PaymentTerminalModel OBJECT p
;

// ------------------------------------------------ Стандартные значения ------------------------------------ //

loadDefaultPaymentTerminalModel 'Добавить модель платёжных терминалов' = ACTION (iname, isid, ihandler)  {
    FOR ADDOBJ ptm = PaymentTerminalModel DO {
         ASSIGN namePaymentTerminalModel(ptm) <- iname;
         ASSIGN sidModel(ptm) <- isid;
         ASSIGN handlerModel(ptm) <- ihandler;
    }
}

loadDefaultPaymentTerminalModels 'Загрузить стандартные модели платёжных терминалов' = ACTION () {
    EXEC loadDefaultPaymentTerminalModel('Платёжные терминалы JadeEKO', 'JadeEKO', '');
} IN loadDefault;

@implementLoadDefaultData(loadDefaultPaymentTerminalModels);