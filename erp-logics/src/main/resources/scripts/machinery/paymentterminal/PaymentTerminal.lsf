MODULE PaymentTerminal;

REQUIRE System, Machinery, Store, LegalEntity, CashRegister;

// Модели
CLASS PaymentTerminalModel 'Модель платёжных терминалов' : Model;

name 'Наименование' = DATA VARISTRING[110](PaymentTerminalModel);

name(PaymentTerminalModel model) += name(model) IF model IS PaymentTerminalModel;

network 'Работа по сети' = DATA BOOLEAN (PaymentTerminalModel);

FORM paymentTerminalModel 'Модель платёжных терминалов'
    OBJECTS p=PaymentTerminalModel PANEL
    PROPERTIES(p) name, sid, note, handler
    EDIT PaymentTerminalModel OBJECT p
;

FORM paymentTerminalsModels 'Модели платёжных терминалов'
    OBJECTS p=PaymentTerminalModel
    PROPERTIES(p) READONLY name, sid, handler, note
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE 
    LIST PaymentTerminalModel OBJECT p
;

NAVIGATOR {
    cashRegisterNavigator {
        ADD paymentTerminalsModels; 
    }
}

// Привязываем кассу к платежным терминалам 
paymentTerminalModel 'Модель платёжного терминала' = DATA PaymentTerminalModel(CashRegister) IN base;
namePaymentTerminalModel 'Модель платёжного терминала' (CashRegister cashRegister) = name[Model](paymentTerminalModel(cashRegister));

hostPaymentTerminal 'Хост платёжного терминала' = DATA VARSTRING[100] (CashRegister) IN base;
hostPaymentTerminalCurrentCashRegister 'Хост платёжного терминала' = hostPaymentTerminal(currentCashRegister());

comPortPaymentTerminalModel 'Порт платёжного терминала' = DATA INTEGER (CashRegister) IN base;
comPortCurrentPaymentTerminalModelCashRegister 'Порт платёжного терминала' = comPortPaymentTerminalModel(currentCashRegister());

EXTEND FORM groupCashRegister 
    PROPERTIES(c) namePaymentTerminalModel, hostPaymentTerminal SHOWIF network(paymentTerminalModel(c)), comPortPaymentTerminalModel
;

// ------------------------------------------------ Стандартные значения ------------------------------------ //

paymentTerminalSID (paymentTerminalModel) = GROUP MAX PaymentTerminalModel paymentTerminalModel BY sid (paymentTerminalModel);

loadDefaultPaymentTerminalModel 'Добавить модель платёжных терминалов'(VARISTRING[110] iname, VARSTRING[20] isid, BOOLEAN iNetwork) = {
    IF NOT paymentTerminalSID(isid) THEN {
        NEW ptm = PaymentTerminalModel {
             ASSIGN name(ptm) <- iname;
             ASSIGN sid(ptm) <- isid;
             ASSIGN network(ptm) <- iNetwork;
        }
    }
}

loadDefaultPaymentTerminalModels 'Загрузить стандартные модели платёжных терминалов'() = {
    EXEC loadDefaultPaymentTerminalModel('Платёжные терминалы JadeEKO', 'JadeEKO', NULL);
    EXEC loadDefaultPaymentTerminalModel('Платёжные терминалы Yarus', 'Yarus', TRUE);
} IN loadDefault;

@implementLoadDefaultData(loadDefaultPaymentTerminalModels);