MODULE Scales;

REQUIRE System, Machinery;

// Группы
CLASS GroupScales 'Группы весов' : GroupMachinery;

stockGroupScales = DATA Stock (GroupScales);
stockGroupMachinery (groupMachinery) += stockGroupScales(groupMachinery);

directoryGroupScales 'Каталог обмена' = DATA VARSTRING[200] (GroupScales) IN base;
pieceCodeGroupScales 'Код для штучных товаров' = DATA STRING[2] (GroupScales) IN base;
weightCodeGroupScales 'Код для весовых товаров' = DATA STRING[2] (GroupScales) IN base;

// Модели
CLASS ScalesModel 'Модель весов' : Model;

nameScalesModel 'Наименование' = DATA VARISTRING[110](ScalesModel);

scalesModelName (scalesModel) = GROUP AGGR scalesModel BY nameScalesModel (scalesModel) WHERE scalesModel IS ScalesModel;

nameModel(model) += nameScalesModel(model) IF model IS ScalesModel;

maxTextScalesModel 'MAX допустимое колич. дополнительных текстов' = DATA INTEGER (ScalesModel) IN base;
compositionScalesModel 'Число знаков в доп.тексте (составе товара)' = DATA INTEGER (ScalesModel) IN base;

FORM scalesModel 'Модель весов'
    OBJECTS s=ScalesModel FIXED PANEL
    PROPERTIES(s) nameScalesModel, noteModel, handlerModel, maxProductModel, maxTextScalesModel,
                  compositionScalesModel
    EDIT ScalesModel OBJECT s
;

FORM scalesModels 'Модели весов'
    OBJECTS m=ScalesModel
    PROPERTIES(m) READONLY nameScalesModel, maxProductModel, noteModel, handlerModel
    PROPERTIES(m) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
;

// Весы
CLASS Scales 'Весы' : Machinery;
isGroupScales (machinery) = machinery IS GroupScales;

groupScalesScales = DATA GroupScales (Scales);
groupMachineryMachinery(machinery) += groupScalesScales(machinery);

scalesModelScales = DATA ScalesModel (Scales);
modelMachinery(machinery) += scalesModelScales(machinery);

numberScales 'Заводской(серийный) номер' = DATA VARSTRING[100] (Scales) IN base;
dateScales 'Дата следующей обязательной поверки' = DATA DATE (Scales) IN base;

FORM scales 'Весы'
    OBJECTS s=Scales FIXED PANEL
    PROPERTIES(s) nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, numberScales, nameModelMachinery,
                  dateScales
    EDIT Scales OBJECT s
;

FORM groupScales 'Группа весов'
    OBJECTS grs=GroupScales FIXED PANEL
    PROPERTIES(grs) nppGroupMachinery, nameStockGroupMachinery, nameGroupMachinery,
                    directoryGroupScales,
                    pieceCodeGroupScales, weightCodeGroupScales,
                    filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grs),
                    namePriceListTypeGroupMachinery

    OBJECTS s=Scales
    PROPERTIES(s)   nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, numberScales, nameModelMachinery,
                    dateScales, ADDOBJ, DELETESESSION
    FILTERGROUP filters1
        FILTER 'Показывать только для данной группы' 'F10' groupScalesScales(s) == grs DEFAULT
    EDIT GroupScales OBJECT grs
;

FORM groupsScales 'Группы весов'
    OBJECTS grs=GroupScales
    PROPERTIES(grs) READONLY nppGroupMachinery, nameStockGroupMachinery, nameGroupMachinery,
                         filterSkuGroupMachinery, directoryGroupScales,
                         pieceCodeGroupScales, weightCodeGroupScales
    PROPERTIES(grs) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    OBJECTS s=Scales
    PROPERTIES(s)   READONLY nppMachinery, descriptionMachinery, portMachinery, numberScales, nameModelMachinery,
                             dateScales
    FILTERS groupScalesScales(s) == grs
;

DESIGN groupsScales FROM DEFAULT {
    NEW topContainer BEFORE functions.box {
        type = SPLITV;
        fill = 1;

        ADD grs.box;
        ADD s.box;
    }
}

// Ячейки
CLASS CellScales 'Ячейка весов';
TABLE cellScales(CellScales);

groupScalesCellScales = DATA GroupScales (CellScales);

compositionCellScales 'Ячейка' = DATA TEXT (CellScales);
numberCellScales 'Номер' = PARTITION SUM 1 IF c IS CellScales BY groupScalesCellScales (c) ORDER c;

cellScalesGroupScalesComposition (groupScales, composition) = GROUP AGGR cellScales
            BY groupScalesCellScales (cellScales), compositionCellScales (cellScales) WHERE cellScales IS CellScales;

FORM cellScales 'Ячейки весов'
    OBJECTS grs=GroupScales
        PROPERTIES(grs) READONLY nameStockGroupMachinery, nameGroupMachinery,
                             filterSkuGroupMachinery, directoryGroupScales,
                             pieceCodeGroupScales, weightCodeGroupScales

    OBJECTS cs=CellScales
    PROPERTIES(cs)  numberCellScales, compositionCellScales, DELETESESSION

    FILTERS groupScalesCellScales(cs) == grs
;

DESIGN cellScales FROM DEFAULT {
    NEW topContainer{
        type = SPLITV;
        fill = 1;

        ADD grs.box;
        ADD cs.box;
    }
    ADD functions.box;
}

//---------------------------- Этикетки в весы ----------------------------------------//

CLASS LabelFormat 'Формат этикетки';
TABLE labelFormat (LabelFormat);

nameLabelFormat 'Наименование' = DATA VARISTRING[50](LabelFormat);

idLabelFormat 'Код формата этикетки' = DATA INTEGER (LabelFormat) IN base;
idToLabelFormat (labelFormat) = GROUP AGGR labelFormat BY idLabelFormat(labelFormat) WHERE labelFormat IS LabelFormat;

fileLabelFormat = DATA CUSTOMFILE (LabelFormat);
loadFileLabelFormat 'Загрузить файл этикетки' (labelFormat) = ACTION LOADFILE fileLabelFormat(labelFormat) IN base;

fileMessageLabelFormat = DATA CUSTOMFILE (LabelFormat);
loadFileMessageLabelFormat 'Загрузить файл спец.сообщений' (labelFormat) = ACTION LOADFILE fileMessageLabelFormat(labelFormat) IN base;

scalesModelLabelFormat 'Модель весов'= DATA ScalesModel (LabelFormat);
nameScalesModelLabelFormat 'Модель весов' (labelFormat) = nameScalesModel(scalesModelLabelFormat(labelFormat));

FORM labelFormat 'Формат этикеток весов'
    OBJECTS c=LabelFormat
    PROPERTIES(c) idLabelFormat, nameLabelFormat, nameScalesModelLabelFormat, loadFileLabelFormat, loadFileMessageLabelFormat

    EDIT LabelFormat OBJECT c
;

FORM labelFormats 'Форматы этикеток весов'
    OBJECTS c=LabelFormat
    PROPERTIES(c) READONLY idLabelFormat, nameLabelFormat, nameScalesModelLabelFormat
    PROPERTIES(c) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    DIALOG LabelFormat OBJECT c
;

// ------------------------------------------------ Стандартные значения ------------------------------------ //

loadDefaultScalesModel 'Добавить модель весов' = ACTION (stringOne, stringTwo)  {
    FOR ADDOBJ sm = ScalesModel DO {
         ASSIGN nameScalesModel(sm) <- stringOne;
         ASSIGN handlerModel(sm) <- stringTwo;
    }
}

loadDefaultScalesModels 'Загрузить стандартные модели весов' = ACTION () {
    EXEC loadDefaultScalesModel('Весы Digi', 'equ.clt.handler.digi.DigiHandler');
    EXEC loadDefaultScalesModel('Весы EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
    EXEC loadDefaultScalesModel('Весы Штрих-Принт', 'equ.clt.handler.shtrihPrint.ShtrihPrintHandler');
} IN loadDefault;

@implementLoadDefaultData(loadDefaultScalesModels);

// --------------------------------------- Генерация групп весов -------------------------------- //
loadDefaultGroupScales 'Сгенерировать группу весов' = ACTION(priceListType, stock, model, num) {
    FOR ADDOBJ g = GroupScales DO {
        stockGroupScales(g) <- stock;
        priceListTypeGroupMachinery(g) <- priceListType;
        nameGroupMachinery(g) <- 'Группа весов по умолчанию';

        LOCAL numScales = INTEGER();
        numScales() <- 0;
        WHILE numScales() < num DO {
            FOR ADDOBJ s = Scales DO {
                groupScalesScales(s) <- g;
                numScales() <- numScales() + 1;
                nppMachinery(s) <- numScales();
                scalesModelScales(s) <- model;
                descriptionMachinery(s) <- CONCAT ' ', 'Весы', VARSTRING[255](numScales()), '(', nameStock(stock), ')';
            }
        }
    }
};

EXTEND FORM defaultData
    OBJECTS         sm=ScalesModel FIXED PANEL
    PROPERTIES(sm)  SELECTOR nameScalesModel

    OBJECTS         cScales=INTEGER FIXED PANEL
    PROPERTIES(cScales)   intValueScales = OBJVALUE
    PROPERTIES(pt, s, sm, cScales)  loadDefaultGroupScales
;

EXTEND DESIGN defaultData {
    PROPERTY(nameScalesModel(sm)) {
        caption = 'Модель весов';
    }
    PROPERTY(intValueScales) {
        caption = 'Количество весов';
    }
    machinery {
        NEW scales {
            caption = 'Весы';
            ADD PROPERTY(nameScalesModel(sm));
            ADD PROPERTY(intValueScales);
            ADD PROPERTY(loadDefaultGroupScales(pt,s,sm,cScales));
        }
    }
}

NAVIGATOR {
    machineryNavigator {
        NEW scalesNavigator 'Весы'{
            ADD groupsScales;
            ADD scalesModels;
            ADD labelFormats;
            ADD cellScales;
        }
    }
}