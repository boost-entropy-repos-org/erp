MODULE Terminal;

REQUIRE System, Machinery;

// Группы
CLASS GroupTerminal 'Группы ТСД' : GroupMachinery;
TABLE groupTerminal (GroupTerminal);

stockGroupTerminal = DATA Stock (GroupTerminal);
stockGroupMachinery (groupMachinery) += stockGroupTerminal(groupMachinery);

inactiveGroupTerminal 'Неактивный' = DATA BOOLEAN (GroupTerminal);
activeGroupTerminal 'Активный' (group) = group IS GroupTerminal AND NOT inactiveGroupTerminal(group);
inactiveGroupMachinery(g) += inactiveGroupTerminal(g);

// Модели
CLASS TerminalModel 'Модель ТСД' : Model;
TABLE terminalModel (TerminalModel);

nameTerminalModel 'Наименование' = DATA VARISTRING[110](TerminalModel);

nameModel(model) += nameTerminalModel(model) IF model IS TerminalModel;

FORM terminalModel 'Модель ТСД'
    OBJECTS t=TerminalModel FIXED PANEL
    PROPERTIES(t) nameTerminalModel, noteModel, handlerModel, maxProductModel
    EDIT TerminalModel OBJECT t
;

FORM terminalModels 'Модели ТСД'
    OBJECTS m=TerminalModel
    PROPERTIES(m) READONLY nameTerminalModel, maxProductModel, handlerModel, noteModel
    PROPERTIES(m) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
;

// Терминалы
CLASS Terminal 'ТСД' : Machinery;
TABLE terminal (Terminal);

isTerminal (machinery) = machinery IS Terminal;

groupTerminalTerminal = DATA GroupTerminal (Terminal) NOT NULL DELETE;
groupMachineryMachinery(machinery) += groupTerminalTerminal(machinery);

directoryGroupTerminal 'Директория обмена с ТСД' = DATA VARSTRING[100] (GroupTerminal) IN base;
directoryGroupMachinery (groupMachinery) += directoryGroupTerminal(groupMachinery);
groupTerminalDirectory (npp) = GROUP MAX groupTerminal BY directoryGroupTerminal(groupTerminal);

terminalModelGroupTerminal = DATA TerminalModel (GroupTerminal);
modelGroupMachinery(groupMachinery) += terminalModelGroupTerminal(groupMachinery);

groupTerminalNpp (npp) = GROUP AGGR groupTerminal BY nppGroupMachinery(groupTerminal) WHERE groupTerminal IS GroupTerminal;  

FORM terminal 'ТСД'
    OBJECTS t=Terminal FIXED PANEL
    PROPERTIES(t) nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery
    EDIT Terminal OBJECT t
;

// ------------------------------------- Виды справочников ТСД --------------------------------- //

CLASS TerminalHandbookType 'Вид справочника ТСД';
TABLE terminalHandbookType(TerminalHandbookType);

@defineExternalizable(terminalHandbookType, VARSTRING[100]);

nameTerminalHandbookType 'Наименование' = DATA VARSTRING[100] (TerminalHandbookType);

FORM terminalHandbookType
    OBJECTS t = TerminalHandbookType FIXED PANEL
    PROPERTIES(t) nameTerminalHandbookType, idTerminalHandbookType
    EDIT TerminalHandbookType OBJECT t
;

FORM terminalHandbookTypes 'Виды справочников ТСД'
    OBJECTS t=TerminalHandbookType FIXED GRID
    PROPERTIES(t) READONLY nameTerminalHandbookType, idTerminalHandbookType
    PROPERTIES(t)          ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG TerminalHandbookType OBJECT t
;

// ------------------------ Группы типов документов ------------------------- //
CLASS GroupTerminalDocumentType 'Группа типов документов';
TABLE groupTerminalDocumentType (GroupTerminalDocumentType);

nameGroupTerminalDocumentType 'Наименование группы' = DATA VARSTRING[200] (GroupTerminalDocumentType) IN base MINCHARWIDTH 10 PREFCHARWIDTH 20;
groupTerminalDocumentTypeGroupTerminal 'Группа типов документов' = DATA GroupTerminalDocumentType (GroupTerminal);
nameGroupTerminalDocumentTypeGroupTerminal 'Группа типов документов' (groupTerminal) = nameGroupTerminalDocumentType(groupTerminalDocumentTypeGroupTerminal(groupTerminal));

//---------------------------- типы документов ----------------------------------------//

CLASS TerminalDocumentType 'Тип документов';
TABLE terminalDocumentType (TerminalDocumentType);

groupTerminalDocumentTypeTerminalDocumentType 'Группа типов документов' = DATA GroupTerminalDocumentType (TerminalDocumentType) NOT NULL DELETE;
nameGroupTerminalDocumentTypeTerminalDocumentType 'Группа типов документов' (terminalDocumentType) = nameGroupTerminalDocumentType(groupTerminalDocumentTypeTerminalDocumentType(terminalDocumentType));

nameTerminalDocumentType 'Название' = DATA VARSTRING[200] (TerminalDocumentType) IN base;
flagTerminalDocumentType 'Флаг' = DATA INTEGER (TerminalDocumentType) IN base;

@defineExternalizable(terminalDocumentType, VARSTRING[100]);

terminalHandbookType1TerminalDocumentType = DATA TerminalHandbookType (TerminalDocumentType);
idTerminalHandbookType1TerminalDocumentType 'Код' (terminalDocumentType) = 
    idTerminalHandbookType (terminalHandbookType1TerminalDocumentType(terminalDocumentType));
nameTerminalHandbookType1TerminalDocumentType 'Имя' (terminalDocumentType) = 
    nameTerminalHandbookType(terminalHandbookType1TerminalDocumentType(terminalDocumentType));

nameInHandbook1TerminalDocumentType 'Наименование в справочнике 1' = DATA VARSTRING[200] (TerminalDocumentType) IN base;
nameInHandbook1TerminalDocumentType(terminalDocumentType) <- nameTerminalHandbookType1TerminalDocumentType(terminalDocumentType) 
    WHEN CHANGED(terminalHandbookType1TerminalDocumentType(terminalDocumentType));

terminalHandbookType2TerminalDocumentType = DATA TerminalHandbookType (TerminalDocumentType);
idTerminalHandbookType2TerminalDocumentType 'Код' (terminalDocumentType) = 
    idTerminalHandbookType (terminalHandbookType2TerminalDocumentType(terminalDocumentType));
nameTerminalHandbookType2TerminalDocumentType 'Имя' (terminalDocumentType) = 
    nameTerminalHandbookType(terminalHandbookType2TerminalDocumentType(terminalDocumentType));

nameInHandbook2TerminalDocumentType 'Наименование в справочнике 2' = DATA VARSTRING[200] (TerminalDocumentType) IN base;
nameInHandbook2TerminalDocumentType(terminalDocumentType) <- nameTerminalHandbookType2TerminalDocumentType(terminalDocumentType) 
    WHEN CHANGED(terminalHandbookType2TerminalDocumentType(terminalDocumentType));

FORM groupTerminalDocumentType 'Группа типов документов'
    OBJECTS gtdt=GroupTerminalDocumentType FIXED PANEL
    PROPERTIES(gtdt) nameGroupTerminalDocumentType

    OBJECTS tdt=TerminalDocumentType
    PROPERTIES(tdt)   idTerminalDocumentType, nameTerminalDocumentType, flagTerminalDocumentType,
                      idTerminalHandbookType1TerminalDocumentType, nameInHandbook1TerminalDocumentType,
                      idTerminalHandbookType2TerminalDocumentType, nameInHandbook2TerminalDocumentType,
                      ADDOBJ, DELETESESSION

    FILTERS groupTerminalDocumentTypeTerminalDocumentType(tdt) == gtdt

    EDIT GroupTerminalDocumentType OBJECT gtdt
;

FORM groupTerminalDocumentTypes 'Группы типов документов'
    OBJECTS gtdt=GroupTerminalDocumentType
    PROPERTIES(gtdt) READONLY nameGroupTerminalDocumentType
    PROPERTIES(gtdt) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    OBJECTS tdt=TerminalDocumentType
    PROPERTIES(tdt) READONLY idTerminalDocumentType, nameTerminalDocumentType, flagTerminalDocumentType,
                             idTerminalHandbookType1TerminalDocumentType, nameInHandbook1TerminalDocumentType,
                             idTerminalHandbookType2TerminalDocumentType, nameInHandbook2TerminalDocumentType

    FILTERS groupTerminalDocumentTypeTerminalDocumentType (tdt) == gtdt
    
    DIALOG GroupTerminalDocumentType OBJECT gtdt
;

DESIGN groupTerminalDocumentTypes {
    NEW topContainer{
        type = SPLITV;
        fill = 1;

        MOVE gtdt.box;
        MOVE tdt.box;
    }
    MOVE functions.box;
}

FORM groupTerminal 'Группа ТСД'
    OBJECTS grt=GroupTerminal FIXED PANEL
    PROPERTIES(grt) nppGroupMachinery, nameStockGroupMachinery, nameGroupMachinery,
                    nameGroupTerminalDocumentTypeGroupTerminal, nameModelGroupMachinery,
                    filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grt),
                    namePriceListTypeGroupMachinery, directoryGroupTerminal, inactiveGroupTerminal

    OBJECTS t=Terminal
    PROPERTIES(t)   nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, ADDOBJ, DELETESESSION

    FILTERGROUP filters3
        FILTER 'Показывать только для данной группы' groupTerminalTerminal(t) == grt 'F10' DEFAULT

    EDIT GroupTerminal OBJECT grt
;

FORM groupsTerminal 'Группы ТСД'
    OBJECTS grt=GroupTerminal, t=Terminal
    PROPERTIES(grt)  READONLY activeGroupTerminal, nppGroupMachinery, nameStockGroupMachinery, nameGroupMachinery,
                     nameGroupTerminalDocumentTypeGroupTerminal, nameModelGroupMachinery,
                     filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grt),
                     namePriceListTypeGroupMachinery, directoryGroupTerminal

    PROPERTIES(grt)  ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    PROPERTIES(t) READONLY nppMachinery, descriptionMachinery, portMachinery
    FILTERS groupTerminalTerminal(t) == grt
    
    FILTERGROUP active1
        FILTER 'Активные' activeGroupTerminal(grt) 'F5' DEFAULT       
;

DESIGN groupsTerminal {
    NEW topContainer{
        type = SPLITV;
        fill = 1;

        MOVE grt.box;
        MOVE t.box;
    }
    MOVE functions.box;
}

// ------------------------------------ Документы ТСД ------------------------------- //

CLASS TerminalDocument 'Документ ТСД';
TABLE terminalDocument (TerminalDocument);

@defineExternalizable(terminalDocument, VARSTRING[100]);  

titleTerminalDocument 'Имя' = DATA VARSTRING[100] (TerminalDocument) IN base MINCHARWIDTH 20 PREFCHARWIDTH 30;
quantityTerminalDocument 'Количество' = DATA NUMERIC[14,3] (TerminalDocument) IN base;
idTerminalHandbookType1TerminalDocument 'Код в справочнике 1' = DATA VARSTRING[100] (TerminalDocument) IN base;
idTerminalHandbookType2TerminalDocument 'Код в справочнике 2' = DATA VARSTRING[100] (TerminalDocument) IN base;

terminalDocumentTypeTerminalDocument = DATA TerminalDocumentType (TerminalDocument);
nameTerminalDocumentTypeTerminalDocument 'Тип документа' (terminalDocument) = nameTerminalDocumentType (terminalDocumentTypeTerminalDocument (terminalDocument)) MINCHARWIDTH 20 PREFCHARWIDTH 30;

groupTerminalTerminalDocument = DATA GroupTerminal (TerminalDocument);
nameGroupTerminalTerminalDocument 'Группа ТСД' (terminalDocument) = nameGroupMachinery(groupTerminalTerminalDocument(terminalDocument));

stockTerminalDocument (document) = stockGroupTerminal(groupTerminalTerminalDocument(document));
nameStockTerminalDocument 'Склад' (document) = nameStock(stockTerminalDocument (document));

idTerminalDocumentTypeTerminalDocument (terminalDocument) = idTerminalDocumentType (terminalDocumentTypeTerminalDocument (terminalDocument));

usedTerminalDocument 'Использован' (terminalDocument) = DATA BOOLEAN (TerminalDocument) IN base;
notUsedTerminalDocument 'Неиспользован' (terminalDocument) = terminalDocument IS TerminalDocument AND NOT usedTerminalDocument(terminalDocument);

createdUserTerminalDocument = DATA CustomUser (TerminalDocument);
createdNameUserTerminalDocument 'Создан пользователем' (td) = nameContact(createdUserTerminalDocument(td)) MINCHARWIDTH 10 PREFCHARWIDTH 20;

terminalDocumentTerminalDocumentDetail = DATA TerminalDocument(TerminalDocumentDetail);

CLASS TerminalDocumentDetail 'Строка документа ТСД';
TABLE terminalDocumentDetail (TerminalDocumentDetail);

idTerminalDocumentDetail 'Код' = DATA VARSTRING[100] (TerminalDocumentDetail) IN recognize INDEXED MINCHARWIDTH 10 PREFCHARWIDTH 15;

numberTerminalDocumentDetail 'Номер' = DATA VARSTRING[100] (TerminalDocumentDetail) IN base;
barcodeTerminalDocumentDetail 'Штрихкод' = DATA STRING[15] (TerminalDocumentDetail) IN base;
quantityTerminalDocumentDetail 'Количество' = DATA NUMERIC[14,3] (TerminalDocumentDetail) IN base;
priceTerminalDocumentDetail 'Цена' = DATA NUMERIC[14,2] (TerminalDocumentDetail) IN base;
sumTerminalDocumentDetail 'Сумма' = DATA NUMERIC[16,2] (TerminalDocumentDetail) IN base;
nameTerminalDocumentDetail 'Наименование' = DATA VARSTRING[200] (TerminalDocumentDetail) IN base;
isNewTerminalDocumentDetail 'Новый товар' = DATA BOOLEAN (TerminalDocumentDetail) IN base;

terminalDocumentDetailIdTerminalDocumentId (documentDetail, document) = GROUP AGGR terminalDocumentDetail 
    BY idTerminalDocument (terminalDocumentTerminalDocumentDetail(terminalDocumentDetail)), idTerminalDocumentDetail(terminalDocumentDetail);    

// ----------------------------------------------- Формы документов ------------------------------------------ //

FORM terminalDocument 'Документ ТСД'
    OBJECTS td=TerminalDocument FIXED PANEL
    PROPERTIES(td)  idTerminalDocument, nameGroupTerminalTerminalDocument, nameStockTerminalDocument, nameTerminalDocumentTypeTerminalDocument, idTerminalHandbookType1TerminalDocument,
                    idTerminalHandbookType2TerminalDocument, titleTerminalDocument, quantityTerminalDocument, usedTerminalDocument READONLY, createdNameUserTerminalDocument

    OBJECTS tdd=TerminalDocumentDetail
    PROPERTIES(tdd) numberTerminalDocumentDetail, barcodeTerminalDocumentDetail, nameTerminalDocumentDetail,
    isNewTerminalDocumentDetail, quantityTerminalDocumentDetail, priceTerminalDocumentDetail, sumTerminalDocumentDetail, ADDOBJ, deletetdd=DELETESESSION

    FILTERS terminalDocumentTerminalDocumentDetail(tdd) == td

    EDIT TerminalDocument OBJECT td;
;

DESIGN terminalDocument {
    td.box{
        type = CONTAINERV;

        NEW row1 {
            type = CONTAINERH;
            MOVE PROPERTY(idTerminalDocument(td));
            MOVE PROPERTY(nameGroupTerminalTerminalDocument(td));
            MOVE PROPERTY(nameTerminalDocumentTypeTerminalDocument(td));
            MOVE PROPERTY(titleTerminalDocument(td));
            MOVE PROPERTY(createdNameUserTerminalDocument(td));
        }
        NEW row2 {
            type = CONTAINERH;
            MOVE PROPERTY(idTerminalHandbookType1TerminalDocument(td));
            MOVE PROPERTY(idTerminalHandbookType2TerminalDocument(td));
            MOVE PROPERTY(quantityTerminalDocument(td));
            MOVE PROPERTY(usedTerminalDocument(td));
        }
    }
    MOVE tdd.box;
    MOVE functions.box;
}

FORM terminalDocuments 'Документы ТСД'
    OBJECTS td=TerminalDocument
    PROPERTIES(td)  READONLY idTerminalDocument, nameGroupTerminalTerminalDocument, nameTerminalDocumentTypeTerminalDocument, 
                    idTerminalHandbookType1TerminalDocument, idTerminalHandbookType2TerminalDocument, titleTerminalDocument, quantityTerminalDocument, 
                    createdNameUserTerminalDocument
    PROPERTIES(td)  ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    OBJECTS tdd=TerminalDocumentDetail
    PROPERTIES(tdd) READONLY numberTerminalDocumentDetail, barcodeTerminalDocumentDetail, nameTerminalDocumentDetail,
    isNewTerminalDocumentDetail, priceTerminalDocumentDetail, quantityTerminalDocumentDetail, sumTerminalDocumentDetail

    FILTERS terminalDocumentTerminalDocumentDetail(tdd) == td
    FILTERGROUP filterUse
        FILTER 'Неиспользованные' notUsedTerminalDocument(td) 'F10' DEFAULT
;

@extendFormFilterAccessStock(TerminalDocument, td, terminalDocuments, stock, company);


DESIGN terminalDocuments {
    main {
        preferredSize = (1024, 768);
        NEW topContainer{
            type = SPLITV;
            fill = 1;

            MOVE td.box;
            MOVE tdd.box;
        }
    }
    MOVE functions.box;
}

//----------------------------- Макросы для документов --------------------------------//

META defineAddDetailDialogTerminal (object, skuProp)
    @defineAddDetailDialogTerminalInner (object, ###object, skuProp);
END

META defineAddDetailDialogTerminalInner (object, class, skuProp)
    addDetailDialogTerminal###object##Detail###object 'Импорт из ТСД' (object) = ACTION (object) {
        FORM terminalDocuments MODAL;
        IF formResult() == FormResult.ok THEN {
            LOCAL document = TerminalDocument ();
            document() <- chosenObject('td');
            usedTerminalDocument(terminalDocument) <- TRUE WHERE terminalDocument == document()  ;

            FOR terminalDocumentTerminalDocumentDetail(tdd) == document() ORDER numberTerminalDocumentDetail(tdd) ADDOBJ o = class##Detail DO {
                object###object##Detail(o) <- object;
                skuProp###object##Detail(o) <- skuBarcode(barcodeIdDate(barcodeTerminalDocumentDetail(tdd), date###object(object)));
                quantity###object##Detail(o) <- quantityTerminalDocumentDetail(tdd);
            }
        }
    } TOOLBAR;
END

// ------------------------------------------------ Стандартные значения ------------------------------------ //

// Модели терминалов сбора данных
loadDefaultTerminalModel 'Добавить модель терминала' = ACTION (stringOne, stringTwo, stringThree)  {
    FOR ADDOBJ tm = TerminalModel DO {
         ASSIGN sidModel(tm) <- stringOne;   
         ASSIGN nameTerminalModel(tm) <- stringTwo;
         ASSIGN handlerModel(tm) <- stringThree;
    }
}

loadDefaultTerminalModels 'Загрузить стандартные модели ТСД' = ACTION () {
    EXEC loadDefaultTerminalModel('inventory', 'ТСД InventoryTech', 'equ.clt.handler.inventoryTech.InventoryTechHandler');
    EXEC loadDefaultTerminalModel('easycsv', 'ТСД EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
    EXEC loadDefaultTerminalModel('lsterminal', 'ТСД LSTerminal', 'equ.clt.handler.lsterminal.LSTerminalHandler');
} IN loadDefault;

@implementLoadDefaultData(loadDefaultTerminalModels);

// Виды справочников терминалов сбора данных
loadDefaultTerminalHandbookType 'Добавить вид справочника ТСД' = ACTION (n, s) {
    FOR ADDOBJ t = TerminalHandbookType DO {
        nameTerminalHandbookType(t) <- n;
        idTerminalHandbookType(t) <- s;
    }
}

loadDefaultTerminalHandbookTypes 'Загрузить стандартные виды справочников ТСД' = ACTION () {
    loadDefaultTerminalHandbookType('Организация', 'ПС');
} IN loadDefault;

@implementLoadDefaultData(loadDefaultTerminalHandbookTypes);

// Типы документов терминалов сбора данных
loadDefaultTerminalDocumentType 'Добавить тип документа ТСД' = ACTION (nameString, gtdt, idTypeString, flagInteger, handbook1String, handbook2String) {
    FOR ADDOBJ tdt = TerminalDocumentType DO {
        ASSIGN nameTerminalDocumentType(tdt) <- nameString;
        ASSIGN groupTerminalDocumentTypeTerminalDocumentType(tdt) <- gtdt;
        ASSIGN terminalHandbookType1TerminalDocumentType(tdt) <- terminalHandbookTypeId(handbook1String);
        ASSIGN terminalHandbookType2TerminalDocumentType(tdt) <- terminalHandbookTypeId(handbook2String);
        ASSIGN idTerminalDocumentType(tdt) <- idTypeString;
        ASSIGN flagTerminalDocumentType(tdt) <-flagInteger;
    }
}

loadDefaultTerminalDocumentTypes 'Загрузить стандартные типы документов ТСД' = ACTION () {
    FOR ADDOBJ gtdt = GroupTerminalDocumentType DO {
        ASSIGN nameGroupTerminalDocumentType(gtdt) <- 'Группа типов документов';
        EXEC loadDefaultTerminalDocumentType('Инвентаризация', gtdt, '01', 31, ' ', ' ');
        EXEC loadDefaultTerminalDocumentType('Приход', gtdt, '02', 31, '01', ' ');
        EXEC loadDefaultTerminalDocumentType('Отгрузка по безналичному расчёту', gtdt, '03', 31, '01', ' ');
    }
} IN loadDefault;

@implementLoadDefaultData(loadDefaultTerminalDocumentTypes);

// ------------------------------------------ Генерация групп терминалов сбора данных ------------------------------ //
loadDefaultGroupTerminal 'Сгенерировать группу терминалов' = ACTION(stock, model, gtdt, num) {
    FOR ADDOBJ g = GroupTerminal DO {
        stockGroupTerminal(g) <- stock;
        nameGroupMachinery(g) <- 'Группа ТСД по умолчанию';
        groupTerminalDocumentTypeGroupTerminal(g) <- gtdt;

        LOCAL numTerminal = INTEGER();
        numTerminal() <- 0;
        WHILE numTerminal() < num DO {
            FOR ADDOBJ t = Terminal DO {
                groupTerminalTerminal(t) <- g;
                numTerminal() <- numTerminal() + 1;
                nppMachinery(t) <- numTerminal();
                terminalModelGroupTerminal(g) <- model;
            }
        }
    }
}

EXTEND FORM defaultData
    OBJECTS         tm=TerminalModel FIXED PANEL
    PROPERTIES(tm)  SELECTOR nameTerminalModel

    OBJECTS         gtdt=GroupTerminalDocumentType FIXED PANEL
    PROPERTIES(gtdt) SELECTOR nameGroupTerminalDocumentType

    OBJECTS         cTerminal=INTEGER FIXED PANEL
    PROPERTIES(cTerminal)   intValueTerminal = OBJVALUE
    PROPERTIES (s, tm, gtdt, cTerminal)  loadDefaultGroupTerminal
;

DESIGN defaultData {
    PROPERTY(nameTerminalModel(tm)) {
        caption = 'Модель ТСД';
    }
    PROPERTY(nameGroupTerminalDocumentType(gtdt)) {
        caption = 'Группа типов документов';
    }
    PROPERTY(intValueTerminal) {
        caption = 'Количество ТСД';
    }
    machinery {
        NEW terminal {
            caption = 'ТСД';
            MOVE PROPERTY(nameTerminalModel(tm));
            MOVE PROPERTY(nameGroupTerminalDocumentType(gtdt));
            MOVE PROPERTY(intValueTerminal);
            MOVE PROPERTY(loadDefaultGroupTerminal(s,tm,gtdt,cTerminal));
        }
    }
}

NAVIGATOR {
    machineryNavigator {
        NEW terminalNavigator 'Терминалы сбора данных' {
            ADD terminalDocuments;
            ADD groupsTerminal;
            ADD terminalModels;
            ADD groupTerminalDocumentTypes;
            ADD terminalHandbookTypes;
        }
    }
}