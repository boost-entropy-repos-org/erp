MODULE LabelTerminal;

REQUIRE Label, Terminal;

NAMESPACE Label;

addDetailDialogTerminalLabelTransactionDetail 'Импорт из ТСД' (LabelTransaction labelTransaction) = {
    DIALOG terminalDocuments OBJECTS td INPUT DO {
        used(td) <- TRUE;
        FOR terminalDocument(TerminalDocumentDetail tdd) == td DO {
            NEW o = LabelTransactionDetail {
                labelTransaction(o) <- labelTransaction;
                sku(o) <- sku(tdd);
                quantity(o) <- INTEGER(quantity(tdd));
                createAttribute(o);
            }
        }
    }
} TOOLBAR;

EXTEND FORM customLabelTransaction
    PROPERTIES(l) TODRAW d addDetailDialogTerminalLabelTransactionDetail
;

@defineDocumentHeaderSkuQuantity(terminalDocument, sku);

EXTEND CLASS TerminalDocument : Label.PriceTransactionDocument;
description (TerminalDocument document) += Terminal.description(document);

createAttribute = ACTION ABSTRACT LIST (TerminalDocumentDetail, LabelTransactionDetail);

createLabelTransaction 'Распечатать ценники'(TerminalDocument terminalDocument) = {
	NEWSESSION {           
	
	    LOCAL in = BOOLEAN (Sku);
	    in(Sku sku) <- TRUE IF countTerminalDocumentDetail(sku, terminalDocument);
	
	    // бежим по всем типам ценников из управленческих параметров
	    // для каждого создаем по операции печати ценников
	    FOR ([= GROUP SUM 1 IF in(Sku sku) AND in(LabelType labelType, sku, DepartmentStore departmentStore) BY labelType, departmentStore](LabelType labelType, stock(terminalDocument)))
	        NEW t = LabelTransaction DO {
	            departmentStore(t) <- stock(terminalDocument);
	            priceTransactionDocument(t) <- terminalDocument;
	            labelType(t) <- labelType;
	            
	            FOR terminalDocument(TerminalDocumentDetail dd) == terminalDocument AND 
	                in(Sku sku) AND sku == sku(dd) AND 
	                in(labelType, sku, stock(terminalDocument)) AND 
	                PriceListType pt == overPriceListType(t) NOINLINE (pt)
	                NEW d = LabelTransactionDetail DO {
	                labelTransaction(d) <- t;
	                sku(d) <- sku;
	
	                name(d) <- IF batch(d) THEN documentNameSku(batch(d)) ELSE name(sku(d));
	                createAttribute(d);
	
	                quantity(d) <- INTEGER(quantity(dd));
	
	                price(d) <- calcPrice(pt, d);
	                retailPrice(d) <- overRetailPrice(d);
	                createAttribute(dd, d);
	            }
	            DELETE LabelTransactionDetail d WHERE labelTransaction(d) == t AND NOT price(d) AND NOT printNullPrice(d);
	            DELETE LabelTransactionDetail d WHERE labelTransaction(d) == t AND NOT retailPrice(d) AND notPrintRetailPrice(d);
	            print(t);
	    }
	    printed(terminalDocument) <- TRUE WHERE is(terminalDocument);    
	    used(terminalDocument) <- TRUE WHERE is(terminalDocument); 
	       
	    apply();
	}
} TOOLBAR CONFIRM;

createSnapshotTerminalDocumentLabel 'Перепечатать ценники'(TerminalDocument terminalDocument) = {
	NEWSESSION {
	        
	    LOCAL in = BOOLEAN (Sku);    
	    in(Sku sku) <- TRUE IF countTerminalDocumentDetail(sku, terminalDocument);
	    
	    DIALOG selectLabelTypes OBJECTS ds =  stock(terminalDocument), l INPUT NOMANAGESESSIONX DO { 
	        IF NOT countSelectType() THEN {  
	            select(LabelType type) <- TRUE WHERE type == l;
	        }                                        
	        FOR select(LabelType type) NEW t = LabelTransaction DO {              
	            departmentStore(t) <- stock(terminalDocument);
	            priceTransactionDocument(t) <- terminalDocument;
	            labelType(t) <- type;
	
	            FOR terminalDocument(TerminalDocumentDetail dd) == terminalDocument AND in(Sku sku) AND sku == sku(dd)
	                AND PriceListType pt == overPriceListType(t) NOINLINE (pt)
	                NEW d = LabelTransactionDetail DO {
	                    labelTransaction(d) <- t;
	                    sku(d) <- sku;
	
	                    name(d) <- IF batch(d) THEN documentNameSku(batch(d)) ELSE name(sku(d));
	                    documentQuantity(d) <- quantity(dd); 
	                    
	                    price(d) <- OVERRIDE documentPrice(d), calcPrice(pt, d);
	                    retailPrice(d) <- overRetailPrice(d) WHERE overRetailPrice(d);                       
	                                                               
	                    quantity(d) <- IF NOT countLabel(departmentStore(d)) 
	                                                             THEN INTEGER(documentQuantity(d))
	                                                             ELSE countLabel(departmentStore(d));                                              
	                                                               
	                                                               
	                    
	                    
	                    createAttribute(d);
	                    createAttribute(dd, d);
	            }
	            IF change(stock(terminalDocument)) THEN {
	                LOCAL printed = BOOLEAN();
	                printed() <- NULL;
	                DIALOG customLabelTransaction OBJECTS l = t DO {    
	                    print(t);
	                    printed() <- TRUE;
	                }             
	                IF NOT printed() THEN {
	                    cancel();
	                }             
	            } ELSE {
	                print(t);
	            }                        
	        }
	        printed(terminalDocument) <- TRUE WHERE is(terminalDocument);    
	        used(terminalDocument) <- TRUE WHERE is(terminalDocument); 
	        
	        apply(); 
	    }                                                                                                                        
	    
	}
} TOOLBAR;

showPrintLabelTransaction 'Показывать' (TerminalDocument terminalDocument) = isOpened(terminalDocument) AND NOT skip(terminalDocument);
                                                                           
backgroundPrintLabelTransaction 'Цвет' (TerminalDocument terminalDocument) = RGB(212,255,212) IF showPrintLabelTransaction(terminalDocument) AND NOT printed(terminalDocument);

EXTEND FORM terminalDocuments
    PROPERTIES(td) statusLabel BACKGROUND backgroundPrintLabelTransaction(td) READONLY,
                       createLabelTransaction SHOWIF showPrintLabelTransaction(td), 
                       createSnapshotTerminalDocumentLabel SHOWIF isOpened(td)
;

DESIGN terminalDocuments {
    machineryContainer{
        NEW label {
            caption = 'Ценники' ;
            type = CONTAINERV;
            
            MOVE PROPERTY (createLabelTransaction(td));
            MOVE PROPERTY (createSnapshotTerminalDocumentLabel(td));
        }
    }
}

labelTerminalDocumentType = DATA TerminalDocumentType();
nameLabelTerminalDocumentType 'Тип документа ТСД для печати ценников' = name(labelTerminalDocumentType());
EXTEND FORM options 
    PROPERTIES () nameLabelTerminalDocumentType;

DESIGN options{
    label{
        MOVE PROPERTY (nameLabelTerminalDocumentType());
    }
}

FORM labelTerminalDashboard 'Печать ценников ТСД'
    OBJECTS d=DATE PANEL 
    PROPERTIES val = VALUE (d)
    OBJECTS td=TerminalDocument
    PROPERTIES(td)  READONLY id, date, time, nameGroupTerminal, nameTerminalDocumentType, idTerminalHandbookType1, 
                    idTerminalHandbookType2, title, quantity, countTerminalDocumentDetail, quantityTerminalDocumentDetail

    PROPERTIES(td)  NEWSESSION NEW, EDIT, DELETE 
    PROPERTIES (td) close SHOWIF isOpened(td), open SHOWIF isClosed(td)
    
    FILTERS terminalDocumentType(td) == labelTerminalDocumentType()
    FILTERGROUP date FILTER 'На дату' date(td) <= d 'F5' DEFAULT
    FILTERGROUP filterUse
        FILTER 'Неиспользованные' notUsed(td) 'F7' DEFAULT        
    FILTERGROUP open FILTER 'Открыт' isOpened(td) 'F6' DEFAULT        
            
    OBJECTS l = LabelTransaction
    PROPERTIES(l) READONLY nameLabelType, description, date, time
    PROPERTIES(l) READONLY createdNameUser, createdTime, createdHostnameComputer
    PROPERTIES(l) NEWSESSION EDIT , DELETE  
    PROPERTIES(l) printTo TOOLBAR 
    ORDER BY date(l), time(l)    
    
    FILTERGROUP date1 FILTER 'На дату' date(l) == d 'F5' DEFAULT    
    
    OBJECTS tdd=TerminalDocumentDetail
    PROPERTIES(tdd) READONLY number, barcode, name, price, quantity, sum

    FILTERS terminalDocument(tdd) == td

    PROPERTIES(td) statusLabel BACKGROUND backgroundPrintLabelTransaction(td) READONLY,
                       createLabelTransaction SHOWIF showPrintLabelTransaction(td), 
                       createSnapshotTerminalDocumentLabel SHOWIF isOpened(td)

;
DESIGN labelTerminalDashboard {
    MOVE d.box;
    MOVE td.box;
    NEW tabContainer {
        fill = 1;
        type = TABBED;
        MOVE l.box;
        MOVE tdd.box;
    }
    MOVE functions.box;
}

@extendFormFilterAccessStock(TerminalDocument, td, labelTerminalDashboard, stock, company);
@extendFormFilterAccessStock(LabelTransaction, l, labelTerminalDashboard, departmentStore, company);

NAVIGATOR {
    retailDashboardNavigator {
        ADD labelTerminalDashboard;
    } 
}