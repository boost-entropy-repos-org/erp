MODULE TerminalHandler; //для работы терминалов нужна зависимость equ-srv в pom.xml 

REQUIRE Terminal, MachineryPriceTransaction, Order;


process 'Обработка документа ТСД' (terminalDocument) = ACTION ABSTRACT LIST (TerminalDocument);
process (TerminalDocument document) += {
    sku(TerminalDocumentDetail d) <- OVERRIDE skuBarcode(barcode(d)), sku(barcode(d)) WHERE terminalDocument(d) == document;
}; 

priceBefore 'Старая цена' = ABSTRACT NUMERIC[16,4](Sku, Stock);
priceBeforeIdBarcodeId(VARSTRING[15] sku, VARSTRING[100] stock) = priceBefore(skuBarcode(sku), stock(stock));

checkIdTerminal 'Ограничение доступа по коду терминала' = DATA BOOLEAN ();

@defineExternalizable(terminal, VARSTRING[100]);
blocked 'Заблокирован' = DATA BOOLEAN (Terminal);
lastConnectionTime 'Последнее подключение' = DATA DATETIME (Terminal);
lastUser 'Пользователь' = DATA CustomUser (Terminal);
shortNameLastUser 'Пользователь' (Terminal terminal) = shortName(lastUser(terminal));

manufacturer = ABSTRACT LegalEntity (Item);
nameManufacturer (Barcode barcode) = name(manufacturer(skuBarcode(id(barcode))));
nameManufacturerSku (Order.OrderDetail d) = name(manufacturer(sku(d)));
passScalesSku(Order.OrderDetail d) = passScales(sku(d));

EXTEND FORM groupTerminal PROPERTIES(t) AFTER npp(t) id, blocked, lastConnectionTime, shortNameLastUser;
EXTEND FORM groupsTerminal
    PROPERTIES () checkIdTerminal
    PROPERTIES(t) AFTER npp(t) READONLY id, blocked, lastConnectionTime, shortNameLastUser;


hostTerminalServer 'Хост' = DATA VARSTRING[30] ();
portTerminalServer 'Порт' = DATA INTEGER ();    

useCurrentPriceInTerminal 'Загружать в терминал текущие цены' = DATA BOOLEAN ();
useAccountPrice 'Использовать учетные цены' = ABSTRACT CASE BOOLEAN (Stock);
currentPriceInTerminal 'Розничная цена' (Barcode barcode, Stock stock) = IF useAccountPrice(stock) 
    THEN currentAccountPriceA(sku(barcode), stock) 
    ELSE currentRetailPricingPrice(sku(barcode), stock);     

useCurrentQuantityInTerminal 'Загружать в терминал текущие остатки' = DATA BOOLEAN ();
currentBalance (Barcode barcode, Stock stock) = currentBalance(sku(barcode), stock);
    
dataPriceListTypeTerminal = DATA LedgerPriceListType();
defaultPriceListTypeTerminal = ABSTRACT LedgerPriceListType();
priceListTypeTerminal = OVERRIDE dataPriceListTypeTerminal(), defaultPriceListTypeTerminal();
namePriceListTypeTerminal 'Вид цен (фильтр ассортимента поставщика)' = name(priceListTypeTerminal());

filter = ABSTRACT VALUE OVERRIDE BOOLEAN (Order.Order, Stock); 

EXTEND FORM options
    PROPERTIES() hostTerminalServer, portTerminalServer, useCurrentPriceInTerminal, useCurrentQuantityInTerminal, namePriceListTypeTerminal
;
DESIGN options {
    machinery {
        NEW terminalServer {
            caption = 'Настройки ТСД';
            MOVE PROPERTY(hostTerminalServer());
            MOVE PROPERTY(portTerminalServer());
            MOVE PROPERTY(useCurrentPriceInTerminal());
            MOVE PROPERTY(useCurrentQuantityInTerminal());
            MOVE PROPERTY(namePriceListTypeTerminal());
        }
    }
}    