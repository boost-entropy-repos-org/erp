MODULE LabelItem;

REQUIRE Label, Item;


// ------------------------------ Добавляем атрибуты в ценники ----------------------------- //

@defineLabelTransactionAttribute(captionItem, 'Название', VARSTRING[255], Item, caption);

@defineLabelTransactionAttribute(nameBrandItem, 'Брэнд', VARSTRING[100], Item, nameBrand);

@defineLabelTransactionAttribute(nameManufacturerItem, 'Производитель', VARSTRING[255], Item, nameManufacturer);
@defineLabelTransactionAttribute(addressManufacturerItem, 'Адрес производителя', STRING[255], Item, addressManufacturer);

nameAddressManufacturerItem 'Производитель' (LabelTransactionDetail d) = CONCAT ', ', nameManufacturerItem(d), addressManufacturerItem(d);
EXTEND FORM printLabelTransaction PROPERTIES(d) READONLY nameAddressManufacturerItem;
EXTEND FORM customLabelTransaction PROPERTIES(d) nameAddressManufacturerItem;
EXTEND FORM labelTransactions PROPERTIES(dt) READONLY nameAddressManufacturerItem;

createItemLabelsTransaction 'Сформировать ценники'(Sku item, DepartmentStore stock) = ACTION NEWSESSION {
     FOR in(LabelType labelType, item, stock)
         NEW t = LabelTransaction DO {
             departmentStore(t) <- stock;
             labelType(t) <- labelType;
             
             FOR PriceListType pt == overPriceListType(t) NOINLINE (pt) NEW d = LabelTransactionDetail DO {
                 labelTransaction(d) <- t;
                 sku(d) <- item;
                 name(d) <- name(item);
 
                 createAttribute(d);
 
                 price(d) <- calcPrice(pt, d);
                 retailPrice(d) <- overRetailPrice(d); 
             } 
             print(t);
     }
 }

createItemTransaction 'Сформировать ценник'(Sku item, DepartmentStore stock, LabelType labelType) = ACTION NEWSESSION {
    FOR NEW t = LabelTransaction DO {
            departmentStore(t) <- stock;
            labelType(t) <- labelType;
            
            FOR PriceListType pt == overPriceListType(t) NOINLINE (pt) NEW d = LabelTransactionDetail DO {
                labelTransaction(d) <- t;
                sku(d) <- item;
                name(d) <- name(item);
                quantity(d) <- count(labelType, sku(d));
                                                                             
                createAttribute(d);

                price(d) <- calcPrice(pt, d);
                retailPrice(d) <- overRetailPrice(d); 
            } 
            // вызываем печатную форму для каждого из них
            print(t);
    }
} IMAGE 'print.png';

EXTEND FORM item
    OBJECTS ld = DepartmentStore PANEL
    PROPERTIES(ld) SELECTOR name  
    PROPERTIES (i, ld) createItemLabelsTransaction
    FILTERS isCompany(ld)
        
    OBJECTS lt = LabelType
    PROPERTIES (lt) NEWSESSION name READONLY, NEW, EDIT, DELETE  
    PROPERTIES (lt, i) in
    PROPERTIES (i, ld, lt) createItemTransaction GRID
;

DESIGN item {
   itemDetail {
        NEW itemLabel {
            caption = 'Ценники';
            MOVE ld.box;
            MOVE lt.box;
        }    
    }
}    