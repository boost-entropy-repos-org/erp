MODULE CashRegister;

REQUIRE System, Machinery, Store, LegalEntity;

// Группы
CLASS GroupCashRegister 'Группы касс' : GroupMachinery;

departmentStoreGroupCashRegister = DATA DepartmentStore (GroupCashRegister);
stockGroupMachinery (groupMachinery) += departmentStoreGroupCashRegister(groupMachinery);

groupCashRegisterDepartmentStore (departmentStore) = GROUP MAX groupCashRegister BY departmentStoreGroupCashRegister(groupCashRegister); 

TABLE groupCashRegisterCustomUser(GroupCashRegister, CustomUser);
operatorNumberGroupCashRegisterCustomUser 'Номер в группе касс' = DATA INTEGER (GroupCashRegister, CustomUser);

// Модели
CLASS CashRegisterModel 'Модель касс' : Model;

nameCashRegisterModel 'Наименование' = DATA VARISTRING[110](CashRegisterModel);

nameModel(model) += nameCashRegisterModel(model) IF model IS CashRegisterModel;

dateToCashRegisterModel 'Дата, до которой модель внесена в реестр' = DATA DATE (CashRegisterModel) IN base;

maxSumCashRegisterModel 'Максимальная сумма чека' = DATA NUMERIC[16,2] (CashRegisterModel) IN base;

FORM cashRegisterModel 'Модель касс'
    OBJECTS c=CashRegisterModel FIXED PANEL
    PROPERTIES(c) nameCashRegisterModel, sidModel, noteModel, handlerModel, dateToCashRegisterModel, maxSumCashRegisterModel
    EDIT CashRegisterModel OBJECT c
;

FORM cashRegistersModels 'Модели касс'
    OBJECTS c=CashRegisterModel
    PROPERTIES(c) READONLY nameCashRegisterModel, sidModel, handlerModel, noteModel, maxSumCashRegisterModel
    PROPERTIES(c) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG CashRegisterModel OBJECT c
;

NAVIGATOR {
    machineryNavigator {
        NEW cashRegisterNavigator 'Кассы'{
            ADD cashRegistersModels;
        }
    }
}

// Кассы
CLASS CashRegister 'Касса' : Machinery;
isGroupCashRegister (machinery) = machinery IS GroupCashRegister;

groupCashRegisterCashRegister = DATA GroupCashRegister (CashRegister);
groupMachineryMachinery(machinery) += groupCashRegisterCashRegister(machinery);

directoryGroupCashRegister 'Директория обмена с кассами' = DATA VARSTRING[100] (GroupCashRegister) IN base;
directoryCashRegister 'Директория обмена с кассой' (cashRegister) = directoryGroupCashRegister(groupCashRegisterCashRegister(cashRegister));

startDateGroupCashRegister 'Дата начала продаж' = DATA DATE (GroupCashRegister) IN base;
notDetailedGroupCashRegister 'Не детализировать по чекам' = DATA BOOLEAN (GroupCashRegister) IN base; 

cashRegisterNppGroupCashRegisterNpp (g, npp) = GROUP AGGR cashRegister BY nppGroupMachinery(groupCashRegisterCashRegister(cashRegister)), nppMachinery(cashRegister);  

cashRegisterModelCashRegister = DATA CashRegisterModel (CashRegister);
modelMachinery(machinery) += cashRegisterModelCashRegister(machinery);

departmentStoreCashRegister (cashRegister) = departmentStoreGroupCashRegister(groupCashRegisterCashRegister(cashRegister));

registrationNumberCashRegister 'Регистрационный номер кассы' = DATA VARSTRING[100] (CashRegister) IN base;

dateCashRegister 'Дата фискализации кассового аппарата' = DATA DATE (CashRegister) IN base;

comPortCashRegister 'Порт кассы' = DATA INTEGER (CashRegister) IN base;
baudRateCashRegister 'Скорость кассы' = DATA INTEGER (CashRegister) IN base;
countryCashRegister 'Страна кассы' (cashRegister) = countryStock(stockGroupMachinery(groupCashRegisterCashRegister(cashRegister)));

userLegalEntityCashRegister (cashRegister) = DATA LegalEntity (CashRegister);
legalEntityCashRegister (cashRegister) =
    OVERRIDE legalEntityDepartmentStore(departmentStoreCashRegister(cashRegister)), userLegalEntityCashRegister(cashRegister);

nameLegalEntityCashRegister 'Владелец кассы' (cashRegister) = nameLegalEntity(legalEntityCashRegister(cashRegister));

computerCashRegister = DATA Computer (CashRegister);
hostnameComputerCashRegister 'Компьютер' (cashRegister) = hostnameComputer(computerCashRegister(cashRegister)) IN base;

cashRegisterComputer (computer) = GROUP AGGR cashRegister BY computerCashRegister(cashRegister) WHERE cashRegister IS CashRegister PERSISTENT;

currentCashRegister 'Текущая касса' = cashRegisterComputer(currentComputer());

departmentStoreCurrentCashRegister 'Подразделение' = departmentStoreCashRegister(currentCashRegister());
numberCurrentCashRegister 'Номер кассы' = nppMachinery(currentCashRegister());
sidModelCurrentCashRegister 'Код модели' = sidModelMachinery(currentCashRegister());
comPortCurrentCashRegister 'Порт' = comPortCashRegister(currentCashRegister());
baudRateCurrentCashRegister 'Скорость весов' = baudRateCashRegister(currentCashRegister());
nppMachineryCurrentCashRegister 'Номер кассового места' = nppMachinery(currentCashRegister());
operatorNumberCurrentCashRegister (user) = operatorNumberGroupCashRegisterCustomUser(groupCashRegisterCashRegister(currentCashRegister()), user);
operatorNumberCurrentCashRegisterCurrentUser () = operatorNumberCurrentCashRegister (currentUser());
countryCurrentCashRegister 'Страна кассы' = countryCashRegister(currentCashRegister());
maxSumCurrentCashRegister 'Максимальная сумма чека' = maxSumCashRegisterModel(cashRegisterModelCashRegister(currentCashRegister()));
 
FORM cashRegister 'Касса'
    OBJECTS c=CashRegister FIXED PANEL
    PROPERTIES(c) nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery, 
                  comPortCashRegister, baudRateCashRegister, nameModelMachinery,
                  dateCashRegister, hostnameComputerCashRegister
    EDIT CashRegister OBJECT c
;

FORM groupCashRegister 'Группа касс'
    OBJECTS grc=GroupCashRegister FIXED PANEL
    PROPERTIES(grc) nppGroupMachinery, nameStockGroupMachinery, nameGroupMachinery,
                    filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grc),
                    namePriceListTypeGroupMachinery, directoryGroupCashRegister, startDateGroupCashRegister, 
                    notDetailedGroupCashRegister

    OBJECTS c=CashRegister
    PROPERTIES(c)   nameGroupMachineryMachinery, nppMachinery, descriptionMachinery, portMachinery,
                    comPortCashRegister, baudRateCashRegister, nameModelMachinery,
                    dateCashRegister, hostnameComputerCashRegister, nameLegalEntityCashRegister, ADDOBJ, DELETESESSION

    OBJECTS cu=CustomUser
    PROPERTIES(cu) loginCustomUser, firstNameContact, lastNameContact, sidMainRoleCustomUser
    PROPERTIES(grc, cu) operatorNumberGroupCashRegisterCustomUser

    FILTERGROUP filters2
        FILTER 'Показывать только для данной группы' 'F10' groupCashRegisterCashRegister(c) == grc DEFAULT

    EDIT GroupCashRegister OBJECT grc
;

FORM groupsCashRegister 'Группы касс'
    OBJECTS grc=GroupCashRegister, c=CashRegister
    PROPERTIES(grc)  READONLY nppGroupMachinery, nameStockGroupMachinery, nameGroupMachinery,
                     filterSkuGroupMachinery, directoryGroupCashRegister, startDateGroupCashRegister, 
                     notDetailedGroupCashRegister
    PROPERTIES(grc)  ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    PROPERTIES(c) READONLY nppMachinery, descriptionMachinery, portMachinery,
                           comPortCashRegister, baudRateCashRegister, nameModelMachinery,
                           dateCashRegister, nameLegalEntityCashRegister
    FILTERS groupCashRegisterCashRegister(c) == grc
;
@extendFormFilterAccessStock(GroupMachinery, grc, groupsCashRegister, stock, company);


DESIGN groupsCashRegister FROM DEFAULT {
    NEW pane {
        fill = 1;
        type = SPLITV;

        ADD grc.box;
        ADD c.box;
    }
    ADD functions.box;
}

NAVIGATOR {
    cashRegisterNavigator {
        ADD groupsCashRegister;
    }
}


// ------------------------------------------------ Стандартные значения ------------------------------------ //

loadDefaultCashRegisterModel 'Добавить модель касс' = ACTION (iname, isid, ihandler)  {
    FOR ADDOBJ crm = CashRegisterModel DO {
         ASSIGN nameCashRegisterModel(crm) <- iname;
         ASSIGN sidModel(crm) <- isid;
         ASSIGN handlerModel(crm) <- ihandler;
    }
}

loadDefaultCashRegisterModels 'Загрузить стандартные модели касс' = ACTION () {
    EXEC loadDefaultCashRegisterModel('Кассы Atol', 'Atol', 'equ.clt.handler.atol.AtolHandler');
    EXEC loadDefaultCashRegisterModel('Кассы EasyCSV', 'EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
    EXEC loadDefaultCashRegisterModel('Кассы Kristal', 'Kristal', 'equ.clt.handler.kristal.KristalHandler');
    EXEC loadDefaultCashRegisterModel('Кассы Kristal 10', 'Kristal10', 'equ.clt.handler.kristal10.Kristal10Handler');
    EXEC loadDefaultCashRegisterModel('Кассы Maxishop', 'Maxishop', 'equ.clt.handler.maxishop.MaxishopHandler');
    EXEC loadDefaultCashRegisterModel('Кассы UKM4', 'Ukm4', 'equ.clt.handler.ukm4.UKM4Handler');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор DateCS', 'DateCS', '');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор VMK', 'VMK', '');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор Casbi', 'Casbi', '');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор Shtrih', 'Shtrih', '');
} IN loadDefault;

@implementLoadDefaultData(loadDefaultCashRegisterModels);

// --------------------------------------- Генерация групп касс -------------------------------- //
loadDefaultGroupCashRegister 'Сгенерировать группу касс' = ACTION(priceListType, stock, model, num) {
    FOR ADDOBJ g = GroupCashRegister DO {
        departmentStoreGroupCashRegister(g) <- stock;
        priceListTypeGroupMachinery(g) <- priceListType;
        nameGroupMachinery(g) <- 'Группа касс по умолчанию';

        LOCAL numCashRegister = INTEGER();
        numCashRegister() <- 0;
        WHILE numCashRegister() < num DO {
            FOR ADDOBJ c = CashRegister DO {
                groupCashRegisterCashRegister(c) <- g;
                numCashRegister() <- numCashRegister() + 1;
                nppMachinery(c) <- numCashRegister();
                cashRegisterModelCashRegister(c) <- model;
                descriptionMachinery(c) <- CONCAT ' ', 'Касса', VARSTRING[255](numCashRegister()), '(', nameStock(stock), ')';
            }
        }
    }
}

EXTEND FORM defaultData
    OBJECTS         crm=CashRegisterModel FIXED PANEL
    PROPERTIES(crm) SELECTOR nameCashRegisterModel

    OBJECTS         cCashReg=INTEGER FIXED PANEL
    PROPERTIES(cCashReg)   intValueCashRegister = OBJVALUE
    PROPERTIES (pt, s, crm, cCashReg) loadDefaultGroupCashRegister
;

EXTEND DESIGN defaultData {
    PROPERTY(nameCashRegisterModel(crm)) {
        caption = 'Модель касс';
    }
    PROPERTY(intValueCashRegister) {
        caption = 'Количество касс';
    }
    machinery {
        NEW cashRegister {
            caption = 'Кассы';
            ADD PROPERTY(nameCashRegisterModel(crm));
            ADD PROPERTY(intValueCashRegister);
            ADD PROPERTY(loadDefaultGroupCashRegister(pt,s,crm,cCashReg));
        }
    }
}