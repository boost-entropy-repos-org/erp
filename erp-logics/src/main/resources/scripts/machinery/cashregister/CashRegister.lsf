MODULE CashRegister;

REQUIRE System, Machinery, Store, LegalEntity;

// Группы
CLASS GroupCashRegister 'Группы касс' : GroupMachinery;

departmentStoreGroupCashRegister = DATA DepartmentStore (GroupCashRegister);
stockGroupMachinery (groupMachinery) += departmentStoreGroupCashRegister(groupMachinery);
idDepartmentStoreGroupCashRegister(groupCashRegister) = idDepartmentStore(departmentStoreGroupCashRegister(groupCashRegister));

groupCashRegisterDepartmentStore (departmentStore) = GROUP MAX groupCashRegister BY departmentStoreGroupCashRegister(groupCashRegister); 

TABLE groupCashRegisterCustomUser(GroupCashRegister, CustomUser);
operatorNumberGroupCashRegisterCustomUser 'Номер в группе касс' = DATA INTEGER (GroupCashRegister, CustomUser);

inactiveGroupCashRegister 'Неактивный' = DATA BOOLEAN (GroupCashRegister);
activeGroupCashRegister 'Активный' (group) = group IS GroupCashRegister AND NOT inactiveGroupCashRegister(group);
inactiveGroupMachinery(g) += inactiveGroupCashRegister(g);

pieceCodeGroupCashRegister 'Код для штучных товаров' = DATA STRING[2] (GroupCashRegister) IN base;
weightCodeGroupCashRegister 'Код для весовых товаров' = DATA STRING[2] (GroupCashRegister) IN base;

// Модели
CLASS CashRegisterModel 'Модель касс' : Model;

nameCashRegisterModel 'Наименование' = DATA VARISTRING[110](CashRegisterModel);

nameModel(model) += nameCashRegisterModel(model) IF model IS CashRegisterModel;

dateToCashRegisterModel 'Дата, до которой модель внесена в реестр' = DATA DATE (CashRegisterModel) IN base;

maxSumCashRegisterModel 'Максимальная сумма чека' = DATA NUMERIC[16,2] (CashRegisterModel) IN base;

ignoreCashRegisterServerCashRegisterModel 'Не работать с кассовым сервером' = DATA BOOLEAN (CashRegisterModel) IN base;

allUserSnapshotCashRegisterModel 'Разрешить загрузку целиком всем пользователям' = DATA BOOLEAN(CashRegisterModel);

FORM cashRegisterModel 'Модель касс'
    OBJECTS c=CashRegisterModel FIXED PANEL
    PROPERTIES(c) nameCashRegisterModel, sidModel, noteModel, handlerModel, dateToCashRegisterModel, maxSumCashRegisterModel, ignoreCashRegisterServerCashRegisterModel, allUserSnapshotCashRegisterModel
    EDIT CashRegisterModel OBJECT c
;

FORM cashRegistersModels 'Модели касс'
    OBJECTS c=CashRegisterModel
    PROPERTIES(c) READONLY nameCashRegisterModel, sidModel, handlerModel, noteModel, maxSumCashRegisterModel, ignoreCashRegisterServerCashRegisterModel, allUserSnapshotCashRegisterModel
    PROPERTIES(c) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG CashRegisterModel OBJECT c
;

NAVIGATOR {
    machineryNavigator {
        NEW cashRegisterNavigator 'Кассы'{
            ADD cashRegistersModels;
        }
    }
}

// Кассы
CLASS CashRegister 'Касса' : Machinery;
isGroupCashRegister (machinery) = machinery IS GroupCashRegister;

groupCashRegisterCashRegister = DATA GroupCashRegister (CashRegister) NOT NULL DELETE;
groupMachineryMachinery(machinery) += groupCashRegisterCashRegister(machinery);

directoryGroupCashRegister 'Директория обмена с кассами' = DATA VARSTRING[100] (GroupCashRegister) IN base;
directoryGroupMachinery (groupMachinery) += directoryGroupCashRegister(groupMachinery);
dataDirectoryCashRegister 'Директория обмена с кассой' = DATA VARSTRING[100] (CashRegister);
dataDirectoryMachinery (machinery) += dataDirectoryCashRegister(machinery);

startDateGroupCashRegister 'Дата начала продаж' = DATA DATE (GroupCashRegister) IN base;
startDateCashRegister 'Дата начала продаж' = startDateGroupCashRegister(groupCashRegisterCashRegister(cashRegister));
startDateGroupCashRegisterDepartmentStore 'Дата начала продаж' = GROUP MIN startDateGroupCashRegister(c) BY departmentStoreGroupCashRegister(c) PERSISTENT; 

notDetailedGroupCashRegister 'Не детализировать по чекам' = DATA BOOLEAN (GroupCashRegister) IN base; 
activeCashRegister 'Активный' (cashRegister) = activeGroupCashRegister(groupCashRegisterCashRegister(cashRegister));

departmentNumberGroupCashRegister 'Номер группы касс' = DATA INTEGER (GroupCashRegister) IN recognize;
overDepartmentNumberGroupCashRegister 'Номер группы касс' (gcr) = OVERRIDE nppGroupMachinery(gcr), departmentNumberGroupCashRegister(gcr);
groupCashRegisterNpp (npp) = GROUP AGGR groupCashRegister BY nppGroupMachinery(groupCashRegister) WHERE groupCashRegister IS GroupCashRegister;  
cashRegisterNppGroupCashRegisterNpp (g, npp) = GROUP AGGR cashRegister BY nppGroupMachinery(groupCashRegisterCashRegister(cashRegister)), nppMachinery(cashRegister);  

cashRegisterModelGroupCashRegister = DATA CashRegisterModel (GroupCashRegister);
modelGroupMachinery(groupMachinery) += cashRegisterModelGroupCashRegister(groupMachinery);

departmentStoreCashRegister (cashRegister) = departmentStoreGroupCashRegister(groupCashRegisterCashRegister(cashRegister));
nameDepartmentStoreCashRegister 'Склад' (cashRegister) = nameDepartmentStore(departmentStoreCashRegister(cashRegister));

countCashRegisterDepartmentStore 'Кол-во касс' (departmentStore) = GROUP SUM 1 IF NOT inactiveMachinery(cashRegister) BY departmentStoreCashRegister(cashRegister);
    
countCashRegisterStore 'Кол-во касс' (store) = GROUP SUM countCashRegisterDepartmentStore(d) BY storeDepartmentStore(d);   
countDataCashRegisterStore 'Кол-во магазинов' = DATA INTEGER (Store);
countStoreChainStoresOver 'Кол-во касс' (store) = OVERRIDE countCashRegisterStore(store), countDataCashRegisterStore(store); 

registrationNumberCashRegister 'Регистрационный номер кассы' = DATA VARSTRING[100] (CashRegister) IN base;

dateCashRegister 'Дата фискализации кассового аппарата' = DATA DATE (CashRegister) IN base;

ipCashRegister 'IP кассы' = DATA VARSTRING[100] (CashRegister) IN base;
comPortCashRegister 'Порт кассы' = DATA INTEGER (CashRegister) IN base;
baudRateCashRegister 'Скорость кассы' = DATA INTEGER (CashRegister) IN base;

disableSalesCashRegister 'Без реализации' = DATA BOOLEAN (CashRegister) IN base;
countSalesCashRegisterDepartmentStore 'Кол-во касс (с реализацией)' = GROUP SUM 1 IF NOT disableSalesCashRegister(cashRegister) AND NOT inactiveMachinery(cashRegister) BY departmentStoreCashRegister(cashRegister);

countryCashRegister 'Страна кассы' (cashRegister) = countryStock(stockGroupMachinery(groupCashRegisterCashRegister(cashRegister)));

userLegalEntityCashRegister (cashRegister) = DATA LegalEntity (CashRegister);
legalEntityCashRegister (cashRegister) =
    OVERRIDE legalEntityDepartmentStore(departmentStoreCashRegister(cashRegister)), userLegalEntityCashRegister(cashRegister);

nameLegalEntityCashRegister 'Владелец кассы' (cashRegister) = nameLegalEntity(legalEntityCashRegister(cashRegister));

computerCashRegister = DATA Computer (CashRegister);
hostnameComputerCashRegister 'Компьютер' (cashRegister) = hostnameComputer(computerCashRegister(cashRegister)) IN base;

cashRegisterComputer (computer) = GROUP AGGR cashRegister BY computerCashRegister(cashRegister) WHERE cashRegister IS CashRegister PERSISTENT;

currentCashRegister 'Текущая касса' = cashRegisterComputer(currentComputer());

departmentStoreCurrentCashRegister 'Подразделение' = departmentStoreCashRegister(currentCashRegister());
numberCurrentCashRegister 'Номер кассы' = nppMachinery(currentCashRegister());
sidModelCurrentCashRegister 'Код модели' = sidModelGroupMachinery(groupMachineryMachinery(currentCashRegister()));
ipCurrentCashRegister 'IP кассы' = ipCashRegister(currentCashRegister());
comPortCurrentCashRegister 'Порт кассы' = comPortCashRegister(currentCashRegister());
baudRateCurrentCashRegister 'Скорость кассы' = baudRateCashRegister(currentCashRegister());
nppMachineryCurrentCashRegister 'Номер кассового места' = nppMachinery(currentCashRegister());
operatorNumberCurrentCashRegister (user) = operatorNumberGroupCashRegisterCustomUser(groupCashRegisterCashRegister(currentCashRegister()), user);
operatorNumberCurrentCashRegisterCurrentUser () = operatorNumberCurrentCashRegister (currentUser());
countryCurrentCashRegister 'Страна кассы' = countryCashRegister(currentCashRegister());
maxSumCurrentCashRegister 'Максимальная сумма чека' = maxSumCashRegisterModel(cashRegisterModelGroupCashRegister(groupCashRegisterCashRegister(currentCashRegister())));

ignoreCashRegisterServerCashRegisterModelGroupCashRegister(gcr) = ignoreCashRegisterServerCashRegisterModel(cashRegisterModelGroupCashRegister(gcr));
notIgnoreCashRegisterServerCashRegisterModelGroupCashRegister(gcr) = gcr IS GroupCashRegister AND NOT ignoreCashRegisterServerCashRegisterModelGroupCashRegister(gcr);
FORM cashRegister 'Касса'
    OBJECTS c=CashRegister FIXED PANEL
    PROPERTIES(c) nameGroupMachineryMachinery, nppMachinery, shortDescriptionMachinery, descriptionMachinery, portMachinery, 
                  ipCashRegister, comPortCashRegister, baudRateCashRegister, disableSalesCashRegister, dataDirectoryCashRegister, 
                  dateCashRegister, hostnameComputerCashRegister
    EDIT CashRegister OBJECT c
;

FORM groupCashRegister 'Группа касс'
    OBJECTS grc=GroupCashRegister FIXED PANEL
    PROPERTIES(grc) nppGroupMachinery, departmentNumberGroupCashRegister, nameStockGroupMachinery, nameGroupMachinery,
                    pieceCodeGroupCashRegister, weightCodeGroupCashRegister,
                    filterSkuGroupMachinery, showFilterSkuGroupMachinery SHOWIF filterSkuGroupMachinery(grc),
                    namePriceListTypeGroupMachinery, nameModelGroupMachinery, directoryGroupCashRegister SHOWIF notIgnoreCashRegisterServerCashRegisterModelGroupCashRegister(grc),
                    startDateGroupCashRegister, notDetailedGroupCashRegister, inactiveGroupCashRegister

    OBJECTS c=CashRegister
    PROPERTIES(c)   nameGroupMachineryMachinery, nppMachinery, shortDescriptionMachinery, descriptionMachinery, portMachinery SHOWIF ignoreCashRegisterServerCashRegisterModelGroupCashRegister(grc),
                    ipCashRegister, comPortCashRegister SHOWIF ignoreCashRegisterServerCashRegisterModelGroupCashRegister(grc), 
                    baudRateCashRegister SHOWIF ignoreCashRegisterServerCashRegisterModelGroupCashRegister(grc),
                    disableSalesCashRegister,
                    dataDirectoryCashRegister SHOWIF ignoreCashRegisterServerCashRegisterModelGroupCashRegister(grc),
                    dateCashRegister, hostnameComputerCashRegister, nameLegalEntityCashRegister, ADDOBJ, DELETESESSION

    OBJECTS cu=CustomUser
    PROPERTIES(cu) loginCustomUser, firstNameContact, lastNameContact, sidMainRoleCustomUser
    PROPERTIES(grc, cu) operatorNumberGroupCashRegisterCustomUser

    FILTERGROUP filters2
        FILTER 'Показывать только для данной группы' groupCashRegisterCashRegister(c) == grc 'F10' DEFAULT

    EDIT GroupCashRegister OBJECT grc
;

FORM groupsCashRegister 'Группы касс'
    OBJECTS grc=GroupCashRegister, c=CashRegister
    PROPERTIES(grc)  READONLY activeGroupCashRegister, nppGroupMachinery, departmentNumberGroupCashRegister, nameStockGroupMachinery, nameGroupMachinery,
                     filterSkuGroupMachinery, nameModelGroupMachinery, directoryGroupCashRegister,
                     startDateGroupCashRegister, notDetailedGroupCashRegister,  pieceCodeGroupCashRegister, weightCodeGroupCashRegister
    PROPERTIES(grc)  ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    PROPERTIES(c) READONLY nppMachinery, shortDescriptionMachinery, descriptionMachinery, portMachinery, ipCashRegister, comPortCashRegister, baudRateCashRegister,
                           disableSalesCashRegister, dataDirectoryCashRegister, dateCashRegister, nameLegalEntityCashRegister
    FILTERS groupCashRegisterCashRegister(c) == grc
    
    FILTERGROUP active1
        FILTER 'Активные' activeGroupCashRegister(grc) 'F5' DEFAULT
;
@extendFormFilterAccessStock(GroupMachinery, grc, groupsCashRegister, stock, company);


DESIGN groupsCashRegister {
    NEW pane {
        fill = 1;
        type = SPLITV;

        MOVE grc.box;
        MOVE c.box;
    }
    MOVE functions.box;
}

NAVIGATOR {
    cashRegisterNavigator {
        ADD groupsCashRegister;
    }
}

EXTEND FORM departmentStore
    PROPERTIES(d) READONLY countCashRegisterDepartmentStore
;

DESIGN departmentStore{
    headerExtraParams{
        MOVE PROPERTY(countCashRegisterDepartmentStore(d));
    }
}
    
EXTEND FORM store
    PROPERTIES(s) countStoreChainStoresOver
    PROPERTIES(d) READONLY countCashRegisterDepartmentStore BEFORE deleteD
;
    
DESIGN store{
    headerExtraParams{
        MOVE PROPERTY(countStoreChainStoresOver(s));
    }    
}  

EXTEND FORM stores
    PROPERTIES(s) READONLY countStoreChainStoresOver
;

// ------------------------------------------------ Стандартные значения ------------------------------------ //

loadDefaultCashRegisterModel 'Добавить модель касс' = ACTION (iname, isid, ihandler)  {
    FOR ADDOBJ crm = CashRegisterModel DO {
         ASSIGN nameCashRegisterModel(crm) <- iname;
         ASSIGN sidModel(crm) <- isid;
         ASSIGN handlerModel(crm) <- ihandler;
    }
}

loadDefaultCashRegisterModels 'Загрузить стандартные модели касс' = ACTION () {
    EXEC loadDefaultCashRegisterModel('Кассы Atol', 'Atol', 'equ.clt.handler.atol.AtolHandler');
    EXEC loadDefaultCashRegisterModel('Кассы EasyCSV', 'EasyCSV', 'equ.clt.handler.easy.EasyCSVHandler');
    EXEC loadDefaultCashRegisterModel('Кассы Kristal', 'Kristal', 'equ.clt.handler.kristal.KristalHandler');
    EXEC loadDefaultCashRegisterModel('Кассы Kristal 10', 'Kristal10', 'equ.clt.handler.kristal10.Kristal10Handler');
    EXEC loadDefaultCashRegisterModel('Кассы Maxishop', 'Maxishop', 'equ.clt.handler.maxishop.MaxishopHandler');
    EXEC loadDefaultCashRegisterModel('Кассы UKM4', 'Ukm4', 'equ.clt.handler.ukm4.UKM4Handler');
    EXEC loadDefaultCashRegisterModel('Кассы UKM4 MySQL', 'Ukm4-mysql', 'equ.clt.handler.ukm4mysql.UKM4MySQLHandler');
    EXEC loadDefaultCashRegisterModel('Кассы HTC', 'HTC', 'equ.clt.handler.htc.HTCHandler');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор DateCS', 'DateCS', '');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор VMK', 'VMK', '');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор Casbi', 'Casbi', '');
    EXEC loadDefaultCashRegisterModel('Фискальный регистратор Shtrih', 'Shtrih', '');
} IN loadDefault;

@implementLoadDefaultData(loadDefaultCashRegisterModels);

// --------------------------------------- Генерация групп касс -------------------------------- //
loadDefaultGroupCashRegister 'Сгенерировать группу касс' = ACTION(priceListType, stock, model, num) {
    FOR ADDOBJ g = GroupCashRegister DO {
        departmentStoreGroupCashRegister(g) <- stock;
        priceListTypeGroupMachinery(g) <- priceListType;
        nameGroupMachinery(g) <- 'Группа касс по умолчанию';

        LOCAL numCashRegister = INTEGER();
        numCashRegister() <- 0;
        WHILE numCashRegister() < num DO {
            FOR ADDOBJ c = CashRegister DO {
                groupCashRegisterCashRegister(c) <- g;
                numCashRegister() <- numCashRegister() + 1;
                nppMachinery(c) <- numCashRegister();
                cashRegisterModelGroupCashRegister(g) <- model;
                descriptionMachinery(c) <- CONCAT ' ', 'Касса', VARSTRING[255](numCashRegister()), '(', nameStock(stock), ')';
            }
        }
    }
}

EXTEND FORM defaultData
    OBJECTS         crm=CashRegisterModel FIXED PANEL
    PROPERTIES(crm) SELECTOR nameCashRegisterModel

    OBJECTS         cCashReg=INTEGER FIXED PANEL
    PROPERTIES(cCashReg)   intValueCashRegister = OBJVALUE
    PROPERTIES (pt, s, crm, cCashReg) loadDefaultGroupCashRegister
;

DESIGN defaultData {
    PROPERTY(nameCashRegisterModel(crm)) {
        caption = 'Модель касс';
    }
    PROPERTY(intValueCashRegister) {
        caption = 'Количество касс';
    }
    machinery {
        NEW cashRegister {
            caption = 'Кассы';
            MOVE PROPERTY(nameCashRegisterModel(crm));
            MOVE PROPERTY(intValueCashRegister);
            MOVE PROPERTY(loadDefaultGroupCashRegister(pt,s,crm,cCashReg));
        }
    }
}