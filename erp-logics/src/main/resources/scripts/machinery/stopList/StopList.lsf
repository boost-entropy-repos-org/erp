MODULE StopList;

REQUIRE System,
        Stock,
        Machinery,
        Numerator,        
        Utils,
        MachineryPriceTransaction
        ;

NAMESPACE StopList;

//----------------------------------- Запрет продаж по кассе -------------------------------------------------------

CLASS StopList 'Запрет продаж по кассе';
CLASS StopListDetail 'Строка запрета продаж по кассе';

@defineDocument(stopList);
createdTimeStopListDetail 'Время создания' = createdTimeStopList(stopListStopListDetail(d)); 
createdUserStopListDetail = createdUserStopList(stopListStopListDetail(d)); 
createdNameUserStopListDetail 'Создан пользователем' = nameContact(createdUserStopListDetail(d)); 
createdComputerStopListDetail 'Создан на компьютере' = createdComputerStopList(stopListStopListDetail(d)); 
createdHostnameComputerStopListDetail 'Создан на компьютере' = hostnameComputer(createdComputerStopListDetail(d)); 

@deriveDocumentHeaderTimePrefix(StopList, );

@defineDocumentTimePrefix (stopList, from, ' с');
@deriveDocumentHeaderTimePrefix(StopList, from);

@defineDocumentTimePrefix (stopList, to, ' по');

@defineDocumentHeaderNumber(StopList);
@defineDocumentDetailNumber(stopList, StopListDetail);

@defineNumeratedDefault(StopList, 'Запрет продаж по кассе', 'ЗП');

@defineDocumentHeaderLegalEntity(stopList, company, 'Компания');

excludeStopList 'Исключить из запрета'  = DATA BOOLEAN (StopList) IN documentPrm;
excludeStopListDetail 'Исключить из запрета' (d) = excludeStopList(stopListStopListDetail(d)) PERSISTENT; 


TABLE stockStopList (Stock ,StopList);
TABLE stockStopListDetail (Stock ,StopListDetail);

inStockStopList 'Вкл.' = DATA BOOLEAN (Stock ,StopList);
stocksStopList 'Склады' (stopList) = GROUP CONCAT nameStock(stock) IF inStockStopList(stock, stopList) , ', '
                                         BY stopList
                                         ORDER stock
                                         MINCHARWIDTH 30 PREFCHARWIDTH 50;
CONSTRAINT  inStockStopList(stock, stopList) AND NOT isCompanyStock(stock)
    MESSAGE 'Для Запрета продаж по кассе выбран склад, который не принадлежит компании';                                       
                                         

@defineDocumentPosted(stopList);
@defineDocumentClosed(stopList);
@defineDocumentDescription (stopList, 'Запрет продаж по кассе');

@defineDocumentDetailSkuPrefix (stopList, sku, , '');

idSkuGroupStopListDetail (stopListDetail) = idSkuGroupSku(skuStopListDetail(stopListDetail));
nameSkuGroupStopListDetail (stopListDetail) = nameSkuGroupSku(skuStopListDetail(stopListDetail));

@defineExternalizable(stopListDetail, VARSTRING[100]);
succeededStockStopList 'Загружен в кассу' = DATA BOOLEAN (Stock, StopList);
notSucceededStockStopList 'Не загружен в кассу' (stock, stopList) = stock IS Stock AND stopList IS StopList AND NOT succeededStockStopList(stock, stopList);   

countSucceededStocksStopList  = GROUP SUM 1 IF inStockStopList(stock, list) AND succeededStockStopList(stock, list) BY list PERSISTENT;
countStocksStopList  = GROUP SUM 1 IF inStockStopList(stock, list) BY list PERSISTENT;

succeededStopList = countSucceededStocksStopList(l) == countStocksStopList(l);

toExportStopList 'К загрузке' = countStocksStopList(l) AND NOT succeededStopList(l);  

statusSucceededStocksStopList 'Статус загрузки' = CASE 
    WHEN succeededStopList(l) AND isPostedStopList(l) THEN 'Успешно загружен'
    WHEN countSucceededStocksStopList(l) < countStocksStopList(l)  AND isPostedStopList(l) THEN 'Частично загружен'
    WHEN  l IS StopList THEN 'Не загружался' MINCHARWIDTH 10 PREFCHARWIDTH 15;
    
backgroundStatusSucceededStocksStopList = CASE 
    WHEN succeededStopList(l) AND isPostedStopList(l)  THEN RGB(212,255,212)
    WHEN countSucceededStocksStopList(l) < countStocksStopList(l) AND isPostedStopList(l) THEN RGB(255,238,165)    
    WHEN l IS StopList THEN RGB(255,255,255);

stopListNumber (number) = GROUP AGGR stopList BY numberStopList(stopList);

//--------------------Сообщения об ошибках при загрузке в кассы--------------------//
CLASS StopListError 'Ошибка';
TABLE stopListError (StopListError);

dataStopListError 'Сообщение об ошибке' = DATA VARSTRING[200] (StopListError) IN base;
dateStopListError 'Время возникновения' = DATA DATETIME (StopListError) IN base;
toDateStopListError 'Дата возникновения' (e) = DATE(dateStopListError(e));
errorTraceStopListError 'След исключения' = DATA TEXT (StopListError) IN base;
stopListStopListError 'Запрет продаж по кассе (ID)' = DATA StopList(StopListError) IN base;
quantityStopListErrorStopList 'Количество ошибок' (StopList) = GROUP SUM 1 BY stopListStopListError (stopListError) IN base;

@defineLog (StopListError, 'ошибок загрузки стоп-листов', log, toDate);

//-- SKU
stopListDetailSkuStopList (sku, stopList) =  GROUP MAX stopListDetail
    BY skuStopListDetail(stopListDetail), stopListStopListDetail(stopListDetail);

countSkuStopList 'Вкл.' (sku, stopList) =  TRUE IF [ = GROUP SUM 1 
    BY skuStopListDetail(stopListDetail), stopListStopListDetail(stopListDetail)](sku, stopList);    
    
    
changeValueSkuStopList = ACTION (sku, stopList) {
    REQUEST BOOLEAN INPUT;
    IF stopListDetailSkuStopList(sku, stopList) THEN {
        IF NOT requestedLogical() THEN {
            DELETE d WHERE d == stopListDetailSkuStopList(sku, stopList);
        } 
    } ELSE {
        IF requestedLogical() THEN {
            FOR ADDOBJ d = StopListDetail DO {
               stopListStopListDetail(d) <- stopList;
               skuStopListDetail(d) <- sku;
            }
        }
    }
}


activeStockStopListDetail(stock, detail) = inStockStopList(stock, stopListStopListDetail(detail)) AND isPostedStopListDetail(detail) PERSISTENT;
skuStockStopListDetail(stock, detail) = skuStopListDetail(detail) IF activeStockStopListDetail(stock, detail) PERSISTENT INDEXED; 
includeStockStopListDetail(stock, detail) = activeStockStopListDetail(stock, detail) AND NOT excludeStopListDetail(detail) PERSISTENT;
fromDateTimeStockStopListDetail(stock, detail) = fromDateTimeStopListDetail(detail) IF activeStockStopListDetail(stock, detail) PERSISTENT; 
toDateTimeStockStopListDetail(stock, detail) = toDateTimeStopListDetail(detail) IF activeStockStopListDetail(stock, detail) PERSISTENT; 
   
inStopListSkuStockDateTime (sku, stock, dateTime) =
    GROUP LAST includeStockStopListDetail(stock, detail)
          BY   skuStockStopListDetail(stock, detail), stock, dateTimeIn
          ORDER fromDateTimeStockStopListDetail(stock, detail) , detail 
          WHERE dateTimeIn >= fromDateTimeStockStopListDetail(stock, detail) 
                AND NOT dateTimeIn >  toDateTimeStockStopListDetail(stock, detail) COMPLEX;        

lastStopListDetailSkuStockDateTime (sku, stock, dateTime) =
    GROUP LAST detail IF includeStockStopListDetail(stock, detail)
          BY   skuStockStopListDetail(stock, detail), stock, dateTimeIn
          ORDER fromDateTimeStockStopListDetail(stock, detail) , detail 
          WHERE dateTimeIn >= fromDateTimeStockStopListDetail(stock, detail) 
                AND NOT dateTimeIn >  toDateTimeStockStopListDetail(stock, detail) COMPLEX;        

skipMachineryPriceTransactionSkuStockDateTime(sku, stock, dateTime) += inStopListSkuStockDateTime(sku, stock, dateTime); 

FORM stopList 'Запрет продаж по кассе'

    OBJECTS sl=StopList FIXED PANEL

    PROPERTIES(sl) isPostedStopList, nameNumeratorStopList, numberStopList, seriesStopList, dateStopList, timeStopList,
                   countStopListDetailStopList, noteStopList,
                   fromDateStopList, fromTimeStopList, toDateStopList, toTimeStopList, excludeStopList
                   
    TREE stockTree sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY nameStockGroup(sg)

    OBJECTS ts=Stock
    PROPERTIES    READONLY tsTreeName = nameStock(ts)
    PROPERTIES(ts, sl) FORCE GRID inStockStopList, succeededStockStopList 

    FILTERS isParentStockGroupStock(sg, ts)
    ORDER BY nameStockGroup(sg)                                        

    OBJECTS d = StopListDetail
    PROPERTIES(d)   indexStopListDetail,
                    idBarcodeSkuStopListDetail, nameSkuStopListDetail, shortNameUOMSkuStopListDetail

    PROPERTIES(d)   ADDOBJ, deletedd=DELETESESSION

    PROPERTIES(sl) TODRAW d deleteStopListDetailStopList

    FILTERS         stopListStopListDetail(d) == sl
    
    
    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY orderSkuGroup(sk), nameSkuGroup(sk)
    ORDER BY orderSkuGroup(sk), nameSkuGroup(sk)

    OBJECTS           ks=Sku 
    PROPERTIES        READONLY nameSku(ks), idBarcodeSku(ks), shortNameUOMSku(ks)
    PROPERTIES        addSku() TODRAW ks, editSku(ks), copySku(ks), countSkuStopList(ks,sl) ON CHANGE changeValueSkuStopList(ks,sl)
    ORDER BY          nameSku(ks) 
    FILTERS           isParentSkuGroupSku(sk, ks),
                      nameSku(ks)
      
    FILTERGROUP inDocument FILTER 'В док-те' countSkuStopList(ks,sl) 'F10'      

    EVENTS
        ON OK prePostStopList(sl)

    EDIT StopList OBJECT sl
;

DESIGN stopList {
    main {
        preferredSize = (1024, 768);
        NEW header.box {
            type = CONTAINERH;

            NEW headerRow1 {
                fill = 1;
                type = CONTAINERV;
                MOVE sl.documentHeader {
                    type = CONTAINERH;
                    MOVE PROPERTY(isPostedStopList(sl)) { preferredCharWidth = 10; }
                    MOVE PROPERTY(nameNumeratorStopList(sl));
                    MOVE PROPERTY(numberStopList(sl));
                    MOVE PROPERTY(seriesStopList(sl));
                    MOVE PROPERTY(dateStopList(sl));
                    MOVE PROPERTY(timeStopList(sl));
                }
                NEW timeContainer {
                    caption = 'Период действия';
                    type = CONTAINERH;
                    MOVE PROPERTY (fromDateStopList(sl));
                    MOVE PROPERTY (fromTimeStopList(sl));
                    MOVE PROPERTY (toDateStopList(sl));
                    MOVE PROPERTY (toTimeStopList(sl));   
                }
                MOVE sl.documentPrm;
            }

            MOVE sl.documentSum {
                columns = 1;
            }
        }
        NEW row {
            fill = 1;
            type = TABBED;
            NEW selectStock {
                caption = 'Выбор складов';
                type = SPLITH;
                fill = 1;
                MOVE stockTree.tree.box {caption = 'Группы складов';}            
                MOVE ts.box { fill = 2;}
            }
            NEW specification.box {
                caption = 'Спецификация';
                fill = 1;
                type = TABBED;
                MOVE d.box;
                NEW itemBox {
                    caption = 'Подбор';
                    type = SPLITH;
                    MOVE skuTree.tree.box { caption = 'Группы SKU'; }
                    MOVE ks.box { fill = 2;}
                }
            }
        }    
        MOVE functions.box;
        PROPERTY(formOk()) {
            caption = 'Провести';
        }
    }
}

FORM stopLists 'Запреты продаж по кассе'

    OBJECTS sl=StopList
    PROPERTIES (sl) READONLY statusSucceededStocksStopList BACKGROUND backgroundStatusSucceededStocksStopList(sl)
    PROPERTIES (sl) READONLYIF isReadonly() isClosedStopList, isPostedStopList, excludeStopList, numberStopList, seriesStopList, dateStopList, timeStopList
    PROPERTIES(sl)  READONLY fromDateStopList, fromTimeStopList, toDateStopList, toTimeStopList, countStopListDetailStopList
    PROPERTIES (sl) READONLYIF isReadonly() noteStopList
    PROPERTIES (sl) READONLY quantityStopListErrorStopList, stocksStopList

    PROPERTIES(sl)  READONLY FORCE PANEL createdNameUserStopList, createdTimeStopList, createdHostnameComputerStopList, 
                                          postedNameUserStopList, postedTimeStopList, postedHostnameComputerStopList

    PROPERTIES (sl) ADDFORM, EDITFORM SHOWIF isOpenedStopList(sl)
    PROPERTIES(sl)  closeStopList SHOWIF isOpenedStopList(sl), openStopList SHOWIF isClosedStopList(sl)     
    
    PROPERTIES (sl) deleted=DELETE FORCE PANEL TOOLBAR SHOWIF isOpenedStopList(sl)

    OBJECTS d=StopListDetail
    PROPERTIES(d)   READONLY indexStopListDetail,
                    idBarcodeSkuStopListDetail, nameSkuStopListDetail, shortNameUOMSkuStopListDetail
    FILTERS         stopListStopListDetail(d) == sl
    
    OBJECTS e=StopListError
    PROPERTIES(e)   READONLY dataStopListError, dateStopListError, errorTraceStopListError
    FILTERS         stopListStopListError(e) == sl
    
    OBJECTS st = Stock FIXED GRID
    PROPERTIES (st) READONLY nameStock, idStock SHOWIF showIDs()
    PROPERTIES READONLY inStockStopList(st,sl), succeededStockStopList(st,sl)
    FILTERS inStockStopList(st,sl) 
;

DESIGN stopLists {
    main {
        preferredSize = (1024, 768);
        NEW documentContainer  {
            fill = 1;
            type = SPLITV;

            MOVE sl.box {
                fill = 2;
            }
            NEW documentDetail {
                fill = 1;
                type = TABBED;

                MOVE d.box {
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';

                    MOVE sl.created;
                    MOVE sl.posted;
                }
                NEW errors {
                    caption = 'Ошибки';                    
                    MOVE e.box;
                }
                MOVE st.box;
                NEW printTab {
                    caption = 'Печатные формы';
                    NEW printContainer {
                        caption = 'Печать';
                    }
                }
            }
        }
        MOVE functions.box;
    }
}
@extendFormEditable(stopLists);
@defineFilterIsOpened (stopList, stopLists, sl);
NAVIGATOR {
    machineryExport {
        ADD stopLists;
    }
}

//--
statusStopListSkuStock 'Запрет продаж' (sku, stock)= IF lastStopListDetailSkuStockDateTime(sku, stock, currentDateTime())
    THEN 'В стоп-листе'
    ELSE 'Нет запрета' MINCHARWIDTH 10 PREFCHARWIDTH 12;
backgroundStopListSkuStock 'Цвет' (sku, stock) = RGB (255,0,0) IF lastStopListDetailSkuStockDateTime(sku, stock, currentDateTime());


notResetStopListSelectSku 'Не сбрасывать отмеченные товары при создании стоп-листа' = DATA BOOLEAN ();
EXTEND FORM options
    PROPERTIES() notResetStopListSelectSku
;
DESIGN options {
    stock1 {
        MOVE PROPERTY(notResetStopListSelectSku());
    }
}

skipSkuStock 'Отм.' = ABSTRACT BOOLEAN (Sku, Stock);

createRequestStopList 'Включить в стоп-лист'  = ACTION (){

    IF [=GROUP SUM 1 IF selectSkuStock(sku, stock)]() THEN {
        NEWSESSION NESTED selectSkuStock {
            FOR ADDOBJ sl = StopList DO {
                inStockStopList(st, sl) <- TRUE WHERE [= GROUP SUM 1 IF selectSkuStock(sku, stock) BY stock](st);  
                FOR [= GROUP SUM 1 IF selectSkuStock(sku, stock) AND NOT skipSkuStock(sku, stock) BY sku](sku) ADDOBJ d = StopListDetail DO {
                    stopListStopListDetail(d) <- sl;
                    skuStopListDetail(d) <- sku;            
                } 
                 FORM stopList OBJECTS sl = sl MANAGESESSION DOCKEDMODAL;
            }
        }
        IF NOT notResetStopListSelectSku() THEN {
            selectSkuStock(sku, stock) <- NULL;
        }
    } ELSE {
        MESSAGE 'Не отмечены товары, по которым надо создать Стоп-лист.';
    }

} TOOLBAR;
excludeRequestStopList 'Исключить из стоп-листа'  = ACTION (){

    IF [=GROUP SUM 1 IF selectSkuStock(sku, stock)]() THEN {
        NEWSESSION NESTED selectSkuStock {
            FOR ADDOBJ sl = StopList DO {
                excludeStopList(sl) <- TRUE;
                inStockStopList(st, sl) <- TRUE WHERE [= GROUP SUM 1 IF selectSkuStock(sku, stock) BY stock](st);  
                FOR [= GROUP SUM 1 IF selectSkuStock(sku, stock) BY sku](sku) ADDOBJ d = StopListDetail DO {
                    stopListStopListDetail(d) <- sl;
                    skuStopListDetail(d) <- sku;            
                } 
                 FORM stopList OBJECTS sl = sl MANAGESESSION DOCKEDMODAL;
            }
        }
        IF NOT notResetStopListSelectSku() THEN {
            selectSkuStock(sku, stock) <- NULL;
        }
    } ELSE {
        MESSAGE 'Не отмечены товары, которые надо исключить из Стоп-листа.';
    }
} TOOLBAR;

EXTEND FORM currentBalanceSkuStock
    PROPERTIES READONLY statusStopListSkuStock(s,st) BACKGROUND backgroundStopListSkuStock(s,st) BEFORE currentBalanceSkuStock(s,st)
    PROPERTIES  FORCE PANEL TODRAW sts createRequestStopList(), excludeRequestStopList()
;
DESIGN currentBalanceSkuStock {
    actionContainer {
        NEW stopListContainer {
            caption = 'Запрет продаж по кассе';
            type = CONTAINERV;
            MOVE PROPERTY (createRequestStopList());
            MOVE PROPERTY (excludeRequestStopList());
        } 
    }
}

countChangedSkusStopList =  GROUP SUM 1 IF SETCHANGED (skuStopListDetail(d)) BY stopListStopListDetail(d);

WHEN FORMS stopList CHANGED(excludeStopList(l)) OR CHANGED(countChangedSkusStopList(l)) AND isPostedStopList(l) DO {
    succeededStockStopList(st, l) <- NULL WHERE st IS Stock;    
}

FORM historyStopList 'История запрета продаж товара на кассе'
    OBJECTS st = Stock FIXED PANEL
    OBJECTS s = Sku FIXED PANEL 
    
    OBJECTS d = StopListDetail
    PROPERTIES(d) READONLY createdTimeStopListDetail, createdNameUserStopListDetail, createdHostnameComputerStopListDetail, numberStopListDetail, excludeStopListDetail
    FILTERS skuStopListDetail(d) == s,
            inStockStopList(st, stopListStopListDetail(d))
;

DESIGN historyStopList {
    REMOVE st.box;
    REMOVE s.box;
}

showHistoryStopListSku 'Показать историю запрета продаж товара на кассе' (sku, stock) = 
    ACTION FORM historyStopList OBJECTS s = sku, st = stock MODAL SHORTCUT statusStopListSkuStock;