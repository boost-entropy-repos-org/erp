MODULE SaleShipmentBin;

REQUIRE Bin, SaleShipment, SaleBin;

NAMESPACE Sale;

//---------------------------------Ячейка ----------------------------------//

@defineDocumentInterfaceDetailBin(shipment);
overCopy[UserShipmentDetail,UserShipmentDetail](UserShipmentDetail d, UserShipmentDetail detail) += ACTION {      
    bin(d) <- bin(detail);
}
@extendFormInterfaceDetailBin(shipment, s, , quantity);
@deriveDocumentOperationProperty(UserShipment, showBin);
bin(UserShipmentDetail detail) <- bin(supplierStock(detail), sku(detail))
    WHEN CHANGED(supplierStock(detail)) OR
         CHANGED(sku(detail));

//-- invoice
@defineInvoiceShipmentBin(supplierStock);
@deriveDocumentOperationProperty(UserInvoice, showBin);

WHEN SESSION FORMS userInvoice
    CHANGED(supplierStock(UserInvoiceDetail detail)) OR CHANGED(sku(detail)) DO {
        bin(detail) <- bin(supplierStock(detail), sku(detail));    
    }

//-- Проводим по регистру (ячейка)
bin[DataSkuLedger](ShipmentDetail ledger) += bin(ledger);

//---------------------------------Новый функционал ----------------------------------//

@defineDocumentDetailBinCustom(userShipment, current, ' текущая');
currentBin (UserShipmentDetail detail) = currentBin(userShipment(detail));

EXTEND FORM userShipment
    PROPERTIES(s) SHOWIF showBin(s) nameCurrentBin
;

DESIGN userShipment {
    headerBin {
        MOVE PROPERTY(nameCurrentBin(s)) AFTER PROPERTY(showBin(s));
    }
}


WHEN SESSION FORMS userShipment
    SET(UserShipmentDetail detail IS UserShipmentDetail) AND currentBin(detail)
        DO ASSIGN bin(detail) <- currentBin(detail) WHERE currentBin(detail);

WHEN SESSION FORMS userShipment
    CHANGED(invoiceDetail(UserShipmentDetail detail))
        DO ASSIGN bin(detail) <- bin(invoiceDetail(detail));