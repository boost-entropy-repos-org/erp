MODULE PurchaseScheduleOrderRamp;

REQUIRE OrderRamp, PurchaseOrder, PurchaseScheduleOrder;

NAMESPACE Purchase;


//rampScheduleOrderTimeStock = DATA Ramp (ScheduleOrderTime, Stock);
//nameRampScheduleOrderTimeStock 'Рампа' (scheduleOrderTime,stock) = nameRamp(rampScheduleOrderTimeStock(scheduleOrderTime,stock));
//
//inScheduleOrderTimeStockInterval 'Вкл.' = DATA BOOLEAN (ScheduleOrderTime, Stock, Interval);
//
//CONSTRAINT rampScheduleOrderTimeStock(scheduleOrderTime,stock) AND NOT stockRamp(rampScheduleOrderTimeStock(scheduleOrderTime,stock))==stock
//    CHECKED BY rampScheduleOrderTimeStock MESSAGE 'Для дня недели и склада выбрана рампа, которая не относится к складу';  
//
//CONSTRAINT rampScheduleOrderTimeStock(d,tts) AND inScheduleOrderTimeStockInterval(d,tts,in) AND NOT inRampInterval(rampScheduleOrderTimeStock(d,tts),in)
//    MESSAGE 'Для дня недели, склада и рампы выбраны интервалы, которае не относятся к рампе'; 
//            
//// todo: когда сработает CONSTRAINT не понятно где искать ошибку. Надо придумать понятное поведение (возможно сессионное событие на сброс inScheduleOrderTimeStockInterval )            
//  
//  
//rampScheduleOrderDetail = DATA Ramp (ScheduleOrderDetail); 
//nameRampScheduleOrderDetail 'Рампа' (scheduleOrderDetail) = nameRamp(rampScheduleOrderDetail(scheduleOrderDetail));
//inScheduleOrderDetailInterval 'Вкл.' = DATA BOOLEAN (ScheduleOrderDetail, Interval);
//  
//CONSTRAINT rampScheduleOrderDetail(scheduleOrderdetail) AND NOT stockRamp(rampScheduleOrderDetail(scheduleOrderdetail))==customerStockScheduleOrderDetail(scheduleOrderdetail)
//    CHECKED BY rampScheduleOrderDetail MESSAGE 'Для предварительного заказа выбрана рампа, которая не относится к складу покупателя';  
//      
//CONSTRAINT rampScheduleOrderDetail(scheduleOrderdetail) AND inScheduleOrderDetailInterval(scheduleOrderdetail, interval) AND NOT inRampInterval(rampScheduleOrderDetail(scheduleOrderdetail),interval)
//    MESSAGE 'Для предварительного заказа и рампы выбраны интервалы, которые не относятся к рампе'; 
//
//EXTEND FORM scheduleOrder
//    OBJECTS tts=Stock FIXED GRID       
//    PROPERTIES (tts) SHOWIF toShowGenDayMonth(s) READONLY nameStock
//    PROPERTIES SHOWIF toShowGenDayMonth(s) nameRampScheduleOrderTimeStock(d,tts)
//    FILTERS inScheduleOrderStock(s,tts)
//    
//    OBJECTS in=Interval FIXED GRID
//    PROPERTIES (in) SHOWIF toShowGenDayMonth(s) READONLY timeInterval            
//    PROPERTIES SHOWIF toShowGenDayMonth(s) inScheduleOrderTimeStockInterval(d,tts,in)
//    FILTERS inRampInterval(rampScheduleOrderTimeStock(d,tts),in)
//    FILTERGROUP filter
//        FILTER 'Отм.' 'F10' inScheduleOrderTimeStockInterval(d,tts,in)
//    
//;
//DESIGN scheduleOrder {
//    days1 {
//        type = CONTAINERH;
//        NEW days11 {
//            fill = 1;
//            type = CONTAINERV;
//            
//            ADD d.box;
//            NEW days111 {
//                fill = 1;
//                type = CONTAINERH;
//                ADD tts.box;
//                ADD in.box;
//            } 
//        }        
//        ADD m.box;
//    }
//}      

//-- По дням недели
TABLE stockScheduleOrderTimeRampInterval(Stock, ScheduleOrderTime, Ramp, Interval);
in 'Вкл.' = DATA BOOLEAN (Stock, ScheduleOrderTime, Ramp, Interval);

CONSTRAINT in(Stock st,ScheduleOrderTime o,Ramp r,Interval i) AND NOT in(r,i)
    MESSAGE 'Для дня недели и склады включены рампа и интервал, у которых нет связи';  

CONSTRAINT in(Stock st,ScheduleOrderTime o,Ramp r,Interval i) AND NOT stock(r)==st
    MESSAGE 'Для дня недели и склада включена рампа, у которой нет связи со складом';   
 
//-- По предварительным заказам
TABLE scheduleOrderDetailRampInterval(ScheduleOrderDetail, Ramp, Interval);
in 'Вкл.' = DATA BOOLEAN (ScheduleOrderDetail, Ramp, Interval);
countIntervals (o,r) = GROUP SUM 1 IF in(ScheduleOrderDetail o,Ramp r,Interval i) BY o,r;

countScheduleOrderDetails (date,r,i) = GROUP SUM 1 IF in(ScheduleOrderDetail o,Ramp r,Interval i) AND isOpened(o) BY dateSupply(o),r,i;
  
CONSTRAINT in(ScheduleOrderDetail o,Ramp r,Interval i) AND NOT in(r,i)
    MESSAGE 'Для предварительного заказа и склады включены рампа и интервал, у которых нет связи';   
     
CONSTRAINT in(ScheduleOrderDetail o,Ramp r,Interval i) AND NOT stock(r)==customerStock(o)
    MESSAGE 'Для предварительного заказа и склада включена рампа, у которой нет связи со складом';                      
      
overCreate(ScheduleOrderDetail o) += ACTION {
    in(o,Ramp ramp,Interval interval) <- in(
                                                            customerStock(o),
                                                            shipmentScheduleOrderTime(scheduleOrder(o),extractDOW(dateSupply(o))),
                                                            ramp,
                                                            interval);                                                             
}  

descriptionRamps 'Рампы' (o)= 
    GROUP CONCAT (CONCAT ' ', time(Interval i), name(Ramp r)) IF in(ScheduleOrderDetail o,r,i), ', ' 
    BY o
    ORDER name(r), time(i) 
    MINCHARWIDTH 20 PREFCHARWIDTH 30; 
      
overCreate(UserOrder o) += ACTION {
    IF o IS UserOrder THEN {
        in(o,Ramp r,Interval i) <-  in(scheduleOrderDetail(o),r,i); 
        shipmentTime(o) <- [ = GROUP MIN time(Interval i) IF in(Order.Order o,Ramp r,i) BY o](o);
    }      
} 
 
backgroundIn = RGB(0,255,0) IF [ = GROUP SUM 1 IF in(Stock tts,ScheduleOrderTime d,Ramp r,Interval in) BY tts,d,r](Stock tts,ScheduleOrderTime d,Ramp r);      
EXTEND FORM scheduleOrder
    OBJECTS tts=Stock FIXED GRID       
    PROPERTIES (tts) SHOWIF toShowGenDayMonth(s) READONLY name    
    FILTERS in(s,tts)
    
    OBJECTS r=Ramp FIXED GRID
    PROPERTIES(r) SHOWIF toShowGenDayMonth(s) READONLY  name BACKGROUND backgroundIn(tts,d,r)
    FILTERS stock(r) == tts 
    
    OBJECTS in=Interval FIXED GRID
    PROPERTIES (in) SHOWIF toShowGenDayMonth(s) READONLY time            
    PROPERTIES SHOWIF toShowGenDayMonth(s) in(tts,d,r,in)
    FILTERS in(r,in)
    
    FILTERGROUP filter
        FILTER 'Отм.' in(tts,d,r,in) 'F10'
        
        
    PROPERTIES(sd) SHOWIF toShowGenDayMonth(s) READONLY descriptionRamps FORCE GRID BEFORE deletesd
    
;
DESIGN scheduleOrder {
    days1 {
        type = SPLITH;
        
        NEW days11 {
            fill = 1;
// временно убираем SPLIT, так как тормозит в вебе
//            type = SPLITV;  
            NEW days111 {
                fill = 2;
//                type = SPLITV;    
                MOVE dow.box;
                MOVE d.box; 
            }            
            MOVE m.box;
        }     
        NEW days12 {
            caption = 'Выбор рамп';
            fill = 2;
            type = CONTAINERH; // SPLITH
            MOVE tts.box;
            NEW reight {
                fill = 2;
                type = SPLITV;
                MOVE r.box;
                MOVE in.box {
                    fill = 3;
                }
            }                
        }      
    
    }
}

includeShipmentDowSupplierCustomer '' = GROUP SUM 1 IF isOpened(ScheduleOrderDetail d) AND dateSupply(d) >= DATE date AND
    in(d,Ramp r,Interval i) 
        BY extractDOW(dateSupply(d)), supplier(d), customer(d), r, i, date;
        
descriptionSuppliersCustomer 'Поставщики' (dow, c, r, i, date)= 
    GROUP CONCAT name(LegalEntity s) IF includeShipmentDowSupplierCustomer(DOW dow, s, LegalEntity c, Ramp r, Interval i,DATE date), ', ' 
    BY dow, c, r, i, date
    ORDER name(s), s
    MINCHARWIDTH 20 PREFCHARWIDTH 30; 
prevDescriptionSuppliersCustomer 'Поставщики' (DOW dow, LegalEntity c, Ramp r, Interval i, DATE date) = PREV(descriptionSuppliersCustomer(dow, c, r, i, date)) MINCHARWIDTH 20 PREFCHARWIDTH 30;
  
descriptionSuppliers 'Поставщики' (ScheduleOrderTime d,Ramp r,Interval i) = descriptionSuppliersCustomer(shipmentDOW(d), customer(scheduleOrder(d)), r, i, startDate(scheduleOrder(d)));
    
EXTEND FORM scheduleOrder
    PROPERTIES (d,r,in) READONLY descriptionSuppliers SHOWIF toShowGenDayMonth(s)
;

FORM listScheduleOrderDetail 'Список предварительных заказов'
    OBJECTS dt = DATE FIXED PANEL
    OBJECTS dow = DOW FIXED PANEL
    OBJECTS c = LegalEntity FIXED PANEL
    OBJECTS r = Ramp FIXED PANEL
    OBJECTS i = Interval FIXED PANEL
    
    OBJECTS d=ScheduleOrderDetail
    PROPERTIES (d) READONLY isClosed, dateOrder, dateSupply
    PROPERTIES (d) READONLY monthInDate, DOWInDate,
                    nameSupplier, nameSupplierStock,
                    nameCustomer, nameCustomerStock,
                    nameOperation

    ORDER BY dateSupply(d)
    FILTERS dateSupply(d) >= dt,
            customer(d) ==c,
            in(d,r,i),
            extractDOW(dateSupply(d)) == dow
    FILTERGROUP curDate
        FILTER 'Больше текущей даты' dateSupply(d) > currentDate() 'F9'
;
showListDetail 'Показать список предварительных заказов' (ScheduleOrderTime d,Ramp r,Interval in) = ACTION {
    SHOW listScheduleOrderDetail OBJECTS dt = startDate(scheduleOrder(d)), 
                                         dow = shipmentDOW(d),
                                         c = customer(scheduleOrder(d)),
                                         r = r,
                                         i = in ; 
} SHORTCUT descriptionSuppliers[ScheduleOrderTime,Ramp,Interval];
