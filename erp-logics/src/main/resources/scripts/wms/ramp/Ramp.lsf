MODULE Ramp;

REQUIRE Stock, WMS, SkuLedger;

NAMESPACE Ramp;

//------------------------- Интервал -----------------------------//

CLASS  IntervalType 'Тип интервала';
TABLE intervalType (IntervalType);

name 'Наименование' = DATA VARISTRING[100](IntervalType);
@defineExternalizable(intervalType, VARSTRING[100]);

CLASS  Interval 'Интервал';
TABLE interval (Interval);

name 'Наименование' = DATA VARISTRING[100](Interval);
@defineExternalizable(interval, VARSTRING[100]);
time 'Время' = DATA TIME (Interval) IN recognize;

intervalType= DATA IntervalType (Interval) NOT NULL DELETE;
nameIntervalType 'Тип интервала' (Interval i) = name(intervalType(i));

FORM intervalType 'Тип интервала'
    OBJECTS t=IntervalType FIXED PANEL
    PROPERTIES(t) name
    
    OBJECTS i= Interval
    PROPERTIES(i) time, ADDOBJ, DELETESESSION FORCE PANEL TOOLBAR       
    FILTERS intervalType(i) == t
    
    EDIT IntervalType OBJECT t
;

FORM intervalTypes 'Типы интервала'
    OBJECTS t=IntervalType
    PROPERTIES(t) name READONLY, DELETE FORCE PANEL TOOLBAR
    PROPERTIES(t) ADDFORM, EDITFORM
    ORDER BY name(t)
    
    OBJECTS i= Interval
    PROPERTIES(i) READONLY time
    ORDER BY time(i)    
    FILTERS intervalType(i) == t
        
    DIALOG IntervalType OBJECT t
;
DESIGN intervalTypes { main{ preferredSize = (600, 400); } }

//------------------------- Группы рамп -----------------------------//

CLASS  RampGroup 'Группа рамп';
TABLE rampGroup (RampGroup);

name 'Наименование' = DATA VARISTRING[100](RampGroup);

TABLE rampGroupRampGroup(RampGroup, RampGroup);
@defineHierarchy(rampGroup, RampGroup);

FORM rampGroup 'Группа рамп'
    OBJECTS g=RampGroup FIXED PANEL
    PROPERTIES(g) name, nameParent
    EDIT RampGroup OBJECT g
;

FORM rampGroups 'Группы рамп'
    TREE treeGroups g=RampGroup PARENT parent
    PROPERTIES READONLY name(g), canonicalName (g)
    PROPERTIES(g) ADDFORM, EDITFORM, deleteg=DELETE FORCE PANEL TOOLBAR
    ORDER BY canonicalName(g)
    DIALOG RampGroup OBJECT g
;

//------------------------- Рампа -----------------------------//

CLASS  Ramp 'Рампа';
TABLE ramp (Ramp);

name 'Наименование' = DATA VARISTRING[100](Ramp) IN recognize;
@defineExternalizable(ramp, VARSTRING[100]);

rampGroup 'Группа рамп' = DATA RampGroup (Ramp) AUTOSET NOT NULL;
nameRampGroup 'Группа' (Ramp ramp) = name(rampGroup(ramp));

TABLE rampGroupRamp(RampGroup, Ramp);
isParent (RampGroup rampGroup, Ramp ramp) = isParent(rampGroup(ramp), rampGroup);
canonicalName 'Каноническое имя' (Ramp ramp) = canonicalName(rampGroup(ramp));

intervalType= DATA IntervalType (Ramp);
nameIntervalType 'Тип интервала' (Ramp r) = name(intervalType(r));

in 'Вкл.' (Ramp r,Interval i)= intervalType(r) == intervalType(i);
countInterval 'Кол-во интервалов' (r) = GROUP SUM 1 IF in(Ramp r,Interval i) BY r;

stock= DATA Stock (Ramp);
nameStock 'Склад' (Ramp r) = name(stock(r));
countInterval 'Кол-во интервалов' (st) = GROUP SUM 1 IF in(Ramp r,Interval i) BY stock(r);

CONSTRAINT stock(Ramp r) AND NOT isCompany(stock(r))
    CHECKED BY stock[Ramp] MESSAGE 'Для рампы должен быть задан склад компании';    
    
//--
TABLE rampSkuGroup(Ramp, SkuGroup);
inData 'Вкл.' = DATA BOOLEAN (Ramp, SkuGroup);
levelParent (ramp, group) = GROUP MIN level(SkuGroup group, SkuGroup parent) IF inData(Ramp ramp, parent)
                                                              BY ramp, group PERSISTENT;

nearestParent (Ramp ramp, SkuGroup group) = skuGroup(group, levelParent (ramp, group));
nearestIn  (Ramp ramp, SkuGroup group) =
    inData(ramp, nearestParent (ramp, group)) PERSISTENT;

in 'Вкл.' (Ramp ramp, SkuGroup group) = OVERRIDE nearestIn(ramp, group), inData(ramp, group) PERSISTENT;

in 'Вкл.' (Ramp ramp, Sku sku) = in(ramp, skuGroup(sku));
// Пока что простенькая логика привязки групп товаров к рампам, возможно надо будет переделать

countSkuGroups (ramp) = GROUP SUM 1 IF inData(Ramp ramp, SkuGroup skuGroup) BY ramp;

  
FORM ramp 'Рампа'
    OBJECTS r=Ramp FIXED PANEL
    PROPERTIES(r) name, id SHOWIF showIDs(), nameIntervalType, nameStock, nameRampGroup
    
    OBJECTS i= Interval
    PROPERTIES(i) READONLY time
    ORDER BY time(i)
    FILTERS intervalType(r) == intervalType(i)
    
    EDIT Ramp OBJECT r
;
FORM ramps 'Рампы'
    TREE rampTree sg = RampGroup PARENT parent
    PROPERTIES READONLY name(sg)
    
    OBJECTS r=Ramp 
    PROPERTIES(r) READONLY name, id SHOWIF showIDs(), nameIntervalType, nameStock
    PROPERTIES(r) ADDFORM, EDITFORM
    ORDER BY      name(r)
    FILTERS isParent(sg, r) 
    
    TREE skuTree gg = SkuGroup PARENT parent
    PROPERTIES READONLY order(gg), name(gg)         
    PROPERTIES in(r,gg)      
    ORDER BY order(gg)    
    OBJECTS i= Interval
    PROPERTIES(i) READONLY time
    ORDER BY time(i)
    FILTERS intervalType(r) == intervalType(i)
    
    DIALOG Ramp OBJECT r
;
DESIGN ramps { 
    main{ 
        preferredSize = (1024, 768); 
        NEW topContainer {
            type = SPLITH;
            fill = 1;
            NEW treeBox {
                fill = 1;
                type = SPLITV;
                MOVE rampTree.tree.box {
                    caption = 'Группы рамп';
                }
                MOVE skuTree.tree.box {
                    caption = 'Группы товаров';
                }                
            }    
            NEW detailContainer {
                fill = 2;
                type = SPLITV;
                MOVE r.box {                            
                    r.grid {
                        defaultComponent = TRUE;
                    }
                }
                MOVE i.box;
            }
        }
        MOVE functions.box;
    }
}

NAVIGATOR {
    WMSNavigator {
        NEW rampNavigator 'Рампа' {
            ADD intervalTypes;
            ADD rampGroups; 
            ADD ramps;
        }
    }
}



