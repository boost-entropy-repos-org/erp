MODULE PurchaseDeclarationBox;

REQUIRE PurchaseDeclarationDetail, PurchaseShipmentBox;

NAMESPACE Purchase;

TABLE userInvoiceBox (UserInvoice, Box);
TABLE declarationUserInvoiceBox (Declaration, UserInvoice, Box);

countNotDeclaration  (userInvoice, box)= GROUP SUM 1 IF UserInvoiceDetail detail IS UserInvoiceDetail AND NOT declaration(detail)
    BY userInvoice(detail), box(detail);

count  (declaration, userInvoice, box)= GROUP SUM 1 IF UserInvoiceDetail detail IS UserInvoiceDetail
    BY declaration(detail), userInvoice(detail), box(detail);

TABLE declarationBox(Declaration, Box);
in 'Вкл.' = DATA BOOLEAN (Declaration, Box);

changeIn(Declaration declaration, Box box)= {
    INPUTX b = in(declaration, box) DO
        IF b THEN {
            in(declaration, box) <- TRUE;
            FOR box(UserInvoiceDetail detail) == box AND NOT dataDeclaration(detail) DO {
                dataDeclaration(detail) <- declaration;
            }
        } ELSE {
            in(declaration, box) <- NULL;
            FOR box(UserInvoiceDetail detail) == box AND dataDeclaration(detail)== declaration DO {
                dataDeclaration(detail) <- NULL;
            }
        }
}

EXTEND FORM declaration
    PROPERTIES(id) READONLY nameBox BEFORE quantity(id)
;

EXTEND FORM declarationInvoices

    PROPERTIES(id) READONLY nameBox BEFORE quantity(id)

    OBJECTS b=Box
    PROPERTIES(b) READONLY Box.name
    PROPERTIES(d,b) in ON CHANGE changeIn(d,b)
    FILTERS count(d,i,b) OR d IS Declaration AND countNotDeclaration(i,b)

    OBJECTS idd=UserInvoiceDetail
    PROPERTIES(d, idd) in
    PROPERTIES(idd) READONLY index, idBarcodeSku, nameSku, shortNameUOMSku,
                   quantity, price
    FILTERS invoice(idd)==i,
            box(idd)==b,
            declaration(idd)==d OR d IS Declaration AND NOT declaration(idd)
;
DESIGN declarationInvoices {
    pane {
        NEW boxContainer {
            caption = 'Короба';
            MOVE b.box;
            MOVE idd.box;
        }
    }
}