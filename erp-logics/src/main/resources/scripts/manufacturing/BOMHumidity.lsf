MODULE BOMHumidity;

REQUIRE ItemHumidity, BOMNutrition;


// ------------------------------------------------------------------- //
GROUP humidity 'Влажность' : base;

showHumidityBOM 'Отображать влажность' = DATA BOOLEAN(BOM) IN documentPrm;

// Влажность изделия
percentHumidityProduct 'Влажность, %' (p) = percentHumidityItem(skuProduct(p)) IN itemHumidity;
@changeNutrition(product, sku, percentHumidity) ;
percentDrynessProduct 'Массовая доля сухих веществ, %' (p) = percentDrynessItem(skuProduct(p)) IN itemHumidity;
changePercentDrynessProduct  = ACTION (product) {
    REQUEST  NUMERIC[8,2] INPUT ;
    IF requestedNumeric() THEN {
        percentHumidityItem(item) <- (100-requestedNumeric()) WHERE item == skuProduct(product);
    } ELSE {
        percentHumidityItem(item) <- NULL WHERE item == skuProduct(product);
    }    
};

// Влажность компонент
percentHumidityComponent 'Влажность, %' (component) = percentHumidityItem(overSkuComponent(component));
@changeNutrition(component, overSku, percentHumidity);
percentDrynessComponent 'Массовая доля сухих веществ, %' (component) = percentDrynessItem(overSkuComponent(component)) IN itemHumidity;     
changePercentDrynessComponent  = ACTION (component) {
    REQUEST  NUMERIC[8,2] INPUT ;
    IF requestedNumeric() THEN {
        percentHumidityItem(item) <- (100-requestedNumeric()) WHERE item == overSkuComponent(component);
    } ELSE {
        percentHumidityItem(item) <- NULL WHERE item == overSkuComponent(component);
    }    
};                                           
                                              
//------------------------- Производственная рецептура --------------------------//

overBruttoQuantityComponentDate 'Выход полуфабрикатов' (c,dt)=bruttoQuantityComponentDate(c,dt)* (OVERRIDE 1.0 IF c IS Component, overNetWeightComponent(c));

// -- по всей спецификации

recBruttoDrynessQuantityBOMSkuDate 'В сухих веществах' (BOM, sku, date)= recBruttoQuantityBOMSkuDate (BOM, sku, date) *
    (OVERRIDE 1.0 IF sku IS Sku, netWeightItem(sku)) *
    percentDrynessItem(sku)/100;

quantityComponentSkuDate 'Кол-во для компонента, если он полуфабрикат' (component, sku, date)= recBruttoQuantityBOMSkuDate (BOMProduct(materialComponent(component)), sku, date) *
    bruttoQuantityComponentDate(component, date)/
    (quantityProduct(materialComponent(component)) IF quantityProduct(materialComponent(component))!=0) *
    (OVERRIDE 1.0 IF sku IS Sku, netWeightItem(sku))
    ;
quantityBomSkuDate 'Кол-во по спец. для полуфабрикатов' (BOM, sku, date) = GROUP SUM quantityComponentSkuDate(component, sku, date) BY BOMComponent(component), sku, date;
quantityComponentDate 'Итого сырья на полуфабрикаты' (component, date) = GROUP SUM quantityComponentSkuDate(component, sku, date) BY component, date;

drynessQuantityBomSkuDate 'Кол-во по спец. для полуфабрикатов в сухих веществах'= quantityBomSkuDate(BOM, sku, date)*percentDrynessItem(sku)/100;

recBruttoQuantityBOMDate 'Кол-во компонентов в натуре' (BOM, date) = GROUP SUM recBruttoQuantityBOMSkuDate (BOM, sku, date)*(OVERRIDE 1.0 IF sku IS Sku, netWeightItem(sku)) BY BOM, date;
recBruttoDrynessQuantityBOMDate 'В сухих веществах' (BOM, date) = GROUP SUM recBruttoDrynessQuantityBOMSkuDate(BOM, sku, date) BY BOM, date;

drynessQuantityComponentDate 'Кол-во для комонента(товар) в сухих веществах' (cc,dt)=  bruttoQuantityComponentDate(cc,dt) * 
                                                                                       (OVERRIDE 1.0 IF cc IS Component, overNetWeightComponent(cc)) *
                                                                                       percentDrynessComponent(cc)/100;
drynessQuantityComponent 'Кол-во для комонентов сухих веществах' (c) = overNettoNetWeightComponent(c) * percentDrynessComponent(c)/100;
drynessQuantityComponentsBOM 'Кол-во по комонентам в сухих веществах' (b) = GROUP SUM drynessQuantityComponent(c) BY BOMComponent(c);
calcPercentHumidityBOM 'Массовая доля сухих веществ, %' (b)= drynessQuantityComponentsBOM(b)/(overNettoNetWeightComponentBOM(b) IF overNettoNetWeightComponentBOM(b)!=0)*100; 

//--
recBruttoQuantityProductDate 'Кол-во компонентов в натуре' (product, date) = recBruttoQuantityBOMDate(BOMProduct(product),date);
recBruttoDrynessQuantityProductDate 'В сухих веществах' (product, date) = recBruttoDrynessQuantityBOMDate(BOMProduct(product),date);
drynessQuantityComponentsProduct 'Кол-во по комонентам в сухих веществах' (product) =drynessQuantityComponentsBOM(BOMProduct(product));
//--
calcPercentHumidityProduct 'Массовая доля сухих веществ, %' (product) =calcPercentHumidityBOM(BOMProduct(product));

percentHumidityProductComponent 'Влажность' (c) = percentHumidityProduct(materialComponent(c));

//-- Альтернатива для расчета "Массовая доля сухих веществ, %" т.е. берем не по компонентам, а для всех sku рекурсивно
// todo: может быть так правильнее ????

drynessQuantityBOMSku'Кол-во в сухих веществах для нетто' (BOM,sku) = recNettoQuantityBOMSku(BOM,sku) *
                                                                          (OVERRIDE 1.0 IF BOM IS BOM , netWeightItem(sku)) *
                                                                          percentDrynessItem(sku)/100;
nettoQuantityBOMSku 'Кол-во нетто' (BOM,sku) = recNettoQuantityBOMSku(BOM,sku) * (OVERRIDE 1.0 IF BOM IS BOM , netWeightItem(sku));  
nettoQuantityBOM 'Кол-во нетто' (BOM) = GROUP SUM nettoQuantityBOMSku(BOM,sku) BY BOM;                                                                        
                                                                          
overDrynessQuantityBOM 'Кол-вов сухих веществах для нетто' (BOM) = GROUP SUM drynessQuantityBOMSku(BOM,sku) BY BOM;
overCalcPercentHumidityBOM 'Массовая доля сухих веществ, %' (b)= overDrynessQuantityBOM(b)/(nettoQuantityBOM(b) IF nettoQuantityBOM(b)!=0)*100;                                                                                                                                                     

productsUOMBOM 'Изделия' (BOM) = GROUP CONCAT VARSTRING[255](shortNameUOMProduct(p)), ', '
                                       BY BOMProduct(p)
                                       ORDER indexProduct(p) MINCHARWIDTH 30 PREFCHARWIDTH 50 PERSISTENT;

FORM productionRecipe 'Производственная рецептура'
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES (dt) date = OBJVALUE

    OBJECTS b=BOM FIXED PANEL 
    PROPERTIES(b)  READONLY productsBOM, productsUOMBOM, nameBOM, numberBOM, seriesBOM, fromDateBOM, toDateBOM, componentsBOM, overNettoNetWeightProductBOM, overNettoNetWeightComponentBOM, pricePercentBOM, noteBOM
    PROPERTIES     READONLY    recBruttoQuantityBOMDate(b,dt), recBruttoDrynessQuantityBOMDate(b,dt), drynessQuantityComponentsBOM(b)
    OBJECTS p = Product
    PROPERTIES(p) READONLY indexProduct, idBarcodeSkuProduct, idProduct, nameSkuProduct, shortNameUOMProduct, percentHumidityProduct, overNettoNetWeightProduct
    PROPERTIES(p,dt) READONLY recBruttoQuantityProductDate, recBruttoDrynessQuantityProductDate
    PROPERTIES(p) drynessQuantityComponentsProduct, calcPercentHumidityProduct
    FILTERS       BOMProduct(p) == b

    OBJECTS c = Component FIXED GRID
    FILTERS       BOMComponent(c) == b,
                  materialComponent(c) IS Product                                 

    OBJECTS sk = Sku
    PROPERTIES(sk) READONLY nameSku, percentDrynessItem 
    PROPERTIES     quantityComponentSkuDate(c,sk,dt) COLUMNS (c) HEADER nameMaterialComponent(c)
    PROPERTIES     READONLY quantityBomSkuDate(b,sk,dt), drynessQuantityBomSkuDate(b,sk,dt)
    FILTERS        quantityBomSkuDate(b,sk,dt)
    
    OBJECTS cc = Component
    PROPERTIES(cc) READONLY indexComponent, idBarcodeSkuComponent, idComponent, nameMaterialComponent, shortNameUOMComponent, overNettoNetWeightComponent
    PROPERTIES    READONLY wastageComponentDate(cc,dt), overBruttoQuantityComponentDate(cc,dt), percentDrynessComponent(cc), drynessQuantityComponentDate(cc,dt)    
    FILTERS       BOMComponent(cc) == b,
                  materialComponent(cc) IS Sku     
                  
    PROPERTIES READONLY  overNettoNetWeightComponent(c)  COLUMNS (c) FOOTER nameMaterialComponent(c)
    ,quantityComponentDate(c,dt) COLUMNS (c) FOOTER nameMaterialComponent(c), overBruttoQuantityComponentDate(c,dt) COLUMNS (c) FOOTER nameMaterialComponent(c)       
                  
                  
    OBJECTS ccc = Component
    PROPERTIES(ccc) READONLY idComponent, nameMaterialComponent, overNettoNetWeightComponent                                                                                        
    FILTERS       BOMComponent(ccc) == b    
                  
    OBJECTS c1 = Component FIXED GRID
    PROPERTIES READONLY  overNettoNetWeightComponent(c1)  COLUMNS (c1) FOOTER nameMaterialComponent(c1)  
    FILTERS       BOMComponent(c1) == b,
                  materialComponent(c1) IS Product                    

    OBJECTS c2 = Component FIXED GRID
    PROPERTIES READONLY  percentHumidityProductComponent(c2)  COLUMNS (c2) FOOTER nameMaterialComponent(c2)  
    FILTERS       BOMComponent(c2) == b,
                  materialComponent(c2) IS Product                      
                  
;
printProductionRecipe 'Производственная рецептура'  = ACTION (BOM) NEWSESSION {
    FORM dialogDate MODAL;
        IF formResult() == FormResult.ok THEN {
            FORM productionRecipe OBJECTS dt = chosenDate('d'), b = BOM PRINT;
        }
    apply();
} IMAGE 'print.png' IN print;

//------------------------- Расчет пищевой ценности --------------------------//

recBruttoNetQuantityBOMSkuDate 'В натуре' (BOM, sku, d)= recBruttoQuantityBOMSkuDate(BOM, sku, d) *
    (OVERRIDE 1.0 IF sku IS Sku, netWeightItem(sku));

//-- все берем на 100 грамм

netGramsQuantityProductSkuDate 'Кол-во на 100 гр. изделия в натуре' (p,sku,d)= recBruttoNetQuantityBOMSkuDate(BOMProduct(p), sku, d)/ (overNettoNetWeightProduct(p) IF overNettoNetWeightProduct(p) !=0) *1000/10;
netGramsDrynessQuantityProductSkuDate 'Кол-во на 100 гр. изделия в сухих веществах' (p,sku,d)= netGramsQuantityProductSkuDate(p,sku,d)* percentDrynessItem(sku)/100;



proteinsGramsQuantityProductSkuDate 'Белки в рецепте' (p,sku,d)= netGramsQuantityProductSkuDate(p,sku,d)*proteinsItem(sku)/100;
fatsGramsQuantityProductSkuDate 'Жиры в рецепте' (p,sku,d)= netGramsQuantityProductSkuDate(p,sku,d)*fatsItem(sku)/100;
carbohydratesGramsQuantityProductSkuDate 'Углеводы в рецепте' (p,sku,d)= netGramsQuantityProductSkuDate(p,sku,d)*carbohydratesItem(sku)/100;
energyGramsQuantityProductSkuDate 'Энергетическая ценность в рецепте' (p,sku,d)= netGramsQuantityProductSkuDate(p,sku,d)*energyItem(sku)/100;


//-- по всему изделию
netGramsQuantityProductDate  'Кол-во на 100 гр. изделия в натуре всего' (p,d) = GROUP SUM netGramsQuantityProductSkuDate(p,sku,d) BY p,d;
netGramsDrynessQuantityProductDate  'Кол-во на 100 гр. изделия в сухих веществах всего' (p,d) = GROUP SUM netGramsDrynessQuantityProductSkuDate(p,sku,d) BY p,d;
gramsQuantityComponentsProduct 'Кол-во на 100 гр. изделия в сухих веществах по компонентам' (p)= drynessQuantityComponentsBOM(BOMProduct(p))/ (overNettoNetWeightProduct(p) IF overNettoNetWeightProduct(p) !=0) *1000/10;

coeffGramsDrynessQuantityProductDate 'Коэффициент' (p,d) = gramsQuantityComponentsProduct(p)/netGramsDrynessQuantityProductDate(p,d);

proteinsGramsQuantityProductDate  'Белки в рецепте' (p,d) = GROUP SUM proteinsGramsQuantityProductSkuDate(p,sku,d) BY p,d;
fatsGramsQuantityProductDate  'Жиры в рецепте' (p,d) = GROUP SUM fatsGramsQuantityProductSkuDate(p,sku,d) BY p,d;
carbohydratesGramsQuantityProductDate  'Углеводы в рецепте' (p,d) = GROUP SUM carbohydratesGramsQuantityProductSkuDate(p,sku,d) BY p,d;
energyGramsQuantityProductDate  'Энергетическая ценность в рецепте' (p,d) = GROUP SUM energyGramsQuantityProductSkuDate(p,sku,d) BY p,d;

netProteinsGramsQuantityProductDate  'Белки в рецепте' (p,d) = proteinsGramsQuantityProductDate(p,d)*coeffGramsDrynessQuantityProductDate(p,d);
netFatsGramsQuantityProductDate  'Жиры в рецепте' (p,d) = fatsGramsQuantityProductDate(p,d)*coeffGramsDrynessQuantityProductDate(p,d);
netCarbohydratesGramsQuantityProductDate 'Углеводы в рецепте' (p,d) = carbohydratesGramsQuantityProductDate(p,d)*coeffGramsDrynessQuantityProductDate(p,d);
netEnergyGramsQuantityProductDate 'Энергетическая ценность в рецепте' (p,d) = energyGramsQuantityProductDate(p,d)*coeffGramsDrynessQuantityProductDate(p,d);

calcNetEnergyGramsQuantityProductDate'Энергетическая ценность в рецепте' (p,d) = 
    netProteinsGramsQuantityProductDate(p,d)*4 (+)
    netFatsGramsQuantityProductDate(p,d)*9 (+)
    netCarbohydratesGramsQuantityProductDate(p,d)*4;
    
fillNutritionBOM 'Записать энерг.ценность' (BOM) = ACTION (BOM) {
    FOR BOMProduct(p) == BOM DO {
        proteinsItem(item)<- NUMERIC[8,2](netProteinsGramsQuantityProductDate(p,currentDate())) WHERE item == skuProduct(p);
        fatsItem(item)<- NUMERIC[8,2](netFatsGramsQuantityProductDate(p,currentDate())) WHERE item == skuProduct(p);     
        carbohydratesItem(item)<- NUMERIC[8,2](netCarbohydratesGramsQuantityProductDate(p,currentDate())) WHERE item == skuProduct(p); 
        energyItem(item)<- NUMERIC[8,2](calcNetEnergyGramsQuantityProductDate(p,currentDate())) WHERE item == skuProduct(p); 
        percentHumidityItem(item) <- gramsQuantityComponentsProduct(p) WHERE item == skuProduct(p); 
    }
} TOOLBAR;    

FORM nutritionalValue 'Пищевая ценность'
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES (dt) date = OBJVALUE

    OBJECTS b=BOM FIXED PANEL 
    PROPERTIES(b)  READONLY productsBOM, nameBOM, numberBOM, seriesBOM, componentsBOM, overNettoNetWeightProductBOM, overNettoNetWeightComponentBOM, pricePercentBOM, noteBOM

    OBJECTS p = Product
    PROPERTIES(p) READONLY nameSkuProduct, shortNameUOMProduct, percentHumidityProduct, overNettoNetWeightProduct, gramsQuantityComponentsProduct
    PROPERTIES(p,dt) READONLY recBruttoQuantityProductDate, recBruttoDrynessQuantityProductDate
    PROPERTIES(p) drynessQuantityComponentsProduct, calcPercentHumidityProduct
    FILTERS       BOMProduct(p) == b    
    
    PROPERTIES(p,dt) READONLY netGramsQuantityProductDate, netGramsDrynessQuantityProductDate,
                     proteinsGramsQuantityProductDate, fatsGramsQuantityProductDate, 
                     carbohydratesGramsQuantityProductDate, energyGramsQuantityProductDate,
                     netProteinsGramsQuantityProductDate, netFatsGramsQuantityProductDate,
                     netCarbohydratesGramsQuantityProductDate, netEnergyGramsQuantityProductDate,
                     calcNetEnergyGramsQuantityProductDate, coeffGramsDrynessQuantityProductDate                              

    OBJECTS sk = Sku
    PROPERTIES(sk) READONLY nameSku, percentDrynessItem, proteinsItem, fatsItem, carbohydratesItem, energyItem
                                                          
    PROPERTIES(p,sk,dt)  READONLY netGramsQuantityProductSkuDate, netGramsDrynessQuantityProductSkuDate,
                        proteinsGramsQuantityProductSkuDate, fatsGramsQuantityProductSkuDate, 
                        carbohydratesGramsQuantityProductSkuDate, energyGramsQuantityProductSkuDate 
    FILTERS recBruttoQuantityBOMSkuDate(b,sk,dt)                                      
;
printNutritionalValue 'Расчет пищевой ценности'  = ACTION (BOM) NEWSESSION {
    FORM dialogDate MODAL;
        IF formResult() == FormResult.ok THEN {
            FORM nutritionalValue OBJECTS dt = chosenDate('d'), b = BOM PRINT;
        }
    apply();        
} IMAGE 'print.png' IN print;



// Расширяем формы
EXTEND FORM BOM
    PROPERTIES(b) showHumidityBOM
    PROPERTIES(p) SHOWIF showHumidityBOM(b) BEFORE deletep percentHumidityProduct ON CHANGE changePercentHumidityProduct(p),
                  percentDrynessProduct ON CHANGE changePercentDrynessProduct(p)
    PROPERTIES(c) BACKGROUND  backgroundComponent(c) SHOWIF showHumidityBOM(b) BEFORE deletec percentHumidityComponent ON CHANGE  changePercentHumidityComponent(c),
                   percentDrynessComponent ON CHANGE changePercentDrynessComponent(c)
                   
    PROPERTIES(b) fillNutritionBOM TODRAW p              
;

DESIGN BOM {
    kitchen {
        ADD PROPERTY(showHumidityBOM(b));        
    }
}
EXTEND FORM BOMs
    PROPERTIES(b) READONLY BACKGROUND backgroundBOM(b) showHumidityBOM
    PROPERTIES(p) SHOWIF showHumidityBOM(b) READONLY percentHumidityProduct
    PROPERTIES(c) BACKGROUND  backgroundComponent(c) SHOWIF showHumidityBOM(b) READONLY percentHumidityComponent
    PROPERTIES(b) FORCE  PANEL printProductionRecipe, printNutritionalValue
    PROPERTIES(p1) FORCE GRID percentHumidityItem, percentDrynessItem
    PROPERTIES(c2) FORCE GRID percentHumidityItem, percentDrynessItem
    
;
EXTEND FORM BOMsDialog
    PROPERTIES(b) READONLY BACKGROUND backgroundBOM(b) showHumidityBOM
    PROPERTIES(p) SHOWIF showHumidityBOM(b) READONLY percentHumidityProduct
    PROPERTIES(c) BACKGROUND  backgroundComponent(c) SHOWIF showHumidityBOM(b) READONLY percentHumidityComponent    
;

