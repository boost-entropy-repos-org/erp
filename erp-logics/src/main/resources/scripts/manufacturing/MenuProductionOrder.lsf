MODULE  MenuProductionOrder;

REQUIRE Menu,
        ProductionOrder,
        BOMNutrition;

// -- Заполнение на основе производственных заказов ---- //

FORM menuOrders 'Производственные заказы'

    OBJECTS o = Order
    PROPERTIES(o) READONLY isPosted, number, series, date, time,
                  nameComponentsStock, nameProductsStock, fromDate, toDate, quantityProductDetail,
                  sumProductDetail, 
                  nameCalcPriceListType, namePriceListType, note
    FILTERS isPosted(o)

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) READONLY index, nameSku, nameProduct, shortNameUOM, quantity,
                   price, sum
    FILTERS order(pd)==o
;

DESIGN menuOrders {
    main {
        preferredSize = (1024, 768);
        NEW documentContainer BEFORE functions.box {
            fill = 1;
            type = CONTAINERV;
            MOVE o.box;
            MOVE pd.box {
                caption = 'Изделия';
            }
        }
    }
}

fillOrder 'Заполнить на основе производственного заказа'(UserMenu userMenu) =  ACTION {
    SHOW menuOrders ;
    IF formResult() == FormResult.ok THEN {
        LOCAL productionOrder = Order();
        ASSIGN productionOrder() <- chosenObject('o');
        ASSIGN note(userMenu) <- 'Основание: ' + description(productionOrder());
        FOR order(ProductDetail productDetail) == productionOrder() NEW d = UserMenuDetail DO {
            ASSIGN userMenu(d) <- userMenu;
            ASSIGN price(d) <- price(productDetail);
            ASSIGN sku(d) <- sku(productDetail);
            ASSIGN productYield(d) <- productYield(product(productDetail));
            ASSIGN composition(d) <- composition(product(productDetail));
        }
    }
}

EXTEND FORM userMenu
    PROPERTIES(m) fillOrder
;
DESIGN userMenu {
    headerRow1 {
        NEW row2 BEFORE m.documentPrm {
            caption = 'Производственный заказ';
            type = CONTAINERH;

            MOVE PROPERTY(fillOrder(m));
        }
    }
}
