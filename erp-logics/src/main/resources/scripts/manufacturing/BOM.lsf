MODULE  BOM;

REQUIRE EmployeeStock,
        Numerator,
        Barcode,
        Document,
        Sku,
        Utils,
        Time,
        Manufacturing,
        Integration;



dataComponentSkuGroup 'Сырье' = DATA BOOLEAN (SkuGroup);
countDataComponentSkuGroup () = GROUP SUM 1 IF dataComponentSkuGroup(g);

levelParentComponentSkuGroup (skuGroup) = GROUP MIN levelSkuGroupSkuGroup(skuGroup, parent) IF dataComponentSkuGroup(parent)
                                                              BY skuGroup PERSISTENT;    
nearestParentComponentSkuGroup (skuGroup) = skuGroupSkuGroupLevel(skuGroup, levelParentComponentSkuGroup(skuGroup));
nearestComponentSkuGroup (skuGroup) = dataComponentSkuGroup( nearestParentComponentSkuGroup (skuGroup));
componentSkuGroup 'Сырье' (skuGroup) =
    OVERRIDE nearestComponentSkuGroup (skuGroup), 
             dataComponentSkuGroup(skuGroup) PERSISTENT;    
             
//--

dataProductSkuGroup 'Готовые изделия' = DATA BOOLEAN (SkuGroup);
countDataProductSkuGroup () = GROUP SUM 1 IF dataProductSkuGroup(g);

levelParentProductSkuGroup (skuGroup) = GROUP MIN levelSkuGroupSkuGroup(skuGroup, parent) IF dataProductSkuGroup(parent)
                                                              BY skuGroup PERSISTENT;    
nearestParentProductSkuGroup (skuGroup) = skuGroupSkuGroupLevel(skuGroup, levelParentProductSkuGroup(skuGroup));
nearestProductSkuGroup (skuGroup) = dataProductSkuGroup( nearestParentProductSkuGroup (skuGroup));
productSkuGroup 'Готовые изделия' (skuGroup) =
    OVERRIDE nearestProductSkuGroup (skuGroup), 
             dataProductSkuGroup(skuGroup) PERSISTENT; 


EXTEND FORM options 
    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES(sk) READONLY nameSkuGroup
    PROPERTIES(sk) componentSkuGroup, productSkuGroup
    ORDER BY nameSkuGroup(sk)
    FILTERGROUP inactive FILTER 'Активные' 'F5' activeSkuGroup(sk) DEFAULT    
;
EXTEND DESIGN options {
    pane {
        NEW manufacturing {
            caption = 'Производство';
            ADD skuTree.tree.box;
        }
    }
}

isComponentGroupSku 'Фильтр сырье (группа)' (sku) = componentSkuGroup(skuGroupSku(sku)) OR (sku IS Sku AND NOT countDataComponentSkuGroup ());
isProductGroupSku 'Фильтр готовые изделия (группа)' (sku) = productSkuGroup(skuGroupSku(sku))  OR (sku IS Sku AND NOT countDataProductSkuGroup ());

// ---------------- Материалы ------------------- //
CLASS ABSTRACT Material 'Материал';
TABLE material(Material);

idMaterial 'Внешний код' = ABSTRACT VARSTRING[100] (Material) PERSISTENT INDEXED MINCHARWIDTH 10 PREFCHARWIDTH 15;

nameMaterial 'Наименование' (material) = ABSTRACT VARISTRING[255] (Material) PERSISTENT MINCHARWIDTH 40 PREFCHARWIDTH 80;

UOMMaterial (material) = ABSTRACT UOM (Material) PERSISTENT;
shortNameUOMMaterial 'Ед. изм.' (material) = shortNameUOM(UOMMaterial(material)) IN base;

editMaterial 'Редактировать' = ABSTRACT ACTION LIST (Material) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;
addMaterial 'Добавить' = ABSTRACT ACTION LIST () IMAGE 'add.png' EDITKEY 'INSERT' HIDE TOOLBAR;

copyMaterial 'Копировать' = ABSTRACT ACTION LIST (Material) EDITKEY 'F5' TOOLBAR;

skuMaterial (material) = ABSTRACT Sku (Material) PERSISTENT;

skuGroupMaterial (material) = skuGroupSku(skuMaterial(material)) PERSISTENT;
isParentSkuGroupMaterial (skuGroup, material) = isParentSkuGroupSkuGroup(skuGroupMaterial(material), skuGroup);

FORM materials 'Материалы'

    TREE skuTree sg = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY skuGroupName = nameSkuGroup(sg)
    FILTERGROUP inactive FILTER 'Активные' 'F5' activeSkuGroup(sg) DEFAULT

    OBJECTS m = Material
    PROPERTIES(m) READONLY idMaterial SHOWIF showIDs(), nameMaterial, shortNameUOMMaterial, objectClassName    
    PROPERTIES() addMaterial TODRAW m
    PROPERTIES(m) editMaterial, copyMaterial
    FILTERS isParentSkuGroupMaterial(sg, m)
    ORDER BY nameMaterial(m)

    DIALOG Material OBJECT m
;

DESIGN materials FROM DEFAULT {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            ADD skuTree.tree.box {
                caption = 'Группы Материалов';
            }

            ADD m.box {
                fill = 2;
                m.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(copyMaterial(m)) { focusable = TRUE; }
            }
        }

        ADD functions.box;
    }
}


// --------------- Товары ----------------- //
EXTEND CLASS Sku : Material;

nameMaterial(material) += nameSku(material);
UOMMaterial(material) += UOMSku(material);

editMaterial(sku) += editSku(sku);
addMaterial () += addSku();
copyMaterial(sku) += copySku(sku);

skuMaterial(material) += material AS Sku;

idMaterial(sku) += idSku(sku);

// -----------  Технологии -------------- //
CLASS Technology 'Технология';
TABLE technology (Technology);

nameTechnology 'Наименование' = DATA VARISTRING[50](Technology);

TABLE technologyMaterialDate (Technology, Material, DATE);
@defineHistorizable(wastage, '% потерь', NUMERIC[8,3], technology, nameTechnology, material, nameMaterial, base);

FORM technology 'Технология'

    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES valDt = OBJVALUE(dt) BACKGROUND dateDiffersCurrent(dt)

    OBJECTS t=Technology FIXED PANEL
    PROPERTIES(t) nameTechnology

    TREE skuTree sg = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY skuGroupName = nameSkuGroup(sg)
    FILTERGROUP inactive FILTER 'Активные' 'F5' activeSkuGroup(sg) DEFAULT

    OBJECTS m = Material
    PROPERTIES(m) READONLY nameMaterial, shortNameUOMMaterial
    PROPERTIES overWastageTechnologyMaterialDate(t,m,dt)
    
    FILTERS isComponentGroupSku(m)

    FILTERS isParentSkuGroupMaterial(sg, m)
    ORDER BY nameMaterial(m)

    FILTERGROUP filters
        FILTER 'С % потерь' 'F9' wastageTechnologyMaterialDate(t,m,dt)

    OBJECTS d=DATE
    PROPERTIES  READONLY OBJVALUE(d), dataWastageTechnologyMaterialDate(t,m,d)
    FILTERS dataWastageTechnologyMaterialDate(t,m,d)

    EDIT Technology OBJECT t
;

DESIGN technology FROM DEFAULT{
    main {
        preferredSize = (1024, 768);
        NEW specification.box BEFORE functions.box {
            fill = 1;
            type = SPLITH;
            ADD skuTree.tree.box {caption = 'Группа материалов'; fill = 1; }
            NEW row {
                fill = 1;
                type = SPLITV;
                ADD m.box {
                    fill = 3;
                    caption = 'Материал';
                }
                ADD d.box {
                    fill = 1;
                    caption = 'История изменений';
                }
            }
        }
        NEW headerBox BEFORE specification.box {
            type = CONTAINERH;
            ADD t.box { type = CONTAINERH;}
            ADD dt.box {type = CONTAINERH;}
        }
    }
}

FORM yearFromTo 'Год'

    OBJECTS y = INTEGER FIXED PANEL
    PROPERTIES valY = OBJVALUE(y)
;

DESIGN yearFromTo FROM DEFAULT{
    main {
        NEW year{
            ADD PROPERTY (valY) { caption = 'Укажите на какой год скопировать значения (4 цифры)'; panelLabelAbove = TRUE; font = 'bold 72'; minimumCharWidth = 4; preferredCharWidth = 4; maximumCharWidth = 4; }
        }
        ADD functions.box;
    }
}


fillWastageTechnology 'Заполнить технологии на другой год' = ACTION (technology) {

    FORM yearFromTo MODAL;
    IF formResult() == FormResult.ok THEN {

        LOCAL newYear = INTEGER();
        ASSIGN newYear() <- chosenInteger('y');

        FOR dataWastageTechnologyMaterialDate(technology, material, dateFrom) DO {

            IF 1 == 2 THEN
                BREAK;

            IF extractYear(dateFrom) == (newYear() - 1) THEN {
                ASSIGN dataWastageTechnologyMaterialDate(technology, material, dateTo) <- dataWastageTechnologyMaterialDate(technology, material, dateFrom) WHERE dateTo == sumDateYear(dateFrom);
            }

        }
        EXEC apply();
    }
} TOOLBAR;

FORM technologies 'Технологии'

    OBJECTS t=Technology
    PROPERTIES(t)  READONLY nameTechnology

    PROPERTIES (t) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    PROPERTIES (t) fillWastageTechnology

    OBJECTS m=Material
    PROPERTIES     READONLY nameMaterial(m), shortNameUOMMaterial(m), wastageTechnologyMaterial(t,m)
    ORDER BY nameMaterial(m)

    FILTERS        wastageTechnologyMaterial(t,m)

    DIALOG Technology OBJECT t
;

DESIGN technologies FROM DEFAULT{
    main {
        ADD t.box;
        ADD m.box { 
            caption = 'Материалы с % потерь на текущую дату';
            m.grid { defaultComponent = TRUE; }
        }
        ADD functions.box;
    }
}

// ---------------------- BOM'ы ----------------------

CLASS BOM 'Спецификация';
TABLE BOM (BOM);

@defineExternalizable(BOM, VARSTRING[100]);

@defineDocumentHeaderTimePrefix(BOM, , ' документа');
@deriveDocumentHeaderTimePrefix(BOM, );

nameBOM 'Наименование' = DATA VARISTRING[100](BOM);

@defineDocumentHeaderCreated(BOM);
@defineDocumentHeaderNote(BOM);

@defineNumbered(BOM);
@defineNumeratedDefault(BOM, 'Спецификации', 'СП');
  
descriptionBOM 'Название спецификации' (BOM) = VARSTRING[200](CONCAT ' ', 'Спецификация / '+nameBOM(BOM), 
                                                                          '№'+seriesNumberBOM(BOM)) MINCHARWIDTH 30 PREFCHARWIDTH 50; 
    

fromDateBOM 'Дата с' = DATA DATE (BOM) IN documentPrm;
toDateBOM 'Дата по' = DATA DATE (BOM) IN documentPrm;

// ------------- Изделия ----------- //
CLASS Product 'Изделие' : Material;
TABLE product (Product);

@defineExternalizable(product, VARSTRING[100], ext);

EXTEND FORM materials

    FILTERGROUP filters
        FILTER 'Изделие' 'F11' m IS Product
        FILTER 'Sku' 'F10' m IS Sku
;

EXTEND FORM technology

    FILTERGROUP filters2
        FILTER 'Изделие' 'F11' m IS Product
        FILTER 'Sku' 'F10' m IS Sku
;

skuProduct = DATA Sku (Product);
nameSkuProduct 'SKU' (product) = nameSku(skuProduct(product)) IN recognize;
idBarcodeSkuProduct 'Штрихкод' (product)= idBarcodeSku(skuProduct(product));

idProduct 'Код изделия' (product) = idSku(skuProduct(product))IN recognize MINCHARWIDTH 10 PREFCHARWIDTH 15;
idMaterial(p) += idProduct(p);

editSkuProduct 'Редактировать SKU' (p) = editSku(skuProduct(p));

UOMProduct = DATA UOM (Product);
shortNameUOMProduct 'Ед.изм.' (product) = shortNameUOM(UOMProduct(product)) IN recognize;
UOMProduct(product) <- UOMSku(skuProduct(product)) WHEN CHANGED (skuProduct(product));


@defineDocumentRelation (BOM, Product, ' (изделие)');
@defineDocumentDetailTimePrefix(BOM, Product, , ' документа');

descriptionProduct 'Название документа' (product) = descriptionBOM(BOMProduct(product));

@defineDocumentDetailIndex (BOM, Product);
@defineDocumentDetailActionsCustom (BOM, Product);

productsBOM 'Изделия' (BOM) = GROUP CONCAT VARSTRING[255](nameSkuProduct(p)), ', '
                                       BY BOMProduct(p)
                                       ORDER indexProduct(p) MINCHARWIDTH 30 PREFCHARWIDTH 50 PERSISTENT;
                                       
fullNameBOM 'Полное название' (BOM) = VARISTRING[255] (CONCAT '/',
                                                              productsBOM(BOM),                                                                  
                                                              nameBOM(BOM));
                                       
@defineDocumentDetailQuantityCustomPrefix (product, , );

@defineDocumentHeaderQuantityCustomPrefix (BOM, product, , ' (изделие)');

pricePercentProduct 'Удельный вес цены,%' = DATA NUMERIC[8,3] (Product);
pricePercentProduct(product) <- 100.000 WHEN SET (product IS Product);
priceCoeffProduct (product) = pricePercentProduct(product) / 100 PERSISTENT;

pricePercentBOM 'Удельный вес цен, %' = GROUP SUM pricePercentProduct(product) BY BOMProduct(product) PERSISTENT IN documentSum;

nameMaterial(material) += VARISTRING[255] (CONCAT '/',
                                              nameSkuProduct(material),                                                                  
                                              nameBOM(BOMProduct(material)));

UOMMaterial(material) += UOMSku(skuProduct(material));
skuMaterial (material) += skuProduct(material);

FORM products 'Изделия'
    OBJECTS p=Product
    PROPERTIES(p) idProduct SHOWIF showIDs()
    PROPERTIES(p) READONLY descriptionProduct, indexProduct, nameSkuProduct, shortNameUOMProduct, quantityProduct
//    PROPERTIES (p) ADDSESSIONFORM, EDITSESSIONFORM, DELETESESSION

    DIALOG Product OBJECT p
;


// ------------- Компоненты ----------- //
CLASS Component 'Компонент';
TABLE component (Component);

//nameComponent 'Наименование' = DATA VARISTRING[100](Component);

@defineExternalizable(component, VARSTRING[100], ext);

@defineDocumentRelation (BOM, Component, ' (компонент)');
@defineDocumentDetailTimePrefix(BOM, Component, , ' документа');

descriptionComponent 'Спецификация' (component)= descriptionBOM(BOMComponent(component));
productsBOMComponent 'Название' = productsBOM(BOMComponent(component));

@defineDocumentDetailIndex (BOM, Component);
@defineDocumentDetailActionsCustom (BOM, Component);

materialComponent = DATA Material (Component);
nameMaterialComponent 'Материал' (component) = nameMaterial(materialComponent(component));
idBarcodeSkuComponent 'Штрихкод' (component)= idBarcodeSku(materialComponent(component));
idComponent 'Код компонента' (component)= idMaterial(materialComponent(component));


componentsBOM 'Компоненты' (BOM) = GROUP CONCAT VARSTRING[2550](nameMaterialComponent(component)), ', '
                                       BY BOMComponent(component)
                                       ORDER indexComponent(component) MINCHARWIDTH 20 PREFCHARWIDTH 50 PERSISTENT;
                                     
nameComponent 'Компонент' (component) = VARSTRING[255](CONCAT '/', nameBOM(BOMComponent(component)), 
                                                     nameMaterialComponent(component)) PERSISTENT;
                                      

UOMComponent = DATA UOM (Component);
shortNameUOMComponent 'Ед. изм.' (component) = shortNameUOM(UOMComponent(component));
UOMComponent(component) <- UOMMaterial(materialComponent(component)) WHEN CHANGED (materialComponent(component));

// Кол-во нетто
@defineDocumentDetailQuantityCustomPrefix (component, netto, ' (нетто)');
@defineDocumentHeaderQuantityCustomPrefix (BOM, component, netto, ' (нетто компонент)');

// Технология
TABLE  technologyComponent (Technology, Component);

inTechnologyComponent 'Вкл.' = DATA BOOLEAN (Technology, Component);
countTechnologiesComponent = GROUP SUM 1 IF inTechnologyComponent(technology, component) BY component;

technologiesInvoice 'Технологии' (component) = GROUP CONCAT VARSTRING[255](nameTechnology(technology)) IF inTechnologyComponent(technology, component) , ', '
                                         BY component
                                         ORDER technology
                                         MINCHARWIDTH 30 PREFCHARWIDTH 50;
                                         
inTechnologyMaterial 'Связь' (technology, material) = GROUP SUM 1 IF dataWastageTechnologyMaterialDate(technology, material, date) BY technology, material;

CONSTRAINT inTechnologyComponent(technology, component) AND NOT inTechnologyMaterial(technology, materialComponent(component))
    MESSAGE 'Для компонента выбрана технология, у которой нет значения % потерь для SKU';

CONSTRAINT countTechnologiesComponent(component) > 2 MESSAGE 'Для компонента выбраны более двух технологий';

wastageTechnologyComponent '% потерь' (t,c) = wastageTechnologyMaterial(t,materialComponent(c));     
                                         
FORM componentTechnologies 'Технологии'

    OBJECTS c=Component FIXED  PANEL 
//    PROPERTIES(c)  READONLY nameComponent

    OBJECTS t=Technology
    PROPERTIES(t)  READONLY nameTechnology
    PROPERTIES(t,c) inTechnologyComponent, wastageTechnologyComponent

    FILTERS        inTechnologyMaterial(t, materialComponent(c))
                   //,materialComponent(c) == m    
;  
DESIGN componentTechnologies FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
    }
}                                                                                                                                                                                                                                    

// % Потерь
wastageComponent '% потерь'= DATA NUMERIC[8,3] (Component);
backgroundWastageComponent 'Цвет' (component) = RGB(229,229,229) IF countTechnologiesComponent(component);


// todo: пока считаем, что более двух технологий для компонента не будет включено
minTechnologyComponent (c) = GROUP MIN t IF inTechnologyComponent(t,c) BY c;
maxTechnologyComponent (c) = GROUP MAX t IF inTechnologyComponent(t,c) BY c;
equalsMaxMinTechnologyComponent (c) = minTechnologyComponent (c) == maxTechnologyComponent (c);

calcMinMaxWastageTechnologyMaterialDate (c,date)= [= (1-((100-X)*(100-Y)/10000))*100](
    (OVERRIDE 0 IF c IS Component, wastageTechnologyMaterialDate(minTechnologyComponent(c),materialComponent(c), date)),
     (OVERRIDE 0 IF c IS Component, wastageTechnologyMaterialDate(maxTechnologyComponent(c),materialComponent(c), date)));
    
minMaxWastageTechnologyMaterialDate (c, date)= IF equalsMaxMinTechnologyComponent (c) THEN wastageTechnologyMaterialDate(minTechnologyComponent(c),materialComponent(c), date)
    ELSE calcMinMaxWastageTechnologyMaterialDate(c,date);

//wastageComponentDate '% потерь' (component, date) = IF countTechnologiesComponent(component) THEN minMaxWastageTechnologyMaterialDate(component, date)
//                                                    ELSE (OVERRIDE 0 IF component IS Component AND date IS DATE, wastageComponent(component) IF date IS DATE);
                                                    
wastageTechnologiesComponentDate '% потерь (технология)' (component, date) = IF countTechnologiesComponent(component) THEN minMaxWastageTechnologyMaterialDate(component, date)
                                                    ELSE (0 IF component IS Component AND date IS DATE);   
wastageTechnologiesComponent '% потерь (технология)' (component) = wastageTechnologiesComponentDate(component, currentDate());                                                                                                     
                                                                                                     
wastageComponentDate '% потерь' (component, date) = [= (1-((100-X)*(100-Y)/10000))*100](
    wastageTechnologiesComponentDate(component, date),
    (OVERRIDE 0 IF component IS Component,  wastageComponent(component)));
//wastageTechnologiesComponentDate(component, date) (+) wastageComponent(component);                                                 

overCurWastageComponent '% потерь' (component) = wastageComponentDate(component, currentDate());

// Кол-во брутто

@defineDocumentDetailQuantityCustomPrefix (component, brutto, ' (брутто)');
@defineDocumentHeaderQuantityCustomPrefix (BOM, component, brutto, ' (брутто компонент)'); 
            
selectTechnologiesComponent = ACTION (component) {
    FORM componentTechnologies OBJECTS c = component MODAL;
}  
       
changeNettoQuantityComponent = ACTION (component) {
    REQUEST NUMERIC[14,3] INPUT;
    IF requestedNumeric() THEN {
        nettoQuantityComponent(component) <- requestedNumeric();
        bruttoQuantityComponent(component) <- NUMERIC[14,3](nettoQuantityComponent(component)/(1 - (OVERRIDE 0 IF component IS Component,wastageComponent(component)/100))); 
    } ELSE {
        nettoQuantityComponent(component) <- NULL;
    }                
}   
                                                                                                                                                                                                                                                                                                                                                      
changeWastageComponent = ACTION (component) {
    REQUEST NUMERIC[8,3] INPUT;
    IF requestedNumeric() THEN {
        wastageComponent(component) <- requestedNumeric();   
        bruttoQuantityComponent(component) <- NUMERIC[14,3](nettoQuantityComponent(component)/(1 - (OVERRIDE 0 IF component IS Component,wastageComponent(component)/100))); 
    } ELSE {
        wastageComponent(component) <- NULL;
        bruttoQuantityComponent(component) <- NUMERIC[14,3](nettoQuantityComponent(component)/(1 - (OVERRIDE 0 IF component IS Component,wastageComponent(component)/100))); 
    }
}                                                                                                                                                                                                                                                                                                                                                      
    
//calcWastageComponentDate (component, date) = NUMERIC[9,3]([= 100-(100*(100-X)/(100-Y))](
//    ((1-(nettoQuantityComponent(component)/(bruttoQuantityComponent(component) IF bruttoQuantityComponent(component)!=0)))*100),
//    wastageTechnologiesComponentDate(component, date)));       
                                                                                                                                                                                                                                                                                                                                                      
calcWastageComponentDate (component, date) = NUMERIC[9,3]([= 100-(X/Y/(100-Z))*10000](
    nettoQuantityComponent(component),
    (bruttoQuantityComponent(component) IF bruttoQuantityComponent(component)!=0),
    wastageTechnologiesComponentDate(component, date)));                                                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                                                                         
changeBruttoQuantityComponent = ACTION (component) {
    REQUEST NUMERIC[14,3] INPUT;
    IF requestedNumeric() THEN {    
        bruttoQuantityComponent(component) <- requestedNumeric();
        wastageComponent(component) <- NUMERIC[8,3]((1-(nettoQuantityComponent(component)/(bruttoQuantityComponent(component) IF bruttoQuantityComponent(component)!=0)))*100); 
               
    } ELSE {
        bruttoQuantityComponent(component) <- NULL;
        wastageComponent(component) <- NUMERIC[8,3]((1-(nettoQuantityComponent(component)/(bruttoQuantityComponent(component) IF bruttoQuantityComponent(component)!=0)))*100);          
    }                
}
backgroundBruttoQuantityComponent 'Цвет' (component) = RGB(229,229,229) IF countTechnologiesComponent(component);
backgroundBruttoQuantityBOM 'Цвет' (b) = RGB(229,229,229) IF b IS BOM;

bruttoQuantityComponentDate 'Кол-во (брутто) с учетом технологий' (component, date) = NUMERIC[14,3](bruttoQuantityComponent(component)/(1 - (wastageTechnologiesComponentDate(component, date)/100)));
                                                                                
overCurBruttoQuantityComponent 'Кол-во (брутто) с уч. тех-ий' (component) = bruttoQuantityComponentDate(component, currentDate());

FORM components 'Компоненты'
    OBJECTS c=Component
    PROPERTIES(c) READONLY descriptionComponent, idComponent SHOWIF showIDs(), nameMaterialComponent, shortNameUOMComponent, nettoQuantityComponent
//    PROPERTIES (c) ADDSESSIONFORM, EDITSESSIONFORM, DELETESESSION

    DIALOG Component OBJECT c
;

CONSTRAINT materialComponent(c) IS Sku AND NOT isComponentGroupSku(materialComponent(c)) CHECKED  BY materialComponent
    MESSAGE 'В качестве компонента выбран товар, который не входит в группу: Сырье';
CONSTRAINT skuProduct(p) AND NOT isProductGroupSku(skuProduct(p)) CHECKED  BY skuProduct
    MESSAGE 'В качестве изделия выбран товар, который не входит в группу: Готовые изделия';      
    
overSkuComponent (c) = IF materialComponent(c) IS Product THEN skuProduct(materialComponent(c)) ELSE materialComponent(c);
    
overNetWeightComponent = OVERRIDE netWeightSku(overSkuComponent(c)); 
overNettoNetWeightComponent 'Вес (нетто)' (c) = nettoQuantityComponent(c) * (OVERRIDE 1.0 IF c IS Component, overNetWeightComponent(c));
overBruttoNetWeightComponent 'Вес (брутто)' (c) = bruttoQuantityComponent(c) * (OVERRIDE 1.0 IF c IS Component, overNetWeightComponent(c));

overNettoNetWeightProduct 'Вес (нетто)' (p) = quantityProduct(p) * (OVERRIDE 1.0 IF p IS Product, netWeightSku(skuProduct(p)));

overNettoNetWeightProductBOM 'Вес нетто изд. (всего)' (BOM) = GROUP SUM overNettoNetWeightProduct(idetail) BY BOMProduct(idetail) IN documentSum PERSISTENT;
overNettoNetWeightComponentBOM 'Вес нетто ком. (всего)' (BOM) = GROUP SUM overNettoNetWeightComponent(idetail) BY BOMComponent(idetail) IN documentSum PERSISTENT;            
overBruttoNetWeightyComponentBOM 'Вес брутто ком. (всего)' (c)= GROUP SUM overBruttoNetWeightComponent(c) BY BOMComponent(c) IN documentSum PERSISTENT;


overCurBruttoNetWeightComponent 'Вес (брутто) с уч. тех-ий' (c) = overCurBruttoQuantityComponent(c) * (OVERRIDE 1.0 IF c IS Component, overNetWeightComponent(c));
overCurBruttoNetWeightyComponentBOM 'Вес брутто комп. (всего) с уч. тех-ий' (BOM)= GROUP SUM overCurBruttoNetWeightComponent(c) BY BOMComponent(c) IN documentSum PERSISTENT;      
        
CONSTRAINT overNettoNetWeightProductBOM(b) AND overNettoNetWeightComponentBOM(b) AND NOT (overNettoNetWeightProductBOM(b) == overNettoNetWeightComponentBOM(b))
    MESSAGE 'Вес нетто изделия не равен весу нетто компонентов в спецификации';   
                           
//------------------------------- Формы -------------------------------------//
backgroundComponent 'Цвет' (component) = RGB(255,255,229) IF materialComponent(component) IS Product;

editMaterialComponent 'Редактировать компонент' (d) = editMaterial(materialComponent(d));
FORM BOM 'Спецификация'

    OBJECTS b=BOM FIXED PANEL

    PROPERTIES(b) nameBOM, nameNumeratorBOM, numberBOM, seriesBOM, dateBOM, timeBOM, noteBOM, fromDateBOM, toDateBOM 
    PROPERTIES(b) READONLY overNettoNetWeightProductBOM, overNettoNetWeightComponentBOM, overBruttoNetWeightyComponentBOM, 
                  overCurBruttoNetWeightyComponentBOM BACKGROUND backgroundBruttoQuantityBOM(b), pricePercentBOM
    OBJECTS p = Product
    PROPERTIES(p) indexProduct 
    PROPERTIES(p) ON EDIT editSkuProduct(p) idBarcodeSkuProduct, idProduct SHOWIF showIDs(), nameSkuProduct, shortNameUOMProduct     
    
    PROPERTIES(p) quantityProduct, overNettoNetWeightProduct READONLY,pricePercentProduct

    PROPERTIES(p) ADDOBJ, deletep=DELETESESSION
    PROPERTIES(b) TODRAW p deleteProductBOM
    FILTERS       BOMProduct(p) == b

    OBJECTS c = Component
    PROPERTIES(c) BACKGROUND backgroundComponent(c) indexComponent 
    PROPERTIES(c) BACKGROUND backgroundComponent(c) ON EDIT editMaterialComponent(c) idBarcodeSkuComponent, idComponent SHOWIF showIDs(), nameMaterialComponent, shortNameUOMComponent 
    PROPERTIES(c) BACKGROUND backgroundComponent(c) 
                  nettoQuantityComponent ON CHANGE changeNettoQuantityComponent(c), overNettoNetWeightComponent READONLY,
                  wastageComponent ON CHANGE changeWastageComponent(c),
                  bruttoQuantityComponent ON CHANGE changeBruttoQuantityComponent(c), overBruttoNetWeightComponent READONLY,
                  technologiesInvoice ON CHANGE selectTechnologiesComponent(c)   BACKGROUND backgroundBruttoQuantityComponent(c),
                  wastageTechnologiesComponent READONLY BACKGROUND backgroundBruttoQuantityComponent(c),                   
                  overCurBruttoQuantityComponent READONLY BACKGROUND backgroundBruttoQuantityComponent(c),
                  overCurBruttoNetWeightComponent READONLY BACKGROUND backgroundBruttoQuantityComponent(c)

    PROPERTIES(c) ADDOBJ, deletec=DELETESESSION
    PROPERTIES(b) TODRAW c deleteComponentBOM
    FILTERS       BOMComponent(c) == b

    EDIT BOM OBJECT b
;

DESIGN BOM FROM DEFAULT{

    main {
        preferredSize = (1024, 768);
        NEW specification.box BEFORE functions.box{
            type = TABBED;
            fill = 1;
            ADD p.box {
                caption = 'Изделие';
                PROPERTY (idProduct(p)) { caption = 'Код изделия';}
            }
            ADD c.box {caption = 'Компонент';}
        }

        ADD b.box BEFORE specification.box {
            type = CONTAINERH;
            NEW headerRow1 {
                type = CONTAINERV;

                NEW headerRow11 {
                    caption = 'Шапка';
                    type = CONTAINERH;
                    ADD PROPERTY(nameBOM(b)) { preferredCharWidth = 20; }
                    ADD PROPERTY(nameNumeratorBOM(b));
                    ADD PROPERTY(numberBOM(b));
                    ADD PROPERTY(seriesBOM(b));
                    ADD PROPERTY(dateBOM(b));
                    ADD PROPERTY(timeBOM(b));                    
                    
                }
                ADD b.documentPrm {
                    type = CONTAINERH;
                }
                NEW kitchen {
                    caption = 'Кухня';
                    type = CONTAINERH;
                }

            }
            ADD b.documentSum {
                columns = 1;
            }
        }
    }
}
copyBOM 'Копировать' = ACTION (BOM) NEWSESSION {
    FOR ADDOBJ b = BOM DO {

        ASSIGN noteBOM(b) <- noteBOM(BOM);
        FOR BOMProduct(product) == BOM ADDOBJ p=Product DO {
            ASSIGN BOMProduct(p) <- b;
            ASSIGN skuProduct(p) <- skuProduct(product);
            ASSIGN quantityProduct(p) <- quantityProduct(product);
            ASSIGN pricePercentProduct(p) <- pricePercentProduct(product);
        }

        FOR BOMComponent(component) == BOM ADDOBJ c=Component DO {
            ASSIGN BOMComponent(c) <- b;
            ASSIGN materialComponent(c) <- materialComponent(component);
            ASSIGN nettoQuantityComponent(c) <- nettoQuantityComponent(component);
            
            ASSIGN inTechnologyComponent(t,c) <- inTechnologyComponent(t,component) WHERE inTechnologyComponent(t,component);            
            
            ASSIGN bruttoQuantityComponent(c) <- bruttoQuantityComponent(component);
            ASSIGN wastageComponent(c) <- wastageComponent(component);
        }

        FORM BOM OBJECTS b = b MANAGESESSION DOCKEDMODAL;
    }
} TOOLBAR;

editMaterial(p) += [= ACTION EDITFORM BOM](BOMProduct(p));

relationProductsSkuBOM (sku,BOM)= GROUP SUM 1 BY skuProduct(p), BOMProduct(p);
relationComponentsSkuBOM (sku,BOM)= GROUP SUM 1 BY materialComponent(c), BOMComponent(c);

isActiveBOMDate(BOM, date) = (fromDateBOM(BOM) <= (date AS DATE) AND toDateBOM(BOM) >= date) OR
                                         (fromDateBOM(BOM) <= (date AS DATE) AND NOT toDateBOM(BOM)) OR 
                                         (toDateBOM(BOM) >= (date AS DATE) AND NOT fromDateBOM(BOM)) OR 
                                         (BOM IS BOM AND date IS DATE AND NOT fromDateBOM(BOM) AND NOT toDateBOM(BOM));
isActiveBOM(BOM) = isActiveBOMDate(BOM, currentDate());

backgroundBOM 'Цвет' (BOM) = CASE WHEN fromDateBOM(BOM) > currentDate() THEN RGB(224,255,224)
                                  WHEN toDateBOM(BOM) < currentDate() THEN RGB(255,224,224);     

addBOMSku 'Добавить' = ACTION (sku) NEWSESSION {
    FOR ADDOBJ b = BOM DO {
    
        FOR ADDOBJ p = Product DO {   
            BOMProduct(p) <- b;
            skuProduct(p) <- sku;
        } 
        FORM BOM OBJECTS  b = b MANAGESESSION  DOCKEDMODAL;
    }
} TOOLBAR IMAGE 'add.png' EDITKEY 'INSERT';

FORM BOMs 'Спецификации'

    OBJECTS b=BOM

    PROPERTIES(b)  READONLY BACKGROUND backgroundBOM(b) productsBOM, nameBOM, numberBOM, seriesBOM,  dateBOM, timeBOM, fromDateBOM, toDateBOM, componentsBOM,  
                   overNettoNetWeightProductBOM, overNettoNetWeightComponentBOM, overBruttoNetWeightyComponentBOM, pricePercentBOM, noteBOM
    PROPERTIES (b) ADDFORM, EDITFORM, copyBOM, deleteb=DELETE FORCE PANEL TOOLBAR
    PROPERTIES (b) READONLY FORCE PANEL createdNameUserBOM, createdTimeBOM, createdHostnameComputerBOM
    FILTERGROUP inactiveBOM
        FILTER 'Текущие' 'F11' isActiveBOM(b)            
        FILTER 'Активные' 'F10' isActiveBOM(b) OR (fromDateBOM(b) > currentDate()) DEFAULT
        
    OBJECTS p = Product
    PROPERTIES(p) READONLY indexProduct, idBarcodeSkuProduct, idProduct SHOWIF showIDs(), nameSkuProduct, shortNameUOMProduct,
                  quantityProduct, overNettoNetWeightProduct, pricePercentProduct
    FILTERS       BOMProduct(p) == b

    OBJECTS c = Component
    PROPERTIES(c) BACKGROUND  backgroundComponent(c) READONLY indexComponent, idBarcodeSkuComponent, idComponent SHOWIF showIDs(), nameMaterialComponent, 
                  shortNameUOMComponent, nettoQuantityComponent, overNettoNetWeightComponent, wastageComponent, bruttoQuantityComponent, overBruttoNetWeightComponent,
                  technologiesInvoice, wastageTechnologiesComponent, overCurBruttoQuantityComponent, overCurBruttoNetWeightComponent                                                                                                                                                                    
                                                                                   
    FILTERS       BOMComponent(c) == b
    
    OBJECTS p1 = Sku
    PROPERTIES(p1) READONLY idBarcodeSku, idSku SHOWIF showIDs(), nameSku, shortNameUOMSku
    PROPERTIES     TODRAW p1 addSku(), editSku(p1), DELETE(p1) FORCE PANEL TOOLBAR 
    FILTERS        isProductGroupSku(p1)
    
    OBJECTS b1=BOM    
    PROPERTIES(b1) READONLY productsBOM, nameBOM, numberBOM, seriesBOM, componentsBOM, overNettoNetWeightProductBOM, overNettoNetWeightComponentBOM, 
                   overBruttoNetWeightyComponentBOM, pricePercentBOM, noteBOM
    PROPERTIES(b1) EDITFORM
    PROPERTIES     addBOMSku(p1) TODRAW b1
    FILTERS        relationProductsSkuBOM(p1,b1)
          
    OBJECTS c1 = Component
    PROPERTIES(c1) BACKGROUND  backgroundComponent(c) READONLY indexComponent, idBarcodeSkuComponent, idComponent SHOWIF showIDs(), 
                   nameMaterialComponent, shortNameUOMComponent, nettoQuantityComponent, overNettoNetWeightComponent, wastageComponent, bruttoQuantityComponent, overBruttoNetWeightComponent,
                   technologiesInvoice, wastageTechnologiesComponent, overCurBruttoQuantityComponent, overCurBruttoNetWeightComponent 
    FILTERS        BOMComponent(c1) == b1   
    

    OBJECTS c2 = Sku
    PROPERTIES(c2) READONLY idBarcodeSku, idSku SHOWIF showIDs(), nameSku, shortNameUOMSku
    PROPERTIES     TODRAW c2 addSku(), editSku(c2), DELETE(c2) FORCE PANEL TOOLBAR  
    FILTERS        isComponentGroupSku(c2)                   
    OBJECTS b2=BOM    
    PROPERTIES(b2) READONLY productsBOM, nameBOM, numberBOM, seriesBOM, componentsBOM, overNettoNetWeightProductBOM, overNettoNetWeightComponentBOM, 
                   overBruttoNetWeightyComponentBOM, pricePercentBOM, noteBOM
    PROPERTIES(b2) EDITFORM                
    FILTERS        relationComponentsSkuBOM(c2,b2)           
    
    OBJECTS p2 = Product
    PROPERTIES(p2) READONLY indexProduct, idBarcodeSkuProduct, idProduct SHOWIF showIDs(), nameSkuProduct, shortNameUOMProduct, 
                   quantityProduct, overNettoNetWeightProduct, pricePercentProduct
    FILTERS        BOMProduct(p2) == b2    
    
;

DESIGN BOMs FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        PROPERTY (deleteb) {
            askConfirm = TRUE;
        }

        NEW documentContainer BEFORE functions.box {
            type = TABBED ;
            fill = 1;
            NEW bom {
                type = SPLITV;
                caption = 'Спецификация';
                
                ADD b.box;
                NEW documentDetail {
                    type = TABBED;
                    fill = 1;
    
                    ADD p.box {
                        caption = 'Изделие';
                        PROPERTY (idProduct(p)) { caption = 'Код изделия';}
                    }
                    ADD c.box {
                        caption = 'Компонент';
                    }
    
                    NEW documentHistory {
                        caption = 'История';
    
                        ADD b.created;
                    }
                    NEW printTab {
                        caption = 'Печатные формы';
                        NEW printContainer {
                            caption = 'Печать';
                            type = CONTAINERV;
                        }
                    }
                }                
            }                                 
            NEW product {
                fill =1;
                caption = 'Изделие';
                type = SPLITV;
                ADD p1.box;
                NEW product1 {
                    fill = 1;
                    type = SPLITH;
                    ADD b1.box;
                    ADD c1.box;                    
                } 
            }  
            NEW component {
                fill =1;
                caption = 'Компонент';
                type = SPLITV;
                ADD c2.box;
                NEW component1 {
                    fill = 1;
                    type = SPLITH;
                    ADD b2.box;
                    ADD p2.box {
                        PROPERTY (idProduct(p2)) { caption = 'Код изделия';}
                    };                    
                } 
            }                      
        }
        PROPERTY (idSku(p1)) { caption = 'Код изделия';}
        PROPERTY (idSku(c2)) { caption = 'Код компонента';}
    }
}

copyBOMProductSku 'Копировать' = ACTION (sku) {
    copySku(sku);
    IF addedSku() THEN
        SEEK BOMs.p1 addedSku(); 
} EDITKEY 'F5' TOOLBAR;

EXTEND FORM BOMs PROPERTIES(p1) copyBOMProductSku;

copyBOMComponentSku 'Копировать' = ACTION (sku) {
    copySku(sku);
    IF addedSku() THEN
        SEEK BOMs.c2 addedSku(); 
} EDITKEY 'F5' TOOLBAR;

EXTEND FORM BOMs PROPERTIES(c2) copyBOMComponentSku;

FORM BOMsDialog 'Спецификации'

    OBJECTS b=BOM
    PROPERTIES(b)  READONLY BACKGROUND backgroundBOM(b) productsBOM, nameBOM, numberBOM, seriesBOM, dateBOM, timeBOM, fromDateBOM, toDateBOM, componentsBOM, 
                   overNettoNetWeightProductBOM, overNettoNetWeightComponentBOM, overBruttoNetWeightyComponentBOM, pricePercentBOM, noteBOM
    PROPERTIES (b) READONLY FORCE PANEL createdNameUserBOM, createdTimeBOM, createdHostnameComputerBOM
    FILTERGROUP inactiveBOM
        FILTER 'Текущие' 'F11' isActiveBOM(b)            
        FILTER 'Активные' 'F10' isActiveBOM(b) OR (fromDateBOM(b) > currentDate()) DEFAULT
        
    OBJECTS p = Product
    PROPERTIES(p) READONLY indexProduct, idBarcodeSkuProduct, idProduct SHOWIF showIDs(), nameSkuProduct, shortNameUOMProduct, 
                  quantityProduct, overNettoNetWeightProduct, pricePercentProduct
    FILTERS       BOMProduct(p) == b

    OBJECTS c = Component                 
    PROPERTIES(c) BACKGROUND  backgroundComponent(c) READONLY indexComponent, idBarcodeSkuComponent, idComponent SHOWIF showIDs(), 
                   nameMaterialComponent, shortNameUOMComponent, nettoQuantityComponent, overNettoNetWeightComponent, wastageComponent, bruttoQuantityComponent, overBruttoNetWeightComponent,
                   technologiesInvoice, wastageTechnologiesComponent, overCurBruttoQuantityComponent, overCurBruttoNetWeightComponent                                                      
                  
    FILTERS       BOMComponent(c) == b
      
    DIALOG BOM OBJECT b
;

DESIGN BOMsDialog FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        NEW bom BEFORE functions.box {
            fill = 1;
            type = SPLITV;
            
            ADD b.box;
            NEW documentDetail {
                type = TABBED;
                fill = 1;

                ADD p.box {
                    caption = 'Изделие';
                    PROPERTY (idProduct(p)) { caption = 'Код изделия';}
                }
                ADD c.box {
                    caption = 'Компонент';
                }
                NEW documentHistory {
                    caption = 'История';

                    ADD b.created;
                }                
            }                
        }                                                              
    }
}

//-------------------------------- Комиссия для акта контрольной проработки ----------------------------------//
CLASS ManufacturingCommittee 'Комиссия производство' : Committee;

nameManufacturingCommittee 'Наименование' = DATA VARISTRING[150](ManufacturingCommittee);

nameCommittee(committee) += nameManufacturingCommittee(committee) IF committee IS ManufacturingCommittee;

FORM manufacturingCommittee 'Комиссия производство'
    OBJECTS c=ManufacturingCommittee FIXED PANEL
    PROPERTIES(c)      nameManufacturingCommittee

    TREE stockTree sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY sgTreeName = nameStockGroup(sg)

    OBJECTS ts=Stock
    PROPERTIES    READONLY tsTreeName = nameStock(ts)
    PROPERTIES(c, ts) inCommitteeStock FORCE GRID
    FILTERGROUP inactiveStock FILTER 'Активный' 'ctrl F10' activeStock(ts) DEFAULT
    FILTERS isParentStockGroupStock(sg, ts)
    ORDER BY tsTreeName


    OBJECTS e=Employee
    PROPERTIES(e)      READONLY nameContact, firstNameContact, lastNameContact, namePositionEmployee
    PROPERTIES(e)      ADDSESSIONFORM, EDITSESSIONFORM, DELETESESSION

    PROPERTIES(c, e)   inCommitteeEmployee
    FILTERS            countStockEmployeeCommittee (e, c)
    FILTERGROUP filters6
        FILTER 'Показывать только членов комиссии' 'F10' inCommitteeEmployee(c, e)
    FILTERGROUP filters5
        FILTER 'Показывать отделы только для данной комиссии' 'F9' inCommitteeStock(c, ts)

    EDIT ManufacturingCommittee OBJECT c
;

DESIGN manufacturingCommittee FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW caseOne BEFORE e.box {
            type = SPLITH;
            fill = 1;
            caption = 'Отделы, для которых действуют комиссии';

            ADD stockTree.tree.box {
                fill = 1;
            }
            ADD ts.box {
                fill = 2;
            }
        }
    }
}

FORM manufacturingCommitteeDialog 'Комиссии производство'
    OBJECTS a=ManufacturingCommittee
    PROPERTIES(a)      READONLY nameManufacturingCommittee, nameEmployeeCommittee
    PROPERTIES(a)      ADDFORM, EDITFORM

    DIALOG ManufacturingCommittee OBJECT a
;

// ----------------- Акт контрольной проработки-------------------- //

actStudyOfCulinaryCommitteeBOM (BOM) = DATA ManufacturingCommittee(BOM);
nameActStudyOfCulinaryCommitteeBOM 'Комиссия для акта' (BOM) = nameManufacturingCommittee(actStudyOfCulinaryCommitteeBOM (BOM)) IN documentPrm MINCHARWIDTH 20 PREFCHARWIDTH 40;
nameEmployeeCommitteeBOM 'Члены комиссии' (BOM)= nameEmployeeCommittee(actStudyOfCulinaryCommitteeBOM(BOM));

inCommitteeBOMEmployee (BOM, employee) = inCommitteeEmployee(actStudyOfCulinaryCommitteeBOM (BOM), employee);
commonNameEmployeeCommitteeBOM 'Члены комиссии' (BOM) = namePositionEmployeeCommittee(actStudyOfCulinaryCommitteeBOM (BOM));

companyBOM (BOM) = DATA LegalEntity(BOM);
nameCompanyBOM 'Компания' (BOM) = nameLegalEntity(companyBOM(BOM)) IN documentPrm;

actQuantityBOM 'Кол-во для акта' = DATA NUMERIC[14,3] (BOM);
actStockBOM  = DATA Stock (BOM);
nameActStockBOM 'Склад для акта' (b) = nameStock(actStockBOM(b));


CONSTRAINT  companyBOM(BOM) AND NOT isCompanyLegalEntity(companyBOM(BOM)) CHECKED BY companyBOM
    MESSAGE 'Для спецификации выбрана организация, которая не является компанией';
CONSTRAINT  actStockBOM(BOM) AND NOT isCompanyStock(actStockBOM(BOM)) CHECKED BY actStockBOM
    MESSAGE 'Для спецификации выбран склад, который не является складом компании';        
     

EXTEND FORM BOM
    PROPERTIES(b) actQuantityBOM, nameActStockBOM, nameActStudyOfCulinaryCommitteeBOM, nameCompanyBOM

    OBJECTS e=Employee
    PROPERTIES(e) READONLY nameContact, namePositionEmployee
    FILTERS       inCommitteeBOMEmployee(b,e)
;
EXTEND DESIGN BOM {

    specification.box {
        NEW row {
            type = CONTAINERV;
            caption = 'Акт контрольной проработки';
            NEW row1{
                caption = 'Акт';
                type = CONTAINERH;
                ADD PROPERTY(actQuantityBOM(b));
                ADD PROPERTY(nameActStockBOM(b));
                ADD PROPERTY(nameActStudyOfCulinaryCommitteeBOM(b));
            }
            ADD e.box {caption = 'Сотрудники комиссии';}
        }
    }
}

// ----- Рекурсивный расчет потребностей брутто ---------- //

// кол-во требуемых материалов материалов
bruttoQuantityBOMMaterialDate (BOM, material, date) = GROUP SUM bruttoQuantityComponentDate(component, date) BY BOMComponent(component), materialComponent(component), date;
bruttoQuantityBOMSkuDate(BOM, sku, date) = bruttoQuantityBOMMaterialDate(BOM, sku, date) IF sku IS Sku;

bruttoQuantityBOMBOMDate (parent, child, date) = GROUP MAX bruttoQuantityBOMMaterialDate(BOM, material, date) / quantityProduct(material) BY BOM, BOMProduct(material), date;

recBruttoQuantityBOMBOMDateResult (parent, child, date, q) = RECURSION 1.00000000000 IF q == 1.00000000000 AND child == (parent AS BOM) AND date IS DATE STEP 1.00000000000 IF q == $q * bruttoQuantityBOMBOMDate($child, child, date) CYCLES YES;
recBruttoQuantityBOMBOMDate (parent, child, date) = GROUP SUM recBruttoQuantityBOMBOMDateResult(parent, child, date, q) * q BY parent, child, date;
//recBruttoQuantityBOMBOMDate (parent, child, date) = 1.0 IF (parent AS BOM) == (child AS BOM) AND date IS DATE;

recBruttoQuantityBOMSkuDate (BOM, sku, date) = GROUP SUM recBruttoQuantityBOMBOMDate(BOM, childBOM, date) * bruttoQuantityBOMSkuDate(childBOM, sku, date) BY BOM, sku, date; //](BOM, sku);

recBruttoNodeQuantityBOMSkuDate (BOM, sku, date) = GROUP SUM recBruttoQuantityBOMBOMDate(BOM, childBOM, date) * bruttoQuantityBOMMaterialDate(childBOM, material, date) BY BOM, skuMaterial(material), date; //](BOM, sku);

// Расчет цены
priceCoeffBOMBOMDate(parent, child, date) = GROUP SUM bruttoQuantityBOMMaterialDate(BOM, material, date) * priceCoeffProduct(material) / quantityProduct(material) BY BOM, BOMProduct(material), date;

recPriceCoeffBOMBOMDateResult (parent, child, date, q) = RECURSION 1.00000000000 IF q == 1.00000000000 AND child == (parent AS BOM) AND date IS DATE STEP 1.00000000000 IF q == $q * priceCoeffBOMBOMDate($child, child, date) CYCLES YES;
recPriceCoeffBOMBOMDate (parent, child, date) = GROUP SUM recPriceCoeffBOMBOMDateResult(parent, child, date, q) * q BY parent, child, date;
//recPriceCoeffBOMBOMDate (parent, child, date) = 1.0 IF (parent AS BOM) == (child AS BOM) AND date IS DATE;

//
recPriceCoeffBOMSkuDate (BOM, sku, date) = GROUP SUM recPriceCoeffBOMBOMDate(BOM, childBOM, date) * bruttoQuantityBOMMaterialDate(childBOM, material, date) BY BOM, skuMaterial(material), date;
recPricePercentProductSkuDate (product, sku, date) = recPriceCoeffBOMSkuDate (BOMProduct(product), sku, date) * pricePercentProduct(product);

// ----- Рекурсивный расчет потребностей нетто ---------- //

nettoQuantityBOMMaterial (BOM, material) = GROUP SUM nettoQuantityComponent(component) BY BOMComponent(component), materialComponent(component);
nettoQuantityBOMSku(BOM, sku) = nettoQuantityBOMMaterial(BOM, sku) IF sku IS Sku;

nettoQuantityBOMBOM (parent, child) = GROUP MAX nettoQuantityBOMMaterial(BOM, material) / quantityProduct(material) BY BOM, BOMProduct(material);

recNettoQuantityBOMBOMResult (parent, child, q) = RECURSION 1.00000000000 IF q == 1.00000000000 AND child == (parent AS BOM)  STEP 1.00000000000 IF q == $q * nettoQuantityBOMBOM($child, child) CYCLES YES;
recNettoQuantityBOMBOM (parent, child) = GROUP SUM recNettoQuantityBOMBOMResult(parent, child, q) * q BY parent, child;

recNettoQuantityBOMSku (BOM, sku) = GROUP SUM recNettoQuantityBOMBOM(BOM, childBOM) * nettoQuantityBOMSku(childBOM, sku) BY BOM, sku; //](BOM, sku);

recNettoNodeQuantityBOMSku (BOM, sku) = GROUP SUM recNettoQuantityBOMBOM(BOM, childBOM) * nettoQuantityBOMMaterial(childBOM, material) BY BOM, skuMaterial(material); //](BOM, sku);

//recNettoNodeQuantityBOMSku (BOM, sku) =  DATA NUMERIC[14,3] (BOM, Sku);   // пока сделал так, потому что очень тормозит.

NAVIGATOR {
    manufacturingMasterData {
        ADD BOMs;
        ADD technologies;
        ADD manufacturingCommitteeDialog;
    }
}