MODULE BOMNutrition;

REQUIRE BOM, ItemNutrition;


// ------------------------------------------------------------------- //
GROUP nutrition 'Энергетическая ценность' : base;

showNutritionBOM 'Отображать энергетическую ценность' = DATA BOOLEAN(BOM) IN documentPrm;

recipesBOM 'Номер по сборнику рецептов' = DATA VARSTRING[100] (BOM) IN documentPrm MINCHARWIDTH 5 PREFCHARWIDTH 10;
recipesProduct 'Номер по сборнику рецептов' (product) = recipesBOM(BOMProduct(product));

// Энергетическая ценность компонент

META changeNutrition(object, skuProp, property)
    change###property###object  = ACTION (object) {
        REQUEST  NUMERIC[8,2] INPUT ;
        IF requestedNumeric() THEN {
            property###Item(item) <- requestedNumeric() WHERE item == skuProp###object(object);
        } ELSE {
            property###Item(item) <- NULL WHERE item == skuProp###object(object);
        }    
    };
END

fatsComponent 'Жиры на 100г, г' = fatsItem(overSkuComponent(c));
carbohydratesComponent 'Углеводы 100г, г' = carbohydratesItem(overSkuComponent(c));
proteinsComponent 'Белки 100г, г' = proteinsItem(overSkuComponent(c));
energyComponent 'Энерг.ценность на 100г, ккал' = energyItem(overSkuComponent(c));

@changeNutrition(component, overSku, fats);
@changeNutrition(component, overSku, carbohydrates);
@changeNutrition(component, overSku, proteins);
@changeNutrition(component, overSku, energy);

// Энергетическая ценность спецификации

fatsBOM 'Жиры'(BOM) = GROUP SUM fatsComponent(component) BY BOMComponent(component) IN nutrition;
carbohydratesBOM 'Углеводы'(BOM) = GROUP SUM carbohydratesComponent(component) BY BOMComponent(component) IN nutrition;
proteinsBOM 'Белки'(BOM) = GROUP SUM proteinsComponent(component) BY BOMComponent(component) IN nutrition;
energyBOM 'Энерг.ценность'(BOM) = GROUP SUM energyComponent(component) BY BOMComponent(component) IN nutrition;

// Энергетическая ценность изделий

fatsProduct 'Жиры 100г, г' = fatsItem(skuProduct(p));
carbohydratesProduct 'Углеводы 100г, г' = carbohydratesItem(skuProduct(p));
proteinsProduct 'Белки 100г, г' = proteinsItem(skuProduct(p));
energyProduct 'Энерг.ценность на 100г, ккал' = energyItem(skuProduct(p));
productYieldProduct 'Выход' = DATA VARSTRING[100] (Product) MINCHARWIDTH 20 PREFCHARWIDTH 20;

@changeNutrition(product, sku, fats);
@changeNutrition(product, sku, carbohydrates);
@changeNutrition(product, sku, proteins);
@changeNutrition(product, sku, energy);

compositionProduct 'Состав' = DATA VARSTRING[2550] (Product) MINCHARWIDTH 30 PREFCHARWIDTH 50;
componentsProduct 'Компоненты' (product)= componentsBOM(BOMProduct(product));
compositionProduct(product) <- componentsProduct(product) WHEN CHANGED(componentsProduct(product));

changeCompositionProduct 'Записать в товар' = ACTION (product) {
    FOR skuProduct(product) == item DO {
        ASSIGN compositionItem(item) <- compositionProduct(product);
    }
} SHORTCUT compositionProduct;

//------------------------------- СТБ -------------------------------------//
CLASS StateStandart 'СТБ';
TABLE stateStandart (StateStandart);
  
nameStateStandart 'Наименование' = DATA VARISTRING[100](StateStandart);
numberStateStandart 'Номер' = DATA STRING[50](StateStandart);   
noteStateStandart 'Примечание' = DATA STRING[250](StateStandart);  
@defineExternalizable(stateStandart, VARSTRING[100]); 
 
FORM stateStandart 'СТБ'
    OBJECTS s=StateStandart FIXED PANEL
    PROPERTIES(s) idStateStandart SHOWIF  showIDs(), nameStateStandart, numberStateStandart, noteStateStandart 
    EDIT StateStandart OBJECT s
;

DESIGN stateStandart {
    main{
        PROPERTY(nameStateStandart(s)){
            preferredCharWidth = 50;    
        }
    }       
}

FORM stateStandarts 'СТБ'
    OBJECTS s=StateStandart
    PROPERTIES(s) idStateStandart READONLY SHOWIF showIDs(), nameStateStandart READONLY, numberStateStandart READONLY , noteStateStandart, DELETE FORCE PANEL TOOLBAR
    PROPERTIES(s) ADDFORM, EDITFORM
    ORDER BY numberStateStandart(s)
    DIALOG StateStandart OBJECT s
;
DESIGN stateStandarts { main{ preferredSize = (600, 400); } } 

stateStandartBOM= DATA StateStandart (BOM);
numberStateStandartBOM 'СТБ' (BOM) = numberStateStandart(stateStandartBOM(BOM));
numberStateStandartProduct 'СТБ' (p) = numberStateStandartBOM(BOMProduct(p));

// Расширяем формы
EXTEND FORM BOM
    PROPERTIES(b) showNutritionBOM
    PROPERTIES(b) SHOWIF showNutritionBOM(b) recipesBOM, numberStateStandartBOM
    PROPERTIES(p) SHOWIF showNutritionBOM(b) BEFORE deletep fatsProduct ON CHANGE changeFatsProduct(p), carbohydratesProduct ON CHANGE changeCarbohydratesProduct(p), 
                  proteinsProduct ON CHANGE changeProteinsProduct(p), energyProduct ON CHANGE changeEnergyProduct(p), compositionProduct, productYieldProduct
    PROPERTIES(c) BACKGROUND backgroundComponent(c)SHOWIF showNutritionBOM(b) BEFORE deletec fatsComponent ON CHANGE changeFatsComponent(c), carbohydratesComponent ON CHANGE changeCarbohydratesComponent(c), 
                  proteinsComponent ON CHANGE changeProteinsComponent(c), energyComponent ON CHANGE changeEnergyComponent(c)
;

DESIGN BOM {
//    b.box {
//        ADD b.nutrition {type = CONTAINERV;}
//    }
    kitchen {
        MOVE PROPERTY(showNutritionBOM(b));
        MOVE PROPERTY(recipesBOM(b));
        MOVE PROPERTY(numberStateStandartBOM(b)); 
    }
}
EXTEND FORM BOMs
    PROPERTIES(b) READONLY BACKGROUND backgroundBOM(b) showNutritionBOM
    PROPERTIES(p) SHOWIF showNutritionBOM(b) READONLY fatsProduct, carbohydratesProduct, proteinsProduct, energyProduct, compositionProduct, productYieldProduct
    PROPERTIES(c) SHOWIF showNutritionBOM(b) BACKGROUND backgroundComponent(c) READONLY fatsComponent, carbohydratesComponent, proteinsComponent, energyComponent
    
    PROPERTIES(p1) FORCE GRID fatsItem, carbohydratesItem, proteinsItem, energyItem
    PROPERTIES(c2) FORCE GRID fatsItem, carbohydratesItem, proteinsItem, energyItem
;
EXTEND FORM BOMsDialog
    PROPERTIES(b) READONLY BACKGROUND backgroundBOM(b) showNutritionBOM
    PROPERTIES(p) SHOWIF showNutritionBOM(b) READONLY fatsProduct, carbohydratesProduct, proteinsProduct, energyProduct, compositionProduct, productYieldProduct
    PROPERTIES(c) SHOWIF showNutritionBOM(b) BACKGROUND backgroundComponent(c) READONLY fatsComponent, carbohydratesComponent, proteinsComponent, energyComponent
    
;

