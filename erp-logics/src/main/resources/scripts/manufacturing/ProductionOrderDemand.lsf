MODULE ProductionOrderDemand;

REQUIRE ProductionOrder, SaleOrder;

NAMESPACE Production;

//-- Формирование заказа (продажа) для пополнения остатков на складе собственного производства

demandStockOrder = DATA Stock(Order);
nameDemandStockOrder 'Склад' = nameStock(demandStockOrder(order));
currentBalanceDemandSkuOrder 'Текущий остаток' (sku,o) = currentBalanceSkuStock(sku, demandStockOrder(o));

CONSTRAINT  demandStockOrder(o) AND NOT isCompanyStock(demandStockOrder(o)) CHECKED BY demandStockOrder    
        MESSAGE 'Склад для заказа не является складом компании';
demandStockOrder (order) <- productsStockOrder(order)
    WHEN CHANGED(productsStockOrder(order));


quantityDemandSkuOrder 'Количество' = DATA LOCAL NESTED NUMERIC[16,5] (Sku,Order);
quantityDemandSkusOrder (o) = GROUP SUM quantityDemandSkuOrder(s,o) BY o;

createUserOrderProductionOrder 'Создать заказ (продажа)'  = ACTION (order) {
    IF quantityDemandSkusOrder(order) THEN {
        NEWSESSION NESTED quantityDemandSkuOrder {
            FOR ADDOBJ o = UserOrder DO {
                supplierUserOrder(o) <- productsLegalEntityStockOrder(order);
                customerUserOrder(o) <- productsLegalEntityStockOrder(order);
                supplierStockUserOrder(o) <- productsStockOrder(order);
                customerStockUserOrder(o) <- componentsStockOrder(order);
                
                FOR quantityDemandSkuOrder(sku,order) ==q  ADDOBJ d = UserOrderDetail DO {
                    userOrderUserOrderDetail(d) <- o;
                    skuUserOrderDetail(d) <- sku;
                    quantityUserOrderDetail(d) <- q;
                }
                FORM userOrder OBJECTS o=o MANAGESESSION DOCKEDMODAL;
            }
        }
    }
}

EXTEND FORM order
    PROPERTIES (o) nameDemandStockOrder

    OBJECTS sub = Sku 
    PROPERTIES(sub) READONLY nameSku, idBarcodeSku, shortNameUOMSku
    PROPERTIES currentBalanceDemandSkuOrder(sub,o) READONLY , quantityDemandSkuOrder(sub,o)    
    FILTERS sk ==sub OR fromSkuSubstitute(uniqueSubstituteFromToSku(sk,sub))
    FILTERGROUP substitute
        FILTER 'Замены' fromSkuSubstitute(uniqueSubstituteFromToSku(sk,sub)) 'F10' DEFAULT 
        
    OBJECTS dem = Sku 
    PROPERTIES(dem) READONLY nameSku, idBarcodeSku, shortNameUOMSku  
    PROPERTIES quantityDemandSkuOrder(dem,o) 
    FILTERS quantityDemandSkuOrder(dem,o) 
     
    PROPERTIES createUserOrderProductionOrder(o) FORCE PANEL TOOLBAR TODRAW dem
    
;
DESIGN order {
    price2 {
        type = TABBED;
        price2a {
            caption = 'Цены';
        }
        price2b {
            caption = 'Пополнение остатков';
            NEW price2b1{
                caption = 'Фильтр складов для заказа';
                MOVE PROPERTY(nameDemandStockOrder(o)); 
            }
            NEW price2b2{
                fill = 1;
                type = SPLITV;
                MOVE sub.box {caption ='Подбор';}  
                MOVE dem.box {caption ='Заказ';}   
            }
            
        }     
    }
}
WHEN SESSION FORMS order CHANGED(productsStockOrder(order)) DO {                                              
    demandStockOrder (order) <- productsStockOrder(order);
}

