MODULE InvoiceContract;

REQUIRE StockContract, Invoice;

META defineInvoicePaymentCondition (sign)

    paymentConditionInvoice 'Условия оплаты' = ABSTRACT PaymentCondition (Invoice) PERSISTENT;
    paymentConditionUserInvoice 'Условия оплаты' = DATA PaymentCondition (UserInvoice);
    paymentConditionInvoice(prop) += paymentConditionUserInvoice(prop);
    InvoiceContract.paymentConditionInvoice(prop) += paymentConditionInvoice(prop);
    descriptionPaymentConditionInvoice 'Условия оплаты' (i) = descriptionPaymentCondition(paymentConditionInvoice(i)) IN base MINCHARWIDTH 10 PREFCHARWIDTH 15;
    descriptionPaymentConditionUserInvoice 'Условия оплаты' (i) = descriptionPaymentCondition(paymentConditionUserInvoice(i)) MINCHARWIDTH 10 PREFCHARWIDTH 15;

    paymentConditionUserInvoice(prop) <- OVERRIDE paymentConditionAgreement(agreementUserInvoice(prop)), paymentConditionContract(contractSkuUserInvoice(prop))
        WHEN CHANGED(agreementUserInvoice(prop)) OR
             CHANGED(contractSkuUserInvoice(prop));

    EXTEND FORM userInvoice
        PROPERTIES(i) descriptionPaymentConditionUserInvoice
    ;

    EXTEND DESIGN userInvoice{
        i.documentPrm{
            ADD PROPERTY(descriptionPaymentConditionUserInvoice(i));
        }
    }

END

paymentConditionInvoice 'Условия оплаты' = ABSTRACT PaymentCondition (Invoice) PERSISTENT;
descriptionPaymentConditionInvoice 'Условия оплаты' (i) = descriptionPaymentCondition(paymentConditionInvoice(i)) IN base MINCHARWIDTH 10 PREFCHARWIDTH 15;
