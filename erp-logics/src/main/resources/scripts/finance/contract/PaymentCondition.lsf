MODULE PaymentCondition;

REQUIRE System, Integration;

NAMESPACE Contract;

CLASS PaymentCondition 'Условия оплаты';
TABLE paymentCondition(PaymentCondition);

@defineExternalizable(paymentCondition, VARSTRING[100]);

// Порядок оплаты

CLASS AgreementPaymentType 'Порядок оплаты' {
    prepayment 'С отсрочкой платежа',
    implement 'По факту реализации',
    requirement 'Платежное требование',
    advancePayment 'По предоплате'
}
FORM agreementPaymentTypes 'Порядок оплаты'
    OBJECTS t = AgreementPaymentType
    PROPERTIES(t) READONLY staticCaption
    DIALOG AgreementPaymentType OBJECT t
;

bankingDays 'Банковских дней' = DATA BOOLEAN (PaymentCondition);

type = DATA AgreementPaymentType (PaymentCondition);
nameType 'Тип оплаты' (PaymentCondition paymentCondition) = staticCaption(type(paymentCondition));

isPrepaymentType(PaymentCondition paymentCondition) = type(paymentCondition) == AgreementPaymentType.prepayment;

// Периоды рассрочки

CLASS PaymentPeriod 'Период рассрочки';
TABLE paymentPeriod(PaymentPeriod);

@defineExternalizable(paymentPeriod, VARSTRING[100]);
countDays 'Кол-во дней' = DATA INTEGER (PaymentPeriod);
percent 'Процент' = DATA NUMERIC[8,3] (PaymentPeriod);
paymentCondition 'Условия оплаты периода рассрочки' = DATA PaymentCondition(PaymentPeriod) NOT NULL DELETE;
bankingDays 'Банковских дней'(PaymentPeriod p) = bankingDays(paymentCondition(p));

description(PaymentPeriod paymentPeriod) =
    countDays(paymentPeriod) + (IF bankingDays(paymentPeriod) THEN ' банковских дн.' ELSE ' календарных дн.')+  ' ( ' + percent(paymentPeriod) + ' %)';


descriptionPeriod 'Условия оплаты' (paymentCondition) =
    GROUP CONCAT description(PaymentPeriod paymentPeriod) IF paymentCondition(paymentPeriod) == PaymentCondition paymentCondition, ', '
                BY paymentCondition
                ORDER paymentPeriod MINCHARWIDTH 20 PREFCHARWIDTH 30;

//descriptionPaymentCondition 'Условия оплаты' (paymentCondition) =
//    OVERRIDE 'По факту реализации' IF paymentCondition IS PaymentCondition , 
//             descriptionPeriodPaymentCondition(paymentCondition) MINCHARWIDTH 20 PREFCHARWIDTH 30;
description 'Условия оплаты' (PaymentCondition paymentCondition) = CASE 
    WHEN type(paymentCondition) == AgreementPaymentType.prepayment THEN descriptionPeriod(paymentCondition)
    WHEN paymentCondition IS PaymentCondition THEN staticCaption(type(paymentCondition)) MINCHARWIDTH 20 PREFCHARWIDTH 30;
paymentConditionDescription = GROUP MAX PaymentCondition c BY description(c);
// Бонусы

CLASS BonusPeriod 'Период бонуса';
TABLE bonusPeriod(BonusPeriod);

countDays 'Кол-во дней' = DATA INTEGER (BonusPeriod);
percent 'Процент' = DATA NUMERIC[8,3] (BonusPeriod);
paymentCondition 'Условия оплаты периода бонуса' = DATA PaymentCondition (BonusPeriod) NOT NULL DELETE;

bonusPeriod(paymentCondition, days) = GROUP AGGR BonusPeriod bonusPeriod BY paymentCondition(bonusPeriod),
                                                                                      countDays(bonusPeriod)
                                                                                   WHERE bonusPeriod IS BonusPeriod;

sumPercent(paymentCondition) = GROUP SUM percent(PaymentPeriod paymentPeriod) BY paymentCondition(paymentPeriod);
CONSTRAINT sumPercent(PaymentCondition paymentCondition) != 100.0 CHECKED BY sumPercent[PaymentCondition]
    MESSAGE 'Сумма процентов рассрочки должна быть равна 100';

FORM paymentCondition 'Условие оплаты'

    OBJECTS pc = PaymentCondition FIXED PANEL
    PROPERTIES(pc) id SHOWIF showIDs(), nameType, bankingDays 

    OBJECTS pp = PaymentPeriod FIXED GRID
    PROPERTIES(pp) countDays SHOWIF isPrepaymentType(pc),
                   percent SHOWIF isPrepaymentType(pc)
    PROPERTIES(pp) ADDOBJ SHOWIF isPrepaymentType(pc),
                   DELETESESSION SHOWIF isPrepaymentType(pc)

    OBJECTS bp = BonusPeriod
    PROPERTIES(bp) countDays, percent
    PROPERTIES(bp) ADDOBJ, DELETESESSION

    FILTERS paymentCondition(pp) == pc,
            paymentCondition(bp) == pc

    EDIT PaymentCondition OBJECT pc
;

DESIGN paymentCondition {
    main{
        preferredSize = (1024, 768);
    }
}

FORM paymentConditions 'Условия оплаты'

    OBJECTS pc = PaymentCondition
    PROPERTIES(pc) READONLY id SHOWIF showIDs(), description, nameType
    PROPERTIES(pc) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    DIALOG PaymentCondition OBJECT pc
;
