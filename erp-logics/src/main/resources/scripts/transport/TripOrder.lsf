MODULE TripOrder;

REQUIRE Trip, Order;

NAMESPACE Trip;

trip = DATA Trip(Order);
in 'Включен' (Trip trip, Order order) = trip(order) == trip;
countOrder 'Кол-во заказов в рейсе' (trip) = GROUP SUM 1 IF in(Trip trip, Order order) BY trip PERSISTENT; 

driverTrip = driver(trip(Order order));
nameDriverTrip 'Водитель' (Order order) = name[Contact](driverTrip(order));

dateTrip 'Дата вывоза' = date(trip(Order order));
numberTrip 'Номер рейса' = number(trip(Order order));

filter(Trip trip, Order order) = trip(order)==trip OR (trip IS Trip AND order IS Order AND NOT trip(order));

quantityFrom (trip, stock) = GROUP SUM 1 IF quantityFrom(Order order, Stock stock) BY trip(order), stock;
quantityTo (trip, stock) = GROUP SUM 1 IF quantityTo(Order order, Stock stock) BY trip(order), stock;
quantity(Trip trip, Stock stock) = quantityFrom(trip, stock) (+) quantityTo(trip, stock);

TABLE tripStock(Trip, Stock);
number 'Порядковый номер' = DATA INTEGER(Stock, Trip);
number(Stock stock, Trip trip) => quantity(trip, stock)>0 RESOLVE RIGHT;

firstStock = DATA Stock(Trip);
isFirst 'Начальный пункт' (Stock stock, Trip trip) = firstStock(trip)==stock;
addressFirstStock 'Начальный пункт' (Trip trip) = address(firstStock(trip));

stockPrev (Trip trip, Stock stock) = PARTITION PREV stock IF quantity(trip, stock) BY trip ORDER number(stock, trip);
addressStockPrev 'Адрес' (Trip trip, Stock stock) = address(stockPrev (trip, stock));

maxNumber(trip) = GROUP MAX number(Stock stock, Trip trip) BY trip;
index 'Номер' (Trip trip, Order order) = maxNumber(trip) - number(toStock(order), trip) + 1 IF in(trip, order);

CONSTRAINT number(Stock stock1, trip(Order order)) >= number(Stock stock2, trip(order)) IF quantityFrom(order, stock1)>0 AND quantityTo(order, stock2)>0
    MESSAGE 'Номер не соответствует направлению заказа';

grossWeightOrdered 'Суммарный вес заказов' (trip) = GROUP SUM grossWeightOrderDetail(Order order) BY trip(order);

grossWeightTo 'Вес' = GROUP SUM round3(grossWeightOrderDetail(Order order)/1000) BY trip(order), toStock(order);

quantityOrdered 'Кол-во в заказах' (trip, sku) = GROUP SUM quantity(OrderDetail orderDetail) BY trip(order(orderDetail)), sku(orderDetail);

// отображение на карте
showPoints 'Показать путь на карте' (Trip trip) = ACTION {
    ASSIGN numberPath(POI stock) <- OVERRIDE 1 IF quantity(trip, stock) > 0, number(stock, trip);
    EXEC showOnPath(showMapProvider());

} TOOLBAR;

createPath 'Рассчитать путь' (Trip trip) = ACTION {
    ASSIGN startPathPOI() <- firstStock(trip);
    ASSIGN inPath(POI stock) <- TRUE IF quantity(trip, stock);
    EXEC calculatePath();
    ASSIGN number(Stock stock, trip) <- numberPath(stock);
} TOOLBAR;

FORM ordersTrip

    OBJECTS t=Trip FIXED PANEL
    PROPERTIES (t) nameNumerator, number, series, date, time, nameDriver, sidTruck, nameTruckModelTruck, trailerTruck

    OBJECTS o=Order FIXED GRID
    FILTERS isPosted(o), in(t, o)

    OBJECTS s=Sku
    PROPERTIES READONLY idBarcode(s), name(s), shortNameUOM(s)
    PROPERTIES READONLY quantityOrdered(t, s)
    PROPERTIES READONLY quantityOrderDetail(s, o) COLUMNS (o) HEADER seriesNumber(o)
    FILTERS quantityOrdered(t, s) > 0
;

printOrders 'Печать заказов' (Trip trip) = ACTION {
    PRINT ordersTrip OBJECTS t = trip ;
} TOOLBAR;

EXTEND FORM trip
    PROPERTIES (t) READONLY grossWeightOrdered

    OBJECTS o=Order
    PROPERTIES(t, o) in
    PROPERTIES(o) READONLY number, series, date, nameSupplier, nameFromStock, nameCustomer, nameToStock, grossWeightOrderDetail
    PROPERTIES(o) edit
    PROPERTIES printOrders(t) TODRAW o PANEL

    FILTERS isPosted(o)

    FILTERS customer(o) == customer(t) OR (o IS Order AND NOT customer(t)),
            supplier(o) == supplier(t) OR (o IS Order AND NOT supplier(t))

    FILTERGROUP filterDateOrder
        FILTER 'Текущие' date(o) <= date(t) 'F9' DEFAULT
    FILTERGROUP filterOrder
        FILTER 'Не расписанные или в текущем рейсе' filter(t, o) 'F11'
        FILTER 'В текущем рейсе' in(t, o) 'F10' DEFAULT

    OBJECTS od=OrderDetail
    PROPERTIES(od) READONLY idBarcodeSku, nameSku, shortNameUOMSku, quantity, grossWeight, nameFromStock, nameToStock
    FILTERS order(od)==o

    OBJECTS st=Stock
    PROPERTIES(st) READONLY name, address, nameLegalEntity
    PROPERTIES(t, st) grossWeightTo
    PROPERTIES(st, t) number, isFirst
    PROPERTIES (t) showPoints TODRAW st
    PROPERTIES (t) createPath TODRAW st

    FILTERS quantity (t, st) > 0
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    EDIT Trip OBJECT t
;

DESIGN trip {
    headerSum {
        MOVE PROPERTY(grossWeightOrdered(t));
    }
    
    pane {
        NEW orders {
            fill = 1;
            caption = 'Заказы';
            MOVE o.box;
            MOVE od.box;
        }
        MOVE st.box {
            caption = 'Путевой лист';
        }
    }
}

EXTEND FORM trips
    PROPERTIES(t) READONLY grossWeightOrdered
    
    OBJECTS o=Order
    PROPERTIES(o) READONLY number, series, date, nameSupplier, nameFromStock, nameCustomer, nameToStock, grossWeightOrderDetail
    FILTERS in(t, o)
;

DESIGN trips {
    pane {
        MOVE o.box {
            caption = 'Заказы';
        }
    }
}

// Показываем отмеченные заказы на карте
filteredFromTrip (stock) = GROUP SUM 1 IF [= FILTER trip.o](Order order) BY fromStock(order);
filteredToTrip (stock) = GROUP SUM 1 IF [= FILTER trip.o](Order order) BY toStock(order);
filteredTrip(Stock stock) = filteredFromTrip(stock) (+) filteredToTrip(stock);

showPointOrders 'Показать отобранные заказы' () = ACTION {
    numberPath(POI stock) <- 1 IF filteredTrip(stock);
    showOnPath(showMapProvider());
} TOOLBAR;

EXTEND FORM trip
    PROPERTIES showPointOrders() TODRAW o
;
