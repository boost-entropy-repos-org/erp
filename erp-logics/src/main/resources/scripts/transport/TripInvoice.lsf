MODULE TripInvoice;

REQUIRE OrderInvoice, Shipment, Trip;

quantityTripInvoice (trip, invoice) = GROUP SUM quantityOrderInvoice(order, invoice) IF inTripOrder(trip, order) BY trip, invoice;

tripInvoice = DATA Trip(Invoice);

inTripInvoice 'Включен' (trip, invoice) = tripInvoice(invoice)==trip;
filterTripInvoice(trip, invoice) = tripInvoice(invoice)==trip OR (trip IS Trip AND invoice IS Invoice AND NOT tripInvoice(invoice));

countInvoiceTrip 'Кол-во накладных в рейсе' (trip) = GROUP SUM 1 IF inTripInvoice(trip, invoice) BY trip PERSISTENT;
diffCountOrderInvoiceTrip 'Кол-во заказов без накладных'(trip) = countOrderTrip(trip) (-) countInvoiceTrip(trip);

quantityInvoicedTripSku 'Кол-во в накладных' (trip, sku) = GROUP SUM quantityInvoiceDetail(invoiceDetail) BY tripInvoice(invoiceInvoiceDetail(invoiceDetail)), skuInvoiceDetail(invoiceDetail);

grossWeightInvoicedTrip 'Суммарный вес накладных' (trip) = GROUP SUM grossWeightInvoiceDetailInvoice(invoice) BY tripInvoice(invoice);

createConsignmentTrip 'Создать накладные по заказам' (trip) = ACTION (trip) {
    FOR tripOrder(order) == trip DO {
        EXEC createUserInvoicePostedOrder(order);
        FOR createdUserInvoiceOrder (invoice, order) DO {
            ASSIGN tripInvoice(invoice) <- trip; // IF quantityTripInvoice (trip, invoice)
        }

        EXEC apply();
    };
    EXEC createShipmentsTrip(trip);
    EXEC apply();

} TOOLBAR CONFIRM;


EXTEND FORM trip

    PROPERTIES (t) READONLY grossWeightInvoicedTrip BEFORE grossWeightShippedTrip(t)

    OBJECTS i=Invoice
    PROPERTIES (t, i) inTripInvoice
    PROPERTIES (i) READONLY numberInvoice, seriesInvoice, dateInvoice, nameFromInvoice, nameFromStockInvoice, nameToInvoice, nameToStockInvoice

    PROPERTIES quantityInvoicedTripSku(t, sk) AFTER quantityOrderedTripSku(t,sk)

    FILTERGROUP filterDateInvoice
        FILTER 'Текущие' 'F9' dateInvoice(i) <= dateTrip(t) DEFAULT
    FILTERGROUP filterInvoice
        FILTER 'Не расписанные или в текущем рейсе' 'F11' filterTripInvoice(t, i)
        FILTER 'В текущем рейсе' 'F10' inTripInvoice(t, i) DEFAULT

    FILTERS customerInvoice(i) == customerTrip() OR (i IS Invoice AND NOT customerTrip()),
            supplierInvoice(i) == supplierTrip() OR (i IS Invoice AND NOT supplierTrip())

    OBJECTS id=InvoiceDetail
    PROPERTIES (id) READONLY idBarcodeSkuInvoiceDetail, nameSkuInvoiceDetail, shortNameUOMSkuInvoiceDetail, quantityInvoiceDetail, grossWeightInvoiceDetail, nameFromStockInvoiceDetail, nameToStockInvoiceDetail
    FILTERS invoiceInvoiceDetail(id)==i

    OBJECTS i2=Invoice
    PROPERTIES(i2) READONLY numberInvoice, seriesInvoice, dateInvoice, nameSupplierStockInvoice, nameCustomerStockInvoice
    PROPERTIES(i2) editInvoice
    PROPERTIES(sk, i2) READONLY quantityInvoiceDetailSkuInvoice
    FILTERS inTripInvoice(t, i2), quantityInvoiceDetailSkuInvoice(sk, i2)>0

    FILTERGROUP filterSku2
        FILTER 'Товары в заказах или накладных' 'F7' quantityOrderedTripSku(t, sk) > 0 OR quantityInvoicedTripSku(t, sk) > 0 DEFAULT
        FILTER 'Товары в накладных' 'F6' quantityInvoicedTripSku(t, sk) > 0
        FILTER 'Товары в заказах и накладных' 'F5' quantityOrderedTripSku(t, sk) > 0 AND quantityInvoicedTripSku(t, sk) > 0
;

EXTEND DESIGN trip {

    sumContainer {
        ADD PROPERTY(grossWeightInvoicedTrip(t)) AFTER PROPERTY(grossWeightOrderedTrip(t));
    };

    bottomContainer {
        NEW invoiceContainer AFTER orderContainer{
            caption = 'Накладные';
            ADD i.box;
            ADD id.box;
        };
    }

    documentContainer {
        ADD i2.box AFTER o2.box;
    }
}

EXTEND FORM trips
    PROPERTIES (t) READONLY grossWeightInvoicedTrip AFTER grossWeightOrderedTrip(t)
    OBJECTS i=Invoice
    PROPERTIES (i) READONLY numberInvoice, seriesInvoice, dateInvoice, nameFromInvoice, nameFromStockInvoice, nameToInvoice, nameToStockInvoice
    FILTERS inTripInvoice(t, i)
;

EXTEND DESIGN trips {
    bottomContainer{
        ADD i.box AFTER o.box {
            caption = 'Накладные';
        };
    }
}