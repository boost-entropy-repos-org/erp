MODULE TripPurchaseInvoiceCharge;

REQUIRE PurchaseInvoiceCharge, TripInvoice;

NAMESPACE  Trip;

sumCharge 'Сумма услуг' = DATA NUMERIC[18,4] (Trip) PREFCHARWIDTH 15;

sumGrossWeightPurchaseInvoiced 'Суммарный вес накладных' (trip) = GROUP SUM sumGrossWeightInvoiceDetail(UserInvoice invoice) IF invoice IS Purchase.UserInvoice BY trip(invoice);
calcGrossSum 'Сумма услуг' (Purchase.Invoice invoice, Trip trip)= NUMERIC[18,4](sumCharge(trip)* 
                                                        sumGrossWeightInvoiceDetail(invoice) /
                                                        (sumGrossWeightPurchaseInvoiced(trip) IF sumGrossWeightPurchaseInvoiced(trip)!=0.0));

signChargeInvoices 'Расписать сумму услуг'(Trip trip) = ACTION {
    REQUEST NUMERIC[18,4] INPUT;
    IF requestedNumeric() THEN {
        sumCharge(trip) <- requestedNumeric();
        FOR trip(UserInvoice invoice)==trip AND invoice IS Purchase.UserInvoice DO {
            setChargePercent(invoice, calcGrossSum (invoice, trip) * 100.000000 / (incomeSum(invoice) IF incomeSum(invoice) != 0));
            FOR userInvoice(UserInvoiceDetail d) == invoice DO{
                chargePrice(d) <- chargePercent(d) * incomePrice(d) / 100.000000;
            }
        }
    } ELSE {
        sumCharge(trip) <- NULL;
        FOR trip(UserInvoice invoice)==trip AND invoice IS Purchase.UserInvoice DO {
            chargePercent(UserInvoiceDetail d) <- NULL WHERE userInvoice(d) == invoice;
            chargePrice(UserInvoiceDetail d) <- NULL WHERE userInvoice(d) == invoice;

        }        
    }   
}

EXTEND FORM trip
    PROPERTIES(t) sumCharge ON CHANGE signChargeInvoices(t)
    PROPERTIES(i) READONLY FORCE GRID chargeSumInvoiceDetail
    PROPERTIES(id) READONLY FORCE GRID chargeSum[Purchase.InvoiceDetail]
;

DESIGN trip {
    invoiceSum1 {       
        MOVE PROPERTY(sumCharge(t));
    }
}