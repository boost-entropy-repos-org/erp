MODULE Trip;

REQUIRE Order, Shipment, Route, ContractLedger;

PRIORITY ContractLedger;

NAMESPACE Trip;

CLASS Trip 'Рейс';
TABLE trip(Trip);

@defineDocumentHeaderTime(Trip);
@deriveDocumentHeaderTimePrefix(Trip, );

@defineDocumentHeaderNumber(Trip);
@defineNumeratedDefault(Trip, 'Рейсы', 'РЕ');

truckTrip = DATA Truck(Trip);
sidTruckTrip 'Машина (номер)'(trip) = sidTruck(truckTrip(trip));
weightTruckTrip 'Грузоподъёмность (кг)'(trip) = weightTruck(truckTrip(trip));
ownerTruckTrip 'Владелец'(trip) = ownerTruck(truckTrip(trip));
truckModelTruckTrip (trip) = truckModelTruck(truckTrip(trip));
nameTruckModelTruckTrip 'Марка' (trip) = nameTruckModel(truckModelTruckTrip(trip));
trailerTruckTrip 'Прицеп' (trip) = trailerTruck(truckTrip(trip));
nameTruckTrip 'Автомобиль' (trip) = nameTruck(truckTrip(trip));

driverTrip = DATA Driver(Trip);
nameDriverTrip 'Водитель' (trip) = nameContact(driverTrip(trip));
sidDriverTrip 'Табельный номер' (trip) = sidDriver(driverTrip(trip));
typeDriverTrip 'Класс' (trip) = typeDriver(driverTrip(trip));

// заказы
tripOrder = DATA Trip(Order);
inTripOrder 'Включен' (trip, order) = tripOrder(order)==trip;
countOrderTrip 'Кол-во заказов в рейсе' (trip) = GROUP SUM 1 IF inTripOrder(trip, order) BY trip PERSISTENT; 

driverTripOrder = driverTrip(tripOrder(order));
nameDriverTripOrder 'Водитель' (order) = nameContact(driverTripOrder(order));

dateTripOrder 'Дата вывоза' = dateTrip(tripOrder(order));
numberTripOrder 'Номер рейса' = numberTrip(tripOrder(order));

filterTripOrder(trip, order) = tripOrder(order)==trip OR (trip IS Trip AND order IS Order AND NOT tripOrder(order));

quantityFromTripStock (trip, stock) = GROUP SUM 1 IF quantityFromOrderStock(order, stock) BY tripOrder(order), stock;
quantityToTripStock (trip, stock) = GROUP SUM 1 IF quantityToOrderStock(order, stock) BY tripOrder(order), stock;
quantityTripStock(trip, stock) = quantityFromTripStock(trip, stock) (+) quantityToTripStock(trip, stock);

TABLE tripStock(Trip, Stock);
numberStockTrip 'Порядковый номер' = DATA INTEGER(Stock, Trip);
numberStockTrip(stock, trip) => quantityTripStock(trip, stock)>0 RESOLVE FALSE;

firstStockTrip = DATA Stock(Trip);
isFirstStockTrip 'Начальный пункт' (stock, trip) = firstStockTrip(trip)==stock;
addressFirstStockTrip 'Начальный пункт' (trip) = addressStock(firstStockTrip(trip));

stockPrevTripStock (trip, stock) = PARTITION PREV stock IF quantityTripStock(trip, stock) BY trip ORDER numberStockTrip(stock, trip);
addressStockPrevTripStock 'Адрес' (trip, stock) = addressStock(stockPrevTripStock (trip, stock));

maxNumberTrip(trip) = GROUP MAX numberStockTrip(stock, trip) BY trip;
indexTripOrder 'Номер' (trip, order) = maxNumberTrip(trip) - numberStockTrip(toStockOrder(order), trip) + 1 IF inTripOrder(trip, order);

CONSTRAINT numberStockTrip(stock1, tripOrder(order)) >= numberStockTrip(stock2, tripOrder(order)) IF quantityFromOrderStock(order, stock1)>0 AND quantityToOrderStock(order, stock2)>0
    MESSAGE 'Номер не соответствует направлению заказа';

grossWeightOrderedTrip 'Суммарный вес заказов' (trip) = GROUP SUM grossWeightOrderDetailOrder(order) BY tripOrder(order);

grossWeightTripToStock 'Вес' = GROUP SUM round3(grossWeightOrderDetailOrder(order)/1000) BY tripOrder(order), toStockOrder(order);

quantityOrderedTripSku 'Кол-во в заказах' (trip, sku) = GROUP SUM quantityOrderDetail(orderDetail) BY tripOrder(orderOrderDetail(orderDetail)), skuOrderDetail(orderDetail);

// поставки
tripShipment = DATA Trip(Shipment);
inTripShipment 'Включен' (trip, shipment) = tripShipment(shipment)==trip;

filterTripShipment(trip, shipment) = tripShipment(shipment)==trip OR (trip IS Trip AND shipment IS Shipment AND NOT tripShipment(shipment));

grossWeightShippedTrip 'Суммарный вес поставок' (trip) = GROUP SUM grossWeightShipmentDetailShipment(shipment) BY tripShipment(shipment);

quantityShipmentDetailTripShipment (trip, shipment) = GROUP SUM quantityShipmentDetailOrderShipment (order, shipment) BY tripOrder(order), shipment;

quantityShippedTripSku 'Кол-во в поставках' (trip, sku) = GROUP SUM quantityShipmentDetail(shipmentDetail) BY tripShipment(shipmentShipmentDetail(shipmentDetail)), skuShipmentDetail(shipmentDetail);

createShipmentsTrip 'Включить поставки' (trip) = ACTION (trip) {
    ASSIGN tripShipment(shipment) <- NULL WHERE tripShipment(shipment) == trip;
    ASSIGN tripShipment(shipment) <- trip WHERE quantityShipmentDetailTripShipment(trip, shipment);
} TOOLBAR CONFIRM;

// отображение на карте
showPointsTrip 'Показать путь на карте' (trip) = ACTION (trip) {
    ASSIGN numberPathPOI(stock) <- OVERRIDE 1 IF quantityTripStock(trip, stock) > 0, numberStockTrip(stock, trip);
    EXEC showOnMapPath();

} TOOLBAR;

createPathTrip 'Рассчитать путь' (trip) = ACTION (trip) {
    ASSIGN startPathPOI() <- firstStockTrip(trip);
    ASSIGN inPathPOI(stock) <- TRUE IF quantityTripStock(trip, stock);
    EXEC calculatePath();
    ASSIGN numberStockTrip(stock, trip) <- numberPathPOI(stock);
} TOOLBAR;

FORM ordersTrip

    OBJECTS t=Trip FIXED PANEL
    PROPERTIES (t) nameNumeratorTrip, numberTrip, seriesTrip, dateTrip, timeTrip, nameDriverTrip, sidTruckTrip, nameTruckModelTruckTrip, trailerTruckTrip

    OBJECTS o=Order FIXED GRID
    FILTERS isPostedOrder(o), inTripOrder(t, o)

    OBJECTS s=Sku
    PROPERTIES READONLY idBarcodeSku(s), nameSku(s), shortNameUOMSku(s)
    PROPERTIES READONLY quantityOrderedTripSku(t, s)
    PROPERTIES READONLY quantityOrderDetailSkuOrder(s, o) COLUMNS (o) HEADER seriesNumberOrder(o)
    FILTERS quantityOrderedTripSku(t, s) > 0
;

printOrdersTrip 'Печать заказов' (trip) = ACTION (trip) {
    FORM ordersTrip OBJECTS t = trip PRINT;
} TOOLBAR;

FORM trip 'Рейс'
    PROPERTIES() namePartyA FORCE PANEL, namePartyB FORCE PANEL

    OBJECTS t=Trip FIXED PANEL
    PROPERTIES (t) nameNumeratorTrip, numberTrip, seriesTrip, dateTrip, timeTrip, nameDriverTrip, sidTruckTrip, nameTruckModelTruckTrip, trailerTruckTrip, weightTruckTrip
    PROPERTIES (t) READONLY grossWeightOrderedTrip, grossWeightShippedTrip

    OBJECTS o=Order
    PROPERTIES(t, o) inTripOrder
    PROPERTIES(o) READONLY numberOrder, seriesOrder, dateOrder, nameSupplierOrder, nameFromStockOrder, nameCustomerOrder, nameToStockOrder, grossWeightOrderDetailOrder
    PROPERTIES(o) editOrder
    PROPERTIES printOrdersTrip(t) TODRAW o FORCE PANEL

    FILTERS isPostedOrder(o)

    FILTERS customerOrder(o) == partyB() OR (o IS Order AND NOT partyB()),
            supplierOrder(o) == partyA() OR (o IS Order AND NOT partyA())

    FILTERGROUP filterDateOrder
        FILTER 'Текущие' 'F9' dateOrder(o) <= dateTrip(t) DEFAULT
    FILTERGROUP filterOrder
        FILTER 'Не расписанные или в текущем рейсе' 'F11' filterTripOrder(t, o) DEFAULT
        FILTER 'В текущем рейсе' 'F10' inTripOrder(t, o)

    OBJECTS od=OrderDetail
    PROPERTIES(od) READONLY idBarcodeSkuOrderDetail, nameSkuOrderDetail, shortNameUOMSkuOrderDetail, quantityOrderDetail, grossWeightOrderDetail, nameFromStockOrderDetail, nameToStockOrderDetail
    FILTERS orderOrderDetail(od)==o

    OBJECTS s=Shipment
    PROPERTIES (t, s) inTripShipment
    PROPERTIES(s) READONLY numberShipment, seriesShipment, dateShipment, nameSupplierShipment, nameFromStockShipment,
                  nameCustomerShipment, nameToStockShipment, grossWeightShipmentDetailShipment
    PROPERTIES (s) editShipment

    FILTERS isPostedShipment(s)

     FILTERS customerShipment(s) == partyB() OR (s IS Shipment AND NOT partyB()),
             supplierShipment(s) == partyA() OR (s IS Shipment AND NOT partyA())

    PROPERTIES createShipmentsTrip(t) TODRAW s FORCE PANEL

    FILTERGROUP filterDateShipment
        FILTER 'Текущие' 'F9' dateShipment(s) <= dateTrip(t) DEFAULT
    FILTERGROUP filterShipment
        FILTER 'Не расписанные или в текущем рейсе' 'F11' filterTripShipment(t, s)
        FILTER 'В текущем рейсе' 'F10' inTripShipment(t, s) DEFAULT

    OBJECTS sd=ShipmentDetail
    PROPERTIES(sd) READONLY idBarcodeSkuShipmentDetail, nameSkuShipmentDetail, shortNameUOMSkuShipmentDetail, quantityShipmentDetail, grossWeightShipmentDetail, nameFromStockShipmentDetail, nameToStockShipmentDetail
    FILTERS shipmentShipmentDetail(sd)==s

    OBJECTS sk=Sku
    PROPERTIES(sk) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    PROPERTIES(t, sk) READONLY quantityOrderedTripSku, quantityShippedTripSku

    FILTERGROUP filterSku
        FILTER 'Товары в заказах или поставках' 'F11' quantityOrderedTripSku(t, sk) > 0 OR quantityShippedTripSku(t, sk) > 0 DEFAULT
        FILTER 'Товары в заказах' 'F9' quantityOrderedTripSku(t, sk) > 0
        FILTER 'Товары в поставках' 'F10' quantityShippedTripSku(t, sk) > 0
        FILTER 'Товары в заказах и поставках' 'F8' quantityOrderedTripSku(t, sk) > 0 AND quantityShippedTripSku(t, sk) > 0

    OBJECTS o2=Order
    PROPERTIES(o2) READONLY numberOrder, seriesOrder, dateOrder, nameFromStockOrder, nameToStockOrder
    PROPERTIES(o2) editOrder
    PROPERTIES(sk, o2) READONLY quantityOrderDetailSkuOrder
    FILTERS inTripOrder(t, o2), quantityOrderDetailSkuOrder(sk, o2)>0

    OBJECTS s2=Shipment
    PROPERTIES(s2) READONLY numberShipment, seriesShipment, dateShipment, nameFromStockShipment, nameToStockShipment
    PROPERTIES(s2) editShipment
    PROPERTIES(sk, s2) READONLY quantityShipmentDetailSkuShipment
    FILTERS inTripShipment(t, s2), quantityShipmentDetailSkuShipment(sk, s2)>0

    OBJECTS st=Stock
    PROPERTIES(st) READONLY nameStock, addressStock, nameLegalEntityStock
    PROPERTIES(t, st) grossWeightTripToStock
    PROPERTIES(st, t) numberStockTrip, isFirstStockTrip
    FILTERS quantityTripStock (t, st)>0
    PROPERTIES (t) showPointsTrip TODRAW st
    PROPERTIES (t) createPathTrip TODRAW st

    EDIT Trip OBJECT t
;


DESIGN trip FROM DEFAULT{
    main {
        NEW allContainer {
            fill = 1;
            NEW headContainer {
                NEW topContainer {
                    caption = 'Шапка документа';
                    type = CONTAINERH;
                    ADD PROPERTY(nameNumeratorTrip(t));
                    ADD PROPERTY(numberTrip(t));
                    ADD PROPERTY(seriesTrip(t));
                    ADD PROPERTY(dateTrip(t));
                    ADD PROPERTY(timeTrip(t));
                }
                NEW midContainer {
                    fill = 1;
                    type = CONTAINERH;
                    NEW truckContainer {
                        type = COLUMNS;
                        columns = 3;
                        caption = 'Параметры машины';
                        ADD PROPERTY(nameDriverTrip(t));
                        ADD PROPERTY(sidTruckTrip(t));
                        ADD PROPERTY(nameTruckModelTruckTrip(t));
                        ADD PROPERTY(trailerTruckTrip(t));
                        ADD PROPERTY(weightTruckTrip(t));
                    }

                    NEW sumContainer {
                        caption = 'Итоги';
                        type = COLUMNS;
                        columns = 1;
                        ADD PROPERTY(grossWeightOrderedTrip(t));
                        ADD PROPERTY(grossWeightShippedTrip(t));
                    }
                }

                NEW filterContainer {
                    type = CONTAINERH;
                    caption = 'Фильтрация';
                    ADD PROPERTY(namePartyA()) {
                        caption = 'Поставщик';
                    };
                    ADD PROPERTY(namePartyB()){
                        caption = 'Покупатель';
                    };
                }
            }

            NEW bottomContainer {
                fill = 1;
                type = TABBED;
                NEW orderContainer {
                    fill = 1;
                    caption = 'Заказы';
                    ADD o.box;
                    ADD od.box;
                }

                NEW shipmentContainer {
                    fill = 1;
                    caption = 'Поставки';
                    ADD s.box;
                    ADD sd.box;
                }

                NEW skuContainer {
                    fill = 1;
                    type = CONTAINERH;
                    caption = 'Итоги по товарам';
                    ADD sk.box;

                    NEW documentContainer {
                        fill = 1;
                        //type = SPLITV;
                        ADD o2.box;
                        ADD s2.box;
                    }
                }

                ADD st.box {
                    caption = 'Путевой лист';
                };
            }
        }
        ADD functions.box;
    }
}

// Показываем отмеченные заказы на карте
filteredFromTripStock (stock) = GROUP SUM 1 IF [= FILTER trip.o](order) BY fromStockOrder(order);
filteredToTripStock (stock) = GROUP SUM 1 IF [= FILTER trip.o](order) BY toStockOrder(order);
filteredTripStock(stock) = filteredFromTripStock(stock) (+) filteredToTripStock(stock);

showPointOrders 'Показать отобранные заказы' () = ACTION () {
    numberPathPOI(stock) <- 1 IF filteredTripStock(stock);
    showOnMapPath();
} TOOLBAR;

EXTEND FORM trip
    PROPERTIES showPointOrders() TODRAW o
;
overCopyTrip = ABSTRACT ACTION LIST (Trip, Trip);
copyTrip 'Копировать' = ACTION (trip) NEWSESSION {
    FOR ADDOBJ t = Trip DO {
        ASSIGN driverTrip(t) <- driverTrip(trip);
        ASSIGN truckTrip(t) <- truckTrip(trip);

        EXEC overCopyTrip(t, trip);
        FORM trip OBJECTS t = t MANAGESESSION DOCKEDMODAL;
    }
} TOOLBAR;

FORM trips 'Рейсы'
    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES(dt) OBJVALUE

    OBJECTS t=Trip
    PROPERTIES(t) READONLY numberTrip, seriesTrip, dateTrip, timeTrip, nameDriverTrip, sidTruckTrip, nameTruckModelTruckTrip, trailerTruckTrip, weightTruckTrip, grossWeightOrderedTrip, grossWeightShippedTrip
    PROPERTIES(t) ADDFORM, EDITFORM, copyTrip, DELETE FORCE PANEL TOOLBAR
    
    FILTERGROUP filterTrips
        FILTER 'Рейсы на дату' 'F10' dateTrip(t) == dt DEFAULT    

    OBJECTS o=Order
    PROPERTIES(o) READONLY numberOrder, seriesOrder, dateOrder, nameSupplierOrder, nameFromStockOrder, nameCustomerOrder, nameToStockOrder, grossWeightOrderDetailOrder
    FILTERS inTripOrder(t, o)

    OBJECTS s=Shipment
    PROPERTIES(s) READONLY numberShipment, seriesShipment, dateShipment, nameSupplierShipment, nameFromStockShipment, nameCustomerShipment, nameToStockShipment, grossWeightShipmentDetailShipment
    FILTERS inTripShipment(t, s)

    OBJECTS sk=Sku
    PROPERTIES(sk) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    PROPERTIES(t, sk) READONLY quantityOrderedTripSku, quantityShippedTripSku

    FILTERGROUP filterSku
        FILTER 'Товары в заказах или поставках' 'F11' quantityOrderedTripSku(t, sk)>0 OR quantityShippedTripSku(t, sk)>0 DEFAULT
        FILTER 'Товары в заказах' 'F9' quantityOrderedTripSku(t, sk)>0
        FILTER 'Товары в поставках' 'F10' quantityShippedTripSku(t, sk)>0
        FILTER 'Товары в заказах и поставках' 'F8' quantityOrderedTripSku(t, sk)>0 AND quantityShippedTripSku(t, sk)>0

    OBJECTS st=Stock
    PROPERTIES(st) READONLY nameStock, addressStock, nameLegalEntityStock
    PROPERTIES(st, t) READONLY numberStockTrip
    FILTERS quantityTripStock(t, st)>0
;

DESIGN trips FROM DEFAULT{
    main {
        ADD dt.box;
        ADD t.box;

        NEW bottomContainer {
            fill = 2;
            type = TABBED;
            ADD o.box {
                caption = 'Заказы';
            };
            ADD s.box{
                caption = 'Поставки';
            };
            ADD sk.box{
                caption = 'Итоги по товарам';
            };
            ADD st.box{
                caption = 'Путевой лист';
            };
        }

        ADD functions.box;
    }
}

FORM dialogDateTrips 'Рейсы'
    OBJECTS d=DATE FIXED PANEL 
    PROPERTIES(d) OBJVALUE
    
    OBJECTS t = Trip
    PROPERTIES(t) READONLY numberTrip, dateTrip
    FILTERGROUP filters FILTER 'Рейсы на дату' 'F5' dateTrip(t)>=d DEFAULT 
;

NAVIGATOR {
    transportDocuments {
        ADD trips BEFORE routes;
    }
}