MODULE TripDashboard;

REQUIRE Dashboard, OrderInvoice, TripOrder, OrderPickingOrder, TripInvoiceConsignmentBy;

NAMESPACE Trip;

inCreatingTrip 'Отметить' = DATA LOCAL BOOLEAN (Order);
inCreatingTrip = GROUP SUM 1 IF inCreatingTrip(Order order) BY toStock(order);

countInCreatingTripOrder = GROUP SUM 1 IF inCreatingTrip(Order order);

editTrip 'Редактировать рейс'(Order order) = {
	NEWSESSION {
	    SHOW trip OBJECTS t = trip(order) DOCKED;
	}
}

FORM optionTrip 'Настройки рейса'
    OBJECTS t = Trip PANEL
    PROPERTIES (t) date, time, nameDriver, nameTruck
    PROPERTIES (t) nameIssuanceAllowed, nameIssuanceExecuted, nameForwarder, nameLoadingExecuter, 
                   nameWayOfLoading, nameUnloadingExecuter, nameWayOfUnloading, codeLoading, documentNameCurrency,
                   timeOfArrival, downtime        
;
DESIGN optionTrip {
//    GROUP(,t) {
//        columns = 2;
//    }
    NEW consignmentContainer {
        caption = 'Атрибуты накладных';
        NEW issuanceContainer {
            caption = 'Отпуск';
            MOVE PROPERTY(nameIssuanceAllowed(t));
            MOVE PROPERTY(nameIssuanceExecuted(t));
            MOVE PROPERTY(nameForwarder(t));
        }
        NEW loadingContainer {
            caption = 'ППР';
            MOVE PROPERTY(nameLoadingExecuter(t));
            MOVE PROPERTY(nameWayOfLoading(t));
            MOVE PROPERTY(nameUnloadingExecuter(t));
            MOVE PROPERTY(nameWayOfUnloading(t));
            MOVE PROPERTY(codeLoading(t));
            MOVE PROPERTY(timeOfArrival(t));
            MOVE PROPERTY(downtime(t));
        }
        NEW dopContainer {
            caption = 'Дополнительно';
            MOVE PROPERTY(documentNameCurrency(t));
        }

    }
    MOVE TOOLBARBOX;
}

overPrint = ABSTRACT LIST (Trip);
overCreateOrder = ABSTRACT LIST (Trip);
createTripOrder 'Взять в рейс'() = {
    NEWSESSION NESTED (inCreatingTrip[Order]) {
        NEW t = Trip {
            date(t) <- currentDate();
            time(t) <- currentTime();
            overCreateOrder(t);
            FOR inCreatingTrip(Order order) 
                    AND NOT trip(order) DO {
                trip(order) <- t;
            }
            DIALOG optionTrip OBJECTS t = t DOCKED NOCANCEL DO {
                overPrint(t);
            }
        }
    }
} TOOLBAR CHANGEKEY 'ctrl ENTER';

cancelTrip 'Отменить'(Order order) = {
    trip (order) <- NULL;
    EXEC apply();
} TOOLBAR CHANGEKEY 'ctrl DELETE';

hideInCreatingTrip = TRUE AND NOT (calcPart(Order o) OR calcFull(o));

FORM tripDashboard 'Загрузка транспорта' AUTOREFRESH 60

    OBJECTS d = DATE PANEL
    PROPERTIES(d) date = VALUE

    OBJECTS o = Order GRID
    PROPERTIES(o) inCreatingTrip READONLYIF hideInCreatingTrip(o)
    PROPERTIES(o) READONLY BACKGROUND backgroundStatusPicking(o) nameDriverTrip, number, date,
                            nameTo, nameToStock, addressToStock, packQuantity, 
                            namePerformer, startDateTime, finishDateTime
    PROPERTIES() createTripOrder SHOWIF countInCreatingTripOrder() TODRAW o
    //FILTERS calcPartOrder(o) AND NOT tripOrder(o)
    FILTERS countPickingOrder(o) AND NOT trip(o)

    OBJECTS to = Order GRID
    PROPERTIES(to) READONLY nameDriverTrip, dateTrip, numberTrip,
                            number, date, finishDateTime,
                            nameTo, nameToStock, addressToStock, packQuantity, quantityOrderDetail
                            
    PROPERTIES(to) editTrip TOOLBAR, cancelTrip
    FILTERS trip(to) //AND driverTripOrder(to) == currentUser()
    FILTERGROUP filters FILTER 'Заказы на дату' date(o)<=d 'F5' DEFAULT
    FILTERGROUP filters1 FILTER 'Рейсы на дату' dateTrip(to)==d 'F5' DEFAULT

;

DESIGN tripDashboard {
    BOX {
    NEW baseContainer {
        fill = 1;
        type = SPLITV;
        NEW firstContainer {
            fill = 1;
            MOVE BOX(to){
                caption = 'Вывезенные заказы';
                PROPERTY(addressToStock(to)){
                    caption = 'Пункт разгрузки';
                    minimumCharWidth = 40;
                }
                PROPERTY(nameTo(to)){
                    minimumCharWidth = 45;
                }                
                PROPERTY(nameToStock(to)){
                    minimumCharWidth = 45;
                }
                PROPERTY(number(to)) {
                    caption = 'Номер заказа';
                }
                PROPERTY(date(to)) {
                    caption = 'Дата заказа';
                }
            }
        }
        NEW secondContainer BEFORE firstContainer {
            fill = 1;
            MOVE BOX(o){
                caption = 'Заказы к вывозу';
                PROPERTY(addressToStock(o)){
                    caption = 'Пункт разгрузки';
                    minimumCharWidth = 40;
                }
                PROPERTY(nameTo(o)){
                    minimumCharWidth = 45;
                }
                PROPERTY(nameToStock(o)){
                    minimumCharWidth = 45;
                }
                PROPERTY(number(o)) {
                    caption = 'Номер заказа';
                }
                PROPERTY(date(o)) {
                    caption = 'Дата заказа';
                    }
                PROPERTY(namePerformer(o)) {
                    minimumCharWidth = 25;
                    }    
                PROPERTY(inCreatingTrip(o)) {
                    changeKey = 'SPACE';
                    }
                }
            }
    }
    NEW thirdContainer BEFORE baseContainer {
        type = CONTAINERH;
        caption = 'Шапка';
        MOVE PROPERTY(date);

    }

    MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    saleDashboardNavigator {
        NEW tripDashboard;
    }
}