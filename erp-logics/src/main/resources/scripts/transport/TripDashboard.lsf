MODULE TripDashboard;

REQUIRE Dashboard, OrderInvoice, TripOrder, OrderPickingOrder, TripInvoiceConsignmentBy;

NAMESPACE Trip;

inCreatingTripOrder 'Отметить' = DATA LOCAL BOOLEAN (Order);
inCreatingTripStock = GROUP SUM 1 IF inCreatingTripOrder(order) BY toStockOrder(order);

countInCreatingTripOrder = GROUP SUM 1 IF inCreatingTripOrder(order);

editTripOrder 'Редактировать рейс' = ACTION (order) {
    FOR t == tripOrder(order) DO {
        FORM trip OBJECTS t=t MODAL;
        IF formResult() == FormResult.ok THEN {
            apply();
        } ELSE {
            cancel();
        }
    }
}

FORM optionTrip 'Настройки рейса'
    OBJECTS t = Trip FIXED PANEL
    PROPERTIES (t) dateTrip, timeTrip, nameDriverTrip, nameTruckTrip
    PROPERTIES (t) nameIssuanceAllowedTrip, nameIssuanceExecutedTrip, nameForwarderTrip, nameLoadingExecuterTrip, 
                   nameWayOfLoadingTrip, nameUnloadingExecuterTrip, nameWayOfUnloadingTrip, codeLoadingTrip, documentNameCurrencyTrip,
                   timeOfArrivalTrip, downtimeTrip        
;
DESIGN optionTrip {
//    t.panel.props {
//        columns = 2;
//    }
    NEW consignmentContainer {
        caption = 'Атрибуты накладных';
        NEW issuanceContainer {
            caption = 'Отпуск';
            MOVE PROPERTY(nameIssuanceAllowedTrip(t));
            MOVE PROPERTY(nameIssuanceExecutedTrip(t));
            MOVE PROPERTY(nameForwarderTrip(t));
        }
        NEW loadingContainer {
            caption = 'ППР';
            MOVE PROPERTY(nameLoadingExecuterTrip(t));
            MOVE PROPERTY(nameWayOfLoadingTrip(t));
            MOVE PROPERTY(nameUnloadingExecuterTrip(t));
            MOVE PROPERTY(nameWayOfUnloadingTrip(t));
            MOVE PROPERTY(codeLoadingTrip(t));
            MOVE PROPERTY(timeOfArrivalTrip(t));
            MOVE PROPERTY(downtimeTrip(t));
        }
        NEW dopContainer {
            caption = 'Дополнительно';
            MOVE PROPERTY(documentNameCurrencyTrip(t));
        }

    }
    MOVE functions.box;
}

overPrintTrip = ABSTRACT ACTION LIST (Trip);
overCreateTripOrder = ABSTRACT ACTION LIST (Trip);
createTripOrder 'Взять в рейс' = ACTION () {
    FOR ADDOBJ t = Trip DO {
        dateTrip(t) <- currentDate();
        timeTrip(t) <- currentTime();
        overCreateTripOrder(t);
        FORM optionTrip OBJECTS t = t MODAL;

        IF formResult() == FormResult.ok THEN {
            FOR inCreatingTripOrder(order) 
                    AND NOT tripOrder(order) DO {
                tripOrder(order) <- t;
            }
            overPrintTrip(t);
            apply();
        } ELSE {
            cancel();
        }
    }
} TOOLBAR EDITKEY 'ctrl ENTER';

cancelTripOrder 'Отменить' = ACTION (order) {
    ASSIGN tripOrder (order) <- NULL;
    EXEC apply();
} TOOLBAR EDITKEY 'ctrl DELETE';

hideInCreatingTripOrder = TRUE AND NOT (calcPartOrder(o) OR calcFullOrder(o));

FORM tripDashboard 'Загрузка транспорта' AUTOREFRESH 60

    OBJECTS d = DATE FIXED PANEL
    PROPERTIES(d) date = OBJVALUE

    OBJECTS o = Order FIXED GRID
    PROPERTIES(o) inCreatingTripOrder READONLYIF hideInCreatingTripOrder(o)
    PROPERTIES(o) READONLY BACKGROUND backgroundStatusPickingOrder(o) nameDriverTripOrder, numberOrder, dateOrder,
                            nameToOrder, nameToStockOrder, addressToStockOrder, packQuantityOrder, 
                            namePerformerOrder, startDateTimeOrder, finishDateTimeOrder
    PROPERTIES() createTripOrder SHOWIF countInCreatingTripOrder() TODRAW o
    //FILTERS calcPartOrder(o) AND NOT tripOrder(o)
    FILTERS countPickingOrderOrder(o) AND NOT tripOrder(o)

    OBJECTS to = Order FIXED GRID
    PROPERTIES(to) READONLY nameDriverTripOrder, dateTripOrder, numberTripOrder,
                            numberOrder, dateOrder, finishDateTimeOrder,
                            nameToOrder, nameToStockOrder, addressToStockOrder, packQuantityOrder, quantityOrderDetailOrder
                            
    PROPERTIES(to) editTripOrder TODRAW to FORCE PANEL TOOLBAR, cancelTripOrder
    FILTERS tripOrder(to) //AND driverTripOrder(to) == currentUser()
    FILTERGROUP filters FILTER 'Заказы на дату' dateOrder(o)<=d 'F5' DEFAULT
    FILTERGROUP filters1 FILTER 'Рейсы на дату' dateTripOrder(to)==d 'F5' DEFAULT

;

DESIGN tripDashboard {
    main{
    NEW baseContainer {
        fill = 1;
        type = SPLITV;
        NEW firstContainer {
            fill = 1;
            MOVE to.box{
                caption = 'Вывезенные заказы';
                PROPERTY(addressToStockOrder(to)){
                    caption = 'Пункт разгрузки';
                    minimumCharWidth = 40;
                }
                PROPERTY(nameToOrder(to)){
                    minimumCharWidth = 45;
                }                
                PROPERTY(nameToStockOrder(to)){
                    minimumCharWidth = 45;
                }
                PROPERTY(numberOrder(to)) {
                    caption = 'Номер заказа';
                }
                PROPERTY(dateOrder(to)) {
                    caption = 'Дата заказа';
                }
            }
        }
        NEW secondContainer BEFORE firstContainer {
            fill = 1;
            MOVE o.box{
                caption = 'Заказы к вывозу';
                PROPERTY(addressToStockOrder(o)){
                    caption = 'Пункт разгрузки';
                    minimumCharWidth = 40;
                }
                PROPERTY(nameToOrder(o)){
                    minimumCharWidth = 45;
                }
                PROPERTY(nameToStockOrder(o)){
                    minimumCharWidth = 45;
                }
                PROPERTY(numberOrder(o)) {
                    caption = 'Номер заказа';
                }
                PROPERTY(dateOrder(o)) {
                    caption = 'Дата заказа';
                    }
                PROPERTY(namePerformerOrder(o)) {
                    minimumCharWidth = 25;
                    }    
                PROPERTY(inCreatingTripOrder(o)) {
                    editKey = 'SPACE';
                    }
                }
            }
    }
    NEW thirdContainer BEFORE baseContainer {
        type = CONTAINERH;
        caption = 'Шапка';
        MOVE PROPERTY(date);

    }

    MOVE functions.box;
    }
}

NAVIGATOR {
    saleDashboardNavigator {
        ADD tripDashboard;
    }
}