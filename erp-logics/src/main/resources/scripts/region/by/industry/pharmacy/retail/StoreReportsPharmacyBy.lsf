MODULE StoreReportsPharmacyBy;

REQUIRE ItemPharmacyBy, StockReports, Store, OrderLedger;

NAMESPACE StoreReports;

//отчет по обязательному перечню
minBalance 'Минимальный остаток' (PharmacyCompalsoryGroup group, DepartmentStore departmentStore) =
    minBalance(group, pharmacyCategory(store(departmentStore))) IF active(group);

currentBalance 'Текущий остаток (обязат.)' = GROUP SUM 
    IF active(pharmacyCompalsoryGroup(Sku sku)) THEN currentBalance(sku, Stock stock)
    BY pharmacyCompalsoryGroup(sku), stock;
    
availableQuantity 'Доступное количество (обязат.)' = GROUP SUM 
    IF active(pharmacyCompalsoryGroup(Sku sku)) THEN availableQuantity(sku, Stock stock)
    BY pharmacyCompalsoryGroup(sku), stock;    
    
notEnoughBalance (PharmacyCompalsoryGroup group, DepartmentStore departmentStore) = currentBalance(group, departmentStore) < minBalance(group, departmentStore) OR
    (minBalance(group, departmentStore) AND NOT currentBalance(group, departmentStore));
notEnougAvailableQuantity (PharmacyCompalsoryGroup group, DepartmentStore departmentStore) = availableQuantity(group, departmentStore) < minBalance(group, departmentStore) OR 
    (minBalance(group, departmentStore) AND NOT availableQuantity(group, departmentStore)); 
      
currentBalance 'Текущий остаток (осн.)' = GROUP SUM currentBalance(Sku sku, Stock stock)
    BY pharmacyBaseGroup(sku), stock;
    
availableQuantity 'Доступное количество (осн.)' = GROUP SUM availableQuantity(Sku sku, Stock stock)
    BY pharmacyBaseGroup(sku), stock;        
    
FORM currentBalanceCompalsoryGroups 'Остатки по обязательному перечню'
     OBJECTS s = DepartmentStore PANEL
     PROPERTIES(s) name SELECTOR
     
     OBJECTS g = PharmacyCompalsoryGroup GRID
     PROPERTIES (g) READONLY name
     PROPERTIES (g, s) READONLY minBalance, currentBalance, availableQuantity
     ORDER name(g)
     FILTERGROUP enough
         FILTER 'Остаток меньше нормы' notEnoughBalance(g, s)
         FILTER 'Доступно меньше нормы' notEnougAvailableQuantity(g, s)
    FILTERGROUP active
        FILTER 'Активные' active(g) DEFAULT
     
     OBJECTS i = Item GRID
     PROPERTIES (i) READONLY name ON CONTEXTMENU showBalanceMovementSku(i, s) ON CONTEXTMENU showBalancePriceSku(i, s) ON CONTEXTMENU showBalanceReserveSku(i, s), 
                             idBarcode, nameCountry, nameSubstance, nameManufacturer, nameSupplierLastOrderBatch
     FILTERGROUP balance
         FILTER 'С остатком' currentBalance(i, s)                       
                             
     PROPERTIES (i, s) currentBalance, availableQuantity
     ORDER name(i)
     FILTERS pharmacyCompalsoryGroup(i)==g
 ;

@extendFormFilterStockAccess(s, currentBalanceCompalsoryGroups);

FORM currentBalanceBaseGroups 'Остатки по основному перечню'
    OBJECTS s = DepartmentStore PANEL
    PROPERTIES(s) name SELECTOR
    
    OBJECTS g = PharmacyBaseGroup GRID
    PROPERTIES (g) READONLY name
    PROPERTIES (g, s) READONLY currentBalance, availableQuantity
    ORDER name(g)
    FILTERGROUP enough
        FILTER 'Без остатка' NOT currentBalance(g, s)
    
    OBJECTS i = Item GRID
    PROPERTIES (i) READONLY name ON CONTEXTMENU showBalanceMovementSku(i, s) ON CONTEXTMENU showBalancePriceSku(i, s) ON CONTEXTMENU showBalanceReserveSku(i, s), 
                            idBarcode, nameCountry, nameSubstance, nameManufacturer, nameSupplierLastOrderBatch
    FILTERGROUP balance
        FILTER 'С остатком' currentBalance(i, s)                       
                            
    PROPERTIES (i, s) currentBalance, availableQuantity
    ORDER name(i)
    FILTERS pharmacyBaseGroup(i)==g
;

@extendFormFilterStockAccess(s, currentBalanceBaseGroups);

NAVIGATOR {
    stockNavigator {
        stockReports {
            ADD currentBalanceCompalsoryGroups;
            ADD currentBalanceBaseGroups;
        }
    }
}