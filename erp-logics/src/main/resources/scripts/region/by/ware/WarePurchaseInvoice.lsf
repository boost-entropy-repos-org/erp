MODULE WarePurchaseInvoice;

REQUIRE WareInvoice, PurchaseInvoice, PurchaseShipment, WarePurchaseOrder;

NAMESPACE Purchase;

@defineInvoiceWare(Purchase);

extraShipmentPriceUserInvoiceDetail(detail) += IF itemWareUserInvoiceDetailUserInvoiceDetail(detail) THEN
                                                   -calcShipmentPriceUserInvoiceDetail(detail)
                                               ELSE
                                                   calcShipmentPriceUserInvoiceDetail(wareUserInvoiceDetailUserInvoiceDetail(detail));
banBarcodeInvoiceDetail(d) += skuInvoiceDetail(d) IS Ware; 

skipCreateUserInvoiceOrderDetail(d) += TRUE IF itemWareUserOrderDetailUserOrderDetail(d);


overFillUserInvoiceDetailOrderDetail(i, o) += ACTION (i, o) {
    IF o IS OrderDetail AND wareItem(skuUserInvoiceDetail(i)) AND NOT skipCreateWareUserInvoiceDetail(i) THEN {
    // делаем, чтобы не INLINE'лось выполнение, чтобы строки посуды при создании из заказа шли всегда после соответствующих строк товаров
        IF 1 == 2 THEN
            BREAK;
        createWareUserInvoiceDetail(i);   
    } 
};

prevListSkuPriceUserInvoiceDetail(t, d) += NUMERIC[14,2](round2(invoicePriceUserInvoiceDetail(d)*100/(100+calcValueVATUserInvoiceDetail(d)))) IF itemWareUserInvoiceDetailUserInvoiceDetail(d) AND t == priceListTypeUserInvoiceDetail(d);