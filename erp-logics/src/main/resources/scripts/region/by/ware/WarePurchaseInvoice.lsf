MODULE WarePurchaseInvoice;

REQUIRE WareInvoice, PurchaseInvoice, PurchaseShipment, WarePurchaseOrder;

NAMESPACE Purchase;

@defineInvoiceWare(Purchase);

extraShipmentPrice(UserInvoiceDetail detail) += IF itemWareUserInvoiceDetail(detail) THEN
                                                   -calcShipmentPrice(detail)
                                               ELSE
                                                   calcShipmentPrice(wareUserInvoiceDetail(detail));
banBarcode(InvoiceDetail d) += sku(d) IS Ware; 

skipCreateUserInvoice(UserOrderDetail d) += TRUE IF itemWareUserOrderDetail(d);


overFill(UserInvoiceDetail i, OrderDetail o) += ACTION {
    IF o IS OrderDetail AND ware(sku(i)) AND NOT skipCreateWare(i) THEN {
    // делаем, чтобы не INLINE'лось выполнение, чтобы строки посуды при создании из заказа шли всегда после соответствующих строк товаров
        IF 1 == 2 THEN
            BREAK;
        createWare(i);   
    } 
};

prevList(PriceListType t, UserInvoiceDetail d) += WHEN t == priceListType(d) AND itemWareUserInvoiceDetail(d) AND invoicePrice(d) THEN NUMERIC[16,4](round2(invoicePrice(d)*100/(100+calcValueVAT(d))));

WHEN SESSION 
     (CHANGED(sku(UserInvoiceDetail detail)) OR CHANGED(shipmentQuantity(detail))) AND
     ware(sku(detail)) AND NOT skipCreateWare(detail) DO
        shipmentQuantity(UserInvoiceDetail d) <- shipmentQuantity(detail) WHERE d == wareUserInvoiceDetail(detail); 