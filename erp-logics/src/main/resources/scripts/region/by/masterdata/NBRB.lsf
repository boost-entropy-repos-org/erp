MODULE NBRB;

REQUIRE System,
        Currency,
        SchedulerDefaultData;


//---------------------------------------------- Импорт курсов НБРБ -----------------------------------------------------//

GROUP nbrb 'Курсы НБРБ' : public;

importNBRBExchangeRateDateFrom 'Дата с' = DATA DATE () IN nbrb;
importNBRBExchangeRateDateTo 'Дата по' = DATA DATE () IN nbrb;

importNBRBExchangeRateDaysCount 'Кол-во дней' = DATA INTEGER() IN nbrb;

importNBRBExchangeRateDateFromDateToAction 'Импортировать курсы НБРБ' = ACTION CUSTOM 'lsfusion.erp.region.by.masterdata.ImportNBRBExchangeRateDateFromDateToActionProperty' (Currency) IN nbrb;
importNBRBExchangeRateLastDaysAction 'Импортировать последние курсы НБРБ' = ACTION CUSTOM 'lsfusion.erp.region.by.masterdata.ImportNBRBExchangeRateLastDaysActionProperty' (Currency) IN nbrb;

importNBRBExchangeRateDateFromDateTo 'Импортировать курсы НБРБ' = ACTION () {
    FOR c IS Currency DO {
        EXEC importNBRBExchangeRateDateFromDateToAction(c);
    }
    EXEC apply();
} IN nbrb;

importNBRBExchangeRateLastDays 'Импортировать последние курсы НБРБ' = ACTION () {
    FOR c IS Currency DO {
        EXEC importNBRBExchangeRateLastDaysAction(c);
    }
    EXEC apply();
} IN nbrb;

EXTEND FORM typeExchangeCurrencyDate
    PROPERTIES() importNBRBExchangeRateDateFrom, importNBRBExchangeRateDateTo, importNBRBExchangeRateDateFromDateTo
    PROPERTIES() importNBRBExchangeRateDaysCount, importNBRBExchangeRateLastDays
;

EXTEND DESIGN typeExchangeCurrencyDate {
    importExchangeRates {
        ADD NOGROUP.nbrb {type = CONTAINERH;}
        NEW lastDaysContainer {
            type = CONTAINERH;
            ADD PROPERTY(importNBRBExchangeRateDaysCount());
            ADD PROPERTY(importNBRBExchangeRateLastDays());
        }
        
    }
}

loadDefaultScheduledTasks () += ACTION ()  { 
    loadDefaultScheduledTask ('Загрузка курсов НБРБ', 2014_07_01_15:00, 43200, SchedulerStartType.afterFinish);
    loadDefaultScheduledTaskDetail ('Загрузка курсов НБРБ', 1, 'NBRB.importNBRBExchangeRateLastDays[]');
}

fillCrossDateFromTo 'Пересчитать обратный и кросс-курс за период' = ACTION (dateFrom, dateTo) {
    LOCAL dateCur = DATE();
    
    dateCur() <- dateFrom;
    WHILE dateCur() <= dateTo DO { 
        FOR parentTypeExchange(t) DO {
            IF isReversTypeExchange(t) THEN {    
                rateExchange(t, c, date) <- NUMERIC[15,8]( 1 / (rateExchange(parentTypeExchange(t), currencyTypeExchange(t), dateCur()) IF rateExchange(parentTypeExchange(t), currencyTypeExchange(t), dateCur())!=0)) 
                    WHERE date == dateCur() AND c ==currencyTypeExchange(parentTypeExchange(t));
            } ELSE {
                rateExchange(t, c, date) <- NUMERIC[15,8](rateOnTypeExchangeCurrencyDate(parentTypeExchange(t), currencyTypeExchange(t),dateCur())/(rateOnTypeExchangeCurrencyDate(parentTypeExchange(t), c, dateCur()) IF rateOnTypeExchangeCurrencyDate(parentTypeExchange(t), c, dateCur())!=0)) WHERE date == dateCur() AND c IS Currency;
            
            }        
        }
        dateCur() <- sumDate(dateCur(), 1);
    }
}

fillCrossPeriod 'Пересчитать обратный и кросс-курс за период' = ACTION () {
    IF importNBRBExchangeRateDateFrom() AND importNBRBExchangeRateDateTo() THEN {
        fillCrossDateFromTo(importNBRBExchangeRateDateFrom(), importNBRBExchangeRateDateTo());
        apply();
    } ELSE {
        MESSAGE 'Не задан период';
    }    
} IN nbrb;

fillCrossLastDays 'Пересчитать обратный и кросс-курс последние' = ACTION () {    
    IF importNBRBExchangeRateDaysCount() THEN {        
        fillCrossDateFromTo(subtractDate(currentDate(), importNBRBExchangeRateDaysCount()), currentDate());
        apply();
    } ELSE {
        MESSAGE 'Не указано количество дней для пересчета';
    }    
}

EXTEND FORM typeExchangeCurrencyDate
    PROPERTIES() fillCrossPeriod, fillCrossLastDays
;
EXTEND DESIGN typeExchangeCurrencyDate {
    lastDaysContainer {
        ADD PROPERTY(fillCrossLastDays());
    }
}
