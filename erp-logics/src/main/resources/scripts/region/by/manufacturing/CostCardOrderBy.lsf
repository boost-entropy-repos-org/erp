MODULE  CostCardOrderBy;

REQUIRE PricingProductionOutput, LegalEntityBy, BOMNutrition;
NAMESPACE Production;

// ----------------  Калькуляционная карта ------------------- //

calcMultiplierSkuOrder(sku, order)= OVERRIDE (1.000 IF sku IS Sku AND order IS Order), multiplierSkuOrder(sku, order);

quantityBOMSkuOrder (BOM, sku, order) = [GROUP SUM recBruttoNodeQuantityBOMSkuDate (BOM, sku, dateOrder(order)) * calcMultiplierSkuOrder(sku, order)
    BY BOM, sku, order](BOM, sku, order) IF bruttoQuantitySkuOrder(sku, order);
quantityProductDetailSku 'Норма' (productDetail, sku) = quantityBOMSkuOrder(BOMProduct(productProductDetail(productDetail)), sku, orderProductDetail(productDetail));

totalPriceSkuOrder 'Цена компонента' (sku, order) = OVERRIDE bruttoPriceSkuOrder(sku,order), substitutePriceSkuOrder(sku,order);
totalPremiumPriceSkuOrder 'Цена компонента с надбавкой'(sku, order) = totalPriceSkuOrder(sku,order)*multiplierCalcSkuOrder(sku, order);

quantityInBOMProductDetail 'Кол-во изделий в спец.'(productDetail)= quantityProduct(productProductDetail(productDetail));
productsSumInBOMProductDetail 'Сумма изделий в спец.' = roundPriceCurrency((quantityInBOMProductDetail(productDetail) * productsPriceProductDetail(productDetail)), currencyProductDetail(productDetail));

//--
quantityProductSkuOrder (product, sku, order) = [GROUP SUM recPricePercentProductSkuDate (product, sku, dateOrder(order))* calcMultiplierSkuOrder(sku, order)/100 BY product, sku, order](product, sku, order) IF bruttoQuantitySkuOrder(sku, order);

quantityProductProductDetailSku 'Норма с учетом коэфф.цены'(productDetail, sku) = quantityProductSkuOrder(
    productProductDetail(productDetail), sku, orderProductDetail(productDetail)); // св-во необходимо, т.к. в BOM-ах есть уд.вес цены => мы его включаем в норму. Пока так, в будущем возможно надо будет включать в надбавку.

componentsSumProductDetailSku 'Сумма компонента (с/с)' (productDetail,sku)=  quantityProductProductDetailSku(productDetail, sku) *totalPriceSkuOrder (sku, orderProductDetail(productDetail));
premiumComponentsSumProductDetailSku 'Сумма компонента с надбавками' (productDetail, sku)= quantityProductProductDetailSku (productDetail, sku)*totalPriceSkuOrder (sku, orderProductDetail(productDetail))*multiplierCalcSkuOrder(sku, orderProductDetail(productDetail));

//--
totalVATSumProductDetailSku 'Сумма НДС' (productDetail, sku)=  premiumComponentsSumProductDetailSku (productDetail, sku)*valueVATSkuOrder(sku, orderProductDetail(productDetail))/(100+valueVATSkuOrder(sku, orderProductDetail(productDetail)));
VATSumProductDetail 'Сумма НДС компонентов' (productDetail) = GROUP SUM totalVATSumProductDetailSku (productDetail, sku) BY productDetail;
//--
descriptionBOMProductDetail 'Спецификация'(productDetail) = descriptionBOM(BOMProduct(productProductDetail(productDetail)));
shortNameUOMProductProductDetail 'Ед.изм. в спец.'(productDetail)= shortNameUOMProduct(productProductDetail(productDetail));
recipesProductDetail 'Номер по сборнику рецептов' (productDetail)= recipesProduct(productProductDetail(productDetail));
//--
componentsSumInBOMProductDetail 'Сумма компонента для изделий в спец.' (productDetail)= componentsPriceProductDetail(productDetail)*quantityInBOMProductDetail(productDetail);
premiumComponentsSumInBOMProductDetail 'Сумма компонента с надбавкой для изделий в спец.' (productDetail) = calcPremiumComponentsPriceProductDetail(productDetail)*quantityInBOMProductDetail(productDetail);
//--
VATMarkupSumInBOMProductDetail 'НДС и надбавка в спец' (productDetail) =  productsSumInBOMProductDetail(productDetail) (-) componentsSumInBOMProductDetail(productDetail);
retailVATSumInBOMProductDetail 'Сумма НДС в спец' (productDetail) = [X*Y/(100+Y)](VATMarkupSumInBOMProductDetail(productDetail), valueVATProductDetail(productDetail));
retailMarkupSumInBOMProductDetail 'Сумма надбавки' (productDetail) =  VATMarkupSumInBOMProductDetail(productDetail) (-) retailVATSumInBOMProductDetail(productDetail);

retailMarkupPriceProductDetail 'Цена надбавки (ед.)' (productDetail)= retailMarkupSumInBOMProductDetail(productDetail)/quantityInBOMProductDetail(productDetail);
retailVATPriceProductDetail 'Цена НДС (ед.)' (productDetail)= retailVATSumInBOMProductDetail(productDetail)/quantityInBOMProductDetail(productDetail);

//--
@defineDocumentUNPLegalEntity(order, productsLegalEntityStock, );

//--  Нетто

nettoQuantityBOMSkuOrder (BOM, sku, order) = [GROUP SUM recNettoNodeQuantityBOMSku (BOM, sku) * calcMultiplierSkuOrder(sku, order)
    BY BOM, sku, order](BOM, sku, order) IF bruttoQuantitySkuOrder(sku, order);

nettoQuantityProductDetailSku 'Нетто' (productDetail, sku) = nettoQuantityBOMSkuOrder(BOMProduct(productProductDetail(productDetail)), sku, orderProductDetail(productDetail));
fatsProductDetailSku 'Жиры'(productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*fatsItem(sku);
carbohydratesProductDetailSku 'Углеводы' (productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*carbohydratesItem(sku);
proteinsProductDetailSku 'Белки' (productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*proteinsItem(sku);
energyProductDetailSku 'Энерг.ценность'(productDetail, sku) = nettoQuantityProductDetailSku (productDetail, sku)*netWeightItem(sku)*10*energyItem(sku);

fatsInBOMProductDetail 'Жиры'(productDetail) = GROUP SUM fatsProductDetailSku(productDetail, sku) BY productDetail;
carbohydratesInBOMProductDetail 'Углеводы'(productDetail) = GROUP SUM carbohydratesProductDetailSku(productDetail, sku) BY productDetail;
proteinsInBOMProductDetail 'Белки'(productDetail) = GROUP SUM proteinsProductDetailSku(productDetail, sku) BY productDetail;
energyInBOMProductDetail 'Энерг.ценность'(productDetail) = GROUP SUM energyProductDetailSku(productDetail, sku) BY productDetail;

fatsProductDetail 'Жиры (ед.)'(productDetail) = fatsInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));
carbohydratesProductDetail 'Углеводы (ед.)'(productDetail) = carbohydratesInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));
proteinsProductDetail 'Белки (ед.)'(productDetail) = proteinsInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));
energyProductDetail 'Энерг.ценность (ед.)'(productDetail) = energyInBOMProductDetail(productDetail) / (quantityInBOMProductDetail(productDetail)*10*netWeightItem(skuProductDetail(productDetail)));

netWeightProduct 'Вес нетто, кг' (product)= netWeightItem(skuProduct(product));
descriptionBOMProduct 'Спецификация'(product) = descriptionBOM(BOMProduct(product));

FORM costCardOrderBy 'Калькуляционная карта'

    OBJECTS o = Order FIXED PANEL
    PROPERTIES(o) nameProductsLegalEntityStockOrder, UNPProductsLegalEntityStockOrder, addressProductsLegalEntityStockOrder,
                  nameComponentsStockOrder, nameProductsStockOrder, nameNumeratorOrder, numberOrder, seriesOrder, seriesNumberOrder,
                  dateOrder, timeOrder, fromDateOrder, toDateOrder, noteOrder, quantityProductDetailOrder, quantityComponentDetailOrder

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) indexProductDetail, idBarcodeSkuProductDetail, descriptionBOMProductDetail, quantityInBOMProductDetail, shortNameUOMProductProductDetail, nameSkuProductDetail,  nameProductProductDetail, shortNameUOMProductDetail, quantityProductDetail,
                   componentsPriceProductDetail, componentsSumInBOMProductDetail, premiumComponentsSumInBOMProductDetail, VATSumProductDetail, retailMarkupSumInBOMProductDetail
    PROPERTIES(pd) markupProductDetail, productsPriceProductDetail, productsSumInBOMProductDetail, valueVATProductDetail,
                   retailMarkupPriceProductDetail, retailMarkupSumProductDetail, retailVATPriceProductDetail, retailVATSumInBOMProductDetail, recipesProductDetail

    FILTERS orderProductDetail(pd)==o

    OBJECTS s = Sku
    PROPERTIES(pd,s)quantityProductDetailSku, quantityProductProductDetailSku, componentsSumProductDetailSku, premiumComponentsSumProductDetailSku, totalVATSumProductDetailSku
    PROPERTIES(s,o) nameSkuSkuOrder, idBarcodeSkuSkuOrder, shortNameUOMSkuSkuOrder, totalPriceSkuOrder, valueVATSkuOrder, markupSkuOrder, totalPremiumPriceSkuOrder

    FILTERS quantityProductDetailSku(pd,s)

;
printCostCardOrder 'Калькуляционная карта' (order) = ACTION FORM costCardOrderBy OBJECTS o = order PRINT  IMAGE 'print.png' IN printGroup;

FORM intakeSheetOrderBy 'Заборный лист'

    OBJECTS o = Order FIXED PANEL
    PROPERTIES(o) nameProductsLegalEntityStockOrder, nameComponentsStockOrder, nameProductsStockOrder, numberOrder, seriesOrder, seriesNumberOrder,
                  dateOrder, timeOrder, fromDateOrder, toDateOrder

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) indexProductDetail, idBarcodeSkuProductDetail, descriptionBOMProductDetail, nameSkuProductDetail, shortNameUOMProductDetail,
                   componentsPriceProductDetail, productsPriceProductDetail

    FILTERS orderProductDetail(pd)==o

;
printIntakeSheetOrder 'Заборный лист' (order) = ACTION FORM intakeSheetOrderBy OBJECTS o = order PRINT  IMAGE 'print.png' IN printGroup;
EXTEND FORM orders
    PROPERTIES(o) FORCE PANEL printCostCardOrder, printIntakeSheetOrder
;

selectDateProduct = DATA SESSION BOOLEAN (DATE, Product);

FORM technologicalCardsProductBy 'Технологическая карта'
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES (dt) OBJVALUE

    OBJECTS p = Product
    PROPERTIES(p) indexProduct, nameSkuProduct, idBarcodeSkuProduct, shortNameUOMProduct, quantityProduct, fastProduct,
                  carbohydratesProduct, proteinsProduct, energyProduct, recipesProduct
    FILTERS       selectDateProduct(dt,p)

    OBJECTS c = Component
    PROPERTIES(c) indexComponent, nameMaterialComponent, idBarcodeSkuComponent, shortNameUOMComponent, nettoQuantityComponent
    PROPERTIES(c,dt) bruttoQuantityComponentDate
    PROPERTIES(c) fatsComponent, carbohydratesComponent, proteinsComponent, energyComponent
    FILTERS       BOMProduct(p) == BOMComponent(c)

;

printTechnologicalCardBOM 'Технологическая карта'  = ACTION (BOM) NEWSESSION AUTOAPPLY {
    FORM dialogDate MODAL;
        IF formResult() == FormResult.ok THEN {
            FOR BOMProduct(product) == BOM DO {
                ASSIGN selectDateProduct(date,product) <- product IS Product WHERE date == chosenDate('d');
            }
            FORM technologicalCardsProductBy  OBJECTS dt = chosenDate('d') MODAL PRINT;
        }
} IMAGE 'print.png' IN printGroup;

EXTEND FORM BOMs
    PROPERTIES(b) FORCE PANEL printTechnologicalCardBOM
;
EXTEND DESIGN BOMs {
    printTab {
        ADD b.printGroup;
    }
}

printTechnologicalCardOrder 'Технологическая карта'  = ACTION (order) NEWSESSION AUTOAPPLY {

    FOR quantityProductOrder(product,order) DO {
        ASSIGN selectDateProduct(date,product) <- product IS Product WHERE date == dateOrder(order);
    }
    FORM technologicalCardsProductBy  OBJECTS dt = dateOrder(order) MODAL PRINT;

} IMAGE 'print.png' IN printGroup;

EXTEND FORM orders
    PROPERTIES(o) FORCE PANEL printTechnologicalCardOrder
;
//EXTEND DESIGN BOMs {
//    printTab {
//        ADD b.printGroup;
//    }
//}

// todo: глючит иерархия, печатает то два объекта (product) то шесть. Оставил для решения вопроса, если понадобится.
//FORM technologicalCardBOMBy 'Технологическая карта'
//    OBJECTS dt=DATE FIXED PANEL
//    PROPERTIES (dt) OBJVALUE
//    OBJECTS b=BOM FIXED PANEL
//
//    PROPERTIES(b) READONLY descriptionBOM, quantityProductBOM, nettoQuantityComponentBOM, pricePercentBOM,
//                  fatsBOM, carbohydratesBOM, proteinsBOM, energyBOM
//
//    OBJECTS p = Product
//    PROPERTIES(p) indexProduct, nameSkuProduct, idBarcodeSkuProduct, shortNameUOMProduct, quantityProduct, fastProduct,
//                  carbohydratesProduct, proteinsProduct, energyProduct, recipesProduct
//    FILTERS       BOMProduct(p)==b
//
//    OBJECTS c = Component
//    PROPERTIES(c) indexComponent, nameMaterialComponent, idBarcodeSkuComponent, shortNameUOMComponent, nettoQuantityComponent
//    PROPERTIES(c,dt) bruttoQuantityComponentDate
//    PROPERTIES(c) fatsComponent, carbohydratesComponent, proteinsComponent, energyComponent
//    FILTERS       BOMProduct(p) == BOMComponent(c)
//;
//printTechnologicalCardBOM 'Технологическая карта'  = ACTION (BOM) {
//    FORM dialogDate MODAL;
//    IF formResult() == FormResult.ok THEN {
//        FORM technologicalCardBOMBy OBJECTS b = BOM, dt = chosenDate('d') PRINT;
//    }
//} IMAGE 'print.png' IN printGroup;

FORM actStudyOfCulinaryBOM 'Акт контрольной проработки'

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES (dt) OBJVALUE

    OBJECTS b=BOM FIXED PANEL
    PROPERTIES(b) nameBOM, descriptionBOM, noteBOM
    PROPERTIES(b) READONLY quantityProductBOM, nettoQuantityComponentBOM, pricePercentBOM,
                  nameActStudyOfCulinaryCommitteeBOM, nameCompanyBOM, nameEmployeeCommitteeBOM READONLY, actStudyOfCulinaryCommitteeBOM
    OBJECTS p = Product
    PROPERTIES(p) indexProduct, idBarcodeSkuProduct, nameSkuProduct, shortNameUOMProduct, quantityProduct, pricePercentProduct, netWeightProduct, descriptionBOMProduct

    FILTERS       BOMProduct(p) == b

    OBJECTS c = Component
    PROPERTIES(c) indexComponent, idBarcodeSkuComponent, nameMaterialComponent, shortNameUOMComponent, nameTechnologyComponent, nettoQuantityComponent
    PROPERTIES(c,dt) wastageComponentDate, bruttoQuantityComponentDate

    FILTERS       BOMComponent(c) == BOMProduct(p)

    OBJECTS e=Employee
    PROPERTIES(e) READONLY nameContact, namePositionEmployee
    FILTERS       inCommitteeBOMEmployee(b,e)

;
printActStudyOfCulinaryBOM 'Акт контрольной проработки'  = ACTION (BOM) NEWSESSION AUTOAPPLY {

    FORM dialogDate MODAL;
        IF formResult() == FormResult.ok THEN {
            FORM actStudyOfCulinaryBOM  OBJECTS dt = chosenDate('d'), b = BOM MODAL PRINT;
        }

} IMAGE 'print.png' IN printGroup;

EXTEND FORM BOMs
    PROPERTIES(b) FORCE PANEL printActStudyOfCulinaryBOM
;

