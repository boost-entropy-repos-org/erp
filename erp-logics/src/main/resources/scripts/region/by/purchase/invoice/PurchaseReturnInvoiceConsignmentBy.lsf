MODULE PurchaseReturnInvoiceConsignmentBy;

REQUIRE PurchaseReturnInvoice,
        PurchaseOperationConsignmentBy,
        InvoiceConsignmentBy;

NAMESPACE PurchaseReturn;

@defineInvoiceConsignment(customer, supplier);

@implementConsignmentDocumentHeaderPrefix (invoice, invoice, Invoice);

consignmentType (Invoice consignment) += consignmentType(operation(consignment));
dataShipmentBase (Invoice consignment) += shipmentBase(operation(consignment));
ownerTrackType (Invoice consignment) += ownerTrackType(operation(consignment));
banPrint (Invoice consignment) += WHEN banOpenedPrint(operation(consignment)) AND NOT isPosted(consignment)THEN TRUE;

@deriveConsignmentPropertyALL(customerStock);

notUseDriverTruck(Invoice c) += notUseDriverTruck(operation(c));
isInvoicePrice(InvoiceDetail d) += isInvoicePriceConsignment(operation(d));

notUseIssuanceAllowed(Invoice c) += notUseIssuanceAllowed(operation(c));
notUseIssuanceExecuted(Invoice c) += notUseIssuanceExecuted(operation(c));
notPrintGr(Invoice c) += notPrintGr(operation(c));
useGoodsAccepted(Invoice c) += useGoodsAccepted(operation(c));
skipWaybill (Invoice consignment) += WHEN skipWaybill(operation(consignment)) THEN skipWaybill(operation(consignment));
skipTruck (Invoice consignment) += WHEN skipTruck(operation(consignment)) THEN skipTruck(operation(consignment));
skipDriver (Invoice consignment) += WHEN skipDriver(operation(consignment)) THEN skipDriver(operation(consignment));

defaultTruck(Invoice consignment) += WHEN isSupplier(operation(consignment)) AND truck(supplier(consignment)) THEN truck(supplier(consignment));
defaultTruck(Invoice consignment) += WHEN NOT isSupplier(operation(consignment)) AND truck(customer(consignment)) THEN truck(customer(consignment));

driver(Invoice consignment) += WHEN isSupplier(operation(consignment)) AND driver(supplier(consignment)) THEN driver(supplier(consignment));
driver(Invoice consignment) += WHEN NOT isSupplier(operation(consignment)) AND driver(customer(consignment)) THEN driver(customer(consignment));