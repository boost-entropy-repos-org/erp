MODULE SaleStatisticsReportBy;

REQUIRE SaleStatistics;

NAMESPACE Sale;


////////////////////// Тип отчета ////////////////////////////

CLASS StatisticReportType 'Тип статистического отчета';
CLASS StatisticReportTypeDetail 'Строка типа статистического отчета';

nameStatisticReportType 'Наименование' = DATA VARISTRING[255] (StatisticReportType) MINCHARWIDTH 20 PREFCHARWIDTH 30 IN documentPrm;
@defineDocument(statisticReportType);
@deriveDocumentHeaderTimePrefix(StatisticReportType, );


@deriveDocumentHeaderTimePrefix(StatisticReportType, );

statisticGroupTypeStatisticReportType = DATA StatisticGroupType (StatisticReportType) AUTOSET NOT NULL DELETE;
nameStatisticGroupTypeStatisticReportType 'Тип классификатора' = nameStatisticGroupType(statisticGroupTypeStatisticReportType(r)) IN documentPrm;

//------------------------------ Строки -------------------------------//

nameStatisticReportTypeDetail 'Наименование' = DATA VARISTRING[255] (StatisticReportTypeDetail);
nameUOMStatisticReportTypeDetail 'Ед. изм.' = DATA VARISTRING[100] (StatisticReportTypeDetail);
isIntegerStatisticReportTypeDetail 'Целое' = DATA BOOLEAN (StatisticReportTypeDetail);

statisticGroupStatisticReportTypeDetail  = DATA StatisticGroup (StatisticReportTypeDetail);
nameStatisticGroupStatisticReportTypeDetail 'Наименование группы' = nameStatisticGroup(statisticGroupStatisticReportTypeDetail(d));
sidStatisticGroupStatisticReportTypeDetail 'Код группы' = sidStatisticGroup(statisticGroupStatisticReportTypeDetail(d));

CONSTRAINT statisticGroupStatisticReportTypeDetail(d) AND statisticGroupTypeStatisticReportType(statisticReportTypeStatisticReportTypeDetail(d)) 
    AND NOT groupTypeStatisticGroup(statisticGroupStatisticReportTypeDetail(d)) == statisticGroupTypeStatisticReportType(statisticReportTypeStatisticReportTypeDetail(d))
    CHECKED BY statisticGroupStatisticReportTypeDetail
    MESSAGE 'Для строки типа статистического отчета выбрана группа, которая не соответствует выбранному классификатору.';

numberStatisticReportTypeDetail 'Код строки' = DATA STRING[10] (StatisticReportTypeDetail);    

FORM statisticReportType 'Тип статистического отчета'

    OBJECTS r = StatisticReportType FIXED PANEL
    PROPERTIES (r) nameStatisticReportType, noteStatisticReportType,  nameStatisticGroupTypeStatisticReportType               
                
    PROPERTIES (r) countStatisticReportTypeDetailStatisticReportType

    OBJECTS d = StatisticReportTypeDetail
    PROPERTIES (d) indexStatisticReportTypeDetail, nameStatisticReportTypeDetail, numberStatisticReportTypeDetail, nameStatisticGroupStatisticReportTypeDetail,
                   sidStatisticGroupStatisticReportTypeDetail, nameUOMStatisticReportTypeDetail, isIntegerStatisticReportTypeDetail
                
    PROPERTIES (d) ADDOBJ, deleteid=DELETESESSION    
    
    ORDER BY indexStatisticReportTypeDetail(d)

    PROPERTIES(r) TODRAW d deleteStatisticReportTypeDetailStatisticReportType
    
    FILTERS statisticReportTypeStatisticReportTypeDetail(d) == r

    EDIT StatisticReportType OBJECT r
;

DESIGN statisticReportType {
    main {
        preferredSize = (1024, 768);
        NEW header.box {
            type = CONTAINERH;

            MOVE r.documentPrm;            
            MOVE r.documentSum {
                columns = 1;
            }
        }
        NEW specification.box {
            fill = 1;
            MOVE d.box {
                caption = 'Спецификация';
            }
        }
        MOVE functions.box;
        PROPERTY (indexStatisticReportTypeDetail(d)) {caption ='Порядок';}
    }
}

FORM statisticReportTypes 'Типы статистических отчетов'

    OBJECTS r = StatisticReportType 
    PROPERTIES (r) READONLY nameStatisticReportType, nameStatisticGroupTypeStatisticReportType, noteStatisticReportType   
                
    PROPERTIES (r) READONLY countStatisticReportTypeDetailStatisticReportType
    PROPERTIES (r) ADDFORM, EDITFORM, deleter=DELETE FORCE PANEL TOOLBAR  
    PROPERTIES (r) READONLY FORCE PANEL createdNameUserStatisticReportType, createdTimeStatisticReportType, createdHostnameComputerStatisticReportType 
        
    OBJECTS d = StatisticReportTypeDetail
    PROPERTIES (d) READONLY indexStatisticReportTypeDetail, nameStatisticReportTypeDetail, numberStatisticReportTypeDetail, nameStatisticGroupStatisticReportTypeDetail,
                   sidStatisticGroupStatisticReportTypeDetail, nameUOMStatisticReportTypeDetail, isIntegerStatisticReportTypeDetail 
    ORDER BY indexStatisticReportTypeDetail(d)

    FILTERS statisticReportTypeStatisticReportTypeDetail(d) == r
                
    DIALOG StatisticReportType OBJECT r
;
DESIGN statisticReportTypes {
    main {
        preferredSize = (1024, 768);
        PROPERTY (deleter) {
            askConfirm = TRUE;
        }

        NEW documentContainer BEFORE functions.box {
            fill = 1;

            type = SPLITV;
            MOVE r.box;    

            NEW documentDetail {
                fill = 1;
                type = TABBED;

                MOVE d.box {
                    fill = 1;
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';
                    type = CONTAINERV;

                    MOVE r.created;                       
                }
                NEW printTab {
                    caption = 'Печатные формы';
                    NEW printContainer {
                        caption = 'Печать';
                        type = CONTAINERV;
                    }
                }
            }
        }
        PROPERTY (indexStatisticReportTypeDetail(d)) {caption ='Порядок';}
    }
}



//////////////////////Отчет ////////////////////////////

CLASS StatisticReport 'Статистический отчет';
CLASS StatisticReportDetail 'Строка статистического отчета';

nameStatisticReport 'Наименование' = DATA VARISTRING[255] (StatisticReport) MINCHARWIDTH 20 PREFCHARWIDTH 30;
@defineDocument(statisticReport);
@deriveDocumentHeaderTimePrefix(StatisticReport, );


@deriveDocumentHeaderTimePrefix(StatisticReport, );
@defineDocumentHeaderNumber(StatisticReport);
@defineNumeratedDefault(StatisticReport, 'Статистический отчет', 'СО');
@defineDocumentHeaderDescription (StatisticReport, 'Статистический отчет');

fromDateStatisticReport 'Дата с' = DATA DATE (StatisticReport) IN documentHeader;
toDateStatisticReport 'Дата по' = DATA DATE (StatisticReport) IN documentHeader;

fromDateStatisticReportDetail 'Дата с' = fromDateStatisticReport(statisticReportStatisticReportDetail(d));
toDateStatisticReportDetail 'Дата по' = toDateStatisticReport(statisticReportStatisticReportDetail(d));

startTimeStatisticReport 'Время начала формирования' = DATA DATETIME (StatisticReport) IN created;
finishTimeStatisticReport 'Время окончания формирования' = DATA DATETIME (StatisticReport) IN created;

WHEN SESSION SET(o IS StatisticReport) DO {
    IF o IS StatisticReport AND NOT fromDateStatisticReport(o) THEN fromDateStatisticReport(o) <- currentDate();
    IF o IS StatisticReport AND NOT toDateStatisticReport(o) THEN toDateStatisticReport(o) <- currentDate();
};

statisticGroupTypeStatisticReport = DATA StatisticGroupType (StatisticReport) AUTOSET NOT NULL DELETE;
nameStatisticGroupTypeStatisticReport 'Тип классификатора' = nameStatisticGroupType(statisticGroupTypeStatisticReport(r)) IN documentPrm MINCHARWIDTH 20 PREFCHARWIDTH 30;

statisticReportTypeStatisticReport = DATA StatisticReportType (StatisticReport);
nameStatisticReportTypeStatisticReport 'Тип отчета' = nameStatisticReportType(statisticReportTypeStatisticReport(r));

@defineDocumentDataStock(statisticReport, stock, 'Склад', );
@defineDocumentDialogStocks(statisticReport, stock, company, , );

@defineDocumentLegalEntity(statisticReport, company, 'Организация');
@defineDocumentDialogLegalEntity(statisticReport, company, company);

CLASS ReportKind 'Вид отчета' {
    stock 'Отчет по складу',
    region 'Отчет по региону',
    consolidate 'Объединенный'
}

FORM reportKinds 'Виды отчета'
    OBJECTS k = ReportKind
    PROPERTIES(k) READONLY staticCaption
    FILTERS k != ReportKind.consolidate
    DIALOG ReportKind OBJECT k
;

DESIGN reportKinds {
    PROPERTY(staticCaption(k)) { caption = 'Наименование'; } 
}

reportKindStatisticReport = DATA ReportKind (StatisticReport);
nameReportKindStatisticReport 'Вид отчета'(r) = staticCaption(reportKindStatisticReport(r));
isStockStatisticReport(r) = reportKindStatisticReport(r) == ReportKind.stock;
isRegionStatisticReport(r) = reportKindStatisticReport(r) == ReportKind.region;
isConsolidateStatisticReport(r) = reportKindStatisticReport(r) == ReportKind.consolidate;
notConsolidateStatisticReport(r) = reportKindStatisticReport(r) != ReportKind.consolidate;

WHEN SESSION SET ( r IS StatisticReport) AND NOT reportKindStatisticReport(r) DO {
    reportKindStatisticReport(r) <- ReportKind.stock;
}

WHEN SESSION SETCHANGED ( reportKindStatisticReport(r)) AND NOT companyStatisticReport(r) AND isRegionStatisticReport(r) DO {
    companyStatisticReport(r) <- defaultCompany();
}

regionStatisticReport = DATA Region (StatisticReport);
nameRegionStatisticReport 'Регион' (r) = nameRegion(regionStatisticReport(r));
consolidateStocksStatisticReport 'Склады/Регионы' = DATA VARSTRING[255](StatisticReport);

nameStockRegionStatisticReport 'Склад/Регион' (r) = CASE 
    WHEN isStockStatisticReport(r) THEN nameStockStatisticReport(r) 
    WHEN isRegionStatisticReport(r) THEN nameRegionStatisticReport(r)
    WHEN isConsolidateStatisticReport(r) THEN consolidateStocksStatisticReport(r);
//------------------------------ Строки -------------------------------//

nameStatisticReportDetail 'Наименование' = DATA VARISTRING[255] (StatisticReportDetail);
nameUOMStatisticReportDetail 'Ед. изм.' = DATA VARISTRING[100] (StatisticReportDetail);
isIntegerStatisticReportDetail 'Целое' = DATA BOOLEAN (StatisticReportDetail);
numberStatisticReportDetail 'Код строки' = DATA STRING[10] (StatisticReportDetail);

statisticGroupStatisticReportDetail  = DATA StatisticGroup (StatisticReportDetail);
nameStatisticGroupStatisticReportDetail 'Наименование группы' = nameStatisticGroup(statisticGroupStatisticReportDetail(d));
sidStatisticGroupStatisticReportDetail 'Код группы' = sidStatisticGroup(statisticGroupStatisticReportDetail(d));

CONSTRAINT statisticGroupStatisticReportDetail(d) AND statisticGroupTypeStatisticReport(statisticReportStatisticReportDetail(d)) 
    AND NOT groupTypeStatisticGroup(statisticGroupStatisticReportDetail(d)) == statisticGroupTypeStatisticReport(statisticReportStatisticReportDetail(d))
    CHECKED BY statisticGroupStatisticReportDetail
    MESSAGE 'Для строки статистического отчета выбрана группа, которая не соответствует выбранному классификатору.';
    
soldStatisticReportDetail 'Продано всего' = DATA NUMERIC[16,2] (StatisticReportDetail);
soldResidentStatisticReportDetail 'Продано отечественного' = DATA NUMERIC[16,2] (StatisticReportDetail);
balanceStatisticReportDetail 'Запас всего' = DATA NUMERIC[16,2] (StatisticReportDetail);
balanceResidentStatisticReportDetail 'Запас отечественного' = DATA NUMERIC[16,2] (StatisticReportDetail);


fillDataStatisticReport 'Заполнить данные' = ACTION (report) {
    soldStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;
    soldResidentStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;
    balanceStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;    
    balanceResidentStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;
    
    FOR statisticGroupStatisticReportDetail(d) AND  statisticReportStatisticReportDetail(d) == report DO {
    
        soldStatisticReportDetail(d) <- IF isIntegerStatisticReportDetail(d)
            THEN NUMERIC[16,2](INTEGER(valueByStatisticGroupDateFromTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), fromDateStatisticReport(report),toDateStatisticReport(report))))
            ELSE NUMERIC[16,2](valueByStatisticGroupDateFromTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), fromDateStatisticReport(report),toDateStatisticReport(report)));
            
        soldResidentStatisticReportDetail(d) <- IF isIntegerStatisticReportDetail(d)
            THEN NUMERIC[16,2](INTEGER (valueResidentByStatisticGroupDateFromTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), fromDateStatisticReport(report),toDateStatisticReport(report))))
            ELSE NUMERIC[16,2](valueResidentByStatisticGroupDateFromTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), fromDateStatisticReport(report),toDateStatisticReport(report)));
        
        balanceStatisticReportDetail(d) <- IF isIntegerStatisticReportDetail(d)
            THEN NUMERIC[16,2](INTEGER (valueByStatisticGroupDateTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), toDateStatisticReport(report))))
            ELSE NUMERIC[16,2](valueByStatisticGroupDateTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), toDateStatisticReport(report)));
        
        balanceResidentStatisticReportDetail(d) <- IF isIntegerStatisticReportDetail(d)
            THEN NUMERIC[16,2](INTEGER(valueResidentByStatisticGroupDateTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), toDateStatisticReport(report))))
            ELSE NUMERIC[16,2](valueResidentByStatisticGroupDateTo(statisticGroupStatisticReportDetail(d), stockStatisticReport(report), toDateStatisticReport(report)));
    }                                                                                                                                                  
}

fillRegionDataStatisticReport 'Заполнить данные' = ACTION (report) {
    soldStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;
    soldResidentStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;
    balanceStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;    
    balanceResidentStatisticReportDetail(d) <- NULL WHERE statisticReportStatisticReportDetail(d) == report;
    
    FOR s==statisticGroupStatisticReportDetail(d) AND  statisticReportStatisticReportDetail(d) == report AND i == isIntegerStatisticReportDetail(d) AND 
        c == companyStatisticReport(report) AND r == regionStatisticReport(report) AND dFrom == fromDateStatisticReport(report) AND dTo == toDateStatisticReport(report)
        NOINLINE DO {
    
        soldStatisticReportDetail(d) <- IF i
            THEN NUMERIC[16,2](INTEGER(valueByStatisticGroupLegalEntityRegionDateFromTo(s, c, r, dFrom, dTo)))
            ELSE NUMERIC[16,2](valueByStatisticGroupLegalEntityRegionDateFromTo(s, c, r, dFrom, dTo));
            
        soldResidentStatisticReportDetail(d) <- IF i
            THEN NUMERIC[16,2](INTEGER (valueResidentByStatisticGroupLegalEntityRegionDateFromTo(s, c, r, dFrom, dTo)))
            ELSE NUMERIC[16,2](valueResidentByStatisticGroupLegalEntityRegionDateFromTo(s, c, r, dFrom, dTo));
        
        balanceStatisticReportDetail(d) <- IF i
            THEN NUMERIC[16,2](INTEGER (valueByStatisticGroupLegalEntityRegionDateTo(s, c, r, dTo)))
            ELSE NUMERIC[16,2](valueByStatisticGroupLegalEntityRegionDateTo(s, c, r, dTo));
        
        balanceResidentStatisticReportDetail(d) <- IF i
            THEN NUMERIC[16,2](INTEGER(valueResidentByStatisticGroupLegalEntityRegionDateTo(s, c, r, dTo)))
            ELSE NUMERIC[16,2](valueResidentByStatisticGroupLegalEntityRegionDateTo(s, c, r, dTo));
    }                                                                                                                                                  
}

changeStatisticReportTypeStatisticReport (r) = ACTION (r) {
    FORM statisticReportTypes DIALOG SHOWDROP;
    IF formResult() == FormResult.ok THEN { 
        statisticReportTypeStatisticReport(r) <- chosenObject('r');
        nameStatisticReport(r) <- nameStatisticReportType(statisticReportTypeStatisticReport(r));
        statisticGroupTypeStatisticReport(r) <- statisticGroupTypeStatisticReportType(statisticReportTypeStatisticReport(r));     
        DELETE d WHERE statisticReportStatisticReportDetail(d) ==r;
        
        FOR statisticReportTypeStatisticReport(r) == statisticReportTypeStatisticReportTypeDetail(detail) ADDOBJ d = StatisticReportDetail DO {
            statisticReportStatisticReportDetail(d) <-r;
            indexStatisticReportDetail(d) <- indexStatisticReportTypeDetail(detail);
            numberStatisticReportDetail(d) <-numberStatisticReportTypeDetail(detail);
            nameStatisticReportDetail(d) <- nameStatisticReportTypeDetail(detail);
            statisticGroupStatisticReportDetail(d) <- statisticGroupStatisticReportTypeDetail(detail);
            nameUOMStatisticReportDetail(d) <- nameUOMStatisticReportTypeDetail(detail);
            isIntegerStatisticReportDetail(d) <- isIntegerStatisticReportTypeDetail(detail);            
        }               
    }
}

FORM statisticReport 'Статистический отчет'

    OBJECTS r = StatisticReport FIXED PANEL
    PROPERTIES (r) nameStatisticReport, nameReportKindStatisticReport READONLYIF isConsolidateStatisticReport(r), 
                nameStockStatisticReport SHOWIF isStockStatisticReport(r) ON CHANGE changeStockCompanyStatisticReport(r),  
                nameCompanyStatisticReport SHOWIF isRegionStatisticReport(r),
                nameRegionStatisticReport SHOWIF isRegionStatisticReport(r), 
                consolidateStocksStatisticReport SHOWIF isConsolidateStatisticReport(r) READONLY,
                nameStatisticReportTypeStatisticReport ON CHANGE changeStatisticReportTypeStatisticReport(r) READONLYIF isConsolidateStatisticReport(r),
                nameNumeratorStatisticReport, numberStatisticReport, seriesStatisticReport, dateStatisticReport, timeStatisticReport,
                noteStatisticReport, fromDateStatisticReport, toDateStatisticReport, nameStatisticGroupTypeStatisticReport               
                
    PROPERTIES (r) countStatisticReportDetailStatisticReport

    OBJECTS d = StatisticReportDetail
    PROPERTIES (d) indexStatisticReportDetail, nameStatisticReportDetail, numberStatisticReportDetail, nameStatisticGroupStatisticReportDetail,
                   sidStatisticGroupStatisticReportDetail, nameUOMStatisticReportDetail, isIntegerStatisticReportDetail,
                   soldStatisticReportDetail, soldResidentStatisticReportDetail, balanceStatisticReportDetail, balanceResidentStatisticReportDetail  
                
    PROPERTIES (d) ADDOBJ, deleteid=DELETESESSION
    
    PROPERTIES(r) fillDataStatisticReport FORCE PANEL TOOLBAR TODRAW d SHOWIF isStockStatisticReport(r),
                fillRegionDataStatisticReport FORCE PANEL TOOLBAR TODRAW d SHOWIF isRegionStatisticReport(r)
    
    ORDER BY indexStatisticReportDetail(d)

    PROPERTIES(r) TODRAW d deleteStatisticReportDetailStatisticReport
    
    FILTERS statisticReportStatisticReportDetail(d) == r

    EDIT StatisticReport OBJECT r
;

DESIGN statisticReport {
    main {
        preferredSize = (1024, 768);
        NEW header.box {
            type = CONTAINERH;
            PROPERTY (indexStatisticReportDetail(d)) {caption ='Порядок';}
            NEW headerParams {
                fill = 1;
                type = CONTAINERV;
                MOVE r.documentHeader {
                    type = CONTAINERV;
                    NEW first {
                        type = CONTAINERH;
                        MOVE PROPERTY(nameStatisticReportTypeStatisticReport(r));
                        MOVE PROPERTY(nameReportKindStatisticReport(r));
                        MOVE PROPERTY(nameCompanyStatisticReport(r));
                        MOVE PROPERTY(nameStockStatisticReport(r));
                        MOVE PROPERTY(nameRegionStatisticReport(r));
                        MOVE PROPERTY(consolidateStocksStatisticReport(r));
                        MOVE PROPERTY(fromDateStatisticReport(r));
                        MOVE PROPERTY(toDateStatisticReport(r));
                    }
                    NEW second { 
                        type = CONTAINERH;
                        MOVE PROPERTY(nameStatisticReport(r));
                        MOVE PROPERTY(nameNumeratorStatisticReport(r));
                        MOVE PROPERTY(numberStatisticReport(r));
                        MOVE PROPERTY(seriesStatisticReport(r));
                        MOVE PROPERTY(dateStatisticReport(r));
                        MOVE PROPERTY(timeStatisticReport(r));
                    }   

                                                                                                                   
                }
                MOVE r.documentPrm;
            }
            MOVE r.documentSum {
                columns = 1;
            }
        }
        NEW specification.box {
            fill = 1;
            MOVE d.box {
                caption = 'Спецификация';
            }
        }
        MOVE functions.box;

    }
}

fromMonthStatisticReport = extractMonthName(fromDateStatisticReport(r));
toMonthStatisticReport = extractMonthName(toDateStatisticReport(r));

FORM statisticReportPrint '4-торг (продажа)'

    OBJECTS r = StatisticReport FIXED PANEL 
    PROPERTIES (r) READONLY nameStatisticReport, nameStockStatisticReport,  fullNameLegalEntityStockStatisticReport, 
                   addressLegalEntityStockStatisticReport, addressStockStatisticReport,
                   noteStatisticReport, fromDateStatisticReport, toDateStatisticReport,   
                   fromMonthStatisticReport, toMonthStatisticReport
                
    PROPERTIES (r) READONLY countStatisticReportDetailStatisticReport
    PROPERTIES (r) ADDFORM, EDITFORM, deleter=DELETE FORCE PANEL TOOLBAR  
    PROPERTIES (r) READONLY FORCE PANEL createdNameUserStatisticReport, createdTimeStatisticReport, createdHostnameComputerStatisticReport 
        
    OBJECTS d = StatisticReportDetail
    PROPERTIES (d) READONLY indexStatisticReportDetail, nameStatisticReportDetail, numberStatisticReportDetail, nameStatisticGroupStatisticReportDetail,
                   sidStatisticGroupStatisticReportDetail, nameUOMStatisticReportDetail, isIntegerStatisticReportDetail, 
                   soldStatisticReportDetail, soldResidentStatisticReportDetail, balanceStatisticReportDetail, balanceResidentStatisticReportDetail 
    ORDER BY indexStatisticReportDetail(d)

    FILTERS statisticReportStatisticReportDetail(d) == r
;
statisticReportPrint '4-торг (продажа)' (r) = ACTION FORM statisticReportPrint OBJECTS r =r PRINT  IMAGE 'print.png' IN print;   
excelStatisticReportPrint '4-торг (продажа) (xls)' (r) = ACTION FORM statisticReportPrint OBJECTS r =r PRINT XLSX  IMAGE 'print.png' IN print;   

inStatisticReport 'Отм' = DATA LOCAL NESTED BOOLEAN (StatisticReport);

balanceStockStatisticGroup = GROUP LAST balanceStatisticReportDetail(d) 
    BY stockStatisticReportDetail(d), statisticGroupStatisticReportDetail(d) 
    ORDER toDateStatisticReportDetail(d)
    WHERE inStatisticReport(statisticReportStatisticReportDetail(d)) ;
balanceRegionStatisticGroup  = GROUP LAST balanceStatisticReportDetail(d) 
    BY regionStatisticReport(statisticReportStatisticReportDetail(d)), statisticGroupStatisticReportDetail(d) 
    ORDER toDateStatisticReportDetail(d)
    WHERE inStatisticReport(statisticReportStatisticReportDetail(d)) ;
    
balanceResidentStockStatisticGroup = GROUP LAST balanceResidentStatisticReportDetail(d) 
    BY stockStatisticReportDetail(d), statisticGroupStatisticReportDetail(d) 
    ORDER toDateStatisticReportDetail(d)
    WHERE inStatisticReport(statisticReportStatisticReportDetail(d)) ;
balanceResidentRegionStatisticGroup  = GROUP LAST balanceResidentStatisticReportDetail(d) 
    BY regionStatisticReport(statisticReportStatisticReportDetail(d)), statisticGroupStatisticReportDetail(d) 
    ORDER toDateStatisticReportDetail(d)
    WHERE inStatisticReport(statisticReportStatisticReportDetail(d)) ;


createSumReport 'Создать суммарный отчет'= ACTION () NEWSESSION {
    IF [=GROUP SUM 1 IF [=GROUP SUM 1 IF inStatisticReport(r) BY statisticReportTypeStatisticReport(r) ](str)]() > 1 THEN {
        MESSAGE 'Выбраны отчеты разных типов';
        RETURN;
    }
    IF [=GROUP SUM 1 IF [=GROUP SUM 1 IF inStatisticReport(r) BY reportKindStatisticReport(r) ](str)]() > 1 THEN {
        MESSAGE 'Выбраны отчеты разных видов';
        RETURN;
    }
    IF NOT [=GROUP SUM 1 IF inStatisticReport(r)]() THEN {
        MESSAGE 'Не выбраны отчеты для объединения';
        RETURN;
    }
    FOR ADDOBJ s = StatisticReport DO {
        statisticReportTypeStatisticReport(s) <- [=GROUP MAX statisticReportTypeStatisticReport(r) IF inStatisticReport(r) ]();
        reportKindStatisticReport(s) <- ReportKind.consolidate;
        consolidateStocksStatisticReport(s) <- OVERRIDE [=GROUP CONCAT [=GROUP MAX nameStockRegionStatisticReport(r) IF inStatisticReport(r) BY nameStockRegionStatisticReport(r) ](str), ',']();
        fromDateStatisticReport(s) <- [= GROUP MIN fromDateStatisticReport(r) IF inStatisticReport(r)]();
        toDateStatisticReport(s) <- [= GROUP MAX toDateStatisticReport(r) IF inStatisticReport(r)]();
        nameStatisticReport(s) <- 'Суммарный отчет ' + nameStatisticReportType(statisticReportTypeStatisticReport(s));
        statisticGroupTypeStatisticReport(s) <- statisticGroupTypeStatisticReportType(statisticReportTypeStatisticReport(s));     
        
        FOR statisticReportTypeStatisticReport(s) == statisticReportTypeStatisticReportTypeDetail(detail) ADDOBJ d = StatisticReportDetail DO {
            statisticReportStatisticReportDetail(d) <-s;
            indexStatisticReportDetail(d) <- indexStatisticReportTypeDetail(detail);
            numberStatisticReportDetail(d) <-numberStatisticReportTypeDetail(detail);
            nameStatisticReportDetail(d) <- nameStatisticReportTypeDetail(detail);
            statisticGroupStatisticReportDetail(d) <- statisticGroupStatisticReportTypeDetail(detail);
            nameUOMStatisticReportDetail(d) <- nameUOMStatisticReportTypeDetail(detail);
            isIntegerStatisticReportDetail(d) <- isIntegerStatisticReportTypeDetail(detail);
            
            soldStatisticReportDetail(d) <- [=GROUP SUM soldStatisticReportDetail(d) IF inStatisticReport(statisticReportStatisticReportDetail(d)) BY statisticGroupStatisticReportDetail(d)](statisticGroupStatisticReportDetail(d));
            soldResidentStatisticReportDetail(d) <- [=GROUP SUM soldResidentStatisticReportDetail(d) IF inStatisticReport(statisticReportStatisticReportDetail(d)) BY statisticGroupStatisticReportDetail(d)](statisticGroupStatisticReportDetail(d));
            balanceStatisticReportDetail(d) <- IF [=GROUP MAX reportKindStatisticReport(r) IF inStatisticReport(r) ]() == ReportKind.stock THEN [= GROUP SUM balanceStockStatisticGroup(s,sg) BY sg](statisticGroupStatisticReportDetail(d))
                ELSE IF [=GROUP MAX reportKindStatisticReport(r) IF inStatisticReport(r) ]() == ReportKind.region THEN [= GROUP SUM balanceRegionStatisticGroup(s,sg) BY sg](statisticGroupStatisticReportDetail(d));
            balanceResidentStatisticReportDetail(d) <- IF [=GROUP MAX reportKindStatisticReport(r) IF inStatisticReport(r) ]() == ReportKind.stock THEN [= GROUP SUM balanceResidentStockStatisticGroup(s,sg) BY sg](statisticGroupStatisticReportDetail(d))
                ELSE IF [=GROUP MAX reportKindStatisticReport(r) IF inStatisticReport(r) ]() == ReportKind.region THEN [= GROUP SUM balanceResidentRegionStatisticGroup(s,sg) BY sg](statisticGroupStatisticReportDetail(d));
        }
        FORM statisticReport OBJECTS r = s MANAGESESSION DOCKEDMODAL;
    }
    inStatisticReport(r) <- NULL;
}

FORM statisticReports 'Статистические отчеты'

    OBJECTS r = StatisticReport 
    PROPERTIES (r) inStatisticReport
    PROPERTIES (r) READONLY nameStatisticReport, nameStockRegionStatisticReport, 
                   numberStatisticReport, seriesStatisticReport, dateStatisticReport, timeStatisticReport,
                   noteStatisticReport, fromDateStatisticReport, toDateStatisticReport, nameStatisticGroupTypeStatisticReport   

    PROPERTIES (r) READONLY countStatisticReportDetailStatisticReport
    PROPERTIES (r) ADDFORM, EDITFORM, deleter=DELETE FORCE PANEL TOOLBAR  
    PROPERTIES (r) READONLY FORCE PANEL createdNameUserStatisticReport, createdTimeStatisticReport, createdHostnameComputerStatisticReport 
    PROPERTIES createSumReport()
        
    OBJECTS d = StatisticReportDetail
    PROPERTIES (d) READONLY indexStatisticReportDetail, nameStatisticReportDetail, numberStatisticReportDetail, nameStatisticGroupStatisticReportDetail,
                   sidStatisticGroupStatisticReportDetail, nameUOMStatisticReportDetail, isIntegerStatisticReportDetail, 
                   soldStatisticReportDetail, soldResidentStatisticReportDetail, balanceStatisticReportDetail, balanceResidentStatisticReportDetail 
    ORDER BY indexStatisticReportDetail(d)
    PROPERTIES FORCE PANEL statisticReportPrint(r), excelStatisticReportPrint(r) 
    FILTERS statisticReportStatisticReportDetail(d) == r
                
    DIALOG StatisticReport OBJECT r
;
DESIGN statisticReports {
    main {
        preferredSize = (1024, 768);
        PROPERTY (deleter) {
            askConfirm = TRUE;
        }

        NEW documentContainer BEFORE functions.box {
            fill = 1;

            type = SPLITV;
            MOVE r.box;    

            NEW documentDetail {
                fill = 1;
                type = TABBED;

                MOVE d.box {
                    fill = 1;
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';
                    type = CONTAINERV;

                    MOVE r.created;                       
                }
                NEW printTab {
                    caption = 'Печатные формы';
                    NEW printContainer {
                        caption = 'Печать';
                        type = CONTAINERV;
                        MOVE r.print;
                    }
                }
                NEW action {
                    caption = 'Действия';
                    MOVE PROPERTY (createSumReport());
                }
            }
        }
        PROPERTY (indexStatisticReportDetail(d)) {caption ='Порядок';}
    }
}

NAVIGATOR {
    statisticsNavigator {
        NEW statisticsReports 'Отчеты' {
            ADD statisticReportTypes;
            ADD statisticReports;        
        }

    }    
}

