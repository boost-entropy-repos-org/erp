MODULE ConsignmentBy;

REQUIRE System,
        LegalEntityBy,
        Stock,
        Sku,
        Employee,
        Utils,
        Transport,
        Numerator; // вот эту зависимость нужно будет убрать

NAMESPACE Consignment;

CLASS WayOfLoading 'Способ ПРР';
TABLE wayOfLoading (WayOfLoading);

nameWayOfLoading 'Наименование' = DATA VARISTRING[50](WayOfLoading) IN base;

FORM wayOfLoading 'Способ ПРР'
    OBJECTS w = WayOfLoading
    PROPERTIES(w) nameWayOfLoading READONLY, DELETESESSION
    PROPERTIES(w) ADDFORM, EDITFORM
    DIALOG WayOfLoading OBJECT w
;

GROUP sumConsignment 'Суммы' : base;

CLASS ABSTRACT Consignment 'Накладная';
TABLE consignment(Consignment);

CLASS ABSTRACT ConsignmentDetail 'Строка накладной';

dataDateConsignment 'Дата' (consignment) = ABSTRACT DATE (Consignment);
overDateConsignment 'Дата' (consignment) = ABSTRACT DATE (Consignment);
dateConsignment 'Дата' (consignment) = OVERRIDE dataDateConsignment(consignment), overDateConsignment(consignment);


numberConsignment 'Номер' = ABSTRACT STRING[18] (Consignment) IN numbered MINCHARWIDTH 7;
seriesConsignment 'Серия' = ABSTRACT STRING[2] (Consignment) IN numbered FIXEDCHARWIDTH 3; 

overSeriesNumberConsignment 'Серия/Номер' (consignment) = ABSTRACT STRING[21] (Consignment);

seriesNumberConsignment 'Серия/Номер' (o) = OVERRIDE 
    (CONCAT '', seriesConsignment(o), numberConsignment(o)),
    overSeriesNumberConsignment(o)  MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20;

// ---------------------------------- Юридические лица ---------------------- //

countRowsSimpleVertical 'Макс. кол-во строк в бланке (ТН-2 вер.)' = DATA INTEGER ();
countRowsSimpleHorizontal 'Макс. кол-во строк в бланке (ТН-2 гор.)' = DATA INTEGER ();
countRowsVerticalA 'Макс. кол-во строк в бланке (ТТН-1 вер.А)' = DATA INTEGER ();
countRowsVerticalAB 'Макс. кол-во строк в бланке (ТТН-1 вер.А/Б)' = DATA INTEGER ();
countRowsHorizontal 'Макс. кол-во строк в бланке (ТТН-1 гор.А)' = DATA INTEGER ();

EXTEND FORM options
    PROPERTIES() countRowsSimpleVertical, countRowsSimpleHorizontal, countRowsVerticalA, countRowsVerticalAB, countRowsHorizontal

;

EXTEND DESIGN options {
    pane {
        NEW consignment  {
            type = CONTAINERV;
            caption = 'Накладная';
            ADD PROPERTY(countRowsSimpleVertical());
            ADD PROPERTY(countRowsSimpleHorizontal());
            ADD PROPERTY(countRowsVerticalA());
            ADD PROPERTY(countRowsVerticalAB());
            ADD PROPERTY(countRowsHorizontal());
        }

    }
}

// ---------------------------------- Юридические лица ---------------------- //
dataSupplierConsignment = ABSTRACT LegalEntity (Consignment);
overSupplierConsignment = ABSTRACT LegalEntity (Consignment);
supplierConsignment (consignment)= OVERRIDE dataSupplierConsignment(consignment), overSupplierConsignment(consignment);

UNPSupplierConsignment 'УНП отправителя' (consignment) = UNPLegalEntity(supplierConsignment(consignment));
addressSupplierConsignment 'Юр. адрес отправителя' (consignment) =
    addressLegalEntityDate(supplierConsignment(consignment), dateConsignment(consignment)) MINCHARWIDTH 30 PREFCHARWIDTH 50;
fullNameSupplierConsignment 'Наим-ие отправителя' (consignment) = fullNameLegalEntity(supplierConsignment(consignment)) MINCHARWIDTH 30 PREFCHARWIDTH 50;

customerConsignment = ABSTRACT LegalEntity (Consignment);
UNPCustomerConsignment 'УНП получателя' (consignment) = UNPLegalEntity(customerConsignment(consignment));
addressCustomerConsignment 'Юр. адрес получателя' (consignment) =
    addressLegalEntityDate(customerConsignment(consignment), dateConsignment(consignment)) MINCHARWIDTH 30 PREFCHARWIDTH 50;
nameCustomerConsignment 'Наим-ие получателя' (consignment) = nameLegalEntity(customerConsignment(consignment)) MINCHARWIDTH 30 PREFCHARWIDTH 50;
fullNameCustomerConsignment 'Наим-ие получателя' (consignment) = fullNameLegalEntity(customerConsignment(consignment)) MINCHARWIDTH 30 PREFCHARWIDTH 50;

payerConsignment = ABSTRACT LegalEntity (Consignment);
UNPPayerConsignment 'УНП заказчика перевозки' (consignment) = UNPLegalEntity(payerConsignment(consignment));
addressPayerConsignment 'Юр. адрес заказчика перевозки' (consignment) =
    addressLegalEntityDate(payerConsignment(consignment), dateConsignment(consignment));
fullNamePayerConsignment 'Наим-ие для накладных заказчика перевозки' (consignment) =
    fullNameLegalEntity(payerConsignment(consignment)) ;

// ------------------------------------- Атрибуты --------------------------------- //

GROUP carConsignment 'Автомобиль' : base;

truckConsignment = ABSTRACT Truck(Consignment);
dataTruckConsignment = ABSTRACT Truck(Consignment);
nameTruckConsignment 'Автомобиль' (consignment) = OVERRIDE nameTruck(truckConsignment(consignment)),
                                                           nameTruck(dataTruckConsignment(consignment)) IN carConsignment;

ownerTruckConsignment 'Владелец автомобиля' (consignment) = OVERRIDE ownerTruck(truckConsignment(consignment)),
                                                                     ownerTruck(dataTruckConsignment(consignment)) IN carConsignment;

dataTrailerConsignment = ABSTRACT VARSTRING[100] (Consignment);
trailerConsignment 'Прицеп' (consignment) = OVERRIDE trailerTruck(truckConsignment(consignment)),
                                                     dataTrailerConsignment(consignment) IN carConsignment;

driverConsignment = ABSTRACT Driver(Consignment);
dataEmployeeConsignment = ABSTRACT Employee(Consignment);
nameDriverConsignment 'Водитель' (consignment) = OVERRIDE nameContact(driverConsignment(consignment)),
                                                          nameContact(dataEmployeeConsignment(consignment)) IN carConsignment;

dataWaybillConsignment 'Путевой лист' (consignment) = ABSTRACT VARSTRING[20] (Consignment) IN carConsignment;

waybillConsignment 'Путевой лист' (consignment) = ABSTRACT STRING[20] (Consignment);

overWaybillConsignment 'Путевой лист' (consignment) = OVERRIDE waybillConsignment(consignment), dataWaybillConsignment(consignment) IN carConsignment;


// Склад погрузки
supplierStockConsignment (consignment) = ABSTRACT Stock (Consignment);
nameSupplierStockConsignment 'Склад погрузки' (consignment) = nameStock(supplierStockConsignment(consignment)) MINCHARWIDTH 30 PREFCHARWIDTH 30;

dataAddressSupplierStockConsignment 'Пункт погрузки' (consignment) = ABSTRACT VARSTRING[50] (Consignment);
addressSupplierStockConsignment 'Пункт погрузки' (consignment) = OVERRIDE addressStock(supplierStockConsignment(consignment)),
                                                                          dataAddressSupplierStockConsignment (consignment) IN carConsignment;

// Склад разгрузки
customerStockConsignment (consignment) = ABSTRACT Stock (Consignment);
nameCustomerStockConsignment 'Склад разгрузки' (consignment) = nameStock(customerStockConsignment(consignment)) MINCHARWIDTH 30 PREFCHARWIDTH 30;

dataAddressCustomerStockConsignment 'Пункт разгрузки' (consignment) = ABSTRACT VARSTRING[50] (Consignment) IN carConsignment;
addressCustomerStockConsignment 'Пункт разгрузки' (consignment) = OVERRIDE addressStock(customerStockConsignment(consignment)),
                                                                           dataAddressCustomerStockConsignment (consignment) IN carConsignment;

readdressingConsignment 'Переадресовка' (consignment) = ABSTRACT VARSTRING[50] (Consignment) IN carConsignment;

// ------------------------------------- Отпуск товара --------------------------------- //

GROUP issuanceConsignment 'Отпуск' : base;

dataShipmentBaseConsignment 'Основание отпуска' (consignment) = ABSTRACT VARSTRING[100] (Consignment);
overShipmentBaseConsignment 'Основание отпуска' (consignment) = ABSTRACT VARSTRING[100] (Consignment);
shipmentBaseConsignment 'Основание отпуска' (consignment) = OVERRIDE  dataShipmentBaseConsignment(consignment),
                                                                      overShipmentBaseConsignment(consignment) IN issuanceConsignment MINCHARWIDTH 20 PREFCHARWIDTH 20;

issuanceAllowedConsignment (consignment) = ABSTRACT Employee (Consignment);
nameIssuanceAllowedConsignment 'Отпуск разрешил' (consignment) = positionShortNameEmployee(issuanceAllowedConsignment(consignment)) IN issuanceConsignment MINCHARWIDTH 20 PREFCHARWIDTH 20;

issuanceExecutedConsignment (consignment) = ABSTRACT Employee(Consignment);
nameIssuanceExecutedConsignment 'Отпуск произвел' (consignment) = positionShortNameEmployee(issuanceExecutedConsignment(consignment)) IN issuanceConsignment MINCHARWIDTH 20 PREFCHARWIDTH 20;

//forwarderConsignment 'Товар к перевозке принял (экспедитор), должность, фамилия, инициалы' (consignment) = ABSTRACT VARSTRING[40] (Consignment) IN issuanceConsignment;
dataForwarderConsignment  = ABSTRACT Employee (Consignment);
forwarderConsignment 'Товар к перевозке принял (экспедитор), должность, фамилия, инициалы' (consignment) = positionShortNameEmployee(dataForwarderConsignment(consignment)) IN issuanceConsignment MINCHARWIDTH 30 PREFCHARWIDTH 30;

warrantConsignment 'По доверенности (номер, дата)' (consignment) = ABSTRACT VARSTRING[30] (Consignment) IN issuanceConsignment;
warrantHolderConsignment 'По доверенности выданной (наименование орг-ии)' (consignment) = ABSTRACT VARSTRING[100] (Consignment) IN issuanceConsignment;

goodsAcceptedConsignment 'Принял грузополучатель' (consignment) = ABSTRACT VARSTRING[40] (Consignment) IN issuanceConsignment;

// ------------------------------------- Погрузочно-разгрузочные работы --------------------------------- //

GROUP loadingConsignment 'ПРР' : base;

loadingExecuterConsignment (consignment) = ABSTRACT LegalEntity(Consignment);
nameLoadingExecuterConsignment 'Исполнитель погрузки' (consignment) = nameLegalEntity(loadingExecuterConsignment(consignment));
overNameLoadingExecuterConsignment 'Исполнитель погрузки' (consignment)= OVERRIDE 'Грузоотправитель' IF consignment IS Consignment, nameLoadingExecuterConsignment(consignment) IN loadingConsignment;

wayOfLoadingConsignment (consignment) = ABSTRACT WayOfLoading(Consignment);
nameWayOfLoadingConsignment 'Способ погрузки' (consignment) = nameWayOfLoading(wayOfLoadingConsignment(consignment)) IN loadingConsignment;

unloadingExecuterConsignment (consignment) = ABSTRACT LegalEntity(Consignment);
nameUnloadingExecuterConsignment 'Исполнитель разгрузки' (consignment) = nameLegalEntity(unloadingExecuterConsignment(consignment));
overNameUnloadingExecuterConsignment 'Исполнитель разгрузки' (consignment)= OVERRIDE 'Грузополучатель' IF consignment IS Consignment, nameUnloadingExecuterConsignment(consignment) IN loadingConsignment;

wayOfUnloadingConsignment (consignment) = ABSTRACT WayOfLoading(Consignment);
nameWayOfUnloadingConsignment 'Способ разгрузки' (consignment) = nameWayOfLoading(wayOfUnloadingConsignment(consignment)) IN loadingConsignment;

codeLoadingConsignment 'Код ПРР' (consignment) = ABSTRACT STRING[3] (Consignment)IN loadingConsignment;

notArrivalTimeConsignment 'Не печатать текущее время прибытия в накладной' () = DATA BOOLEAN ();
isArrivalTimeConsignment 'Печатать текущее время прибытия в накладной' = ABSTRACT BOOLEAN (Consignment);

dataArrivalTimeConsignment 'Время прибытия' (consignment) = ABSTRACT DATETIME(Consignment);
arrivalTimeConsignment 'Время прибытия' (consignment) = OVERRIDE currentDateTime() IF  isArrivalTimeConsignment(consignment),
                                                        currentDateTime() IF consignment IS Consignment AND NOT notArrivalTimeConsignment(),
                                                        dataArrivalTimeConsignment(consignment) IN carConsignment;

dataDowntime 'Время простоя (мин.)' = DATA  INTEGER ();

EXTEND FORM options
    PROPERTIES() dataDowntime, notArrivalTimeConsignment
;

EXTEND DESIGN options {
    consignment  {
        ADD PROPERTY(dataDowntime());
        ADD PROPERTY(notArrivalTimeConsignment());
    }
}

dataDowntimeConsignment 'Время простоя' (consignment) = ABSTRACT INTEGER (Consignment);
downtimeConsignment 'Время простоя' (consignment) = OVERRIDE dataDowntime() IF isArrivalTimeConsignment(consignment), 
                                                             dataDowntime() IF consignment IS Consignment AND NOT notArrivalTimeConsignment(), 
                                                             dataDowntimeConsignment(consignment) IN carConsignment;

sumTimeMinutes(time, minutes) = [= FORMULA DATETIME '(($1)+($2)*CAST(\'1 minutes\' AS INTERVAL))'](time AS DATETIME, minutes AS LONG);

departureTimeConsignment 'Время убытия' (consignment) = sumTimeMinutes(arrivalTimeConsignment(consignment), LONG(downtimeConsignment(consignment))) IN carConsignment;                                                                

raceQuantityConsignment 'Количество ездок' (consignment) = ABSTRACT INTEGER (Consignment) IN carConsignment;

countPagesConsignment 'Кол-во листов в приложении' (consignment) = ABSTRACT INTEGER (Consignment);

dataNoteConsignment 'Примечание' (consignment) = ABSTRACT VARSTRING[500] (Consignment);
overNoteConsignment 'Примечание' (consignment) = DATA VARSTRING[500] (Consignment) ;
noteConsignment 'Примечание' (consignment) = OVERRIDE dataNoteConsignment(consignment), overNoteConsignment(consignment) MINCHARWIDTH 30 PREFCHARWIDTH 80;

namePayerConsignment 'Заказчик перевозки ' (consignment) =
    [= FORMULA VARSTRING[100] 'CAST($1 AS TEXT) ||  \' , \' || CAST($2 AS TEXT)']
    (nameLegalEntity(payerConsignment(consignment)), UNPLegalEntity(payerConsignment(consignment))) IN carConsignment;

skuConsignmentDetail (consignmentDetail) = ABSTRACT Sku (ConsignmentDetail);
nameSkuConsignmentDetail 'Наименование товара' (consignmentDetail) = nameSku(skuConsignmentDetail(consignmentDetail));

shortNameUOMConsignmentDetail 'Единица измерения' (consignmentDetail) = shortNameUOMSku(skuConsignmentDetail(consignmentDetail));
//shortNameUOMConsignmentDetail 'Единица измерения' (consignmentDetail) = ABSTRACT STRING[15] (ConsignmentDetail);

consignmentConsignmentDetail (consignmentDetail) = ABSTRACT Consignment (ConsignmentDetail) PERSISTENT;

//useRetailPriceConsignment 'Использовать розничные цены' = ABSTRACT BOOLEAN (Consignment);

quantityConsignmentDetail 'Количество' (consignmentDetail) = ABSTRACT NUMERIC[14,3] (ConsignmentDetail);

dataPriceConsignmentDetail 'Цена' (consignmentDetail) = ABSTRACT NUMERIC[14,2] (ConsignmentDetail);
overPriceConsignmentDetail 'Цена' (consignmentDetail) = ABSTRACT CASE NUMERIC[14,2] (ConsignmentDetail);
priceConsignmentDetail 'Цена' (consignmentDetail) = OVERRIDE dataPriceConsignmentDetail(consignmentDetail), 
                                                             overPriceConsignmentDetail(consignmentDetail);

shipmentPriceConsignmentDetail 'Цена поставщика' (consignmentDetail) = ABSTRACT NUMERIC[14,2] (ConsignmentDetail);
purchaseRetailPriceConsignmentDetail 'Цена розничная' (consignmentDetail) = ABSTRACT NUMERIC[14,2] (ConsignmentDetail);

retailMarkupConsignmentDetail 'Надбавка розн.' (consignmentDetail) = ABSTRACT NUMERIC[14,3] (ConsignmentDetail);
wholesaleMarkupConsignmentDetail 'Надбавка опт.' (consignmentDetail) = ABSTRACT NUMERIC[16,3] (ConsignmentDetail);

dataSumConsignmentDetail 'Стоимость' (consignmentDetail) = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);
overSumConsignmentDetail 'Стоимость' (consignmentDetail) = ABSTRACT CASE NUMERIC[16,2] (ConsignmentDetail);
sumConsignmentDetail 'Стоимость' (consignmentDetail) = OVERRIDE dataSumConsignmentDetail(consignmentDetail),
                                                                overSumConsignmentDetail(consignmentDetail);

notVatConsignmentDetail 'Не надо проставлять ставку' (consignmentDetail) = ABSTRACT CASE BOOLEAN (ConsignmentDetail);                                                                
dataVatConsignmentDetail 'НДС, %' (consignmentDetail) = ABSTRACT NUMERIC[10,5] (ConsignmentDetail);
overVatConsignmentDetail 'НДС, %' (consignmentDetail) = ABSTRACT CASE NUMERIC[10,5] (ConsignmentDetail);
vatConsignmentDetail 'НДС, %' (consignmentDetail) = (OVERRIDE dataVatConsignmentDetail(consignmentDetail),
                                                             overVatConsignmentDetail(consignmentDetail)) IF NOT notVatConsignmentDetail(consignmentDetail);

dataSumVATConsignmentDetail 'Сумма НДС' (consignmentDetail) = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);
overSumVATConsignmentDetail 'Сумма НДС' (consignmentDetail) = ABSTRACT CASE NUMERIC[16,2] (ConsignmentDetail);
sumVATConsignmentDetail 'Сумма НДС' (consignmentDetail) = OVERRIDE dataSumVATConsignmentDetail(consignmentDetail),
                                                                   overSumVATConsignmentDetail(consignmentDetail);

dataSumInvoiceConsignmentDetail 'Сумма с НДС' (consignmentDetail) = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);
overSumInvoiceConsignmentDetail 'Сумма с НДС' (consignmentDetail) = ABSTRACT CASE NUMERIC[16,2] (ConsignmentDetail);
sumInvoiceConsignmentDetail 'Сумма с НДС' (consignmentDetail) = OVERRIDE dataSumInvoiceConsignmentDetail(consignmentDetail),
                                                                         overSumInvoiceConsignmentDetail(consignmentDetail);
                                                                         
sumShipmentConsignmentDetail 'Сумма учётная' (consignmentDetail) = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);

sumShipmentContainerConsignment 'Сумма тары' (consignment) = ABSTRACT NUMERIC[16,2] (Consignment);
sumShipmentItemConsignment 'Сумма товаров' (consignment) = ABSTRACT NUMERIC[16,2] (Consignment);

sumRetailVATConsignmentDetail 'Сумма НДС' (consignmentDetail) = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);

sumRetailContainerConsignment 'Сумма тары' (consignment) = ABSTRACT NUMERIC[16,2] (Consignment);
sumRetailItemConsignment 'Сумма товаров' (consignment) = ABSTRACT NUMERIC[16,2] (Consignment);

sumWholesaleMarkupConsignment 'Надбавка' (consignment) = ABSTRACT NUMERIC[16,2] (Consignment);

sumRetailConsignmentDetail 'Сумма розничная' (consignmentDetail) = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);

dataPackQuantityConsignmentDetail 'Количество грузовых мест' (consignmentDetail) = ABSTRACT NUMERIC[21,6] (ConsignmentDetail);
overPackQuantityConsignmentDetail 'Количество грузовых мест' (consignmentDetail) = ABSTRACT CASE NUMERIC[21,6] (ConsignmentDetail);
packQuantityConsignmentDetail 'Количество грузовых мест' (consignmentDetail) = OVERRIDE dataPackQuantityConsignmentDetail(consignmentDetail), 
                                                                                        overPackQuantityConsignmentDetail(consignmentDetail);

dataGrossWeightConsignmentDetail 'Масса груза, кг.' (consignmentDetail) = ABSTRACT NUMERIC[16,5] (ConsignmentDetail);
overGrossWeightConsignmentDetail 'Масса груза, кг.' (consignmentDetail) = ABSTRACT NUMERIC[16,5] (ConsignmentDetail);
grossWeightConsignmentDetail 'Масса груза, кг.' (consignmentDetail) = OVERRIDE dataGrossWeightConsignmentDetail(consignmentDetail),
                                                                               overGrossWeightConsignmentDetail(consignmentDetail);

grossWeightTonConsignmentDetail 'Масса груза, т.' (consignmentDetail) = round6(NUMERIC[17,6](grossWeightConsignmentDetail(consignmentDetail)) / 1000);

noteConsignmentDetail 'Примечание' (consignmentDetail) = ABSTRACT VARSTRING[100] (ConsignmentDetail) MINCHARWIDTH 30 PREFCHARWIDTH 80;
extraDescriptionConsignmentDetail 'Доп. наименование' (consignmentDetail) = ABSTRACT VARSTRING[1500] (ConsignmentDetail) MINCHARWIDTH 30 PREFCHARWIDTH 80;

countConsignmentDetailConsignment 'Количество строк' (consignment) = GROUP SUM 1 IF consignmentDetail IS ConsignmentDetail
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;

quantityConsignmentDetailConsignment 'Количество (всего)' (consignment) = GROUP SUM quantityConsignmentDetail(consignmentDetail)
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;

packQuantityConsignmentDetailConsignment 'Общее количество грузовых мест' (consignment) = GROUP SUM packQuantityConsignmentDetail(consignmentDetail)
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment PERSISTENT;

packQuantityConsignment 'Общее количество грузовых мест' = ABSTRACT CASE NUMERIC[8,2] (Consignment) PERSISTENT;
overPackQuantityConsignmentDetailConsignment 'Общее количество грузовых мест' (consignment) = OVERRIDE packQuantityConsignmentDetailConsignment(consignment),
                                                                                                       packQuantityConsignment(consignment);

grossWeightTonConsignmentDetailConsignment 'Общая масса груза, т.' (consignment) = GROUP SUM grossWeightTonConsignmentDetail(consignmentDetail)
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;

grossWeightConsignmentDetailConsignment 'Общая масса груза, кг.'(consignment) = GROUP SUM grossWeightConsignmentDetail(consignmentDetail)
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment PERSISTENT;


isCustomsFlowConsignment 'Расход с СВХ' (consignment) = ABSTRACT BOOLEAN (Consignment);

dataCurrencyConsignment 'Валюта (ИД)' (consignment) = ABSTRACT Currency (Consignment);
overCurrencyConsignment 'Валюта (ИД)' (consignment) = ABSTRACT CASE Currency (Consignment);
currencyConsignment 'Валюта (ИД)' (consignment) = OVERRIDE dataCurrencyConsignment(consignment), overCurrencyConsignment(consignment);
shortNameCurrencyConsignment 'Валюта' (consignment) = shortNameCurrency(currencyConsignment(consignment));
documentNameCurrencyConsignment 'Валюта в накладной сокр.' (consignment) = documentNameCurrency(currencyConsignment(consignment));
isCurrencyConsignment 'Выбрана валюта' (consignment) = TRUE IF currencyConsignment(consignment);

//// Посуда на возврате
isWareConsignment 'Возврат поставщику' (consignment) = ABSTRACT BOOLEAN (Consignment);
//wareSumConsignmentDetailConsignment 'Сумма посуды с НДС' (consignment) = ABSTRACT NUMERIC[14,2] (Consignment);
supplierSumConsignmentDetailConsignment 'Сумма поставщика без НДС' (consignment) = ABSTRACT NUMERIC[14,2] (Consignment);
//
//wareConsignmentDetail (consignmentDetail) = ABSTRACT Ware (ConsignmentDetail);
//nameWareConsignmentDetail 'Посуда' (consignmentDetail) = nameWare(wareConsignmentDetail(consignmentDetail));
//warePriceConsignmentDetail 'Цена посуды с НДС' (consignmentDetail) = ABSTRACT NUMERIC[14,2] (ConsignmentDetail);
//wareSumConsignmentDetail 'Сумма посуды с НДС' (consignmentDetail) = ABSTRACT NUMERIC[14,2] (ConsignmentDetail);
//valueWareRangeConsignmentDetail 'НДС посуды, %' (consignmentDetail) = ABSTRACT NUMERIC[6,2] (ConsignmentDetail);
//wareVATSumConsignmentDetail 'Сумма НДС по посуде' (consignmentDetail) = ABSTRACT NUMERIC[14,2] (ConsignmentDetail);
//wareSupplierPriceConsignmentDetail 'Цена посуды без НДС' (consignmentDetail) =  ABSTRACT NUMERIC[14,2] (ConsignmentDetail);
//wareSupplierSumConsignmentDetail 'Сумма посуды без НДС' (consignmentDetail) =  ABSTRACT NUMERIC[14,2] (ConsignmentDetail);
//
//sumIaWConsignmentDetail 'Сумма с посудой без НДС' (consignmentDetail) = sumConsignmentDetail(consignmentDetail) (+) wareSupplierSumConsignmentDetail(consignmentDetail);
overSumIaWConsignmentDetail = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);
sumIaWConsignmentDetail (detail) = OVERRIDE sumConsignmentDetail(detail), overSumIaWConsignmentDetail(detail);

sumConsignmentDetailConsignment 'Сумма с посудой без НДС (всего)' (consignment) = GROUP SUM sumIaWConsignmentDetail(consignmentDetail)
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;
//
//sumVATIaWConsignmentDetail 'Сумма НДС' (consignmentDetail) = sumVATConsignmentDetail(consignmentDetail) (+) wareVATSumConsignmentDetail(consignmentDetail);
overSumVATIaWConsignmentDetail = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);
sumVATIaWConsignmentDetail (detail) = OVERRIDE sumVATConsignmentDetail(detail), overSumVATIaWConsignmentDetail(detail);

sumVATConsignmentDetailConsignment 'Сумма НДС (всего)' (consignment) = GROUP SUM sumVATIaWConsignmentDetail(consignmentDetail)
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;
//
//sumInvoiceIaWConsignmentDetail 'Сумма с НДС' (consignmentDetail) = sumInvoiceConsignmentDetail(consignmentDetail) (+) wareSumConsignmentDetail(consignmentDetail);
overSumInvoiceIaWConsignmentDetail = ABSTRACT NUMERIC[16,2] (ConsignmentDetail);
sumInvoiceIaWConsignmentDetail (detail) = OVERRIDE sumInvoiceConsignmentDetail(detail), overSumInvoiceIaWConsignmentDetail(detail);

sumInvoiceConsignmentDetailConsignment 'Сумма c НДС (всего)' (consignment) = GROUP SUM sumInvoiceIaWConsignmentDetail(consignmentDetail)
                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;

sumShipmentConsignmentDetailConsignment 'Сумма учётная' (consignment) = GROUP SUM sumShipmentConsignmentDetail(consignmentDetail)
                                                                               BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;

sumRetailVATConsignmentDetailConsignment 'Сумма НДС' (consignment) = GROUP SUM sumRetailVATConsignmentDetail(consignmentDetail)
                                                                            BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;

sumRetailConsignmentDetailConsignment 'Сумма c НДС (всего)' (consignment) = GROUP SUM sumRetailConsignmentDetail(consignmentDetail)
                                                                                   BY consignmentConsignmentDetail(consignmentDetail) IN sumConsignment;

// ---------------------------- Формы для накладных --------------------------------- //

META defineConsignmentFormSimple(form, caption)

    FORM consignmentSimple###form caption
        OBJECTS c=Consignment FIXED PANEL

        PROPERTIES (c) dateConsignment, shipmentBaseConsignment, nameIssuanceAllowedConsignment, nameIssuanceExecutedConsignment,
                       forwarderConsignment, warrantConsignment, warrantHolderConsignment, goodsAcceptedConsignment,
                       quantityConsignmentDetailConsignment, sumConsignmentDetailConsignment, sumVATConsignmentDetailConsignment,
                       sumInvoiceConsignmentDetailConsignment,
                       UNPCustomerConsignment, UNPSupplierConsignment, addressSupplierConsignment, addressCustomerConsignment,
                       fullNameSupplierConsignment, fullNameCustomerConsignment, numberConsignment, seriesConsignment, countConsignmentDetailConsignment,
                       isWareConsignment, isCustomsFlowConsignment, isCurrencyConsignment, shortNameCurrencyConsignment,
                       noteConsignment, documentNameCurrencyConsignment, countPagesConsignment
        PROPERTIES()   TODRAW c countRowsSimpleVertical, countRowsSimpleHorizontal
        OBJECTS d=ConsignmentDetail

        PROPERTIES(d) nameSkuConsignmentDetail, shortNameUOMConsignmentDetail, quantityConsignmentDetail, priceConsignmentDetail,
                      sumConsignmentDetail, vatConsignmentDetail, sumVATConsignmentDetail, sumInvoiceConsignmentDetail,
                      noteConsignmentDetail, extraDescriptionConsignmentDetail

        FILTERS consignmentConsignmentDetail(d) == c
    ;
    print###consignmentSimple###form caption (consignment) = ACTION FORM consignmentSimple###form OBJECTS c = consignment PRINT IMAGE 'print.png' IN print;
END

@defineConsignmentFormSimple(vertical, 'ТН-2, вертикальная');
@defineConsignmentFormSimple(horizontal, 'ТН-2, горизонтальная');
@defineConsignmentFormSimple(attach, 'Приложение к ТН-2');


META defineConsignmentForm(form, caption)  // объявляем форму
    FORM form caption
    ;
END
META defineConsignment(form, prefix)  // добавляем объет на форму (по сторонам)
    EXTEND FORM form 
        OBJECTS prefix=Consignment FIXED PANEL
    ;
END
META defineConsignmentAll(form, prefix, report) // добавляем объет на форму (сквозная)
    EXTEND FORM form 
        OBJECTS prefix=Consignment REPORTFILE report() FIXED PANEL
    ;
END

META defineExtendConsignmentForm(form, prefix) // добавляем свойства (по сторонам / сквозная)
    EXTEND FORM form 
        PROPERTIES (prefix) prefix##dateConsignment=dateConsignment, prefix##UNPCustomerConsignment=UNPCustomerConsignment, 
                       prefix##UNPSupplierConsignment=UNPSupplierConsignment, prefix##addressSupplierConsignment=addressSupplierConsignment, 
                       prefix##addressCustomerConsignment=addressCustomerConsignment, prefix##fullNameSupplierConsignment=fullNameSupplierConsignment,
                       prefix##fullNameCustomerConsignment=fullNameCustomerConsignment, prefix##nameTruckConsignment=nameTruckConsignment, 
                       prefix##ownerTruckConsignment=ownerTruckConsignment, prefix##trailerConsignment=trailerConsignment, 
                       prefix##nameDriverConsignment=nameDriverConsignment, prefix##overWaybillConsignment=overWaybillConsignment,
                       prefix##fullNamePayerConsignment=fullNamePayerConsignment, prefix##UNPPayerConsignment=UNPPayerConsignment, 
                       prefix##addressPayerConsignment=addressPayerConsignment, 
                       prefix##shipmentBaseConsignment=shipmentBaseConsignment, prefix##addressSupplierStockConsignment=addressSupplierStockConsignment, 
                       prefix##addressCustomerStockConsignment=addressCustomerStockConsignment,
                       prefix##readdressingConsignment=readdressingConsignment, prefix##nameIssuanceAllowedConsignment=nameIssuanceAllowedConsignment, 
                       prefix##nameIssuanceExecutedConsignment=nameIssuanceExecutedConsignment,
                       prefix##forwarderConsignment=forwarderConsignment, prefix##warrantConsignment=warrantConsignment, 
                       prefix##warrantHolderConsignment=warrantHolderConsignment, prefix##goodsAcceptedConsignment=goodsAcceptedConsignment,
                       prefix##overNameLoadingExecuterConsignment=overNameLoadingExecuterConsignment, prefix##nameWayOfLoadingConsignment=nameWayOfLoadingConsignment, 
                       prefix##overNameUnloadingExecuterConsignment=overNameUnloadingExecuterConsignment, prefix##nameWayOfUnloadingConsignment=nameWayOfUnloadingConsignment, 
                       prefix##codeLoadingConsignment=codeLoadingConsignment,
                       prefix##arrivalTimeConsignment=arrivalTimeConsignment, prefix##departureTimeConsignment=departureTimeConsignment, 
                       prefix##downtimeConsignment=downtimeConsignment, prefix##raceQuantityConsignment=raceQuantityConsignment,
                       prefix##quantityConsignmentDetailConsignment=quantityConsignmentDetailConsignment, 
                       prefix##overPackQuantityConsignmentDetailConsignment=overPackQuantityConsignmentDetailConsignment, 
                       prefix##grossWeightTonConsignmentDetailConsignment=grossWeightTonConsignmentDetailConsignment, 
                       prefix##grossWeightConsignmentDetailConsignment=grossWeightConsignmentDetailConsignment,
                       prefix##sumConsignmentDetailConsignment=sumConsignmentDetailConsignment, 
                       prefix##sumVATConsignmentDetailConsignment=sumVATConsignmentDetailConsignment, 
                       prefix##sumInvoiceConsignmentDetailConsignment=sumInvoiceConsignmentDetailConsignment,
                       prefix##countConsignmentDetailConsignment=countConsignmentDetailConsignment, 
                       prefix##supplierSumConsignmentDetailConsignment=supplierSumConsignmentDetailConsignment,
                       prefix##seriesConsignment=seriesConsignment, prefix##numberConsignment=numberConsignment, prefix##seriesNumberConsignment=seriesNumberConsignment, 
                       prefix##isCustomsFlowConsignment=isCustomsFlowConsignment, 
                       prefix##isCurrencyConsignment=isCurrencyConsignment, prefix##shortNameCurrencyConsignment=shortNameCurrencyConsignment,
                       prefix##noteConsignment=noteConsignment, prefix##documentNameCurrencyConsignment=documentNameCurrencyConsignment,    
                       prefix##countPagesConsignment=countPagesConsignment 
        PROPERTIES()   TODRAW prefix prefix##countRowsVerticalA=countRowsVerticalA, prefix##countRowsVerticalAB=countRowsVerticalAB, 
                       prefix##countRowsHorizontal=countRowsHorizontal
 
 
        OBJECTS prefix##d=ConsignmentDetail

        PROPERTIES(prefix##d) prefix##nameSkuConsignmentDetail=nameSkuConsignmentDetail, prefix##shortNameUOMConsignmentDetail=shortNameUOMConsignmentDetail, 
                      prefix##quantityConsignmentDetail=quantityConsignmentDetail, prefix##priceConsignmentDetail=priceConsignmentDetail,
                      prefix##sumConsignmentDetail=sumConsignmentDetail, prefix##vatConsignmentDetail=vatConsignmentDetail, 
                      prefix##sumVATConsignmentDetail=sumVATConsignmentDetail, prefix##sumInvoiceConsignmentDetail=sumInvoiceConsignmentDetail,
                      prefix##packQuantityConsignmentDetail=packQuantityConsignmentDetail, prefix##grossWeightTonConsignmentDetail=grossWeightTonConsignmentDetail,
                      prefix##grossWeightConsignmentDetail=grossWeightConsignmentDetail,prefix##noteConsignmentDetail=noteConsignmentDetail, 
                      prefix##extraDescriptionConsignmentDetail=extraDescriptionConsignmentDetail

        FILTERS consignmentConsignmentDetail(prefix##d) == prefix
    ;        
          
END 
META definePrintConsignmentForm(form, caption, prefix)  //печать накладной по сторонам
        printConsignment###form caption (consignment) = ACTION FORM consignment###form OBJECTS prefix = consignment PRINT IMAGE 'print.png' IN print;
        printConsignment###form###Auto caption (consignment) = ACTION FORM consignment###form OBJECTS prefix = consignment PRINT AUTO IMAGE 'print.png' IN print; 
END  
  
META defineExtendPrintConsignmentFormAll(form, caption, prefixA, prefixB)       //печать накладной сквозная
        printConsignment###form caption (consignment) = ACTION FORM consignment###form OBJECTS prefixA = consignment, prefixB = consignment PRINT IMAGE 'print.png' IN print;
        printConsignment###form###Auto caption (consignment) = ACTION FORM consignment###form OBJECTS prefixA = consignment, prefixB = consignment PRINT AUTO IMAGE 'print.png' IN print; 
END   

//-------------------  Создание накладной по сторонам ----------------------//

@defineConsignmentForm(consignmentVerticalA, 'ТТН-1, вертикальная (сторона А)');
@defineConsignmentForm(consignmentHorizontalA, 'ТТН-1, горизонтальная (сторона А)');
@defineConsignmentForm(consignmentVerticalB, 'ТТН-1, вертикальная (сторона Б)');
@defineConsignmentForm(consignmentHorizontalB, 'ТТН-1, горизонтальная (сторона Б)');
@defineConsignmentForm(consignmentAttach, 'Приложение к ТТН-1');
@defineConsignmentForm(consignmentVerticalAB, 'ТТН-1, вертикальная (сторона А/Б)');

@defineConsignment(consignmentVerticalA, a);
@defineConsignment(consignmentHorizontalA, a);
@defineConsignment(consignmentVerticalB, b);
@defineConsignment(consignmentHorizontalB, b);
@defineConsignment(consignmentAttach, c);
@defineConsignment(consignmentVerticalAB, a);

@defineExtendConsignmentForm(consignmentVerticalA, a);
@defineExtendConsignmentForm(consignmentHorizontalA, a);
@defineExtendConsignmentForm(consignmentVerticalB, b);
@defineExtendConsignmentForm(consignmentHorizontalB, b);
@defineExtendConsignmentForm(consignmentAttach, c);
@defineExtendConsignmentForm(consignmentVerticalAB, a);

@definePrintConsignmentForm(verticalA, 'ТТН-1, вертикальная (сторона А)', a);
@definePrintConsignmentForm(horizontalA, 'ТТН-1, горизонтальная (сторона А)', a);
@definePrintConsignmentForm(verticalB, 'ТТН-1, вертикальная (сторона Б)', b);
@definePrintConsignmentForm(horizontalB, 'ТТН-1, горизонтальная (сторона Б)', b);
@definePrintConsignmentForm(attach, 'Приложение к ТТН-1', c);
printConsignmentAttachXLS 'Приложение к ТТН-1 (xls)' (consignment) = ACTION FORM consignmentAttach OBJECTS c = consignment PRINT  IN print;

@definePrintConsignmentForm(verticalAB, 'ТТН-1, вертикальная (сторона А/Б)', a);

//-------------------  Создание сквозной накладной  ----------------------//

@defineConsignmentForm(consignmentVertical, 'ТТН-1, вертикальная');
reportFilePrintConsignmentVerticalA () = 'Consignment_consignmentVerticalA_a.jrxml';
@defineConsignmentAll(consignmentVertical, a, reportFilePrintConsignmentVerticalA);
reportFilePrintConsignmentVerticalB () = 'Consignment_consignmentVerticalB_b.jrxml';
@defineConsignmentAll(consignmentVertical, b, reportFilePrintConsignmentVerticalB);
@defineExtendConsignmentForm(consignmentVertical, a);
@defineExtendConsignmentForm(consignmentVertical, b);
@defineExtendPrintConsignmentFormAll(vertical, 'ТТН-1, вертикальная', a, b);


@defineConsignmentForm(consignmentHorizontal, 'ТТН-1, горизонтальная');
reportFilePrintConsignmentHorizontalA () = 'Consignment_consignmentHorizontalA_a.jrxml';
@defineConsignmentAll(consignmentHorizontal, a, reportFilePrintConsignmentHorizontalA);
reportFilePrintConsignmentHorizontalB () = 'Consignment_consignmentHorizontalB_b.jrxml';
@defineConsignmentAll(consignmentHorizontal, b, reportFilePrintConsignmentHorizontalB);
@defineExtendConsignmentForm(consignmentHorizontal, a);
@defineExtendConsignmentForm(consignmentHorizontal, b);
@defineExtendPrintConsignmentFormAll(horizontal, 'ТТН-1, горизонтальная', a, b);

FORM consignment 'Атрибуты накладной'
    OBJECTS c=Consignment FIXED PANEL

    PROPERTIES (c) READONLY nameSupplierStockConsignment, numberConsignment, seriesConsignment
    PROPERTIES (c) dateConsignment, UNPCustomerConsignment, UNPSupplierConsignment, addressSupplierConsignment, addressCustomerConsignment, fullNameSupplierConsignment,
                   fullNameCustomerConsignment, nameTruckConsignment, ownerTruckConsignment, trailerConsignment, nameDriverConsignment, overWaybillConsignment,
                   fullNamePayerConsignment, UNPPayerConsignment, addressPayerConsignment, shipmentBaseConsignment, addressSupplierStockConsignment, addressCustomerStockConsignment,
                   readdressingConsignment, nameIssuanceAllowedConsignment, nameIssuanceExecutedConsignment,
                   forwarderConsignment, warrantConsignment, warrantHolderConsignment, goodsAcceptedConsignment,
                   overNameLoadingExecuterConsignment, nameWayOfLoadingConsignment, codeLoadingConsignment,
                   overNameUnloadingExecuterConsignment, nameWayOfUnloadingConsignment,
                   arrivalTimeConsignment, downtimeConsignment, departureTimeConsignment READONLY, raceQuantityConsignment,
                   quantityConsignmentDetailConsignment, overPackQuantityConsignmentDetailConsignment, grossWeightConsignmentDetailConsignment,
                   sumConsignmentDetailConsignment, sumVATConsignmentDetailConsignment, sumInvoiceConsignmentDetailConsignment,
                   countConsignmentDetailConsignment, noteConsignment, shortNameCurrencyConsignment, countPagesConsignment//, SHOWIF isCustomsFlowConsignment(c)


    OBJECTS d=ConsignmentDetail

    PROPERTIES(d) nameSkuConsignmentDetail READONLY, shortNameUOMConsignmentDetail READONLY, quantityConsignmentDetail, priceConsignmentDetail,
                  sumConsignmentDetail, vatConsignmentDetail, sumVATConsignmentDetail, sumInvoiceConsignmentDetail,
                  packQuantityConsignmentDetail, grossWeightConsignmentDetail, noteConsignmentDetail READONLY, extraDescriptionConsignmentDetail READONLY

    FILTERS consignmentConsignmentDetail(d) == c
;

DESIGN consignment FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW header {
            caption = 'Шапка документа';
            type = CONTAINERH;
            ADD PROPERTY(nameSupplierStockConsignment(c));
            ADD PROPERTY(numberConsignment(c));
            ADD PROPERTY(seriesConsignment(c));
            ADD PROPERTY(dateConsignment(c));
        }

        NEW supplier {
            caption = 'Грузоотправитель';
            type = CONTAINERH;
            ADD PROPERTY(fullNameSupplierConsignment(c));
            ADD PROPERTY(UNPSupplierConsignment(c));
            ADD PROPERTY(addressSupplierConsignment(c));
        }

        NEW customer {
            caption = 'Грузополучатель';
            type = CONTAINERH;
            ADD PROPERTY(fullNameCustomerConsignment(c));
            ADD PROPERTY(UNPCustomerConsignment(c));
            ADD PROPERTY(addressCustomerConsignment(c));
        }

        NEW payer {
            caption = 'Заказчик ';
            type = CONTAINERH;
            ADD PROPERTY(fullNamePayerConsignment(c));
            ADD PROPERTY(UNPPayerConsignment(c));
            ADD PROPERTY(addressPayerConsignment(c));
        }
        ADD c.carConsignment {
            columns = 4;
        }
        NEW misc {
            caption = 'Дополнительно';
            
            type = CONTAINERH;
            ADD PROPERTY (noteConsignment(c));
            ADD PROPERTY (shortNameCurrencyConsignment(c));
        }
        ADD c.issuanceConsignment {
            columns = 3;
        }
        ADD c.loadingConsignment {
            columns = 4;
        }
        NEW sum {
            type = CONTAINERH;
            ADD c.sumConsignment {
                columns = 4;
                ADD PROPERTY(countConsignmentDetailConsignment(c));
                ADD PROPERTY(quantityConsignmentDetailConsignment(c));
                ADD PROPERTY(overPackQuantityConsignmentDetailConsignment(c));
                ADD PROPERTY(grossWeightConsignmentDetailConsignment(c));
                ADD PROPERTY(sumConsignmentDetailConsignment(c));
                ADD PROPERTY(sumVATConsignmentDetailConsignment(c));
                ADD PROPERTY(sumInvoiceConsignmentDetailConsignment(c));
            }
            NEW columnReight{
                caption = 'Приложение';
                ADD PROPERTY(countPagesConsignment(c));
            }
        }
    }
        
    ADD d.box;
    ADD functions.box;
}

editConsignment 'Заполнить атрибуты накладной' (consignment) = ACTION (consignment) {
    FORM consignment OBJECTS c = consignment DOCKEDMODAL; 
        IF formResult() == FormResult.ok THEN {
            apply();
        }
} IMAGE 'edit.png';

FORM printConsignment 'Печать накладных'
    OBJECTS c=Consignment FIXED PANEL

    PROPERTIES (c)  printConsignmentSimpleVertical, printConsignmentSimpleHorizontal, printConsignmentSimpleAttach,
                    printConsignmentVerticalA, printConsignmentVerticalAB, printConsignmentHorizontalA, printConsignmentVerticalB,
                    printConsignmentHorizontalB, printConsignmentAttach, editConsignment,
                    printConsignmentVertical, printConsignmentHorizontal, printConsignmentAttachXLS
;

DESIGN printConsignment FROM DEFAULT {

    c.box {

        type = CONTAINERV;

        NEW case55{
            type = CONTAINERV;

            NEW contOne {
                caption = 'Накладная';
                ADD PROPERTY(editConsignment(c));
            }
            NEW tn{
                type = CONTAINERH;
                caption = 'ТН-2';
                ADD PROPERTY(printConsignmentSimpleVertical(c));
                ADD PROPERTY(printConsignmentSimpleHorizontal(c));
                ADD PROPERTY(printConsignmentSimpleAttach(c));
            }
        }
        NEW ttn1{
            type = CONTAINERH;
            caption = 'ТТН-1';
            NEW ttn1V {
                type = CONTAINERV;
                ADD PROPERTY(printConsignmentVerticalA(c));
                ADD PROPERTY(printConsignmentVerticalB(c));
                ADD PROPERTY(printConsignmentVerticalAB(c));
                ADD PROPERTY(printConsignmentVertical(c));
                ADD PROPERTY(printConsignmentHorizontal(c));
            }
            NEW ttn1H {
                type = CONTAINERV;
                ADD PROPERTY(printConsignmentHorizontalA(c));
                ADD PROPERTY(printConsignmentHorizontalB(c));
            }
            NEW ttn1A {
                ADD PROPERTY(printConsignmentAttach(c));
            }
        }
        NEW export {
            type = CONTAINERH;
            caption = 'Экспорт';  
            ADD PROPERTY(printConsignmentAttachXLS(c));
        }
    }
}

printConsignment 'Печать' (consignment) = ACTION FORM printConsignment OBJECTS c = consignment MODAL IMAGE 'print.png';


// ------------------------------------- Метакод по объявлению и имплементации накладных ------------------ //

// ----------------- Объявление заголовка накладной --------------- //

META defineConsignmentHeader (object)
    @defineConsignmentHeaderInner (object, ###object);
END

META defineConsignmentHeaderInner (object, class)
    payer###object (object) = DATA LegalEntity (class) IN carConsignment;

    dataTruck###object (object) = DATA Truck (class);
    nameDataTruck###object 'Автомобиль' (object) = nameTruck(dataTruck###object(object)) IN carConsignment;
    dataTrailer###object 'Прицеп' (object) = DATA VARSTRING[50] (class) IN carConsignment;
    dataEmployee###object (object) = DATA Employee (class);
    nameDataEmployee###object 'Водитель' (object) = nameContact(dataEmployee###object(object)) IN carConsignment;
    waybill###object 'Путевой лист' (object) = DATA VARSTRING[20] (class) IN carConsignment;

    dataAddressSupplierStock###object 'Пункт погрузки' (object) = DATA VARSTRING[50] (class);
    dataAddressCustomerStock###object 'Пункт разгрузки' (object) = DATA VARSTRING[50] (class);

    readdressing###object 'Переадресовка' (object) = DATA VARSTRING[50] (class) IN carConsignment;

    overShipmentBase###object 'Основание отпуска' (object) = DATA VARSTRING[100] (class) IN issuanceConsignment;

    issuanceAllowed###object (object) = DATA Employee(class);

    issuanceExecuted###object (object) = DATA Employee(class);

    dataForwarder###object (object) = DATA Employee (class) IN issuanceConsignment;
    forwarder###object 'Товар к перевозке принял (экспедитор), должность, фамилия, инициалы' (object)= nameContact(dataForwarder###object(object));
    
    warrant###object 'По доверенности (номер, дата)' (object) = DATA VARSTRING[30] (class) IN issuanceConsignment;
    warrantHolder###object 'По доверенности выданной (наименование орг-ии)' (object) = DATA VARSTRING[100] (class) IN issuanceConsignment;

    goodsAccepted###object 'Принял грузополучатель' (object) = DATA VARSTRING[40] (class) IN issuanceConsignment;

    loadingExecuter###object (object) = DATA LegalEntity(class);
    wayOfLoading###object (object) = DATA WayOfLoading(class);

    unloadingExecuter###object (object) = DATA LegalEntity(class);
    wayOfUnloading###object (object) = DATA WayOfLoading(class);

    codeLoading###object 'Код ПРР' (object) = DATA STRING[3] (class) IN loadingConsignment;

    arrivalTime###object 'Время прибытия' (object) = DATA DATETIME(class) IN carConsignment;
    downtime###object 'Время простоя' (object) = DATA INTEGER (class) IN carConsignment;
    raceQuantity###object 'Количество ездок' (object) = DATA INTEGER (class) IN carConsignment;

    countPages###object 'Кол-во страниц в приложении' (object) = DATA INTEGER (class);
END

META defineConsignmentAbstractHeader(object)
    @defineConsignmentAbstractHeaderInner(object, ###object);
END

META defineConsignmentAbstractHeaderInner(object, class)

    payer###object 'Заказчик перевозки (ИД)' (object) = ABSTRACT LegalEntity (class) IN carConsignment;

    dataTruck###object 'Автомобиль' (object) = ABSTRACT Truck (class);
    nameDataTruck###object 'Автомобиль' (object) = nameTruck(dataTruck###object(object)) IN carConsignment;
    
    dataTrailer###object 'Прицеп' (object) = ABSTRACT VARSTRING[100] (class) IN carConsignment;
    dataEmployee###object (object) = ABSTRACT Employee (class);
    nameDataEmployee###object 'Водитель' (object) = nameContact(dataEmployee###object(object)) IN carConsignment;
    waybill###object 'Путевой лист' (object) = ABSTRACT VARSTRING[20] (class) IN carConsignment;

    dataAddressSupplierStock###object 'Пункт погрузки' (object) = ABSTRACT VARSTRING[50] (class);
    dataAddressCustomerStock###object 'Пункт разгрузки' (object) = ABSTRACT VARSTRING[50] (class);

    readdressing###object 'Переадресовка' (object) = ABSTRACT VARSTRING[50] (class) IN carConsignment;

    overShipmentBase###object 'Основание отпуска' (object) = ABSTRACT VARSTRING[100] (class) IN issuanceConsignment;

    issuanceAllowed###object (object) = ABSTRACT Employee(class);

    issuanceExecuted###object (object) = ABSTRACT Employee(class);

    dataForwarder###object (object) = ABSTRACT Employee (class) IN issuanceConsignment;
    forwarder###object 'Товар к перевозке принял (экспедитор), должность, фамилия, инициалы' (object)= nameContact(dataForwarder###object(object));

    warrant###object 'По доверенности (номер, дата)' (object) = ABSTRACT VARSTRING[30] (class) IN issuanceConsignment;
    warrantHolder###object 'По доверенности выданной (наименование орг-ии)' (object) = ABSTRACT VARSTRING[100] (class) IN issuanceConsignment;

    goodsAccepted###object 'Принял грузополучатель' (object) = ABSTRACT VARSTRING[40] (class) IN issuanceConsignment;

    loadingExecuter###object (object) = ABSTRACT LegalEntity(class);
    wayOfLoading###object (object) = ABSTRACT WayOfLoading(class);

    unloadingExecuter###object (object) = ABSTRACT LegalEntity(class);
    wayOfUnloading###object (object) = ABSTRACT WayOfLoading(class);

    codeLoading###object 'Код ПРР' (object) = ABSTRACT STRING[3] (class) IN loadingConsignment;

    defaultArrivalTime###object = ABSTRACT DATETIME(class);
    arrivalTime###object 'Время прибытия' (object) = ABSTRACT DATETIME(class) IN carConsignment;

    defaultDowntime###object (object) = ABSTRACT INTEGER (class) IN carConsignment;
    downtime###object 'Время простоя' (object) = ABSTRACT INTEGER (class) IN carConsignment;
         
    raceQuantity###object 'Количество ездок' (object) = ABSTRACT INTEGER (class) IN carConsignment;

    countPages###object 'Кол-во листов в приложении' (object) = ABSTRACT INTEGER (class); 
END

META defineConsignmentInterfaceHeader(object, stockProp)
    @defineConsignmentAbstractHeader (object);
    @defineConsignmentHeader (user###object);
END

META defineConsignmentInterfaceHeader(object)
    @defineConsignmentInterfaceHeader(object, stock);
END

// ----------------- Implement заголовка накладной --------------- //

META implementConsignmentHeader (concrete)
    EXTEND CLASS concrete : Consignment;

    dataDateConsignment (consignment) += date###concrete(consignment);
    numberConsignment (consignment) += number###concrete(consignment);
    seriesConsignment (consignment) += series###concrete(consignment);

    payerConsignment (consignment) += payer###concrete (consignment);

    dataTruckConsignment (consignment) += dataTruck###concrete (consignment);
    dataTrailerConsignment (consignment) += dataTrailer###concrete (consignment);
    dataEmployeeConsignment (consignment) += dataEmployee###concrete (consignment);
    dataWaybillConsignment (consignment) += waybill###concrete (consignment);

    dataAddressSupplierStockConsignment (consignment) += dataAddressSupplierStock###concrete (consignment);
    dataAddressCustomerStockConsignment (consignment) += dataAddressCustomerStock###concrete (consignment);

    readdressingConsignment (consignment) += readdressing###concrete (consignment);
    
    countPagesConsignment (consignment) += countPages###concrete (consignment);

    overShipmentBaseConsignment (consignment) += overShipmentBase###concrete (consignment);

    issuanceAllowedConsignment (consignment) += issuanceAllowed###concrete (consignment);

    issuanceExecutedConsignment (consignment) += issuanceExecuted###concrete (consignment);

    dataForwarderConsignment (consignment) += dataForwarder###concrete (consignment);

    warrantConsignment (consignment) += warrant###concrete (consignment);
    warrantHolderConsignment (consignment) += warrantHolder###concrete (consignment);

    goodsAcceptedConsignment (consignment) += goodsAccepted###concrete (consignment);

    loadingExecuterConsignment (consignment) += loadingExecuter###concrete (consignment);
    wayOfLoadingConsignment (consignment) += wayOfLoading###concrete (consignment);

    unloadingExecuterConsignment (consignment) += unloadingExecuter###concrete (consignment);
    wayOfUnloadingConsignment (consignment) += wayOfUnloading###concrete (consignment);

    codeLoadingConsignment (consignment) += codeLoading###concrete (consignment);

    dataArrivalTimeConsignment (consignment) += OVERRIDE defaultArrivalTime###concrete(consignment), arrivalTime###concrete(consignment);
    dataDowntimeConsignment (consignment) += OVERRIDE defaultDowntime###concrete(consignment), downtime###concrete(consignment);   
     
    raceQuantityConsignment (consignment) += raceQuantity###concrete (consignment);
END
                                                                
META implementConsignmentHeaderData (concrete) // без OVERRIDE для dataArrivalTimeConsignment, dataDowntimeConsignment
    EXTEND CLASS concrete : Consignment;

    dataDateConsignment (consignment) += date###concrete(consignment);
    numberConsignment (consignment) += number###concrete(consignment);
    seriesConsignment (consignment) += series###concrete(consignment);

    payerConsignment (consignment) += payer###concrete (consignment);

    dataTruckConsignment (consignment) += dataTruck###concrete (consignment);
    dataTrailerConsignment (consignment) += dataTrailer###concrete (consignment);
    dataEmployeeConsignment (consignment) += dataEmployee###concrete (consignment);
    dataWaybillConsignment (consignment) += waybill###concrete (consignment);

    dataAddressSupplierStockConsignment (consignment) += dataAddressSupplierStock###concrete (consignment);
    dataAddressCustomerStockConsignment (consignment) += dataAddressCustomerStock###concrete (consignment);

    readdressingConsignment (consignment) += readdressing###concrete (consignment);
    
    countPagesConsignment (consignment) += countPages###concrete (consignment);

    overShipmentBaseConsignment (consignment) += overShipmentBase###concrete (consignment);

    issuanceAllowedConsignment (consignment) += issuanceAllowed###concrete (consignment);

    issuanceExecutedConsignment (consignment) += issuanceExecuted###concrete (consignment);

    dataForwarderConsignment (consignment) += dataForwarder###concrete (consignment);

    warrantConsignment (consignment) += warrant###concrete (consignment);
    warrantHolderConsignment (consignment) += warrantHolder###concrete (consignment);

    goodsAcceptedConsignment (consignment) += goodsAccepted###concrete (consignment);

    loadingExecuterConsignment (consignment) += loadingExecuter###concrete (consignment);
    wayOfLoadingConsignment (consignment) += wayOfLoading###concrete (consignment);

    unloadingExecuterConsignment (consignment) += unloadingExecuter###concrete (consignment);
    wayOfUnloadingConsignment (consignment) += wayOfUnloading###concrete (consignment);

    codeLoadingConsignment (consignment) += codeLoading###concrete (consignment);

    dataArrivalTimeConsignment (consignment) += arrivalTime###concrete(consignment);
    dataDowntimeConsignment (consignment) += downtime###concrete(consignment);   
     
    raceQuantityConsignment (consignment) += raceQuantity###concrete (consignment);
END

META implementConsignmentDocumentHeader (concrete, object, prefix)

    prefix###payer###concrete (concrete) += payer###object (concrete);
                                                                                  
    prefix###dataTruck###concrete (concrete) += dataTruck###object (concrete);
    prefix###dataTrailer###concrete (concrete) += dataTrailer###object (concrete);
    prefix###dataEmployee###concrete (concrete) += dataEmployee###object (concrete);
    prefix###waybill###concrete (concrete) += waybill###object (concrete);

    prefix###dataAddressSupplierStock###concrete (concrete) += dataAddressSupplierStock###object (concrete);
    prefix###dataAddressCustomerStock###concrete (concrete) += dataAddressCustomerStock###object (concrete);

    prefix###readdressing###concrete (concrete) += readdressing###object (concrete);

    prefix###countPages###concrete (concrete) += countPages###object (concrete);

    prefix###overShipmentBase###concrete (concrete) += overShipmentBase###object (concrete);

    prefix###issuanceAllowed###concrete (concrete) += issuanceAllowed###object (concrete);

    prefix###issuanceExecuted###concrete (concrete) += issuanceExecuted###object (concrete);

    prefix###dataForwarder###concrete (concrete) += dataForwarder###object (concrete);

    prefix###warrant###concrete (concrete) += warrant###object (concrete);
    prefix###warrantHolder###concrete (concrete) += warrantHolder###object (concrete);

    prefix###goodsAccepted###concrete (concrete) += goodsAccepted###object (concrete);

    prefix###loadingExecuter###concrete (concrete) += loadingExecuter###object (concrete);
    prefix###wayOfLoading###concrete (concrete) += wayOfLoading###object (concrete);

    prefix###unloadingExecuter###concrete (concrete) += unloadingExecuter###object (concrete);
    prefix###wayOfUnloading###concrete (concrete) += wayOfUnloading###object (concrete);

    prefix###codeLoading###concrete (concrete) += codeLoading###object (concrete);

    prefix###arrivalTime###concrete (concrete) += arrivalTime###object (concrete);
    prefix###downtime###concrete (concrete) += downtime###object (concrete);
        
    prefix###raceQuantity###concrete (concrete) += raceQuantity###object (concrete);

END

META implementConsignmentInterfaceHeader(object)
    @implementConsignmentDocumentHeader(object, user###object, );
    @implementConsignmentHeader (object);
END
//--

META implementConsignmentDocumentHeaderPrefix (concrete, object, NS)

    NS.payer###concrete (concrete) += payer###object (concrete);

    NS.dataTruck###concrete (concrete) += dataTruck###object (concrete);
    NS.dataTrailer###concrete (concrete) += dataTrailer###object (concrete);
    NS.dataEmployee###concrete (concrete) += dataEmployee###object (concrete);
    NS.waybill###concrete (concrete) += waybill###object (concrete);

    NS.dataAddressSupplierStock###concrete (concrete) += dataAddressSupplierStock###object (concrete);
    NS.dataAddressCustomerStock###concrete (concrete) += dataAddressCustomerStock###object (concrete);

    NS.readdressing###concrete (concrete) += readdressing###object (concrete);

    NS.overShipmentBase###concrete (concrete) += overShipmentBase###object (concrete);

    NS.issuanceAllowed###concrete (concrete) += issuanceAllowed###object (concrete);

    NS.issuanceExecuted###concrete (concrete) += issuanceExecuted###object (concrete);

    NS.dataForwarder###concrete (concrete) += dataForwarder###object (concrete);

    NS.warrant###concrete (concrete) += warrant###object (concrete);
    NS.warrantHolder###concrete (concrete) += warrantHolder###object (concrete);

    NS.goodsAccepted###concrete (concrete) += goodsAccepted###object (concrete);

    NS.loadingExecuter###concrete (concrete) += loadingExecuter###object (concrete);
    NS.wayOfLoading###concrete (concrete) += wayOfLoading###object (concrete);

    NS.unloadingExecuter###concrete (concrete) += unloadingExecuter###object (concrete);
    NS.wayOfUnloading###concrete (concrete) += wayOfUnloading###object (concrete);

    NS.codeLoading###concrete (concrete) += codeLoading###object (concrete);
    
    NS.defaultArrivalTime###concrete (concrete) += defaultArrivalTime###object (concrete);        
    NS.arrivalTime###concrete (concrete) += arrivalTime###object (concrete);
    
    NS.defaultDowntime###concrete (concrete) += defaultDowntime###object (concrete);          
    NS.downtime###concrete (concrete) += downtime###object (concrete);

    NS.raceQuantity###concrete (concrete) += raceQuantity###object (concrete);

    NS.countPages###concrete (concrete) += countPages###object (concrete);
END

// -------------------------- Implement строк накладной -------------------- //

META implementConsignmentDetail (concrete, skuProp)
    @implementConsignmentDetailInner (concrete, ###concrete, skuProp);
END

META implementConsignmentDetailInner (concrete, concreteClass, skuProp)
    EXTEND CLASS concreteClass##Detail : ConsignmentDetail;

    consignmentConsignmentDetail (consignmentDetail) += concrete###concrete##Detail (consignmentDetail);
    skuConsignmentDetail (consignmentDetail) += skuProp###concrete##Detail (consignmentDetail);
    quantityConsignmentDetail (consignmentDetail) += quantity###concrete##Detail (consignmentDetail);

    dataPackQuantityConsignmentDetail (consignmentDetail) += packQuantity###concrete##Detail (consignmentDetail);
    dataGrossWeightConsignmentDetail (consignmentDetail) += sumGrossWeight###concrete##Detail (consignmentDetail);
END
META implementConsignmentDetail (concrete)
    @implementConsignmentDetail (concrete, sku);
END

// -------------------------- Implement всей накладной -------------------- //

META implementConsignment(concrete, skuProp)
    @implementConsignmentHeader(concrete);
    @implementConsignmentDetail(concrete, skuProp);
END

// ------------------------------------- Отпуск товара --------------------------------- //

GROUP invoiceConsignment 'Накладная' : base;

issuanceAllowedStock = DATA Employee (Stock);
nameIssuanceAllowedStock 'Отпуск разрешил' (stock) = nameContact(issuanceAllowedStock(stock)) IN invoiceConsignment;

issuanceExecutedStock  = DATA Employee(Stock);
nameIssuanceExecutedStock 'Отпуск произвел' (stock) = nameContact(issuanceExecutedStock(stock)) IN invoiceConsignment;

loadingExecuterStock = DATA LegalEntity(Stock);
nameLoadingExecuterStock 'Исполнитель погрузки' (stock) = nameLegalEntity(loadingExecuterStock(stock)) IN invoiceConsignment;

wayOfLoadingStock = DATA WayOfLoading(Stock);
nameWayOfLoadingStock 'Способ погрузки' (stock) = nameWayOfLoading(wayOfLoadingStock(stock)) IN invoiceConsignment;

unloadingExecuterStock = DATA LegalEntity(Stock);
nameUnloadingExecuterStock 'Исполнитель разгрузки' (stock) = nameLegalEntity(unloadingExecuterStock(stock)) IN invoiceConsignment;

wayOfUnloadingStock = DATA WayOfLoading(Stock);
nameWayOfUnloadingStock 'Способ разгрузки' (stock) = nameWayOfLoading(wayOfUnloadingStock(stock)) IN invoiceConsignment;

codeLoadingStock 'Код ПРР' = DATA STRING[3] (Stock)IN invoiceConsignment;

META deriveConsignmentProperty(objectClass, property, stockProp)
    property###objectClass (o) <- property###stock(stockProp###objectClass(o))
        WHEN CHANGED(stockProp###objectClass(o));
END
META deriveConsignmentPropertyALL(stockProp)
    @deriveConsignmentProperty(userInvoice, issuanceAllowed, stockProp);
    @deriveConsignmentProperty(userInvoice, issuanceExecuted, stockProp);
    @deriveConsignmentProperty(userInvoice, loadingExecuter, stockProp);
    @deriveConsignmentProperty(userInvoice, unloadingExecuter, stockProp);
    @deriveConsignmentProperty(userInvoice, wayOfLoading, stockProp);
    @deriveConsignmentProperty(userInvoice, wayOfUnloading, stockProp);
    @deriveConsignmentProperty(userInvoice, codeLoading, stockProp);          
END

META deriveConsignmentPropertyALL(object, stockProp)
    @deriveConsignmentProperty(object, issuanceAllowed, stockProp);
    @deriveConsignmentProperty(object, issuanceExecuted, stockProp);
    @deriveConsignmentProperty(object, loadingExecuter, stockProp);
    @deriveConsignmentProperty(object, unloadingExecuter, stockProp);
    @deriveConsignmentProperty(object, wayOfLoading, stockProp);
    @deriveConsignmentProperty(object, wayOfUnloading, stockProp);
    @deriveConsignmentProperty(object, codeLoading, stockProp);          
END

