MODULE PurchaseDeclarationEVAT;

REQUIRE PurchaseDeclarationDetail, EVAT;

NAMESPACE Purchase;

createEVATDeclaration 'Таможенные декларации' (DATE dFrom, DATE dTo) = ACTION {
    FOR date(Declaration d) >= dFrom AND date(d) <= dTo ADDOBJ e = EVAT DO {
        status(e) <- EVATStatus.original;
        
        date(e) <- date(d);
        
//        numberContract (e) <- number(contractSku(i));
//        dateContract (e) <- dateFrom(contractSku(i));
        codeDocType (e) <- 603;
        blankCodeDoc (e) <- '402861';
        seriesDoc(e) <- series(d);
        numberDoc(e) <- number(d);
        unpSender(e) <- UNP(legalEntity(d));
        
        //Поставщик
        supplier(e) <- legalEntity(d);
//        branchCodeSupplier(e) <- branchCode(supplierStock(i));
        
        //Получатель
        customer(e) <- legalEntity(d);
//        branchCodeCustomer(e) <- branchCode(customerStock(i));
        
        FOR declaration(DeclarationDetail id) == d ADDOBJ ed = EVATDetail DO {
            evat(ed) <- e;

            name(ed) <- nameCustoms(id);
            code(ed) <- OVERRIDE '0000000000', codeCustomsGroup(id);
            quantity(ed) <- quantity(id); 
            price(ed) <- price(id);
            sum(ed) <- homeSum(id);
            exciseSum(ed) <- 0;
            vatRate(ed) <- percentVAT(id);
            vatSum(ed) <- VATSum(id);
            sumWithVAT(ed) <- homeSum(id) (+) VATSum(id);
            
            IF percentVAT(id) == 0 THEN
                descriptionType(ed) <- DescriptionType.vatExcemption
            ELSE
                descriptionType(ed) <- DescriptionType.deductionInFull;
        } 
    } 
    APPLY {};
} CONFIRM;

EXTEND FORM evats
    PROPERTIES createEVATDeclaration(dFrom, dTo) TOOLBAR TODRAW e
;

DESIGN evats {
    generate {
        MOVE PROPERTY(createEVATDeclaration(dFrom, dTo));
    }
}