MODULE EVAT;

REQUIRE System, Finance, LegalEntityBy, Item, Warehouse;

// Атрибуты для счет-фактуры

branchCode 'Код подразделения (для ЭСЧФ)' = DATA INTEGER (Warehouse);
EXTEND FORM warehouse
    PROPERTIES(w) branchCode
;

CLASS EVAT 'Электронный счёт-фактура';
TABLE evat(EVAT);

CLASS EVATStatus 'Статус' {
    original 'Исходный',
    fixed 'Исправленный',
    additional 'Дополнительный',
    additionalNoRef 'Дополнительный без ссылки',
    cancelled 'Отменённый'
}

FORM evatStatuses
    OBJECTS e = EVATStatus
    PROPERTIES(e) READONLY staticCaption
    DIALOG EVATStatus OBJECT e
;

CLASS LegalEntityStatus 'Статус' {
    seller 'Продавец',
    consignor 'Комитент',
    commissionaire 'Комиссионер',
    taxDeductionPayer 'Плательщик, передающий налоговые вычеты',
    trustee 'Доверительный управляющий',
    foreignOrganization 'Иностранная организация',
    agent 'Посредник',
    developer 'Заказчик (застройщик)',
    tornoversOnSalePayer 'Плательщик, передающий обороты по реализации'
}

FORM legalEntityStatuses
    OBJECTS p = LegalEntityStatus
    PROPERTIES(p) READONLY staticCaption
    DIALOG LegalEntityStatus OBJECT p
;

serviceUrlEVAT 'Адрес  WSDL (EVAT)' = DATA VARSTRING[100] (Computer);
serviceUrlEVAT 'Адрес WSDL (EVAT)' () = serviceUrlEVAT(currentComputer()); 
pathEVAT 'Путь к jar и xsd (EVAT)' = DATA VARSTRING[100] (Computer);
pathEVAT 'Путь к jar и xsd (EVAT)' () = pathEVAT(currentComputer()); 
exportPathEVAT 'Путь для xml-файлов(EVAT)' = DATA VARSTRING[100] (Computer);
exportPathEVAT 'Путь для xml-файлов(EVAT)' () = exportPathEVAT(currentComputer()); 
passwordEVAT 'Пароль (EVAT)' = DATA VARSTRING[100] (Computer) ECHO;
passwordEVAT 'Пароль (EVAT)' () = passwordEVAT(currentComputer());
certIndexEVAT 'Номер сертификата (EVAT)' = DATA INTEGER (Computer);
certIndexEVAT 'Номер сертификата (EVAT)' () = certIndexEVAT(currentComputer()); 

EXTEND FORM computer PROPERTIES(c) serviceUrlEVAT, pathEVAT, exportPathEVAT, passwordEVAT, certIndexEVAT;
EXTEND FORM computers PROPERTIES(c) READONLY serviceUrlEVAT, pathEVAT, exportPathEVAT, passwordEVAT, certIndexEVAT;

generateXMLAction 'Сгенерировать XML' = ACTION CUSTOM 'lsfusion.erp.region.by.finance.evat.GenerateXMLEVATActionProperty'(EVAT); 
evatAction = ACTION CUSTOM 'lsfusion.erp.region.by.finance.evat.EVATActionProperty'(INTEGER); 
signAndSend 'Сгенерировать, подписать и отправить' (EVAT evat) = ACTION { evatAction(0); }
getStatus 'Получить статус ЭСЧФ' () = ACTION { evatAction(1); }
listAndGet 'Скачать ЭСЧФ с портала' (EVAT evat) = ACTION { evatAction(2); }

formExportFile() = DATA LOCAL CUSTOMFILE ();

status = DATA EVATStatus (EVAT);
nameStatus 'Статус' (EVAT evat) = staticName(status(evat));
captionStatus 'Статус' (EVAT evat) = staticCaption(status(evat));

@defineNumbered(EVAT);
@defineNumeratedDefault(EVAT, 'ЭСЧФ', 'ЭС');

result 'Ответ сервера' = DATA TEXT (EVAT);
serverStatus 'Статус на сервере' = DATA TEXT (EVAT);

in 'Вкл.' = DATA LOCAL BOOLEAN (EVAT);
invoice 'К ЭСЧФ' = DATA VARSTRING[100] (EVAT);
date 'Дата совершения операции' = DATA DATE (EVAT);
dateCancelled 'Дата аннулирования' = DATA DATE (EVAT);
sendToRecipient 'Отобразить получателю' = DATA BOOLEAN (EVAT);
numberInvoicePrincipal 'Номер ЭСЧФ комитента' = DATA VARSTRING[100] (EVAT);
dateInvoicePrincipal 'Дата ЭСЧФ комитента' = DATA DATE (EVAT);
numberInvoiceVendor 'Номер ЭСЧФ продавца' = DATA VARSTRING[100] (EVAT);
dateInvoiceVendor 'Дата ЭСЧФ продавца' = DATA DATE (EVAT);

declarationSupplier 'Регистрационный номер выпуска товаров поставщика' = DATA VARSTRING[100] (EVAT);
dateReleaseSupplier 'Дата выпуска товаров поставщика' = DATA DATE (EVAT);
dateActualExportSupplier 'Дата разрешения на убытие товаров поставщика' = DATA DATE (EVAT);
numberTaxesSupplier 'Номер заявления о ввозе товаров и уплате косвенных налогов поставщика' = DATA VARSTRING[100] (EVAT);
dateTaxesSupplier 'Дата заявления поставщика о ввозе товаров и уплате косвенных налогов поставщика' = DATA DATE (EVAT);

declarationCustomer 'Регистрационный номер выпуска товаров получателя' = DATA VARSTRING[100] (EVAT);
numberTaxesCustomer 'Номер заявления о ввозе товаров и уплате косвенных налогов получателя' = DATA VARSTRING[100] (EVAT);
dateTaxesCustomer 'Дата заявления получателя о ввозе товаров и уплате косвенных налогов получателя' = DATA DATE (EVAT);
dateImportCustomer 'Дата ввоза товаров получателя' = DATA DATE (EVAT);

skipDeliveryCondition 'Пропустить блоки SenderReceiver и DeliveryCondition' = DATA BOOLEAN (EVAT);
numberContract 'Номер договора на поставку товара' = DATA VARSTRING[100] (EVAT);
dateContract 'Дата договора на поставку товара' = DATA DATE (EVAT);
codeDocType 'Код вида документа' = DATA INTEGER (EVAT);
valueDocType 'Название вида документа' = DATA VARSTRING[100] (EVAT);
blankCodeDoc 'Код типа бланка' = DATA VARSTRING[100] (EVAT);
seriesDoc 'Серия' = DATA VARSTRING[100] (EVAT);
numberDoc 'Номер' = DATA VARSTRING[100] (EVAT);
descriptionDoc 'Дополнительные сведения' = DATA VARSTRING[100] (EVAT);
unpSender 'Субъект хозяйствования, составляющий ЭСЧФ' = DATA VARSTRING[100](EVAT);

//Поставщик
supplier 'Поставщик' = DATA LegalEntity(EVAT);
nameSupplier 'Поставщик' (EVAT evat) = OVERRIDE name(supplier(evat)), fullName(supplier(evat));
branchCodeSupplier 'Код филиала поставщика' = DATA INTEGER (EVAT);
addressSupplier 'Адрес поставщика' (EVAT evat) = address(supplier(evat));
dependentPersonSupplier 'Взаимозависимое лицо' = DATA BOOLEAN (EVAT);
residentsOfOffshoreSupplier ' Сделка с резидентом оффшорной зоны ' = DATA BOOLEAN (EVAT);
specialDealGoodsSupplier 'Спец. сделка' = DATA BOOLEAN (EVAT);
bigCompanySupplier 'Крупный плательщик (поставщик)' = DATA BOOLEAN (EVAT);
countryCodeSupplier 'Код страны поставщика' (EVAT evat) = sid(country(supplier(evat)));
unpSupplier 'УНП поставщика' (EVAT evat) = UNP(supplier(evat));
legalEntityStatusSupplier 'Статус поставщика' = DATA LegalEntityStatus (EVAT);
nameLegalEntityStatusSupplier 'Статус поставщика' (EVAT evat) = staticName(legalEntityStatusSupplier(evat));
captionLegalEntityStatusSupplier 'Статус поставщика' (EVAT evat) = staticCaption(legalEntityStatusSupplier(evat));

//Получатель
customer 'Получатель' = DATA LegalEntity(EVAT);
nameCustomer 'Получатель' (EVAT evat) = OVERRIDE name(customer(evat)), fullName(customer(evat));
branchCodeCustomer 'Код филиала получателя' = DATA INTEGER (EVAT);
addressCustomer 'Адрес получателя' (EVAT evat) = address(customer(evat));
dependentPersonCustomer 'Взаимозависимое лицо' = DATA BOOLEAN (EVAT);
residentsOfOffshoreCustomer ' Сделка с резидентом оффшорной зоны ' = DATA BOOLEAN (EVAT);
specialDealGoodsCustomer 'Спец. сделка' = DATA BOOLEAN (EVAT);
bigCompanyCustomer 'Крупный плательщик (получатель)' = DATA BOOLEAN (EVAT);
countryCodeCustomer 'Код страны получателя' (EVAT evat) = sid(country(customer(evat)));
unpCustomer 'УНП получателя' (EVAT evat) = UNP(customer(evat));
legalEntityStatusCustomer 'Статус получателя' = DATA LegalEntityStatus (EVAT);
nameLegalEntityStatusCustomer 'Статус получателя' (EVAT evat) = staticName(legalEntityStatusCustomer(evat));
captionLegalEntityStatusCustomer 'Статус получателя' (EVAT evat) = staticCaption(legalEntityStatusCustomer(evat));
//Товар
CLASS EVATDetail 'Строка электронного счёта-фактуры';
TABLE evatDetail(EVATDetail);

evat = DATA EVAT (EVATDetail) NOT NULL DELETE;
objValue (EVATDetail d) = INTEGER(d AS EVATDetail);
name 'Наименование' = DATA VARSTRING[255] (EVATDetail);
code 'Код ТНВЭД' = DATA VARSTRING[10] (EVATDetail);
shortNameUOM 'Ед. изм.' (EVATDetail evatDetail) = DATA VARISTRING[100] (EVATDetail);
codeOced 'Код видов деятельности (ОКЭД)' = DATA VARSTRING[100] (EVATDetail);
quantity 'Количество' = DATA NUMERIC[16,5] (EVATDetail); 
price 'Цена' = DATA NUMERIC[16,5] (EVATDetail);
sum 'Сумма' = DATA NUMERIC[16,5] (EVATDetail);
exciseSum 'Сумма акциза' = DATA NUMERIC[16,5] (EVATDetail);
vatRate 'Ставка НДС' = DATA NUMERIC[16,5] (EVATDetail);
vatSum 'Сумма НДС' = DATA NUMERIC[16,5] (EVATDetail);
sumWithVAT 'Сумма с НДС' = DATA NUMERIC[16,5] (EVATDetail);

CLASS DescriptionType 'Описание' {
    deductionInFull 'Вычет в полном объеме',
    vatExcemption 'Освобождение от НДС',
    outsideRB 'Реализация за пределами Республики Беларусь',
    importVAT 'Ввозной НДС'
}

FORM descriptionTypes
    OBJECTS d = DescriptionType
    PROPERTIES(d) READONLY staticCaption
    DIALOG DescriptionType OBJECT d
;

descriptionType = DATA DescriptionType(EVATDetail);
nameDescriptionType (EVATDetail evatDetail) = staticName(descriptionType(evatDetail));
captionDescriptionType 'Описание' (EVATDetail evatDetail)= staticCaption(descriptionType(evatDetail));

totalSum 'Сумма (всего)'(EVAT evat) = GROUP SUM sum(EVATDetail evatDetail) IF evat(evatDetail) == EVAT evat BY evat;  
totalExciseSum 'Сумма акциза (всего)' (EVAT evat) = GROUP SUM exciseSum(EVATDetail evatDetail)  IF evat(evatDetail) == EVAT evat BY evat;
totalVATSum 'Сумма НДС (всего)' (EVAT evat) = GROUP SUM vatSum(EVATDetail evatDetail)  IF evat(evatDetail) == EVAT evat BY evat;
totalSumWithVAT 'Сумма с НДС (всего)' (EVAT evat) = GROUP SUM sumWithVAT(EVATDetail evatDetail)  IF evat(evatDetail) == EVAT evat BY evat;

FORM evat 'Электронная счёт-фактура'
    OBJECTS e=EVAT FIXED PANEL
    PROPERTIES(e) captionStatus, unpSender, number, invoice, date, dateCancelled, sendToRecipient, result, serverStatus,
                  captionLegalEntityStatusSupplier, bigCompanySupplier, dependentPersonSupplier, residentsOfOffshoreSupplier, specialDealGoodsSupplier,
                  captionLegalEntityStatusCustomer, bigCompanyCustomer, dependentPersonCustomer, residentsOfOffshoreCustomer, specialDealGoodsCustomer,
                  numberInvoicePrincipal, dateInvoicePrincipal, numberInvoiceVendor,
                  dateInvoiceVendor, nameSupplier, branchCodeSupplier, declarationSupplier, dateReleaseSupplier, dateActualExportSupplier,
                   numberTaxesSupplier, dateTaxesSupplier,
                  nameCustomer, branchCodeCustomer, declarationCustomer, numberTaxesCustomer, dateTaxesCustomer, dateImportCustomer,
                  skipDeliveryCondition, numberContract, dateContract, codeDocType, valueDocType, blankCodeDoc, seriesDoc, numberDoc, descriptionDoc, 
                  totalSum, totalExciseSum, totalVATSum, totalSumWithVAT
    OBJECTS s=LegalEntity FIXED PANEL, c=LegalEntity FIXED PANEL
    PROPERTIES(s) id, UNP, address
    PROPERTIES(c) id, UNP, address
    OBJECTS d = EVATDetail
    PROPERTIES(d) name, code, quantity, price, sum, exciseSum, vatRate, vatSum, sumWithVAT, captionDescriptionType, ADDOBJ
    FILTERS s==supplier(e), c==customer(e), evat(d) == e
    EDIT EVAT OBJECT e
;

DESIGN evat {
    MOVE PROPERTY(captionStatus(e));
    MOVE PROPERTY(nameSupplier(e));
    MOVE PROPERTY(nameCustomer(e));
    NEW top {
        type = TABBED;
        fill = 1;
        NEW general {
            caption = 'Общие';
            fill = 1;
            MOVE PROPERTY(unpSender(e));
            MOVE PROPERTY(number(e));
            MOVE PROPERTY(date(e));
            MOVE PROPERTY(invoice(e));
            MOVE PROPERTY(dateCancelled(e));
            MOVE PROPERTY(sendToRecipient(e));
            MOVE PROPERTY(result(e));
            MOVE PROPERTY(serverStatus(e));
        }
        NEW supplier{
            caption = 'Поставщик';
            fill = 1;
            MOVE s.box;   
            MOVE PROPERTY(captionLegalEntityStatusSupplier(e));
            MOVE PROPERTY(bigCompanySupplier(e));
            MOVE PROPERTY(dependentPersonSupplier(e));
            MOVE PROPERTY(residentsOfOffshoreSupplier(e));
            MOVE PROPERTY(specialDealGoodsSupplier(e));
            MOVE PROPERTY(numberInvoicePrincipal(e));
            MOVE PROPERTY(dateInvoicePrincipal(e));
            MOVE PROPERTY(numberInvoiceVendor(e));
            MOVE PROPERTY(dateInvoiceVendor(e));
            MOVE PROPERTY(branchCodeSupplier(e));
            MOVE PROPERTY(declarationSupplier(e));
            MOVE PROPERTY(dateReleaseSupplier(e));
            MOVE PROPERTY(dateActualExportSupplier(e));
            MOVE PROPERTY(numberTaxesSupplier(e));
            MOVE PROPERTY(dateTaxesSupplier(e));
        }
        NEW customer{
            caption = 'Получатель';
            fill = 1;
            MOVE c.box;   
            MOVE PROPERTY(captionLegalEntityStatusCustomer(e));
            MOVE PROPERTY(bigCompanyCustomer(e));
            MOVE PROPERTY(dependentPersonCustomer(e));
            MOVE PROPERTY(residentsOfOffshoreCustomer(e));
            MOVE PROPERTY(specialDealGoodsCustomer(e));
            MOVE PROPERTY(branchCodeCustomer(e));
            MOVE PROPERTY(declarationCustomer(e));
            MOVE PROPERTY(numberTaxesCustomer(e));
            MOVE PROPERTY(dateTaxesCustomer(e));
            MOVE PROPERTY(dateImportCustomer(e));
        }           
        NEW deliveryCondition {
            caption = 'Условия поставки';
            fill = 1;
            MOVE PROPERTY(skipDeliveryCondition(e));
            MOVE PROPERTY(numberContract(e));
            MOVE PROPERTY(dateContract(e));
            MOVE PROPERTY(codeDocType(e));
            MOVE PROPERTY(valueDocType(e));
            MOVE PROPERTY(blankCodeDoc(e));
            MOVE PROPERTY(seriesDoc(e));
            MOVE PROPERTY(numberDoc(e));
            MOVE PROPERTY(descriptionDoc(e));
        }
        NEW roster {
            caption = 'Данные по товарам';
            fill = 1;
            MOVE PROPERTY(totalSum(e));
            MOVE PROPERTY(totalExciseSum(e));
            MOVE PROPERTY(totalVATSum(e));
            MOVE PROPERTY(totalSumWithVAT(e));            
            MOVE d.box;
        }
    }

    MOVE functions.box;
}

FORM evats 'Электронные счета-фактуры'
    OBJECTS e = EVAT
    PROPERTIES(e) in
    PROPERTIES(e) READONLY captionStatus, unpSender, number, invoice, date, numberDoc, seriesDoc, dateCancelled, sendToRecipient, numberInvoicePrincipal, dateInvoicePrincipal, numberInvoiceVendor,
                  dateInvoiceVendor, nameSupplier, declarationSupplier, dateReleaseSupplier, dateActualExportSupplier, numberTaxesSupplier, dateTaxesSupplier,
                  nameCustomer, declarationCustomer, numberTaxesCustomer, dateTaxesCustomer, dateImportCustomer, totalSum, totalExciseSum, totalVATSum, totalSumWithVAT
    PROPERTIES(e) TOOLBAR generateXMLAction, signAndSend
    PROPERTIES() TOOLBAR TODRAW e getStatus
    PROPERTIES(e) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    OBJECTS d = EVATDetail
    PROPERTIES(d) READONLY name, code, quantity, price, sum, exciseSum, vatRate, vatSum, sumWithVAT, captionDescriptionType
    FILTERS evat(d) == e
    DIALOG EVAT OBJECT e

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES dFrom = OBJVALUE(dFrom), dTo = OBJVALUE(dTo)

    OBJECTS l = LegalEntity FIXED PANEL
    PROPERTIES(l) name SELECTOR
    FILTERS isCompany(l)
;

DESIGN evats {
    NEW pane AFTER e.box{
        type = TABBED;
        fill = 1;
        
        MOVE d.box {
            
        }
        NEW actions {
            caption = 'Действия';
            MOVE dates.box {
                PROPERTY(dFrom) {
                    caption = 'Дата с';
                }
                PROPERTY(dTo) {
                    caption = 'Дата по';
                }
            }
            MOVE l.box;
            NEW generate {
                caption = 'Генерация ЭСЧФ';
            }
        }
        
    }
}

NAVIGATOR {
    financeNavigator {
        ADD evats;
    }
}