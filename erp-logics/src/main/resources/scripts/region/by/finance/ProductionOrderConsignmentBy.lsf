MODULE ProductionOrderConsignmentBy;

REQUIRE ConsignmentBy, PricingProductionOutput;

NAMESPACE Production;

@defineConsignmentHeader (order);

invoiceNumber 'Номер ТТН' = DATA VARSTRING[28] (Order) IN numbered MINCHARWIDTH 7;
invoiceSeries 'Серия ТТН' = DATA STRING[2] (Order) IN numbered FIXEDCHARWIDTH 3;

invoiceSeriesNumber 'Серия/Номер ТТН' (Order o) = 
    CONCAT '', invoiceSeries(o), invoiceNumber(o) 
    MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20 PERSISTENT;
    EXTEND CLASS Order : Consignment;

EXTEND FORM order
    PROPERTIES(o) invoiceNumber, invoiceSeries
;

EXTEND FORM orders
    PROPERTIES(o) READONLY invoiceNumber, invoiceSeries
;

DESIGN order {
    headerRow1 {
        NEW invoice {
            caption = 'ТТН';
            type = CONTAINERH;
            MOVE PROPERTY (invoiceNumber(o));
            MOVE PROPERTY (invoiceSeries(o));
        }
    }
}

dataDate (Order consignment) += date(consignment);
number (Order consignment) += invoiceNumber(consignment);
series (Order consignment) += invoiceSeries(consignment);

payer (Order consignment) += payer (consignment);

dataTruck (Order consignment) += dataTruck (consignment);
dataTrailer (Order consignment) += dataTrailer (consignment);
dataEmployee (Order consignment) += dataEmployee (consignment);
dataWaybill (Order consignment) += waybill (consignment);

dataAddressSupplierStock (Order consignment) += dataAddressSupplierStock (consignment);
dataAddressCustomerStock (Order consignment) += dataAddressCustomerStock (consignment);

readdressing (Order consignment) += readdressing (consignment);

countPages (Order consignment) += countPages (consignment);

overShipmentBase (Order consignment) += overShipmentBase (consignment);

issuanceAllowed (Order consignment) += issuanceAllowed (consignment);

issuanceExecuted (Order consignment) += issuanceExecuted (consignment);

dataForwarder (Order consignment) += dataForwarder (consignment);

warrant (Order consignment) += warrant (consignment);
warrantHolder (Order consignment) += warrantHolder (consignment);

goodsAccepted (Order consignment) += goodsAccepted (consignment);

loadingExecuter (Order consignment) += loadingExecuter (consignment);
wayOfLoading (Order consignment) += wayOfLoading (consignment);

unloadingExecuter (Order consignment) += unloadingExecuter (consignment);
wayOfUnloading (Order consignment) += wayOfUnloading (consignment);

codeLoading (Order consignment) += codeLoading (consignment);

dataArrivalTime (Order consignment) += arrivalTime(consignment);
dataDowntime (Order consignment) += downtime(consignment);   
 
raceQuantity (Order consignment) += raceQuantity (consignment);

//@implementConsignmentHeaderData (Order){ // без OVERRIDE для dataArrivalTimeConsignment, dataDowntimeConsignment
//    EXTEND CLASS Order : Consignment;
//
//    dataDateConsignment (consignment) += dateOrder(consignment);
//    numberConsignment (consignment) += numberOrder(consignment);
//    seriesConsignment (consignment) += seriesOrder(consignment);
//
//    payerConsignment (consignment) += payerOrder (consignment);
//
//    dataTruckConsignment (consignment) += dataTruckOrder (consignment);
//    dataTrailerConsignment (consignment) += dataTrailerOrder (consignment);
//    dataEmployeeConsignment (consignment) += dataEmployeeOrder (consignment);
//    dataWaybillConsignment (consignment) += waybillOrder (consignment);
//
//    dataAddressSupplierStockConsignment (consignment) += dataAddressSupplierStockOrder (consignment);
//    dataAddressCustomerStockConsignment (consignment) += dataAddressCustomerStockOrder (consignment);
//
//    readdressingConsignment (consignment) += readdressingOrder (consignment);
//    
//    countPagesConsignment (consignment) += countPagesOrder (consignment);
//
//    overShipmentBaseConsignment (consignment) += overShipmentBaseOrder (consignment);
//
//    issuanceAllowedConsignment (consignment) += issuanceAllowedOrder (consignment);
//
//    issuanceExecutedConsignment (consignment) += issuanceExecutedOrder (consignment);
//
//    dataForwarderConsignment (consignment) += dataForwarderOrder (consignment);
//
//    warrantConsignment (consignment) += warrantOrder (consignment);
//    warrantHolderConsignment (consignment) += warrantHolderOrder (consignment);
//
//    goodsAcceptedConsignment (consignment) += goodsAcceptedOrder (consignment);
//
//    loadingExecuterConsignment (consignment) += loadingExecuterOrder (consignment);
//    wayOfLoadingConsignment (consignment) += wayOfLoadingOrder (consignment);
//
//    unloadingExecuterConsignment (consignment) += unloadingExecuterOrder (consignment);
//    wayOfUnloadingConsignment (consignment) += wayOfUnloadingOrder (consignment);
//
//    codeLoadingConsignment (consignment) += codeLoadingOrder (consignment);
//
//    dataArrivalTimeConsignment (consignment) += arrivalTimeOrder(consignment);
//    dataDowntimeConsignment (consignment) += downtimeOrder(consignment);   
//     
//    raceQuantityConsignment (consignment) += raceQuantityOrder (consignment);
//};

EXTEND CLASS ProductDetail : ConsignmentDetail;

index (ProductDetail d) += index (d);
consignment (ProductDetail d) += order (d);
dataSku[ConsignmentDetail] (ProductDetail d) += sku (d);  
dataQuantity (ProductDetail d) += outputQuantity (d);
skip[ConsignmentDetail](ProductDetail d) += (outputQuantity(d) == 0) OR (NOT outputQuantity(d));

dataPackQuantity (ProductDetail d) += 1.0 IF outputQuantity (d);
dataGrossWeight (ProductDetail d) += NUMERIC[16,5](outputQuantity (d)*overNetWeight(sku(d)));

dataSupplier (Order consignment) += componentsLegalEntityStock(consignment);
supplierStock (Order consignment) += componentsStock(consignment);

overPackQuantity 'Общее количество грузовых мест' = DATA NUMERIC[8,2] (Order);
packQuantity (Order c) += WHEN c IS Order THEN overPackQuantity(c);

dataCustomer (Order consignment) += productsLegalEntityStock(consignment);
customerStock (Order consignment) += productsStock(consignment);

dataCurrency (Order consignment) += currencyProduct(consignment);

dataPrice (ProductDetail detail) += WHEN detail IS ProductDetail THEN price(detail);

dataSum (ProductDetail detail) += WHEN detail IS ProductDetail THEN outputProductsSum(detail);
dataVAT (ProductDetail detail) += WHEN detail IS ProductDetail THEN valueVAT(detail);

dataSumVAT (ProductDetail detail) += WHEN detail IS ProductDetail THEN retVATSum(detail);
dataSumInvoice (ProductDetail detail) += WHEN detail IS ProductDetail THEN outputProductsSum(detail);

overShipmentBase(Order order) <- (CONCAT '', 'Заказ № ', seriesNumber(order)+' ', 'от '+toDateDDMMYYYY(date(order))) WHEN CHANGED(date(order)) OR CHANGED(seriesNumber(order));

DESIGN operation {
    tabContainer {
        NEW consignment {
            caption = 'Оформление накладных';
        }
    }    
}

@defineOperationProperty(notUseDriverTruck, 'Не использовать справочники для выбора водителей и машин', consignment);
@defineOperationProperty(notUseIssuanceAllowed, 'Не использовать справочник сотрудников "Отпуск разрешил"', consignment);
@defineOperationProperty(notUseIssuanceExecuted, 'Не использовать справочник сотрудников "Отпуск произвел"', consignment);
@defineOperationProperty(useGoodsAccepted, 'Использовать справочник сотрудников "Принял грузополучатель"', consignment);
@defineOperationProperty(notPrintGr, 'Не писать прописью граммы в ТТН', consignment);
@defineOperationProperty(banOpenedPrint, 'Запрещено печатать непроведенные документы', consignment);

notUseDriverTruck(Order c) += notUseDriverTruck(operation(c));
notUseIssuanceAllowed(Order c) += notUseIssuanceAllowed(operation(c));
notUseIssuanceExecuted(Order c) += notUseIssuanceExecuted(operation(c));
useGoodsAccepted(Order c) += useGoodsAccepted(operation(c));
notPrintGr(Order c) += notPrintGr(operation(c));
banPrint (Order c) += WHEN banOpenedPrint(operation(c)) AND NOT isPosted(c)THEN TRUE;

EXTEND FORM  orders
    PROPERTIES(o) FORCE PANEL editAttributes
    PROPERTIES(o) FORCE PANEL SHOWIF showTTN1(o) READONLYIF banPrint(o)
                     printVerticalA, printVerticalAB, printHorizontalA,
                     printVerticalB, printHorizontalB, printAttach,
                     printVertical, printHorizontal, printAttachXLS, printSimpleAttachXLS 
    PROPERTIES(o) FORCE PANEL SHOWIF showTN2(o) READONLYIF banPrint(o)
                     printSimpleHorizontal, printSimpleVertical, printSimpleAttach
;

DESIGN orders {
    printTab {
        NEW consignmentRow1 {
            align = LEADING;
            type = CONTAINERH;

            NEW contOne {
                alignment = STRETCH;
                type = CONTAINERH;
                caption = 'Накладная';
                MOVE PROPERTY(editAttributes(o)) {
                    alignment = STRETCH;
                }
            }
            NEW tn2 {
                alignment = STRETCH;
                type = COLUMNS;
                columns = 3;
                caption = 'ТН-2';
                MOVE PROPERTY(printSimpleVertical(o));
                MOVE PROPERTY(printSimpleHorizontal(o));
                MOVE PROPERTY(printSimpleAttach(o));
            }
        }
        NEW consignmentRow2 {
            align = LEADING;
            type = COLUMNS;
            columns = 3;
            caption = 'ТТН-1';
            MOVE PROPERTY(printVerticalA(o));
            MOVE PROPERTY(printVerticalAB(o));
            MOVE PROPERTY(printHorizontalA(o));
            MOVE PROPERTY(printVerticalB(o));
            MOVE PROPERTY(printHorizontalB(o));
            MOVE PROPERTY(printAttach(o));      
            MOVE PROPERTY(printVertical(o));  
            MOVE PROPERTY(printHorizontal(o));
        }
        NEW consignmentRow3 {
            type = CONTAINERH;            
            NEW export {
                type = CONTAINERH;
                caption = 'Экспорт';  
                MOVE PROPERTY(printAttachXLS(o));  
                MOVE PROPERTY(printSimpleAttachXLS(o));                
            }
        }    
    }
}