MODULE ConsignmentDashboardBy;

REQUIRE ConsignmentDashboard;

NAMESPACE Order;

//умная печать накладных
//sessionIssuanceAllowed = DATA LOCAL Employee ();
//nameSessionIssuanceAllowed 'Отпуск разрешил' = positionShortNameEmployee(sessionIssuanceAllowed());
//
//sessionIssuanceExecuted = DATA LOCAL Employee();
//nameSessionIssuanceExecuted 'Отпуск произвел' () = positionShortNameEmployee(sessionIssuanceExecuted());
//
//sessionLoadingExecuter = DATA LOCAL LegalEntity();
//nameSessionLoadingExecuter 'Исполнитель погрузки' () = nameLegalEntity(sessionLoadingExecuter());
//
//sessionWayOfLoading = DATA LOCAL WayOfLoading();
//nameSessionWayOfLoading 'Способ погрузки' () = nameWayOfLoading(sessionWayOfLoading());
//
//sessionUnloadingExecuter = DATA LOCAL LegalEntity();
//nameSessionUnloadingExecuter 'Исполнитель разгрузки' () = nameLegalEntity(sessionUnloadingExecuter());
//
//sessionWayOfUnloading = DATA LOCAL WayOfLoading();
//nameSessionWayOfUnloading 'Способ разгрузки' () = nameWayOfLoading(sessionWayOfUnloading());
//
//sessionCodeLoading 'Код ПРР' = DATA LOCAL STRING[3] ();

numberCopiesConsignment 'Кол-во экз. накладной (ТТН-1)' = DATA INTEGER ();
numberCopiesAttach 'Кол-во экз. приложения (ТТН-1)' = DATA INTEGER ();

numberCopiesSimpleConsignment 'Кол-во экз. накладной (ТН-2)' = DATA INTEGER ();
numberCopiesSimpleAttach 'Кол-во экз. приложения (ТН-2)' = DATA INTEGER ();

countRowsVerticalAB = ABSTRACT INTEGER (Consignment);
overCountRowsVerticalAB = OVERRIDE countRowsVerticalAB(), countRowsVerticalAB(Consignment consignment);

FORM issuanceEmpoyee 'Сотрудники' 
    OBJECTS c = Consignment FIXED PANEL
    
    OBJECTS e = Employee
    PROPERTIES(e) READONLY positionShortName
    FILTERS in(supplierStock(c), e)
;

changeIssuanceAllowed(Consignment consignment) = ACTION {
    DIALOG issuanceEmpoyee OBJECTS c = consignment, e = issuanceAllowed(consignment) INPUT NULL DO
        issuanceAllowed(consignment) <- e;   
}

changeIssuanceExecuted(Consignment consignment) = ACTION {
     DIALOG issuanceEmpoyee OBJECTS c = consignment, e = issuanceExecuted(consignment) INPUT NULL DO
         issuanceExecuted(consignment) <- e;   
}

EXTEND FORM options
    PROPERTIES() numberCopiesConsignment, numberCopiesAttach, numberCopiesSimpleConsignment, numberCopiesSimpleAttach
;

DESIGN options {
    commons {
        consignment  {
            type = CONTAINERH;
            NEW row1{
                type = CONTAINERV;
                MOVE PROPERTY(dataDowntime());
                MOVE PROPERTY(notArrivalTimeConsignment());    
                MOVE PROPERTY(notNullInvoiceVAT());          
            }
            NEW row2{
                type = CONTAINERV;
                MOVE PROPERTY(countRowsSimpleVertical());
                MOVE PROPERTY(countRowsSimpleHorizontal());
                MOVE PROPERTY(countRowsVerticalA());
                MOVE PROPERTY(countRowsVerticalAB());
                MOVE PROPERTY(countRowsHorizontal());
            }
            NEW row3{
                type = CONTAINERV;
                MOVE PROPERTY(numberCopiesConsignment());
                MOVE PROPERTY(numberCopiesAttach());
                MOVE PROPERTY(numberCopiesSimpleConsignment());
                MOVE PROPERTY(numberCopiesSimpleAttach());                
                
            }
        }

    }
}

//TABLE consignment (Consignment);
dataNumberCopiesConsignment 'Кол-во экз. накладной' = DATA INTEGER (Consignment);
dataNumberCopiesAttach 'Кол-во экз. приложения' = DATA INTEGER (Consignment);

numberCopiesConsignment 'Кол-во экз. накладной' (Consignment consignment)= OVERRIDE (numberCopiesConsignment() IF consignment IS Consignment), 
                                                                                    dataNumberCopiesConsignment(consignment);
numberCopiesAttach 'Кол-во экз. приложения' (Consignment consignment)= OVERRIDE (numberCopiesAttach() IF consignment IS Consignment), 
                                                                                dataNumberCopiesAttach(consignment);
                                                                                    
FORM numberCopies 'Настройки печати ТТН-1'
    OBJECTS c = Consignment FIXED PANEL
    PROPERTIES(c) numberCopiesConsignment, numberCopiesAttach 
        
    PROPERTIES(c) nameIssuanceAllowed ON CHANGE changeIssuanceAllowed(c), 
                  nameIssuanceExecuted ON CHANGE changeIssuanceExecuted(c), 
                  nameLoadingExecuter, 
                  nameWayOfLoading, 
                  nameUnloadingExecuter, 
                  nameWayOfUnloading, codeLoading         
;
 
DESIGN numberCopies {
    main{
        NEW top{
            type = CONTAINERH;
            NEW topLeft {
                caption = 'Погрузка';
                type = CONTAINERV;
                MOVE PROPERTY (nameIssuanceAllowed(c));
                MOVE PROPERTY (nameIssuanceExecuted(c));
                MOVE PROPERTY (nameLoadingExecuter(c));
                MOVE PROPERTY (nameWayOfLoading(c));
                MOVE PROPERTY (nameUnloadingExecuter(c));
                MOVE PROPERTY (nameWayOfUnloading(c));
                MOVE PROPERTY (codeLoading(c));
            }
            NEW topReight {
                caption = 'Кол-во копий';
                type = CONTAINERV;
                MOVE PROPERTY (numberCopiesConsignment(c));
                MOVE PROPERTY (numberCopiesAttach(c));
            }
        }           
        MOVE functions.box;
    }
}
           
overPrintDoubleSidedConsignmentsVertical = ACTION ABSTRACT LIST (Consignment);
overSetDoubleSidedConsignmentsVertical = ACTION ABSTRACT LIST (Consignment);

prePrintActionConsignmentsVertical(Consignment consignment) = ACTION {
    issuanceAllowed(consignment) <- issuanceAllowed(supplierStock(consignment)) WHERE NOT issuanceAllowed(consignment);
    issuanceExecuted(consignment) <- issuanceExecuted(supplierStock(consignment)) WHERE NOT issuanceExecuted(consignment);
    loadingExecuter(consignment) <- loadingExecuter(supplierStock(consignment)) WHERE NOT loadingExecuter(consignment);
    wayOfLoading(consignment) <- wayOfLoading(supplierStock(consignment))WHERE NOT wayOfLoading(consignment);
    unloadingExecuter(consignment) <- unloadingExecuter(supplierStock(consignment)) WHERE NOT unloadingExecuter(consignment);
    wayOfUnloading(consignment) <- wayOfUnloading(supplierStock(consignment)) WHERE NOT wayOfUnloading(consignment);    
    codeLoading(consignment) <- codeLoading(supplierStock(consignment)) WHERE NOT codeLoading(consignment);
}

printDoubleSidedConsignmentsVertical 'Печать ТТН-1' (Consignment consignment) = ACTION {
    prePrintActionConsignmentsVertical(consignment);                                                  
    
    DIALOG numberCopies OBJECTS c = consignment DO {

        LOCAL countConsignment = INTEGER();        
        LOCAL countAttach = INTEGER();  
        countConsignment() <- 0;
        countAttach() <- 0;
           
        overSetDoubleSidedConsignmentsVertical(consignment);
        IF countConsignmentDetail(consignment) <= overCountRowsVerticalAB (consignment) THEN {
            WHILE countConsignment() < numberCopiesConsignment(consignment) DO {
                printVerticalABAuto(consignment);
                countConsignment() <- countConsignment() + 1;
            }               
        } ELSE {
            IF  countConsignmentDetail(consignment) <= countRowsVerticalA () THEN {
                WHILE countConsignment() < numberCopiesConsignment(consignment) DO {
                    printVerticalAuto(consignment);
                    countConsignment() <- countConsignment() + 1;
                }                 
            
            } ELSE {
                WHILE countConsignment() < numberCopiesConsignment(consignment) DO {
                    printVerticalABAuto(consignment);
                    countConsignment() <- countConsignment() + 1;
                }      
                WHILE countAttach() < numberCopiesAttach(consignment) DO {
                    printAttachAuto(consignment);
                    countAttach() <- countAttach() + 1;
                }                          
            }                                    
        }
        
        printed(consignment) <- TRUE IF consignment IS Consignment;
        overPrintDoubleSidedConsignmentsVertical(consignment);
        apply();                 
    }
    cancel();
} IMAGE 'print.png';

printStepsConsignmentsVertical 'Печать ТТН-1 (пошаговая)' (Consignment consignment) = ACTION {
    prePrintActionConsignmentsVertical(consignment);                                                  

    DIALOG numberCopies OBJECTS c = consignment DO {
        LOCAL countConsignment = INTEGER();        
        LOCAL countAttach = INTEGER();  
        countConsignment() <- 0;
        countAttach() <- 0;   
                                    
        IF countConsignmentDetail(consignment) <= overCountRowsVerticalAB (consignment) THEN {
            ASK 'Печать будет выполняться на ОДНОЙ стороне ТТН БЕЗ ПРИЛОЖЕНИЯ' DO {
                WHILE countConsignment() < numberCopiesConsignment(consignment) DO {
                    printVerticalAB(consignment);
                    countConsignment() <- countConsignment() + 1;
                }
                printed(consignment) <- TRUE;
            }  
        } ELSE {
            IF  countConsignmentDetail(consignment) <= countRowsVerticalA () THEN {
                ASK 'Печать будет выполняться на ДВУХ сторонах ТТН' DO {
                    WHILE countConsignment() < numberCopiesConsignment(consignment) DO {
                        printVerticalAAuto(consignment);
                        countConsignment() <- countConsignment() + 1;
                    }
                    MESSAGE 'Для продолжения печати положите бланк ТТН обратной стороной'; 
                    WHILE countConsignment() < numberCopiesConsignment(consignment) DO {
                        printVerticalBAuto(consignment);
                        countConsignment() <- countConsignment() + 1;
                    }
                    printed(consignment) <- TRUE;
                }  
            } ELSE {
                ASK 'Печать будет выполняться на ОДНОЙ стороне ТТН C ПРИЛОЖЕНИЕМ' DO {
                    WHILE countConsignment() < numberCopiesConsignment(consignment) DO {
                        printVerticalABAuto(consignment);
                        countConsignment() <- countConsignment() + 1;
                    }      
                    WHILE countAttach() < numberCopiesAttach(consignment) DO {
                        printAttachAuto(consignment);
                        countAttach() <- countAttach() + 1;
                    } 
                    printed(consignment) <- TRUE;
                } 
            }                                    
        }
        IF printed(consignment) THEN
            apply();
    }
    cancel();
} IMAGE 'print.png';

EXTEND FORM consignmentDashboard
    PROPERTIES (i) printDoubleSidedConsignmentsVertical , printStepsConsignmentsVertical 
;

DESIGN consignmentDashboard {
    consignmentRow2 {
        MOVE PROPERTY(printDoubleSidedConsignmentsVertical(i));
        MOVE PROPERTY(printStepsConsignmentsVertical(i));
    }
}

numberCopiesSimpleConsignment 'Кол-во экз. накладной' (Consignment consignment)= OVERRIDE (numberCopiesSimpleConsignment() IF consignment IS Consignment), 
                                                                                    dataNumberCopiesConsignment(consignment);
numberCopiesSimpleAttach 'Кол-во экз. приложения' (Consignment consignment)= OVERRIDE (numberCopiesSimpleAttach() IF consignment IS Consignment), 
                                                                                dataNumberCopiesAttach(consignment);

FORM numberCopiesSimple 'Настройки печати ТН-2'
    OBJECTS c = Consignment FIXED PANEL
    PROPERTIES(c) numberCopiesSimpleConsignment, numberCopiesSimpleAttach 
    
    PROPERTIES(c) nameIssuanceAllowed ON CHANGE changeIssuanceAllowed(c), 
                  nameIssuanceExecuted ON CHANGE changeIssuanceExecuted(c), 
                  forwarder ON CHANGE changeForwarder(c),
                  warrant, warrantHolder, overGoodsAccepted ON CHANGE changeGoodsAccepted(c)    
;
 
DESIGN numberCopiesSimple {
    main{
        NEW top{
            type = CONTAINERH;
            NEW topLeft {
                caption = 'Погрузка';
                type = CONTAINERV;
                MOVE PROPERTY(nameIssuanceAllowed(c));
                MOVE PROPERTY(nameIssuanceExecuted(c));
                MOVE PROPERTY(forwarder(c));
                MOVE PROPERTY(warrant(c));
                MOVE PROPERTY(warrantHolder(c));
                MOVE PROPERTY(overGoodsAccepted(c));
            }
            NEW topReight {
                caption = 'Кол-во копий';
                type = CONTAINERV;
                MOVE PROPERTY (numberCopiesSimpleConsignment(c));
                MOVE PROPERTY (numberCopiesSimpleAttach(c));
            }
        }           
        MOVE functions.box;
    }
}

countRowsSimpleVertical = ABSTRACT INTEGER (Consignment);
overCountRowsSimpleVertical = OVERRIDE countRowsSimpleVertical(), countRowsSimpleVertical(Consignment consignment);

overPrintDoubleSidedConsignmentsSimpleVertical = ACTION ABSTRACT LIST (Consignment);
overSetDoubleSidedConsignmentsSimpleVertical = ACTION ABSTRACT LIST (Consignment);
printDoubleSidedConsignmentsSimpleVertical 'Печать ТН-2' (Consignment consignment) = ACTION {
    issuanceAllowed(consignment) <- issuanceAllowed(supplierStock(consignment)) WHERE NOT issuanceAllowed(consignment);
    issuanceExecuted(consignment) <- issuanceExecuted(supplierStock(consignment)) WHERE NOT issuanceExecuted(consignment);
    loadingExecuter(consignment) <- loadingExecuter(supplierStock(consignment)) WHERE NOT loadingExecuter(consignment);
    wayOfLoading(consignment) <- wayOfLoading(supplierStock(consignment))WHERE NOT wayOfLoading(consignment);
    unloadingExecuter(consignment) <- unloadingExecuter(supplierStock(consignment)) WHERE NOT unloadingExecuter(consignment);
    wayOfUnloading(consignment) <- wayOfUnloading(supplierStock(consignment)) WHERE NOT wayOfUnloading(consignment);    
    codeLoading(consignment) <- codeLoading(supplierStock(consignment)) WHERE NOT codeLoading(consignment);
    
    DIALOG numberCopiesSimple OBJECTS c = consignment DO {
        LOCAL countConsignment = INTEGER();        
        LOCAL countAttach = INTEGER(); 
        countConsignment() <- 1;
        countAttach() <- 1;                                                          
                            
        overSetDoubleSidedConsignmentsSimpleVertical(consignment);
        
        countConsignment() <- 0;            
        countAttach() <- 0;            
        
        IF countConsignmentDetail(consignment) <= overCountRowsSimpleVertical (consignment) THEN {
            WHILE countConsignment() < numberCopiesSimpleConsignment(consignment) DO {
                printSimpleVertical(consignment); 
                countConsignment() <- countConsignment() + 1;
            }               
        } ELSE {      
            WHILE countConsignment() < numberCopiesSimpleConsignment(consignment) DO {
                printSimpleVertical(consignment); 
                countConsignment() <- countConsignment() + 1;
            }      
            WHILE countAttach() < numberCopiesSimpleAttach(consignment) DO {
                printSimpleAttach(consignment); 
                countAttach() <- countAttach() + 1;
            }                          
                                                
        }
        
        printed(consignment) <- TRUE IF consignment IS Consignment;
        overPrintDoubleSidedConsignmentsSimpleVertical(consignment);
        apply();                 
    }
    cancel();
} IMAGE 'print.png';

EXTEND FORM consignmentDashboard
    PROPERTIES (i) printDoubleSidedConsignmentsSimpleVertical 
;

DESIGN consignmentDashboard {
    tn {
        MOVE PROPERTY(printDoubleSidedConsignmentsSimpleVertical(i));
    }
}
