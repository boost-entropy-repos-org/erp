MODULE ConsignmentDashboardBy;

REQUIRE ConsignmentDashboard;

NAMESPACE Order;

//умная печать накладных
//sessionIssuanceAllowed = DATA LOCAL Employee ();
//nameSessionIssuanceAllowed 'Отпуск разрешил' = positionShortNameEmployee(sessionIssuanceAllowed());
//
//sessionIssuanceExecuted = DATA LOCAL Employee();
//nameSessionIssuanceExecuted 'Отпуск произвел' () = positionShortNameEmployee(sessionIssuanceExecuted());
//
//sessionLoadingExecuter = DATA LOCAL LegalEntity();
//nameSessionLoadingExecuter 'Исполнитель погрузки' () = nameLegalEntity(sessionLoadingExecuter());
//
//sessionWayOfLoading = DATA LOCAL WayOfLoading();
//nameSessionWayOfLoading 'Способ погрузки' () = nameWayOfLoading(sessionWayOfLoading());
//
//sessionUnloadingExecuter = DATA LOCAL LegalEntity();
//nameSessionUnloadingExecuter 'Исполнитель разгрузки' () = nameLegalEntity(sessionUnloadingExecuter());
//
//sessionWayOfUnloading = DATA LOCAL WayOfLoading();
//nameSessionWayOfUnloading 'Способ разгрузки' () = nameWayOfLoading(sessionWayOfUnloading());
//
//sessionCodeLoading 'Код ПРР' = DATA LOCAL STRING[3] ();

numberCopiesConsignment 'Кол-во экз. накладной (ТТН-1)' = DATA INTEGER ();
numberCopiesAttach 'Кол-во экз. приложения (ТТН-1)' = DATA INTEGER ();

numberCopiesSimpleConsignment 'Кол-во экз. накладной (ТН-2)' = DATA INTEGER ();
numberCopiesSimpleAttach 'Кол-во экз. приложения (ТН-2)' = DATA INTEGER ();

countRowsVerticalABConsignment = ABSTRACT INTEGER (Consignment);
overCountRowsVerticalABConsignment = OVERRIDE countRowsVerticalAB(), countRowsVerticalABConsignment(consignment);

FORM issuanceEmpoyee 'Сотрудники' 
    OBJECTS c = Consignment FIXED PANEL
    
    OBJECTS e = Employee
    PROPERTIES(e) READONLY positionShortNameEmployee
    FILTERS inStockEmployee(supplierStockConsignment(c), e)
;

changeIssuanceAllowedConsignment = ACTION (consignment) {
    FORM issuanceEmpoyee OBJECTS c = consignment DIALOG SHOWDROP;
    IF formResult() == FormResult.ok THEN {
        issuanceAllowedConsignment(consignment) <- chosenObject('e');   
    }
}

changeIssuanceExecutedConsignment = ACTION (consignment) {
     FORM issuanceEmpoyee OBJECTS c = consignment DIALOG SHOWDROP;
     IF formResult() == FormResult.ok THEN {
         issuanceExecutedConsignment(consignment) <- chosenObject('e');   
     }
}

EXTEND FORM options
    PROPERTIES() numberCopiesConsignment, numberCopiesAttach, numberCopiesSimpleConsignment, numberCopiesSimpleAttach
;

DESIGN options {
    commons {
        consignment  {
            type = CONTAINERH;
            NEW row1{
                type = CONTAINERV;
                MOVE PROPERTY(dataDowntime());
                MOVE PROPERTY(notArrivalTimeConsignment());    
                MOVE PROPERTY(notNullInvoiceVAT());          
            }
            NEW row2{
                type = CONTAINERV;
                MOVE PROPERTY(countRowsSimpleVertical());
                MOVE PROPERTY(countRowsSimpleHorizontal());
                MOVE PROPERTY(countRowsVerticalA());
                MOVE PROPERTY(countRowsVerticalAB());
                MOVE PROPERTY(countRowsHorizontal());
            }
            NEW row3{
                type = CONTAINERV;
                MOVE PROPERTY(numberCopiesConsignment());
                MOVE PROPERTY(numberCopiesAttach());
                MOVE PROPERTY(numberCopiesSimpleConsignment());
                MOVE PROPERTY(numberCopiesSimpleAttach());                
                
            }
        }

    }
}

//TABLE consignment (Consignment);
dataNumberCopiesConsignmentConsignment 'Кол-во экз. накладной' = DATA INTEGER (Consignment);
dataNumberCopiesAttachConsignment 'Кол-во экз. приложения' = DATA INTEGER (Consignment);

numberCopiesConsignmentConsignment 'Кол-во экз. накладной' (consignment)= OVERRIDE (numberCopiesConsignment() IF consignment IS Consignment), 
                                                                                    dataNumberCopiesConsignmentConsignment(consignment);
numberCopiesAttachConsignment 'Кол-во экз. приложения' (consignment)= OVERRIDE (numberCopiesAttach() IF consignment IS Consignment), 
                                                                                dataNumberCopiesAttachConsignment(consignment);
                                                                                    
FORM numberCopies 'Настройки печати ТТН-1'
    OBJECTS c = Consignment FIXED PANEL
    PROPERTIES(c) numberCopiesConsignmentConsignment, numberCopiesAttachConsignment 
        
    PROPERTIES(c) nameIssuanceAllowedConsignment ON CHANGE changeIssuanceAllowedConsignment(c), 
                  nameIssuanceExecutedConsignment ON CHANGE changeIssuanceExecutedConsignment(c), 
                  nameLoadingExecuterConsignment, 
                  nameWayOfLoadingConsignment, 
                  nameUnloadingExecuterConsignment, 
                  nameWayOfUnloadingConsignment, codeLoadingConsignment         
;
 
DESIGN numberCopies {
    main{
        NEW top{
            type = CONTAINERH;
            NEW topLeft {
                caption = 'Погрузка';
                type = CONTAINERV;
                MOVE PROPERTY (nameIssuanceAllowedConsignment(c));
                MOVE PROPERTY (nameIssuanceExecutedConsignment(c));
                MOVE PROPERTY (nameLoadingExecuterConsignment(c));
                MOVE PROPERTY (nameWayOfLoadingConsignment(c));
                MOVE PROPERTY (nameUnloadingExecuterConsignment(c));
                MOVE PROPERTY (nameWayOfUnloadingConsignment(c));
                MOVE PROPERTY (codeLoadingConsignment(c));
            }
            NEW topReight {
                caption = 'Кол-во копий';
                type = CONTAINERV;
                MOVE PROPERTY (numberCopiesConsignmentConsignment(c));
                MOVE PROPERTY (numberCopiesAttachConsignment(c));
            }
        }           
        MOVE functions.box;
    }
}
           
overPrintDoubleSidedConsignmentsVertical = ABSTRACT ACTION LIST (Consignment);
overSetDoubleSidedConsignmentsVertical = ABSTRACT ACTION LIST (Consignment);

prePrintActionConsignmentsVertical = ACTION (consignment) {
    issuanceAllowedConsignment(consignment) <- issuanceAllowedStock(supplierStockConsignment(consignment)) WHERE NOT issuanceAllowedConsignment(consignment);
    issuanceExecutedConsignment(consignment) <- issuanceExecutedStock(supplierStockConsignment(consignment)) WHERE NOT issuanceExecutedConsignment(consignment);
    loadingExecuterConsignment(consignment) <- loadingExecuterStock(supplierStockConsignment(consignment)) WHERE NOT loadingExecuterConsignment(consignment);
    wayOfLoadingConsignment(consignment) <- wayOfLoadingStock(supplierStockConsignment(consignment))WHERE NOT wayOfLoadingConsignment(consignment);
    unloadingExecuterConsignment(consignment) <- unloadingExecuterStock(supplierStockConsignment(consignment)) WHERE NOT unloadingExecuterConsignment(consignment);
    wayOfUnloadingConsignment(consignment) <- wayOfUnloadingStock(supplierStockConsignment(consignment)) WHERE NOT wayOfUnloadingConsignment(consignment);    
    codeLoadingConsignment(consignment) <- codeLoadingStock(supplierStockConsignment(consignment)) WHERE NOT codeLoadingConsignment(consignment);
}

printDoubleSidedConsignmentsVertical 'Печать ТТН-1' (consignment) = ACTION {
    prePrintActionConsignmentsVertical(consignment);                                                  
    
    FORM numberCopies OBJECTS c = consignment MODAL;
    LOCAL countConsignment = INTEGER();        
    LOCAL countAttach = INTEGER();  
    countConsignment() <- 0;
    countAttach() <- 0;   
    
    IF formResult() == FormResult.ok THEN {
        overSetDoubleSidedConsignmentsVertical(consignment);
        IF countConsignmentDetailConsignment(consignment) <= overCountRowsVerticalABConsignment (consignment) THEN {
            WHILE countConsignment() < numberCopiesConsignmentConsignment(consignment) DO {
                printConsignmentVerticalABAuto(consignment);
                countConsignment() <- countConsignment() + 1;
            }               
        } ELSE {
            IF  countConsignmentDetailConsignment(consignment) <= countRowsVerticalA () THEN {
                WHILE countConsignment() < numberCopiesConsignmentConsignment(consignment) DO {
                    printConsignmentVerticalAuto(consignment);
                    countConsignment() <- countConsignment() + 1;
                }                 
            
            } ELSE {
                WHILE countConsignment() < numberCopiesConsignmentConsignment(consignment) DO {
                    printConsignmentVerticalABAuto(consignment);
                    countConsignment() <- countConsignment() + 1;
                }      
                WHILE countAttach() < numberCopiesAttachConsignment(consignment) DO {
                    printConsignmentAttachAuto(consignment);
                    countAttach() <- countAttach() + 1;
                }                          
            }                                    
        }
        
        printedConsignment(consignment) <- TRUE IF consignment IS Consignment;
        overPrintDoubleSidedConsignmentsVertical(consignment);
        apply();                 
    } ELSE {
        cancel();
    }    
} IMAGE 'print.png';

printStepsConsignmentsVertical 'Печать ТТН-1 (пошаговая)' (consignment) = ACTION {
    prePrintActionConsignmentsVertical(consignment);                                                  

    FORM numberCopies OBJECTS c = consignment MODAL;
    LOCAL countConsignment = INTEGER();        
    LOCAL countAttach = INTEGER();  
    countConsignment() <- 0;
    countAttach() <- 0;   
                                    
    IF formResult() == FormResult.ok THEN {       
        IF countConsignmentDetailConsignment(consignment) <= overCountRowsVerticalABConsignment (consignment) THEN {
            CONFIRM 'Печать будет выполняться на ОДНОЙ стороне ТТН БЕЗ ПРИЛОЖЕНИЯ'; 
            IF (confirmed()) THEN {
                WHILE countConsignment() < numberCopiesConsignmentConsignment(consignment) DO {
                    printConsignmentVerticalAB(consignment);
                    countConsignment() <- countConsignment() + 1;
                }
            }  
             ELSE {
                     cancel();
                 }  
        } ELSE {
            IF  countConsignmentDetailConsignment(consignment) <= countRowsVerticalA () THEN {
                CONFIRM 'Печать будет выполняться на ДВУХ сторонах ТТН';
                IF (confirmed()) THEN {
                    WHILE countConsignment() < numberCopiesConsignmentConsignment(consignment) DO {
                        printConsignmentVerticalAAuto(consignment);
                        countConsignment() <- countConsignment() + 1;
                    }
                    MESSAGE 'Для продолжения печати положите бланк ТТН обратной стороной'; 
                    WHILE countConsignment() < numberCopiesConsignmentConsignment(consignment) DO {
                        printConsignmentVerticalBAuto(consignment);
                        countConsignment() <- countConsignment() + 1;
                    }
                }  
                ELSE {
                    cancel();
                }  
            } ELSE {
                CONFIRM 'Печать будет выполняться на ОДНОЙ стороне ТТН C ПРИЛОЖЕНИЕМ';
                IF (confirmed()) THEN {
                    WHILE countConsignment() < numberCopiesConsignmentConsignment(consignment) DO {
                        printConsignmentVerticalABAuto(consignment);
                        countConsignment() <- countConsignment() + 1;
                    }      
                    WHILE countAttach() < numberCopiesAttachConsignment(consignment) DO {
                        printConsignmentAttachAuto(consignment);
                        countAttach() <- countAttach() + 1;
                    } 
                } 
               ELSE {
                    cancel();
               }
            }                                    
        }
        
        printedConsignment(consignment) <- TRUE IF consignment IS Consignment;
        apply();                 
    } ELSE {
        cancel();
    }    
} IMAGE 'print.png';

EXTEND FORM consignmentDashboard
    PROPERTIES (i) printDoubleSidedConsignmentsVertical FORCE PANEL, printStepsConsignmentsVertical FORCE PANEL
;

DESIGN consignmentDashboard {
    consignmentRow2 {
        MOVE PROPERTY(printDoubleSidedConsignmentsVertical(i));
        MOVE PROPERTY(printStepsConsignmentsVertical(i));
    }
}

numberCopiesSimpleConsignmentConsignment 'Кол-во экз. накладной' (consignment)= OVERRIDE (numberCopiesSimpleConsignment() IF consignment IS Consignment), 
                                                                                    dataNumberCopiesConsignmentConsignment(consignment);
numberCopiesSimpleAttachConsignment 'Кол-во экз. приложения' (consignment)= OVERRIDE (numberCopiesSimpleAttach() IF consignment IS Consignment), 
                                                                                dataNumberCopiesAttachConsignment(consignment);

FORM numberCopiesSimple 'Настройки печати ТН-2'
    OBJECTS c = Consignment FIXED PANEL
    PROPERTIES(c) numberCopiesSimpleConsignmentConsignment, numberCopiesSimpleAttachConsignment 
    
    PROPERTIES(c) nameIssuanceAllowedConsignment ON CHANGE changeIssuanceAllowedConsignment(c), 
                  nameIssuanceExecutedConsignment ON CHANGE changeIssuanceExecutedConsignment(c), 
                  forwarderConsignment ON CHANGE changeForwarderConsignment(c),
                  warrantConsignment, warrantHolderConsignment, overGoodsAcceptedConsignment ON CHANGE changeGoodsAcceptedConsignment(c)    
;
 
DESIGN numberCopiesSimple {
    main{
        NEW top{
            type = CONTAINERH;
            NEW topLeft {
                caption = 'Погрузка';
                type = CONTAINERV;
                MOVE PROPERTY(nameIssuanceAllowedConsignment(c));
                MOVE PROPERTY(nameIssuanceExecutedConsignment(c));
                MOVE PROPERTY(forwarderConsignment(c));
                MOVE PROPERTY(warrantConsignment(c));
                MOVE PROPERTY(warrantHolderConsignment(c));
                MOVE PROPERTY(overGoodsAcceptedConsignment(c));
            }
            NEW topReight {
                caption = 'Кол-во копий';
                type = CONTAINERV;
                MOVE PROPERTY (numberCopiesSimpleConsignmentConsignment(c));
                MOVE PROPERTY (numberCopiesSimpleAttachConsignment(c));
            }
        }           
        MOVE functions.box;
    }
}

countRowsSimpleVerticalConsignment = ABSTRACT INTEGER (Consignment);
overCountRowsSimpleVerticalConsignment = OVERRIDE countRowsSimpleVertical(), countRowsSimpleVerticalConsignment(consignment);

overPrintDoubleSidedConsignmentsSimpleVertical = ABSTRACT ACTION LIST (Consignment);
overSetDoubleSidedConsignmentsSimpleVertical = ABSTRACT ACTION LIST (Consignment);
printDoubleSidedConsignmentsSimpleVertical 'Печать ТН-2' (consignment) = ACTION {
    issuanceAllowedConsignment(consignment) <- issuanceAllowedStock(supplierStockConsignment(consignment)) WHERE NOT issuanceAllowedConsignment(consignment);
    issuanceExecutedConsignment(consignment) <- issuanceExecutedStock(supplierStockConsignment(consignment)) WHERE NOT issuanceExecutedConsignment(consignment);
    loadingExecuterConsignment(consignment) <- loadingExecuterStock(supplierStockConsignment(consignment)) WHERE NOT loadingExecuterConsignment(consignment);
    wayOfLoadingConsignment(consignment) <- wayOfLoadingStock(supplierStockConsignment(consignment))WHERE NOT wayOfLoadingConsignment(consignment);
    unloadingExecuterConsignment(consignment) <- unloadingExecuterStock(supplierStockConsignment(consignment)) WHERE NOT unloadingExecuterConsignment(consignment);
    wayOfUnloadingConsignment(consignment) <- wayOfUnloadingStock(supplierStockConsignment(consignment)) WHERE NOT wayOfUnloadingConsignment(consignment);    
    codeLoadingConsignment(consignment) <- codeLoadingStock(supplierStockConsignment(consignment)) WHERE NOT codeLoadingConsignment(consignment);
    
    FORM numberCopiesSimple OBJECTS c = consignment MODAL;
    LOCAL countConsignment = INTEGER();        
    LOCAL countAttach = INTEGER(); 
    countConsignment() <- 1;
    countAttach() <- 1;                                                          
                            
    IF formResult() == FormResult.ok THEN {
        overSetDoubleSidedConsignmentsSimpleVertical(consignment);
        
        countConsignment() <- 0;            
        countAttach() <- 0;            
        
        IF countConsignmentDetailConsignment(consignment) <= overCountRowsSimpleVerticalConsignment (consignment) THEN {
            WHILE countConsignment() < numberCopiesSimpleConsignmentConsignment(consignment) DO {
                printConsignmentSimpleVertical(consignment); 
                countConsignment() <- countConsignment() + 1;
            }               
        } ELSE {      
            WHILE countConsignment() < numberCopiesSimpleConsignmentConsignment(consignment) DO {
                printConsignmentSimpleVertical(consignment); 
                countConsignment() <- countConsignment() + 1;
            }      
            WHILE countAttach() < numberCopiesSimpleAttachConsignment(consignment) DO {
                printConsignmentSimpleAttach(consignment); 
                countAttach() <- countAttach() + 1;
            }                          
                                                
        }
        
        printedConsignment(consignment) <- TRUE IF consignment IS Consignment;
        overPrintDoubleSidedConsignmentsSimpleVertical(consignment);
        apply();                 
    } ELSE {
        cancel();
    }    
} IMAGE 'print.png';

EXTEND FORM consignmentDashboard
    PROPERTIES (i) printDoubleSidedConsignmentsSimpleVertical FORCE PANEL
;

DESIGN consignmentDashboard {
    tn {
        MOVE PROPERTY(printDoubleSidedConsignmentsSimpleVertical(i));
    }
}
