MODULE InvoiceConsignmentBy;

REQUIRE Invoice,
        ConsignmentBy;

NAMESPACE Invoice;

@defineConsignmentAbstractHeader(invoice);
@implementConsignmentHeader (Invoice);
@implementConsignmentDetail (invoice);

dataSupplier (Invoice consignment) += from(consignment);
supplierStock[Consignment] (Invoice consignment) += fromStock(consignment);

dataCustomer (Invoice consignment) += to(consignment);
customerStock[Consignment] (Invoice consignment) += toStock(consignment);

dataCurrency (Invoice consignment) += currency(consignment);

dataPrice (InvoiceDetail detail) += price(detail);
invoicePrice[ConsignmentDetail](InvoiceDetail detail) += invoicePrice(detail);
invoiceSum[ConsignmentDetail](InvoiceDetail detail) += invoiceSum(detail);

dataSum (InvoiceDetail detail) += sum(detail);
dataVat (InvoiceDetail detail) += valueVAT(detail);

dataSumVAT (InvoiceDetail detail) += VATSum(detail);
dataSumInvoice (InvoiceDetail detail) += invoiceSum(detail);
note[ConsignmentDetail] (InvoiceDetail detail) += note(detail);
extraDescription[ConsignmentDetail] (InvoiceDetail detail) += extraDescription(detail);

DESIGN options { consignment { MOVE PROPERTY(notNullInvoiceVAT()); } }

META defineInvoiceConsignment(contactA, contactB)

    @defineConsignmentInterfaceHeader(invoice);
    @implementConsignmentDocumentHeader(invoice, userInvoice, );

    EXTEND FORM  invoices
        PROPERTIES(i) FORCE PANEL editAttributes
        PROPERTIES(i) FORCE PANEL SHOWIF showTTN1(i)
                         printVerticalA, printVerticalAB, printHorizontalA,
                         printVerticalB, printHorizontalB, printAttach,
                         printVertical, printHorizontal, printAttachXLS 
        PROPERTIES(i) FORCE PANEL SHOWIF showTN2(i)
                         printSimpleHorizontal, printSimpleVertical, printSimpleAttach
    ;

    DESIGN invoices {
        printTab {
            NEW consignmentRow1 {
                align = LEADING;
                type = CONTAINERH;

                NEW contOne {
                    alignment = STRETCH;
                    type = CONTAINERH;
                    caption = 'Накладная';
                    MOVE PROPERTY(editAttributes(i)) {
                        alignment = STRETCH;
                    }
                }
                NEW tn2 {
                    alignment = STRETCH;
                    type = COLUMNS;
                    columns = 3;
                    caption = 'ТН-2';
                    MOVE PROPERTY(printSimpleVertical(i));
                    MOVE PROPERTY(printSimpleHorizontal(i));
                    MOVE PROPERTY(printSimpleAttach(i));
                }
            }
            NEW consignmentRow2 {
                align = LEADING;
                type = COLUMNS;
                columns = 3;
                caption = 'ТТН-1';
                MOVE PROPERTY(printVerticalA(i));
                MOVE PROPERTY(printVerticalAB(i));
                MOVE PROPERTY(printHorizontalA(i));
                MOVE PROPERTY(printVerticalB(i));
                MOVE PROPERTY(printHorizontalB(i));
                MOVE PROPERTY(printAttach(i));      
                MOVE PROPERTY(printVertical(i));  
                MOVE PROPERTY(printHorizontal(i));
            }
            NEW consignmentRow3 {
                type = CONTAINERH;            
                NEW export {
                    type = CONTAINERH;
                    caption = 'Экспорт';  
                    MOVE PROPERTY(printAttachXLS(i));                
                }
            }    
        }
    }
END

seriesCharToNum = FORMULA 'lpad(CAST(CASE WHEN ASCII($1) < 1049 THEN ASCII($1) - 1039 ELSE ASCII($1) - 1041 END as char(2)), 2, \'0\')';
TTN1series (s) = '861' + seriesCharToNum(left(s,1)) + seriesCharToNum(right(s,1));

ttn1SeriesNumber(Invoice i) = TTN1series(series(i)) + number(i); 
