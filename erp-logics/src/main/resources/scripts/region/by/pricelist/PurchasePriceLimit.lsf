MODULE PurchasePriceLimit;

REQUIRE PricingPriceLimit, PricingPurchase, OrderInvoiceDashboard;

NAMESPACE Purchase;

//------------------ Предельные надбавки ----------------------//

@defineDocumentInterfaceProperty (invoice, showLimitPrice, 'Предельная надбавка');
@defineDocumentInterfaceDetailMarkupPrefix (invoice, limit, ' предельная');

WHEN SESSION (CHANGED(customerStockUserInvoiceDetail(detail)) OR
              CHANGED(skuUserInvoiceDetail(detail)) OR 
              SET(showLimitPriceUserInvoiceDetail(detail)))
             AND showLimitPriceUserInvoiceDetail(detail) DO {
    limitMarkupUserInvoiceDetail(detail) <- markupCalcPriceListTypeSku(priceLimitPriceListTypeDepartmentStore(customerStockUserInvoiceDetail(detail)), skuUserInvoiceDetail(detail));
}

//----------------------------------------------- Операции -----------------------------------------------------//

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции расценки, заданной для операции закупка
showLimitPriceUserInvoice (invoice) <- showLimitPriceOperation(pricingOperationOperation(operationUserInvoice(invoice)))
    WHEN CHANGED(operationUserInvoice(invoice));

showIfLimitPriceUserInvoice = showLimitPriceUserInvoice (invoice) AND createPricingUserInvoice(invoice);

EXTEND FORM userInvoice
    PROPERTIES(i) showLimitPriceUserInvoice SHOWIF createPricingUserInvoice(i) BACKGROUND backgroundRetailInvoice(i)
    PROPERTIES(pd) SHOWIF showIfLimitPriceUserInvoice(i) BEFORE retailMarkupUserInvoiceDetail(pd) limitMarkupUserInvoiceDetail BACKGROUND backgroundRetailInvoice(i)
;
DESIGN userInvoice{
    headerCreatePricing {
        MOVE PROPERTY (showLimitPriceUserInvoice(i));

    }
}

EXTEND FORM invoices
    PROPERTIES(d) READONLY SHOWIF showLimitPriceInvoice(i) BEFORE retailMarkupInvoiceDetail(d) limitMarkupInvoiceDetail BACKGROUND backgroundRetailInvoice(i)
;

// Имплементим для расчета оптимальной розничной цены

overLimitBasePriceUserInvoiceDetail = ABSTRACT NUMERIC[14,2] (UserInvoiceDetail);
limitBasePriceUserInvoiceDetail(d) = OVERRIDE priceUserInvoiceDetail(d), overLimitBasePriceUserInvoiceDetail(d);
 
limitPriceUserInvoiceDetail (detail) = roundPriceRoundCondition(
                                       IF limitMarkupUserInvoiceDetail(detail) > 100 THEN
                                            [= (X+Y)*(Z+100)/100](
                                                limitBasePriceUserInvoiceDetail(detail),
                                                limitMarkupUserInvoiceDetail(detail),
                                                valueRetailVATUserInvoiceDetail(detail))
                                       ELSE [= X*(Y+100)*(Z+100)/10000](
                                                limitBasePriceUserInvoiceDetail(detail),
                                                limitMarkupUserInvoiceDetail(detail),
                                                valueRetailVATUserInvoiceDetail(detail)), roundConditionCalcPriceListTypeSku(priceLimitPriceListTypeDepartmentStore(customerStockUserInvoiceDetail(detail)), skuUserInvoiceDetail(detail)));

WHEN SESSION FORMS userInvoice, orderInvoiceDashboard, orders
            (CHANGED(retailPriceUserInvoiceDetail(d)) OR CHANGED(limitBasePriceUserInvoiceDetail(d)) OR CHANGED(limitMarkupUserInvoiceDetail(d))) AND 
             showLimitPriceUserInvoiceDetail(d) AND limitPriceUserInvoiceDetail(d) < retailPriceUserInvoiceDetail(d) DO {
    retailPriceUserInvoiceDetail(d) <- limitPriceUserInvoiceDetail(d);
     
    retailMarkupUserInvoiceDetail(d) <- [= round2(min(((X/Z*100/(100+Y))-1)*100,99999))](
                                                       retailPriceUserInvoiceDetail(d),
                                                       pricingPriceUserInvoiceDetail(d) IF pricingPriceUserInvoiceDetail(d)!= 0.0,
                                                       valueRetailVATUserInvoiceDetail(d));
}

showLimitPricePricing(pricing) += showLimitPriceInvoice(invoiceInvoicePricing(pricing));
limitMarkupPricingDetail(detail) += limitMarkupInvoiceDetail(invoiceDetailInvoicePricingDetail(detail));
