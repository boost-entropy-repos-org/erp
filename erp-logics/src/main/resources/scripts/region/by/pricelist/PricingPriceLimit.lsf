MODULE PricingPriceLimit;

REQUIRE PriceLimit, Pricing, PricingOperation;

NAMESPACE Pricing;

//------------------ Предельные надбавки ----------------------//

@defineDocumentInterfaceProperty (pricing, showLimitPrice, 'Предельная надбавка');
@defineDocumentInterfaceDetailMarkupPrefix (pricing, limit, ' предельная');

limitMarkup(UserPricingDetail detail) <- markup(priceLimitPriceListType(departmentStore(detail)), sku(detail)) WHEN
     CHANGED (departmentStore(detail)) OR
     CHANGED (sku(detail));

changeLimitMarkup(UserPricingDetail detail) = ACTION {
    INPUTX n = NUMERIC[8,2] DO
        dataMarkup(CalcPriceListType t, Sku s) <- n WHERE t == priceLimitPriceListType(departmentStore(detail)) AND s == sku(detail);
}

//----------------------------------------------- Операции -----------------------------------------------------//

// Вид цены для расценки для операции
@defineDocumentHeaderProperty (operation, showLimitPrice, 'Предельная надбавка');

EXTEND FORM Pricing.operation
    PROPERTIES(o) showLimitPrice
;

DESIGN Pricing.operation {
    showContainer {
        MOVE PROPERTY(showLimitPrice(o));
    }
}

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции
showLimitPrice (UserPricing pricing) <- showLimitPrice(operation(pricing))
    WHEN CHANGED(operation(pricing));

EXTEND FORM userPricing
    PROPERTIES(p) showLimitPrice
    PROPERTIES(d) SHOWIF showLimitPrice(p) BEFORE retailMarkup(d) limitMarkup ON CHANGE changeLimitMarkup(d)
;
DESIGN userPricing{
    p.documentPrm{
        MOVE PROPERTY (showLimitPrice(p));
    }
}

EXTEND FORM pricings
    PROPERTIES(d) READONLY SHOWIF showLimitPrice(p) BEFORE retailMarkup(d) limitMarkup READONLY
;

// Имплементим для расчета оптимальной розничной цены

overLimitPrice (UserPricingDetail detail) += round([= X*(Y+100)*(Z+100)/10000](
                                                pricingPrice(detail),
                                                limitMarkup(detail),
                                                valueRetailVAT(detail)), roundCondition(priceLimitPriceListType(departmentStore(detail)), sku(detail)))
                                            IF showLimitPrice(detail);




