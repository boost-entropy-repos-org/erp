MODULE SaleManufacturingPrice;

REQUIRE SaleInvoice, PriceListLedger;

NAMESPACE Sale;

@defineDocumentInterfaceCreate (invoice, showManufacturingPrice, 'Цена изготовителя');

// -- Операция
@defineOperationProperty(showManufacturingPrice, 'Цена изготовителя', showContainer);
@deriveDocumentOperationProperty(UserInvoice, showManufacturingPrice);

@defineDocumentInterfaceDetailPriceCustomPrefix(invoiceDetail, manufacturing, ' изготовителя');
@defineDocumentInterfaceDetailInclVATCustomPrefix (invoiceDetail);
includeVATUserInvoiceDetail(detail) <-  fixedPriceSku(skuUserInvoiceDetail(detail)) WHEN CHANGED (skuUserInvoiceDetail(detail));
@defineDocumentInterfaceDetailMPVATCustomPrefix (invoiceDetail, manufacturing, );

@deriveDocumentDetailPriceSystemLedgerPriceListTypeBatch(userInvoice, manufacturingPriceStockPriceListType, manufacturing, sku, supplierStock);

wholesaleMarkupInvoiceDetail 'Оптовая надбавка (от цены изг.)' (detail) = round2([(X/Y-1)*100](priceInvoiceDetail(detail),manufacturingMVATPriceInvoiceDetail(detail)));
wholesaleMarkupUserInvoiceDetail 'Оптовая надбавка (от цены изг.)' (detail) = round2([(X/Y-1)*100](priceUserInvoiceDetail(detail),manufacturingMVATPriceUserInvoiceDetail(detail)));

@defineDocumentInterfaceDetailDataSumPrefix (invoice, manufacturing, ' изготовителя'); // объявляем сумму изготовителя
@deriveDocumentDetailSumPrefix(userInvoice, manufacturing, currency, quantity); // записываем сумму изготовителя

@defineDocumentInterfaceHeaderItemSum (invoice, manufacturing, manufacturing);

EXTEND FORM userInvoice
    PROPERTIES(i)  showManufacturingPriceUserInvoice
    PROPERTIES(d)  SHOWIF showManufacturingPriceUserInvoice(i) AFTER invoiceSumUserInvoiceDetail  manufacturingSumUserInvoiceDetail, includeVATUserInvoiceDetail,
                   wholesaleMarkupUserInvoiceDetail READONLY, manufacturingPriceUserInvoiceDetail

;
EXTEND DESIGN userInvoice {
    headerExtraParams {
        NEW headerManufacturing {
            caption = 'Цена изготовителя';
            ADD PROPERTY(showManufacturingPriceUserInvoice);
        }
    }
}

EXTEND FORM invoices
    PROPERTIES(i) READONLYIF isReadonly() showManufacturingPriceInvoice
    PROPERTIES(d) READONLY  SHOWIF showManufacturingPriceInvoice(i) AFTER invoiceSumInvoiceDetail manufacturingSumInvoiceDetail, includeVATInvoiceDetail,
                  wholesaleMarkupInvoiceDetail, manufacturingPriceInvoiceDetail
;

//overPricingPricePricingDetail(detail) += manufacturingPriceInvoiceDetail(invoiceDetailInvoicePricingDetail(detail));
//overPricingPriceUserInvoiceDetail(detail) += manufacturingPriceUserInvoiceDetail(detail);
//
//manufacturingPricePricingDetail(detail) += manufacturingPriceInvoiceDetail(invoiceDetailInvoicePricingDetail(detail));

// цены в подборе
@extendFormDocumentPriceSku(userOrder, manufacturingPriceStockPriceListType, supplierStock, ' изготовителя', userOrder, o, isUserOrder);
@extendFormDocumentPriceBatch(userOrder, manufacturingPriceStockPriceListType, supplierStock, ' изготовителя', userOrder, o, isUserOrder);

@extendFormDocumentPriceSku(userInvoice, manufacturingPriceStockPriceListType, supplierStock, ' изготовителя', userInvoice, i, showManufacturingPriceUserInvoice);
@extendFormDocumentPriceBatch(userInvoice, manufacturingPriceStockPriceListType, supplierStock, ' изготовителя', userInvoice, i, showManufacturingPriceUserInvoice);