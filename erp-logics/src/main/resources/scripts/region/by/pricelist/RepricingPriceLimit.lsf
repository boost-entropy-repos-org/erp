MODULE RepricingPriceLimit;

REQUIRE Repricing, PriceLimit;

NAMESPACE Repricing;

//------------------ Предельные надбавки ----------------------//

@defineDocumentInterfaceProperty (repricing, showLimitPrice, 'Предельная надбавка');
@defineDocumentInterfaceDetailMarkupPrefix (repricing, limit, ' предельная');

WHEN SESSION FORMS userRepricing 
             (CHANGED(departmentStore(UserRepricingDetail detail)) OR
              CHANGED(sku(detail)) OR 
              SET(showLimitPrice(detail)))
             AND showLimitPrice(detail) DO {
    limitMarkup[RepricingDetail](detail) <- markup(priceLimitPriceListType(departmentStore(detail)), sku(detail));
}

//----------------------------------------------- Операции -----------------------------------------------------//

// Вид цены для расценки для операции
@defineDocumentHeaderProperty (operation, showLimitPrice, 'Предельная надбавка');

EXTEND FORM operation
    PROPERTIES(o) showLimitPrice
;

DESIGN operation {
    showContainer {
        MOVE PROPERTY(showLimitPrice(o));
    }
}

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции расценки, заданной для операции закупка
showLimitPrice (UserRepricing invoice) <- showLimitPrice(operation(invoice))
    WHEN CHANGED(operation(invoice));

EXTEND FORM userRepricing
    PROPERTIES(p) showLimitPrice
    PROPERTIES(d) SHOWIF showLimitPrice(p) BEFORE markup(d) limitMarkup
;
DESIGN userRepricing{
    p.documentPrm {
        MOVE PROPERTY (showLimitPrice(p));
    }
}

EXTEND FORM repricings
    PROPERTIES(d) READONLY SHOWIF showLimitPrice(p) BEFORE markup(d) limitMarkup
;

// Имплементим для расчета оптимальной розничной цены

overLimitBasePrice = ABSTRACT NUMERIC[14,2] (UserRepricingDetail);
limitBasePrice(UserRepricingDetail d) = OVERRIDE price(d), overLimitBasePrice(d);
 
limitPrice (UserRepricingDetail detail) =
                                       IF limitMarkup(detail) > 3000 THEN
                                           limitMarkup(detail)
                                       ELSE
                                           round(
                                           IF limitMarkup(detail) > 100 THEN
                                                [= (X+Y)*(Z+100)/100](
                                                    limitBasePrice(detail),
                                                    limitMarkup(detail),
                                                    valueVAT(detail))
                                           ELSE [= X*(Y+100)*(Z+100)/10000](
                                                    limitBasePrice(detail),
                                                    limitMarkup(detail),
                                                    valueVAT(detail)), roundCondition(priceLimitPriceListType(departmentStore(detail)), sku(detail)));

WHEN SESSION FORMS userRepricing GOAFTER retailPrice[UserRepricingDetail] 
            (SETCHANGED(retailPrice(UserRepricingDetail d)) OR CHANGED(limitBasePrice(d)) OR CHANGED(limitMarkup(d))) AND //  вообще в событии должно быть это условие, но тогда не всегда срабатывает (см. skype с Vitalur за 10.07) 
             showLimitPrice(d) AND limitPrice(d) < retailPrice(d) DO {
    retailPrice(d) <- limitPrice(d);
     
    markup(d) <- [= round2(min(((X/Z*100/(100+Y))-1)*100,99999))](
                                                       retailPrice(d),
                                                       repricingPrice(d),
                                                       valueVAT(d));
}