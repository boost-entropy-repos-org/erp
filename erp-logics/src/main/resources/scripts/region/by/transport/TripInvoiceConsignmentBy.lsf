MODULE TripInvoiceConsignmentBy;

REQUIRE Shipment, Invoice, TripInvoiceBy, InvoiceConsignmentBy;

truckConsignment(invoice) += truckTrip(tripInvoice(invoice));
driverConsignment(invoice) += driverTrip(tripInvoice(invoice));
waybillConsignment(invoice) += seriesNumberTrip(tripInvoice(invoice));

META setTripPropTrip(prop)
    setTrip###prop##Trip = ACTION (invoice) {
        ASSIGN prop##Invoice(invoice) <- prop##Trip(tripInvoice(invoice));
    }
    WHEN CHANGED(prop##Trip(tripInvoice(invoice))) DO EXEC setTrip###prop##Trip(invoice);
END

issuanceAllowedTrip = DATA Employee(Trip);
nameIssuanceAllowedTrip 'Отпуск разрешил' (trip) = nameContact(issuanceAllowedTrip(trip));
@setTripPropTrip(issuanceAllowed);

issuanceExecutedTrip = DATA Employee(Trip);
nameIssuanceExecutedTrip 'Отпуск произвел' (trip) = nameContact(issuanceExecutedTrip(trip));
@setTripPropTrip(issuanceExecuted);

dataForwarderTrip = DATA Employee(Trip);
nameForwarderTrip 'Товар к перевозке принял (экспедитор), должность, фамилия, инициалы' (t)= nameContact(OVERRIDE driverTrip(t), dataForwarderTrip(t));

overForwarderTrip= OVERRIDE  driverTrip(t), dataForwarderTrip(t);

setTripForwarderTrip = ACTION (invoice) {
    ASSIGN dataForwarderInvoice(invoice) <- overForwarderTrip(tripInvoice(invoice));
}
WHEN CHANGED(overForwarderTrip(tripInvoice(invoice))) DO EXEC setTripForwarderTrip(invoice);

loadingExecuterTrip = DATA Employee(Trip);
nameLoadingExecuterTrip 'Исполнитель погрузки' (trip) = nameContact(loadingExecuterTrip(trip));
@setTripPropTrip(loadingExecuter);

unloadingExecuterTrip = DATA Employee(Trip);
nameUnloadingExecuterTrip 'Исполнитель разгрузки' (trip) = nameContact(unloadingExecuterTrip(trip));
@setTripPropTrip(unloadingExecuter);

wayOfLoadingTrip = DATA WayOfLoading(Trip);
nameWayOfLoadingTrip 'Способ погрузки' (trip) = nameWayOfLoading(wayOfLoadingTrip(trip));
@setTripPropTrip(wayOfLoading);

wayOfUnloadingTrip = DATA WayOfLoading(Trip);
nameWayOfUnloadingTrip 'Способ разгрузки' (trip) = nameWayOfLoading(wayOfUnloadingTrip(trip));
@setTripPropTrip(wayOfUnloading);

codeLoadingTrip 'Код ПРР' = DATA STRING[3] (Trip);
@setTripPropTrip(codeLoading);

currencyTrip 'Валюта (ИД)' = DATA Currency(Trip);
shortNameCurrencyTrip 'Валюта' (trip) = shortNameCurrency(currencyTrip(trip));
documentNameCurrencyTrip 'Валюта в накладной сокр.' (trip) = documentNameCurrency(currencyTrip(trip));
@setTripPropTrip(currency);

//Время прибытия                              
timeOfArrivalTrip 'Время прибытия' = DATA TIME (Trip);
setTripDateTimeTrip = ACTION (invoice) {
    ASSIGN arrivalTimeInvoice(invoice) <- dateTimeToDateTime(dateTrip(tripInvoice(invoice)), timeOfArrivalTrip(tripInvoice(invoice)));
}
WHEN CHANGED(dateTimeTrip(tripInvoice(invoice))) DO EXEC setTripDateTimeTrip(invoice);

downtimeTrip 'Время простоя для накладной (мин.)' = DATA  INTEGER (Trip);
setTripDowntimeTrip = ACTION (invoice) {
    ASSIGN downtimeInvoice(invoice) <- downtimeTrip(tripInvoice(invoice));
}
WHEN CHANGED(downtimeTrip(tripInvoice(invoice))) DO EXEC setTripDowntimeTrip(invoice);

printHorizontalConsignmentTrip 'Печать ТТН-1 (гор.)' (trip) = ACTION (trip) {
    FOR inTripInvoice(trip, invoice) DO {
        EXEC printConsignmentHorizontalA(invoice);
        EXEC printConsignmentHorizontalB(invoice);
        EXEC printConsignmentAttach(invoice);
    };
} TOOLBAR;

printVerticalConsignmentTrip 'Печать ТТН-1 (верт.)' (trip) = ACTION (trip) {
    FOR inTripInvoice(trip, invoice) DO {
        EXEC printConsignmentVerticalA(invoice);
        EXEC printConsignmentVerticalB(invoice);
        EXEC printConsignmentAttach(invoice);
    };
} TOOLBAR;

EXTEND FORM trip
    PROPERTIES (t) nameIssuanceAllowedTrip, nameIssuanceExecutedTrip, nameForwarderTrip, nameLoadingExecuterTrip, 
                   nameWayOfLoadingTrip, nameUnloadingExecuterTrip, nameWayOfUnloadingTrip, codeLoadingTrip, documentNameCurrencyTrip,
                   timeOfArrivalTrip, downtimeTrip
    PROPERTIES createConsignmentTrip(t) TODRAW i
    PROPERTIES printHorizontalConsignmentTrip(t) TODRAW i
    PROPERTIES printVerticalConsignmentTrip(t) TODRAW i

;

EXTEND DESIGN trip {

    bottomContainer {
        NEW consignmentContainer AFTER invoiceContainer{
            caption = 'Атрибуты накладных';
            NEW issuanceContainer {
                caption = 'Отпуск';
                ADD PROPERTY(nameIssuanceAllowedTrip);
                ADD PROPERTY(nameIssuanceExecutedTrip);
                ADD PROPERTY(nameForwarderTrip);
            }
            NEW loadingContainer {
                caption = 'ППР';
                ADD PROPERTY(nameLoadingExecuterTrip);
                ADD PROPERTY(nameWayOfLoadingTrip);
                ADD PROPERTY(nameUnloadingExecuterTrip);
                ADD PROPERTY(nameWayOfUnloadingTrip);
                ADD PROPERTY(codeLoadingTrip);           
                ADD PROPERTY(timeOfArrivalTrip);
                ADD PROPERTY(downtimeTrip);
            }
            NEW dopContainer {
                caption = 'Дополнительно';
                ADD PROPERTY(documentNameCurrencyTrip);
            }

        };
    }
}
