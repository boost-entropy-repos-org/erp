MODULE ImportEuroopt;

REQUIRE System, Item, ItemDescription, ItemNutrition, ImportUserPriceList, PurchasePack;

CLASS EurooptItemGroup 'Группа товаров';
TABLE eurooptItemGroup (EurooptItemGroup);

title 'Заголовок' = DATA VARSTRING[100] (EurooptItemGroup);
url 'URL' = DATA VARSTRING[255] (EurooptItemGroup);
in 'Вкл.' = DATA LOCAL BOOLEAN (EurooptItemGroup);
eurooptItemGroup = GROUP AGGR EurooptItemGroup e BY url(e); 

CLASS EurooptItemList 'Список товаров';
TABLE eurooptItemList (EurooptItemList);

eurooptItemGroup = DATA EurooptItemGroup(EurooptItemList);
url 'URL' = DATA VARSTRING[255] (EurooptItemList);
dataIn 'Вкл.' = DATA LOCAL BOOLEAN (EurooptItemList);
in 'Вкл.'(EurooptItemList e) = OVERRIDE dataIn(e), in(eurooptItemGroup(e));
eurooptItemList = GROUP AGGR EurooptItemList e BY url(e); 

CLASS EurooptItem 'Товар';
TABLE eurooptItem (EurooptItem);

eurooptItemList = DATA EurooptItemList(EurooptItem);
idBarcode 'Штрихкод' (EurooptItem e) = DATA VARSTRING[15](EurooptItem);
name 'Наименование' (EurooptItem e) = name(skuBarcode(idBarcode(e)));
url 'URL' = DATA VARSTRING[255] (EurooptItem);
dataIn 'Вкл.' = DATA LOCAL BOOLEAN (EurooptItem);
in 'Вкл.'(EurooptItem e) = OVERRIDE dataIn(e), in(eurooptItemList(e));
eurooptItem = GROUP AGGR EurooptItem e BY url(e);

useTor 'Использовать Tor' = DATA BOOLEAN();
synchronizeItemsAction 'Синхронизировать списки товаров' = CUSTOM 'lsfusion.erp.region.by.euroopt.SynchronizeItemsEurooptActionProperty' ();
importItemsInfoAction 'Импортировать информацию о товарах' = CUSTOM 'lsfusion.erp.region.by.euroopt.ImportItemsInfoEurooptActionProperty' ();
onlyBarcode 'Импортировать только штрихкоды' = DATA BOOLEAN();
importImageAndPriceAction 'Импортировать изображения и цены товаров' = CUSTOM 'lsfusion.erp.region.by.euroopt.ImportImageAndPriceEurooptActionProperty' ();
importImages 'Импортировать изображения' = DATA BOOLEAN();
importPrices 'Импортировать цены' = DATA BOOLEAN();

idItemGroup 'Код группы товаров' (Barcode barcode) = id(skuGroup(sku(barcode)));

FORM exportEuroopt 'Экспорт товаров'
    OBJECTS i = EurooptItem
    PROPERTIES READONLY titleItemGroup 'Заголовок' = title(eurooptItemGroup(eurooptItemList(i))), 
                        urlItemGroup 'URL группы' = url(eurooptItemGroup(eurooptItemList(i))),
                        urlItemList 'URL списка' = url(eurooptItemList(i)),
                        url = url(i),
                        idBarcode = idBarcode(i)
    ORDER urlItemGroup, urlItemList, url
;

exportEuroopt 'Экспорт товаров (xls)' () = {
    PRINT exportEuroopt XLS;
}

importEuroopt 'Импорт товаров (xls)' () = {
    LOCAL NESTED titleItemGroup = VARSTRING[100] (INTEGER);
    LOCAL NESTED urlItemGroup = VARSTRING[255] (INTEGER);
    LOCAL NESTED urlItemList = VARSTRING[255] (INTEGER);
    LOCAL NESTED url = VARSTRING[255] (INTEGER);
    LOCAL NESTED idBarcode = VARSTRING[15] (INTEGER);
    
    INPUT f = EXCELFILE DO { 
        DELETE EurooptItem e WHERE e IS EurooptItem;
        DELETE EurooptItemList e WHERE e IS EurooptItemList;
        DELETE EurooptItemGroup e WHERE e IS EurooptItemGroup;
        apply();
           
        IMPORT XLS TO titleItemGroup=B, urlItemGroup=C, urlItemList=D, url=E, idBarcode=F
                      FROM f AS EXCELFILE;
                      
        FOR INTEGER i == [=GROUP MIN INTEGER i IF i >= 2 BY lower(urlItemGroup(i))](VARSTRING[255] url) AND NOT eurooptItemGroup(url) NEW eig = EurooptItemGroup DO {
            url(eig) <- urlItemGroup(i);
            title(eig) <- titleItemGroup(i);
        }
        apply();
        
        FOR INTEGER i == [=GROUP MIN INTEGER i IF i >= 2 BY lower(urlItemList(i))](VARSTRING[255] url) AND NOT eurooptItemList(url) NEW eil = EurooptItemList DO {
            url(eil) <- urlItemList(i);
            eurooptItemGroup(eil) <- eurooptItemGroup(urlItemGroup(i));
        }
        apply();
        
        FOR INTEGER i == [=GROUP MIN INTEGER i IF i >= 2 BY lower(url(i))](VARSTRING[255] url) AND NOT eurooptItem(url) NEW ei = EurooptItem DO {
            url(ei) <- url(i);
            eurooptItemList(ei) <- eurooptItemList(urlItemList(i));
            idBarcode(ei) <- idBarcode(i);
        }
        apply();
    }
}

EXTEND FORM integrationData
    PROPERTIES() synchronizeItemsAction, onlyBarcode, importItemsInfoAction, importImages, importPrices, importImageAndPriceAction, useTor,
                 exportEuroopt, importEuroopt
    OBJECTS eig = EurooptItemGroup, eil = EurooptItemList, ei = EurooptItem
    PROPERTIES(eig) READONLY in CHANGEABLE, title, url
    PROPERTIES(eil) in, url READONLY
    PROPERTIES(ei) READONLY in CHANGEABLE, url, idBarcode, name
    FILTERS eurooptItemGroup(eil) == eig, eurooptItemList(ei) == eil          
;
DESIGN integrationData {
    pane {
        NEW euroopt {
            caption = 'Евроопт';
            MOVE PROPERTY(useTor());          
            MOVE PROPERTY(synchronizeItemsAction());
            NEW items {
                caption = 'Импорт товаров';
                MOVE PROPERTY(onlyBarcode());      
                MOVE PROPERTY(importItemsInfoAction());                             
            }
            NEW prices {
                caption = 'Импорт изображений и цен';
                MOVE PROPERTY(importImages());
                MOVE PROPERTY(importPrices());
                MOVE PROPERTY(importImageAndPriceAction());
            }
            NEW xls {
                MOVE PROPERTY(exportEuroopt());
                MOVE PROPERTY(importEuroopt());
            }
            MOVE BOX(eig);
            MOVE BOX(eil);
            MOVE BOX(ei);
        }
    }
}