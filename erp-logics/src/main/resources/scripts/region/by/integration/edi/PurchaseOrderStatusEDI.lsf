MODULE PurchaseOrderStatusEDI;

REQUIRE PurchaseOrderStatus, PurchaseOrderEDI;

NAMESPACE EDI;


@defineOption(needConfirmIsSent, 'Для EDI заказов необходимо подтверждение отправки', purchase);

backgroundResponseEDI(Purchase.OrderDetail d) += RGB(255,0,0) IF responseDetail(d AS Purchase.OrderDetail) AND NOT quantityResponseEDI(d) == originalQuantity(d);  

overEmailCustomer(Order.Order order) += ACTION {
    IF isEOrder[UserOrder](order AS Order.Order) AND NOT skipSend(order) THEN {
        send[EOrder](order);        
        IF needConfirmIsSent() THEN isSent[UserOrder](order) <- NULL;
    }
}

skipCalcEmailCustomer(Order.Order order) += isEOrder[UserOrder](order AS Order.Order) AND NOT skipSend(order);
overEmailList(Order.Order order) += 'edi' IF isEOrder[UserOrder](order AS Order.Order) AND NOT skipSend(order);

WHEN SET (UserOrder o == eOrder(EOrderResponse od)) DO {
    IF NOT quantityResponseEDI(o) > 0.0 THEN { //ответ с 0 во всех строках считается отказом
        isRejected(o) <- TRUE;
    } ELSE {
        isConfirmed(o) <- TRUE;
    }
}

cancel 'Отменить заказ'(Order.Order order) = ACTION {
    IF isEOrder[UserOrder](order AS Order.Order) AND NOT skipSend(order) THEN {
        isRejected[UserOrder](order) <- TRUE;
        cancel[EOrder](order);        
        apply();
    }
} TOOLBAR;

EXTEND FORM orders 
    PROPERTIES (o) cancel;

DESIGN orders {
    emailContainer{
        MOVE PROPERTY (cancel(o));
    }
}

WHEN SET (code(EOrderMessage m)) AND good(m) DO {
    isSent(Purchase.UserOrder o) <- TRUE WHERE o == eOrder(m);
}

currentOrderMessage = GROUP LAST EOrderMessage m BY eOrder(m) ORDER dateTime(m), m;
statusDescription 'Статус отправки EDI'(EOrder o) = CONCAT ' ', code(currentOrderMessage(o)), description(currentOrderMessage(o)) MINCHARWIDTH 15 PREFCHARWIDTH 45;

backgroundStatusEDI(Purchase.Order o) = IF currentOrderMessage(o) THEN IF good(currentOrderMessage(o)) THEN RGB(212,255,212) ELSE RGB (255,128,128);

EXTEND FORM Purchase.orders 
    PROPERTIES (o) statusDescription BEFORE isConfirmed(o) BACKGROUND backgroundStatusEDI(o);