MODULE InvoiceAlcohol;

REQUIRE ItemAlcohol, Invoice;

NAMESPACE Invoice;

alcoholDirectionTypeInvoice = ABSTRACT CASE AlcoholDirectionType(Invoice);
nameAlcoholDirectionTypeInvoice 'Тип движения алкоголя' (i) = staticCaption(alcoholDirectionTypeInvoice(i));
alcoholDirectionTypeInvoiceDetail (d) = alcoholDirectionTypeInvoice(invoiceInvoiceDetail(d)) PERSISTENT;
    
alcoholIncomeTypeInvoice = ABSTRACT CASE AlcoholIncomeType(Invoice);
nameAlcoholIncomeTypeInvoice 'Тип приобретения алкоголя' (i) = staticCaption(alcoholIncomeTypeInvoice(i));
alcoholIncomeTypeInvoiceDetail (d) = alcoholIncomeTypeInvoice(invoiceInvoiceDetail(d)) PERSISTENT;
 
alcoholSupplierTypeInvoiceDetail = ABSTRACT AlcoholSupplierType(InvoiceDetail) PERSISTENT;
nameAlcoholSupplierTypeInvoiceDetail 'Тип поставщика алкоголя' (i) = staticCaption(alcoholSupplierTypeInvoiceDetail(i));

volumeInvoiceDetail 'Объем' = ABSTRACT NUMERIC[14,3] (InvoiceDetail) PERSISTENT;
signetVolumeInvoiceDetail 'Объем' = ABSTRACT NUMERIC[14,3] (InvoiceDetail) PERSISTENT; 

volumeInvoiceDetailLiterGroupStockTypesMonthDateFromTo 'Объем, л' = GROUP SUM signetVolumeInvoiceDetail(d) IF 
    isParentGroupSku(group, skuInvoiceDetail(d)) AND isPostedInvoiceDetail(d) AND
    dateInvoiceDetail(d) >= dateFrom AND dateInvoiceDetail(d) <= dateTo
        BY group, customerStockInvoiceDetail(d), alcoholDirectionTypeInvoiceDetail(d), alcoholIncomeTypeInvoiceDetail(d), 
            alcoholSupplierTypeInvoiceDetail(d), extractMonth(dateInvoiceDetail(d)), dateFrom, dateTo; 

volumeInvoiceDetailGroupStockTypesMonthDateFromTo 'Объем, тыс дал.' = NUMERIC[20,8]([ =GROUP SUM signetVolumeInvoiceDetail(d) IF 
    isParentGroupSku(group, skuInvoiceDetail(d)) AND isPostedInvoiceDetail(d) AND
    dateInvoiceDetail(d) >= dateFrom AND dateInvoiceDetail(d) <= dateTo
        BY group, customerStockInvoiceDetail(d), alcoholDirectionTypeInvoiceDetail(d), alcoholIncomeTypeInvoiceDetail(d), 
            alcoholSupplierTypeInvoiceDetail(d), extractMonth(dateInvoiceDetail(d)), dateFrom, dateTo](group,stock,type1,type2,type3,month,dateFrom,dateTo)) /
            (OVERRIDE 1.0 IF group IS StatisticGroup, conversionFactorStatisticGroup(group));    

                                                    
year 'Отчетный год' = extractYear(dFrom) IF dFrom IS DATE;              

FORM alcoholStockReports 'Отчет по алкоголю'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valDFrom = OBJVALUE(dFrom), valDTo = OBJVALUE(dTo)
       
    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES valDT = OBJVALUE(dt)
    
    OBJECTS c = LegalEntity FIXED PANEL
    PROPERTIES SELECTOR nameLegalEntity(c)
    FILTERS isCompanyLegalEntity(c)   
    
    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
       
    OBJECTS aaa = (sk = Group, s=Stock, type1 = AlcoholDirectionType, type2 = AlcoholIncomeType, type3 = AlcoholSupplierType, m = Month)  
    PROPERTIES nameStock(s), idStock(s), numberAlcoholDirectionType(type1), numberAlcoholIncomeType(type2), numberAlcoholSupplierType(type3), numberMonth(m), year(dFrom) TODRAW aaa,idGroup(sk), nameGroup(sk) 

    PROPERTIES(sk,s,type1,type2,type3,m,dFrom,dTo) FORCE GRID volumeInvoiceDetailGroupStockTypesMonthDateFromTo 

    ORDER BY numberMonth(m),idGroup(sk)
    
    FILTERS numberMonth(m) >= extractMonthNumber(dFrom), numberMonth(m) <= extractMonthNumber(dTo),            
            groupTypeGroup(sk) == gt,
            activeGroup(sk),
            isCompanyStock(s),
            legalEntityStock(s) == c
    
    FILTERS volumeInvoiceDetailGroupStockTypesMonthDateFromTo(sk,s,type1,type2,type3,m,dFrom,dTo)
;

volumeInvoiceDetailGroupStockSupplierTypeMonthDateFromTo 'Объем, тыс дал.' = NUMERIC[20,8]([ =GROUP SUM signetVolumeInvoiceDetail(d) IF 
    isParentGroupSku(group, skuInvoiceDetail(d)) AND isPostedInvoiceDetail(d) AND
    dateInvoiceDetail(d) >= dateFrom AND dateInvoiceDetail(d) <= dateTo //AND alcoholDirectionTypeInvoiceDetail(d)==AlcoholDirectionType.income
        BY group, customerStockInvoiceDetail(d), supplierInvoiceDetail(d), alcoholDirectionTypeInvoiceDetail(d), extractMonth(dateInvoiceDetail(d)), dateFrom, dateTo](group,stock,supplier,type,month,dateFrom,dateTo)) /
            (OVERRIDE 1.0 IF group IS StatisticGroup, conversionFactorStatisticGroup(group));  

volumeInvoiceDetailGroupTypeCustomerTypeDateFromTo 'Объем, тыс дал. (итого)' = GROUP SUM 
    (NUMERIC[20,8](signetVolumeInvoiceDetail(d))/(OVERRIDE 1.0 IF groupGroupTypeSku(groupType, skuInvoiceDetail(d)) IS StatisticGroup, conversionFactorStatisticGroup(groupGroupTypeSku(groupType, skuInvoiceDetail(d))))) IF    
    isPostedInvoiceDetail(d) AND dateInvoiceDetail(d) >= dateFrom AND dateInvoiceDetail(d) <= dateTo// AND alcoholDirectionTypeInvoiceDetail(d)==AlcoholDirectionType.income
        BY groupType, customerInvoiceDetail(d), alcoholDirectionTypeInvoiceDetail(d), dateFrom, dateTo;
            

FORM alcoholStockSupplierReports 'Отчет по алкоголю (поставщики)'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valDFrom = OBJVALUE(dFrom), valDTo = OBJVALUE(dTo)
    
    OBJECTS c = LegalEntity FIXED PANEL
    PROPERTIES SELECTOR nameLegalEntity(c)
    FILTERS isCompanyLegalEntity(c)       
    
    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
       
    OBJECTS aaa = (sk = Group, s=Stock, l = LegalEntity, type = AlcoholDirectionType, m = Month)  
    PROPERTIES nameStock(s), idStock(s), nameLegalEntity(l), numberAlcoholDirectionType(type), numberMonth(m), year(dFrom) TODRAW aaa,idGroup(sk), nameGroup(sk) 

    PROPERTIES FORCE GRID volumeInvoiceDetailGroupStockSupplierTypeMonthDateFromTo(sk,s,l,type,m,dFrom,dTo)//, volumeInvoiceDetailGroupTypeCustomerDateFromTo(gt,c,dFrom,dTo)
               

    ORDER BY numberMonth(m), nameLegalEntity(l), idGroup(sk)
    
    FILTERS numberMonth(m) >= extractMonthNumber(dFrom), numberMonth(m) <= extractMonthNumber(dTo),
            isCompanyStock(s),
            groupTypeGroup(sk) == gt,            
            activeGroup(sk),            
            legalEntityStock(s) == c        
                
    OBJECTS t = AlcoholDirectionType FIXED GRID
    PROPERTIES(t) READONLY staticCaption, numberAlcoholDirectionType                
    PROPERTIES volumeInvoiceDetailGroupTypeCustomerTypeDateFromTo(gt,c,t,dFrom,dTo)
    
    FILTERS volumeInvoiceDetailGroupStockSupplierTypeMonthDateFromTo(sk,s,l,type,m,dFrom,dTo)
;

NAVIGATOR {
    statisticsNavigator{
        ADD alcoholStockReports;
        ADD alcoholStockSupplierReports;
    }
}
   
META defineInvoiceAlcohol(dumb)
    alcoholSupplierTypeInvoiceDetail = ABSTRACT AlcoholSupplierType(InvoiceDetail);
    nameAlcoholSupplierTypeInvoiceDetail 'Тип поставщика алкоголя' (d) = staticCaption(alcoholSupplierTypeInvoiceDetail(d));
    alcoholSupplierTypeUserInvoiceDetail = DATA AlcoholSupplierType(UserInvoiceDetail);
    nameAlcoholSupplierTypeUserInvoiceDetail 'Тип поставщика алкоголя' (d) = staticCaption(alcoholSupplierTypeUserInvoiceDetail(d));
    alcoholSupplierTypeInvoiceDetail(d) += alcoholSupplierTypeUserInvoiceDetail(d); 
    Invoice.alcoholSupplierTypeInvoiceDetail(d) += alcoholSupplierTypeInvoiceDetail(d);  
    
    alcoholSupplierTypeUserInvoiceDetail (d) <- alcoholSupplierTypeLegalEntityItem(supplierInvoiceDetail(d),skuInvoiceDetail(d))
        WHEN CHANGED(skuInvoiceDetail(d)) OR CHANGED(supplierInvoiceDetail(d));
  
END