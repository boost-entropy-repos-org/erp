MODULE ImportUserPriceList;

REQUIRE System,
        Item,
        PriceList,
        PriceListOperation,
        TaxItem;

CLASS ImportUserPriceListTypeFileExtension 'Тип файла (импорт прайс-листов)' {
    xls 'XLS',
    xlsx 'XLSX',
    csv 'CSV',
    dbf 'DBF'
}

CLASS ImportUserPriceListKeyType 'Ключ товара (импорт прайс-листов)' {
    barcode 'Штрихкод',
    item    'Код товара'
}

CLASS CustomKeyType 'Ключ свойства' {
    userPriceListDetail 'Строка прайса',
    item 'Товар'
}

CLASS ImportUserPriceListTypeDetail 'Свойство (импорт прайс-листов)' {
    idUserPriceList 'Код прайс-листа',
    dateUserPriceList 'Дата прайс-листа',
    idItem 'Код товара',
    idItemGroup 'Код группы товара',
    barcodeItem 'Штрихкод товара',
    extraBarcodeItem 'Дополнительный штрихкод товара',
    packBarcode 'Штрихкод упаковки',
    amountPackBarcode 'Количество в упаковке', 
    articleItem 'Артикул товара',
    captionItem 'Название товара',
    idUOMItem 'Единица измерения',
    netWeightItem 'Масса нетто',
    grossWeightItem 'Масса брутто',
    valueVAT 'НДС, %',
    dateFrom 'Дата с',
    dateTo 'Дата по',
    originalName 'Наименование поставщика',
    originalBarcode 'Штрихкод поставщика'
}
TABLE importPriceListTypeDetail(ImportUserPriceListTypeDetail);

propertyImportTypeDetail 'Свойство' = DATA VARSTRING[100] (ImportUserPriceListTypeDetail);
keyImportTypeDetail 'Ключ' = DATA CustomKeyType (ImportUserPriceListTypeDetail);
nameKeyImportTypeDetail 'Ключ' (importTypeDetail) = staticName(keyImportTypeDetail(importTypeDetail));
captionKeyImportTypeDetail 'Ключ' (importTypeDetail) = staticCaption(keyImportTypeDetail(importTypeDetail));

CLASS ImportUserPriceListType 'Тип импорта (импорт прайс-листов)';
TABLE importUserPriceListType(ImportUserPriceListType);
nameImportUserPriceListType 'Имя' =  DATA VARSTRING[100](ImportUserPriceListType);

importUserPriceListAction 'Импортировать прайс-лист' = ACTION CUSTOM 'lsfusion.erp.integration.universal.userpricelist.ImportUserPriceListActionProperty' (UserPriceList);
importUserPriceListTypeUserPriceList = DATA ImportUserPriceListType(UserPriceList);
nameImportUserPriceListTypeUserPriceList 'Тип импорта' (userPriceList) = nameImportUserPriceListType(importUserPriceListTypeUserPriceList(userPriceList));

importUserPriceListsAction 'Импортировать прайс-листы' = ACTION CUSTOM 'lsfusion.erp.integration.universal.userpricelist.ImportUserPriceListsActionProperty' ();

userPriceListDetailIdSkuIdUserPriceList (sku, userPriceList) = GROUP MAX userPriceListDetail BY idItem(skuUserPriceListDetail(userPriceListDetail)), idUserPriceList(userPriceListUserPriceListDetail(userPriceListDetail));
idUserPriceListDetail = DATA VARSTRING[100] (UserPriceListDetail) IN recognize;
userPriceListDetailIdUserPriceList (id, userPriceList) = GROUP AGGR userPriceListDetail BY idUserPriceListDetail(userPriceListDetail), userPriceListUserPriceListDetail(userPriceListDetail) WHERE userPriceListDetail IS UserPriceListDetail;
userPriceListDetailIdIdUserPriceList (id, idUserPriceList) = GROUP AGGR userPriceListDetail BY idUserPriceListDetail(userPriceListDetail), idUserPriceList(userPriceListUserPriceListDetail(userPriceListDetail)) WHERE userPriceListDetail IS UserPriceListDetail;

originalUserPriceList 'Файл оригинала прайса'  = DATA CUSTOMFILE (UserPriceList);

saveOriginalUserPriceList 'Загрузить файл оригинала прайса' (i) = ACTION LOADFILE originalUserPriceList(i);
openOriginalUserPriceList 'Просмотреть оригинал прайса' (i) = ACTION OPENFILE originalUserPriceList(i);

autoImportImportUserPriceListType 'Автоматический импорт' = DATA BOOLEAN(ImportUserPriceListType);
autoImportDirectoryImportUserPriceListType 'Папка' =  DATA VARSTRING[100](ImportUserPriceListType);

operationImportUserPriceListType =  DATA Operation.Operation(ImportUserPriceListType);
nameOperationImportUserPriceListType 'Операция' (importUserPriceListType) =  Operation.nameOperation(operationImportUserPriceListType(importUserPriceListType));

companyImportUserPriceListType =  DATA LegalEntity(ImportUserPriceListType);
nameCompanyImportUserPriceListType 'Организация' (importUserPriceListType) =  nameLegalEntity(companyImportUserPriceListType(importUserPriceListType));

stockImportUserPriceListType =  DATA Stock(ImportUserPriceListType);
nameStockImportUserPriceListType 'Склад' (importUserPriceListType) =  nameStock(stockImportUserPriceListType(importUserPriceListType));

quantityAdjustmentImportUserPriceListType 'Колонка остатка' =  DATA VARSTRING[20](ImportUserPriceListType);
 
defaultItemGroupImportUserPriceListType =  DATA ItemGroup(ImportUserPriceListType);
nameDefaultItemGroupImportUserPriceListType 'Группа товаров' (importUserPriceListType) =  nameItemGroup(defaultItemGroupImportUserPriceListType(importUserPriceListType));

startRowImportUserPriceListType 'Начинать со строки' = DATA INTEGER(ImportUserPriceListType);
isPostedImportUserPriceListType 'Импортировать проведёнными' = DATA BOOLEAN(ImportUserPriceListType);
doNotCreateItemsImportUserPriceListType 'Не создавать товары и штрихкоды' = DATA BOOLEAN(ImportUserPriceListType);
barcodeMaybeUPCImportUserPriceListType 'Штрихкод может быть UPC' = DATA BOOLEAN(ImportUserPriceListType);
separatorImportUserPriceListType 'Разделитель' = DATA VARSTRING[2](ImportUserPriceListType);
importUserPriceListKeyTypeImportUserPriceListType 'Тип ключа' = DATA ImportUserPriceListKeyType(ImportUserPriceListType);
captionImportUserPriceListKeyTypeImportUserPriceListType 'Тип ключа' (importUserPriceListType) = staticCaption(importUserPriceListKeyTypeImportUserPriceListType(importUserPriceListType));
nameImportUserPriceListKeyTypeImportUserPriceListType 'Тип ключа' (importUserPriceListType) = staticName(importUserPriceListKeyTypeImportUserPriceListType(importUserPriceListType));

TABLE importUserPriceListTypeDetail(ImportUserPriceListType, ImportUserPriceListTypeDetail);
indexImportUserPriceListTypeImportUserPriceListTypeDetail 'Поле' = DATA VARSTRING[50] (ImportUserPriceListType, ImportUserPriceListTypeDetail);

replaceOnlyNullImportUserPriceListTypeImportUserPriceListTypeDetail 'Не замещать' = DATA BOOLEAN (ImportUserPriceListType, ImportUserPriceListTypeDetail);

importUserPriceListTypeFileExtensionImportUserPriceListType  = DATA ImportUserPriceListTypeFileExtension(ImportUserPriceListType);
captionImportUserPriceListTypeFileExtensionImportUserPriceListType 'Тип файла' (importUserPriceListType) = staticCaption(importUserPriceListTypeFileExtensionImportUserPriceListType(importUserPriceListType));

TABLE importUserPriceListTypeDataPriceListType(ImportUserPriceListType, DataPriceListType);
indexImportUserPriceListTypeDataPriceListType 'Поле' = DATA VARSTRING[50] (ImportUserPriceListType, DataPriceListType);

FORM customKeyTypes 'Ключи свойства'
    OBJECTS k=CustomKeyType
    PROPERTIES(k) READONLY staticCaption
    DIALOG CustomKeyType OBJECT k
;

FORM importUserPriceListTypeDetails
    OBJECTS itd = ImportUserPriceListTypeDetail
    PROPERTIES(itd) staticCaption READONLY, propertyImportTypeDetail, captionKeyImportTypeDetail
    DIALOG ImportUserPriceListTypeDetail OBJECT itd
;

FORM importUserPriceListTypeDetail 'Свойство импорта'
    OBJECTS itd = ImportUserPriceListTypeDetail FIXED PANEL
    PROPERTIES(itd) staticCaption, propertyImportTypeDetail, captionKeyImportTypeDetail
    EDIT ImportUserPriceListTypeDetail OBJECT itd
;

FORM importUserPriceListTypeFileExtensions 'Типы файлов'
    OBJECTS f=ImportUserPriceListTypeFileExtension
    PROPERTIES(f) READONLY staticCaption
    DIALOG ImportUserPriceListTypeFileExtension OBJECT f
;

FORM importUserPriceListKeyTypes 'Типы ключа'
    OBJECTS k=ImportUserPriceListKeyType
    PROPERTIES(k) READONLY staticCaption
    DIALOG ImportUserPriceListKeyType OBJECT k
;

showSeparator (t) = importUserPriceListTypeFileExtensionImportUserPriceListType(t) == ImportUserPriceListTypeFileExtension.csv;

FORM importUserPriceListType 'Тип импорта'
    OBJECTS i=ImportUserPriceListType FIXED PANEL
    PROPERTIES(i) nameImportUserPriceListType, captionImportUserPriceListTypeFileExtensionImportUserPriceListType, startRowImportUserPriceListType,
                  isPostedImportUserPriceListType, doNotCreateItemsImportUserPriceListType, barcodeMaybeUPCImportUserPriceListType, 
                  separatorImportUserPriceListType SHOWIF showSeparator(i), captionImportUserPriceListKeyTypeImportUserPriceListType
    PROPERTIES(i) FORCE PANEL nameOperationImportUserPriceListType, nameCompanyImportUserPriceListType, nameStockImportUserPriceListType, nameDefaultItemGroupImportUserPriceListType,
                              quantityAdjustmentImportUserPriceListType
    PROPERTIES(i) autoImportImportUserPriceListType, autoImportDirectoryImportUserPriceListType FORCE PANEL SHOWIF autoImportImportUserPriceListType(i)
                   
    OBJECTS d = ImportUserPriceListTypeDetail
    PROPERTIES(d) staticCaption READONLY, propertyImportTypeDetail, captionKeyImportTypeDetail
    PROPERTIES(i,d) indexImportUserPriceListTypeImportUserPriceListTypeDetail, replaceOnlyNullImportUserPriceListTypeImportUserPriceListTypeDetail 
    PROPERTIES(d) FORCE PANEL ADDFORM, EDITFORM, DELETE TOOLBAR
                      
    OBJECTS p = DataPriceListType
    PROPERTIES(p) nameDataPriceListType
    PROPERTIES(i, p) indexImportUserPriceListTypeDataPriceListType                  
                      
    EDIT ImportUserPriceListType OBJECT i
;

EXTEND DESIGN importUserPriceListType {
    ADD i.box;
    NEW tabbedContainer {
        fill = 1;
        type = TABBED;
        NEW columnsContainer {
            caption = 'Колонки';
            ADD d.box;
        }
        NEW invoiceParamsContainer {
            caption = 'Параметры прайс-листа';
            ADD PROPERTY(nameOperationImportUserPriceListType(i));
            ADD PROPERTY(nameCompanyImportUserPriceListType(i));
            ADD PROPERTY(nameStockImportUserPriceListType(i));
            ADD PROPERTY(nameDefaultItemGroupImportUserPriceListType(i));
            ADD PROPERTY(quantityAdjustmentImportUserPriceListType(i));
            ADD p.box;
        }
    }
    ADD functions.box;
}

FORM importUserPriceListTypes 'Типы импорта'
    OBJECTS i=ImportUserPriceListType
    PROPERTIES(i) READONLY nameImportUserPriceListType, captionImportUserPriceListTypeFileExtensionImportUserPriceListType, startRowImportUserPriceListType,
                   isPostedImportUserPriceListType, doNotCreateItemsImportUserPriceListType, barcodeMaybeUPCImportUserPriceListType, 
                   separatorImportUserPriceListType SHOWIF showSeparator(i), captionImportUserPriceListKeyTypeImportUserPriceListType
    PROPERTIES(i) READONLY autoImportImportUserPriceListType, autoImportDirectoryImportUserPriceListType SHOWIF autoImportImportUserPriceListType(i)               
    PROPERTIES(i) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG ImportUserPriceListType OBJECT i
;

EXTEND FORM integrationData
    OBJECTS ip=ImportUserPriceListType
    PROPERTIES(ip) READONLY nameImportUserPriceListType, captionImportUserPriceListTypeFileExtensionImportUserPriceListType, startRowImportUserPriceListType,
                   isPostedImportUserPriceListType, doNotCreateItemsImportUserPriceListType, barcodeMaybeUPCImportUserPriceListType, 
                   separatorImportUserPriceListType SHOWIF showSeparator(ip), captionImportUserPriceListKeyTypeImportUserPriceListType
    PROPERTIES(ip) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    PROPERTIES() importUserPriceListsAction TOOLBAR
;

EXTEND DESIGN integrationData {
    pane {
        NEW importUserPriceListType {
            caption = 'Универсальный импорт (Прайс-лист)';
            ADD ip.box;
            ADD PROPERTY(importUserPriceListsAction());
        }
    }
}

EXTEND FORM userPriceList
    PROPERTIES(p) importUserPriceListAction TODRAW d TOOLBAR
    PROPERTIES(p) nameImportUserPriceListTypeUserPriceList
    PROPERTIES(p) saveOriginalUserPriceList, openOriginalUserPriceList 
;

EXTEND DESIGN userPriceList{
    detailContainer {
        NEW import {
            caption = 'Импорт';
            type = CONTAINERH;
            NEW universalImport {
                caption = 'Универсальный импорт';
                ADD PROPERTY(nameImportUserPriceListTypeUserPriceList(p));
                ADD PROPERTY(importUserPriceListAction(p));
            }
            NEW origin {
                caption = 'Оригинал прайса';
                ADD PROPERTY(saveOriginalUserPriceList(p));
                ADD PROPERTY(openOriginalUserPriceList(p));
            }
        }
    }
}