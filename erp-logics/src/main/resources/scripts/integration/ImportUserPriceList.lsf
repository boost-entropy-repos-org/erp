MODULE ImportUserPriceList;

REQUIRE System,
        Item,
        PriceList,
        PriceListOperation,
        TaxItem;

CLASS ImportUserPriceListTypeFileExtension 'Тип файла (импорт прайс-листов)' {
    xls 'XLS',
    xlsx 'XLSX',
    csv 'CSV',
    dbf 'DBF'
}

CLASS ImportUserPriceListKeyType 'Ключ товара (импорт прайс-листов)' {
    barcode 'Штрихкод',
    item    'Код товара'
}

CLASS CustomKeyType 'Ключ свойства' {
    userPriceListDetail 'Строка прайса',
    item 'Товар'
}

CLASS ImportUserPriceListTypeDetail 'Свойство (импорт прайс-листов)' {
    idUserPriceList 'Код прайс-листа',
    dateUserPriceList 'Дата прайс-листа',
    idItem 'Код товара',
    idItemGroup 'Код группы товара',
    barcodeItem 'Штрихкод товара',
    extraBarcodeItem 'Дополнительный штрихкод товара',
    packBarcode 'Штрихкод упаковки',
    amountPackBarcode 'Количество в упаковке', 
    articleItem 'Артикул товара',
    captionItem 'Название товара',
    idUOMItem 'Единица измерения',
    netWeightItem 'Масса нетто',
    grossWeightItem 'Масса брутто',
    valueVAT 'НДС, %',
    dateFrom 'Дата с',
    dateTo 'Дата по',
    originalName 'Наименование поставщика',
    originalBarcode 'Штрихкод поставщика',
    alcoholSupplierType 'Тип поставщика алкоголя',
    alcoholItem 'Содержание алкоголя'
}
TABLE importPriceListTypeDetail(ImportUserPriceListTypeDetail);

propImport 'Свойство' (ImportTypeDetail) = DATA Property (ImportUserPriceListTypeDetail);
canonicalNamePropImport 'Свойство' (ImportUserPriceListTypeDetail d) = canonicalName(propImport(d));

keyImport 'Ключ' = DATA CustomKeyType (ImportUserPriceListTypeDetail);
nameKeyImport 'Ключ' (ImportUserPriceListTypeDetail importTypeDetail) = staticName(keyImport(importTypeDetail));
captionKeyImport 'Ключ' (ImportUserPriceListTypeDetail importTypeDetail) = staticCaption(keyImport(importTypeDetail));

CLASS ImportUserPriceListType 'Тип импорта (импорт прайс-листов)';
TABLE importUserPriceListType(ImportUserPriceListType);
name 'Имя' =  DATA VARSTRING[100](ImportUserPriceListType);

importAction 'Импортировать прайс-лист' = ACTION CUSTOM 'lsfusion.erp.integration.universal.userpricelist.ImportUserPriceListActionProperty' (UserPriceList);
importUserPriceListType = DATA ImportUserPriceListType(UserPriceList);
nameImportUserPriceListType 'Тип импорта' (UserPriceList userPriceList) = name(importUserPriceListType(userPriceList));

importUserPriceListsAction 'Импортировать прайс-листы' = ACTION CUSTOM 'lsfusion.erp.integration.universal.userpricelist.ImportUserPriceListsActionProperty' ();

userPriceListDetailIdId (sku, userPriceList) = GROUP MAX UserPriceListDetail userPriceListDetail BY id[Item](sku(userPriceListDetail)), id(userPriceList(userPriceListDetail));
id = DATA VARSTRING[100] (UserPriceListDetail) IN recognize;
userPriceListDetail (id, userPriceList) = GROUP AGGR UserPriceListDetail userPriceListDetail BY id(userPriceListDetail), userPriceList(userPriceListDetail) WHERE userPriceListDetail IS UserPriceListDetail;
userPriceListDetail (id, idUserPriceList) = GROUP AGGR UserPriceListDetail userPriceListDetail BY id(userPriceListDetail), id(userPriceList(userPriceListDetail)) WHERE userPriceListDetail IS UserPriceListDetail;

original 'Файл оригинала прайса'  = DATA CUSTOMFILE (UserPriceList);

saveOriginal 'Загрузить файл оригинала прайса' (UserPriceList i) = ACTION LOADFILE original(i);
openOriginal 'Просмотреть оригинал прайса' (UserPriceList i) = ACTION OPENFILE original(i);

imported 'Импортирована' = DATA BOOLEAN (UserPriceList);
imported 'Импортирована' = DATA BOOLEAN (UserPriceListDetail);

autoImport 'Автоматический импорт' = DATA BOOLEAN(ImportUserPriceListType);
autoImportDirectory 'Папка' =  DATA VARSTRING[100](ImportUserPriceListType);

operation =  DATA Operation.Operation(ImportUserPriceListType);
nameOperation 'Операция' (ImportUserPriceListType importUserPriceListType) =  name(operation(importUserPriceListType));

company =  DATA LegalEntity(ImportUserPriceListType);
nameCompany 'Организация' (ImportUserPriceListType importUserPriceListType) =  name(company(importUserPriceListType));

stock =  DATA Stock(ImportUserPriceListType);
nameStock 'Склад' (ImportUserPriceListType importUserPriceListType) =  name(stock(importUserPriceListType));

quantityAdjustment 'Колонка остатка' =  DATA VARSTRING[20](ImportUserPriceListType);
 
defaultItemGroup =  DATA ItemGroup(ImportUserPriceListType);
nameDefaultItemGroup 'Группа товаров' (ImportUserPriceListType importUserPriceListType) =  name(defaultItemGroup(importUserPriceListType));

startRow 'Начинать со строки' = DATA INTEGER(ImportUserPriceListType);
isPosted 'Импортировать проведёнными' = DATA BOOLEAN(ImportUserPriceListType);
doNotCreateItems 'Не создавать товары и штрихкоды' = DATA BOOLEAN(ImportUserPriceListType);
barcodeMaybeUPC 'Добавлять 0 к UPC штрих-кодам' = DATA BOOLEAN(ImportUserPriceListType);
checkColumn 'Проверочное поле' = DATA VARSTRING[50](ImportUserPriceListType);
separator 'Разделитель' = DATA VARSTRING[2](ImportUserPriceListType);
importUserPriceListKeyType 'Тип ключа' = DATA ImportUserPriceListKeyType(ImportUserPriceListType);
captionImportUserPriceListKeyType 'Тип ключа' (ImportUserPriceListType importUserPriceListType) = staticCaption(importUserPriceListKeyType(importUserPriceListType));
nameImportUserPriceListKeyType 'Тип ключа' (ImportUserPriceListType importUserPriceListType) = staticName(importUserPriceListKeyType(importUserPriceListType));

TABLE importUserPriceListTypeDetail(ImportUserPriceListType, ImportUserPriceListTypeDetail);
index 'Поле' = DATA VARSTRING[50] (ImportUserPriceListType, ImportUserPriceListTypeDetail);

replaceOnlyNull 'Не замещать' = DATA BOOLEAN (ImportUserPriceListType, ImportUserPriceListTypeDetail);

importUserPriceListTypeFileExtension  = DATA ImportUserPriceListTypeFileExtension(ImportUserPriceListType);
captionImportUserPriceListTypeFileExtension 'Тип файла' (ImportUserPriceListType importUserPriceListType) = staticCaption(importUserPriceListTypeFileExtension(importUserPriceListType));

TABLE importUserPriceListTypeDataPriceListType(ImportUserPriceListType, DataPriceListType);
index 'Поле' = DATA VARSTRING[50] (ImportUserPriceListType, DataPriceListType);

FORM customKeyTypes 'Ключи свойства'
    OBJECTS k=CustomKeyType
    PROPERTIES(k) READONLY staticCaption
    LIST CustomKeyType OBJECT k
;

FORM importUserPriceListTypeDetails
    OBJECTS itd = ImportUserPriceListTypeDetail
    PROPERTIES(itd) staticCaption READONLY, canonicalNamePropImport, captionKeyImport
    LIST ImportUserPriceListTypeDetail OBJECT itd
;

FORM importUserPriceListTypeDetail 'Свойство импорта'
    OBJECTS itd = ImportUserPriceListTypeDetail FIXED PANEL
    PROPERTIES(itd) staticCaption, canonicalNamePropImport, captionKeyImport
    EDIT ImportUserPriceListTypeDetail OBJECT itd
;

FORM importUserPriceListTypeFileExtensions 'Типы файлов'
    OBJECTS f=ImportUserPriceListTypeFileExtension
    PROPERTIES(f) READONLY staticCaption
    LIST ImportUserPriceListTypeFileExtension OBJECT f
;

FORM importUserPriceListKeyTypes 'Типы ключа'
    OBJECTS k=ImportUserPriceListKeyType
    PROPERTIES(k) READONLY staticCaption
    LIST ImportUserPriceListKeyType OBJECT k
;

showSeparator (ImportUserPriceListType t) = importUserPriceListTypeFileExtension(t) == ImportUserPriceListTypeFileExtension.csv;

FORM importUserPriceListType 'Тип импорта'
    OBJECTS i=ImportUserPriceListType FIXED PANEL
    PROPERTIES(i) name, captionImportUserPriceListTypeFileExtension, startRow,
                  isPosted, doNotCreateItems, barcodeMaybeUPC, 
                  checkColumn, separator SHOWIF showSeparator(i), 
                  captionImportUserPriceListKeyType
    PROPERTIES(i) FORCE PANEL nameOperation, nameCompany, nameStock, nameDefaultItemGroup,
                              quantityAdjustment
    PROPERTIES(i) autoImport, autoImportDirectory FORCE PANEL SHOWIF autoImport(i)
                   
    OBJECTS d = ImportUserPriceListTypeDetail
    PROPERTIES(d) staticCaption READONLY, canonicalNamePropImport, captionKeyImport
    PROPERTIES(i,d) index, replaceOnlyNull 
    PROPERTIES(d) FORCE PANEL NEWSESSION NEW, EDIT, DELETE TOOLBAR
                      
    OBJECTS p = DataPriceListType
    PROPERTIES(p) name
    PROPERTIES(i, p) index                  
                      
    EDIT ImportUserPriceListType OBJECT i
;

DESIGN importUserPriceListType {
    MOVE i.box;
    NEW tabbedContainer {
        fill = 1;
        type = TABBED;
        NEW columnsContainer {
            caption = 'Колонки';
            MOVE d.box;
        }
        NEW invoiceParamsContainer {
            caption = 'Параметры прайс-листа';
            MOVE PROPERTY(nameOperation(i));
            MOVE PROPERTY(nameCompany(i));
            MOVE PROPERTY(nameStock(i));
            MOVE PROPERTY(nameDefaultItemGroup(i));
            MOVE PROPERTY(quantityAdjustment(i));
            MOVE p.box;
        }
    }
    MOVE functions.box;
}

FORM importUserPriceListTypes 'Типы импорта'
    OBJECTS i=ImportUserPriceListType
    PROPERTIES(i) READONLY name, captionImportUserPriceListTypeFileExtension, startRow,
                   isPosted, doNotCreateItems, barcodeMaybeUPC, 
                   checkColumn, separator SHOWIF showSeparator(i), 
                   captionImportUserPriceListKeyType
    PROPERTIES(i) READONLY autoImport, autoImportDirectory SHOWIF autoImport(i)               
    PROPERTIES(i) NEWSESSION NEW, EDIT, DELETE FORCE PANEL TOOLBAR
    LIST ImportUserPriceListType OBJECT i
;

EXTEND FORM integrationData
    OBJECTS ip=ImportUserPriceListType
    PROPERTIES(ip) READONLY name, captionImportUserPriceListTypeFileExtension, startRow,
                   isPosted, doNotCreateItems, barcodeMaybeUPC, 
                   checkColumn, separator SHOWIF showSeparator(ip), 
                   captionImportUserPriceListKeyType
    PROPERTIES(ip) NEWSESSION NEW, EDIT, DELETE FORCE PANEL TOOLBAR
    PROPERTIES() importUserPriceListsAction TOOLBAR
;

DESIGN integrationData {
    pane {
        NEW importUserPriceListType {
            caption = 'Универсальный импорт (Прайс-лист)';
            MOVE ip.box;
            MOVE PROPERTY(importUserPriceListsAction());
        }
    }
}

EXTEND FORM userPriceList
    PROPERTIES(p) importAction TODRAW d TOOLBAR
    PROPERTIES(p) nameImportUserPriceListType
    PROPERTIES(p) saveOriginal, openOriginal 
;

DESIGN userPriceList{
    detailContainer {
        NEW import {
            caption = 'Импорт';
            type = CONTAINERH;
            NEW universalImport {
                caption = 'Универсальный импорт';
                MOVE PROPERTY(nameImportUserPriceListType(p));
                MOVE PROPERTY(importAction(p));
            }
            NEW origin {
                caption = 'Оригинал прайса';
                MOVE PROPERTY(saveOriginal(p));
                MOVE PROPERTY(openOriginal(p));
            }
        }
    }
}