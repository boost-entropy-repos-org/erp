MODULE PurchaseInvoicePriceListStock;

REQUIRE PurchaseInvoice, PriceListStockGroup;

NAMESPACE Purchase;

// Создаем вид цен по всем складам компании
CLASS InvoicePriceListLedger : PriceListLedger;

@defineAggregation(invoiceDetail, invoicePriceListLedger, is);

fromDateTime (InvoicePriceListLedger ledger) += dateTime(invoiceDetail(ledger));

isPosted(InvoicePriceListLedger ledger) += isPosted(invoiceDetail(ledger));

sku (InvoicePriceListLedger ledger) += sku(invoiceDetail(ledger));

description (InvoicePriceListLedger ledger) += description(invoiceDetail(ledger));

company (InvoicePriceListLedger ledger) += supplier(invoiceDetail(ledger));

in (InvoicePriceListLedger ledger, Stock stock) += isCompany(stock) AND priceStockGroup(customerStock(invoiceDetail(ledger))) == priceStockGroup(stock);

EXTEND CLASS SystemLedgerPriceListType { purchaseInvoicePriceListType 'Закупки (последняя по ценовой группе)' }
batch (SystemLedgerPriceListType type, Stock stock) += WHEN type == SystemLedgerPriceListType.purchaseInvoicePriceListType AND isCompany(stock)
                                               THEN TRUE; //priceBatchLedgerStock(stock); для закупки последняя по складу, всегда свои цены для складов
in (InvoicePriceListLedger ledger, SystemLedgerPriceListType type) += WHEN price(invoiceDetail(ledger)) AND type == SystemLedgerPriceListType.purchaseInvoicePriceListType THEN TRUE;
price (InvoicePriceListLedger ledger, SystemLedgerPriceListType type) += WHEN price(invoiceDetail(ledger)) AND type == SystemLedgerPriceListType.purchaseInvoicePriceListType THEN price(invoiceDetail(ledger));
edit(InvoicePriceListLedger d) += ACTION edit(invoiceDetail(d));      
differentOrganizations(SystemLedgerPriceListType type) += WHEN type == SystemLedgerPriceListType.purchaseInvoicePriceListType THEN TRUE;   
        
EXTEND CLASS SystemLedgerPriceListType { rateExchangePriceListType 'Курс обмена (последний по ценовой группе)' }
batch(SystemLedgerPriceListType type, Stock stock) += WHEN type == SystemLedgerPriceListType.rateExchangePriceListType AND isCompany(stock)
                                              THEN priceBatchLedger(stock);
in (InvoicePriceListLedger ledger, SystemLedgerPriceListType type) += WHEN isHomeCurrency(invoiceDetail(ledger)) AND type == SystemLedgerPriceListType.rateExchangePriceListType THEN TRUE;
price (InvoicePriceListLedger ledger, SystemLedgerPriceListType type) += WHEN isHomeCurrency(invoiceDetail(ledger)) AND type == SystemLedgerPriceListType.rateExchangePriceListType THEN NUMERIC[14,2](rateExchange(invoiceDetail(ledger)));
