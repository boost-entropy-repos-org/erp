MODULE PurchaseInvoiceRRP;

REQUIRE PurchaseInvoice;

NAMESPACE Purchase;

//------------------------- Рекомендуемая розничная цена-------------------------//
@defineDocumentInterfaceHeaderProperty (invoice, showRRP, 'RRP');

// -- Операция
@defineOperationProperty(showRRP, 'RRP', commonContainer);
@deriveDocumentOperationProperty(UserInvoice, showRRP);

@defineDocumentInterfaceDetailPriceListType (invoice, priceListType, RRP, ' (RRP)');

RRPPriceListTypeUserInvoiceDetail(userInvoiceDetail) <- RRPPriceListTypeAgreement(agreementUserInvoice(userInvoiceUserInvoiceDetail(userInvoiceDetail)))
    WHEN CHANGED (agreementUserInvoice(userInvoiceUserInvoiceDetail(userInvoiceDetail)));

currencyRRPUserInvoiceDetail (userInvoiceDetail) = currencyPriceListType(RRPPriceListTypeUserInvoiceDetail(userInvoiceDetail));
nameCurrencyRRPUserInvoiceDetail 'Валюта (RRP)' (userInvoiceDetail) = nameCurrency(currencyRRPUserInvoiceDetail(userInvoiceDetail));

currencyRRPInvoiceDetail (invoiceDetail) = currencyPriceListType(RRPPriceListTypeInvoiceDetail(invoiceDetail));
nameCurrencyRRPInvoiceDetail 'Валюта (RRP)' (invoiceDetail) = nameCurrency(currencyRRPInvoiceDetail(invoiceDetail));

@defineDocumentInterfaceDetailPriceCustomPrefix (invoiceDetail, RRP, ' (RRP)');
WHEN SESSION (CHANGED(RRPPriceListTypeUserInvoiceDetail(detail)) OR
         CHANGED(skuUserInvoiceDetail(detail)) OR
         CHANGED(customerStockUserInvoiceDetail(detail)) OR
         CHANGED(dateTimeUserInvoiceDetail(detail))) AND pt == RRPPriceListTypeUserInvoiceDetail(detail) NOINLINE (pt) DO
    RRPPriceUserInvoiceDetail (detail)  <-  prevPriceBPriceListTypeSkuStockDateTime(pt,
                                                                                    skuUserInvoiceDetail(detail),
                                                                                    customerStockUserInvoiceDetail(detail),
                                                                                    dateTimeUserInvoiceDetail(detail));

EXTEND FORM userInvoice
    PROPERTIES(i) showRRPUserInvoice
    PROPERTIES(d) SHOWIF showRRPUserInvoice(i) BEFORE deleteid nameRRPPriceListTypeUserInvoiceDetail, nameCurrencyRRPUserInvoiceDetail READONLY, RRPPriceUserInvoiceDetail
;
EXTEND DESIGN userInvoice {
    headerExtraParams {
        NEW headerRRP {
            caption = 'RRP';
            ADD PROPERTY(showRRPUserInvoice);
        }
    }
}


EXTEND FORM invoices
    PROPERTIES(d) READONLY SHOWIF showRRPInvoice(i) nameRRPPriceListTypeInvoiceDetail, nameCurrencyRRPInvoiceDetail, RRPPriceInvoiceDetail
;

// Создаем виды цен
EXTEND CLASS SystemLedgerPriceListType { purchaseRRPInvoiceStockPriceListType 'RRP (последняя по складу)' }
batchLedgerPriceListTypeStock (type, stock) += WHEN type == SystemLedgerPriceListType.purchaseRRPInvoiceStockPriceListType AND isCompanyStock(stock)
                                               THEN explicitBatchLedgerStock(stock);
inPriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(RRPPriceInvoiceDetail(ledger)) AND type == SystemLedgerPriceListType.purchaseRRPInvoiceStockPriceListType THEN TRUE;
pricePriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(RRPPriceInvoiceDetail(ledger)) AND type == SystemLedgerPriceListType.purchaseRRPInvoiceStockPriceListType THEN RRPPriceInvoiceDetail(ledger);

// Создаем вид цен по всем складам компании
EXTEND CLASS SystemLedgerPriceListType { purchaseRRPInvoicePriceListType 'RRP (последняя по ценовой группе)' }
batchLedgerPriceListTypeStock (type, stock) += WHEN type == SystemLedgerPriceListType.purchaseRRPInvoicePriceListType AND isCompanyStock(stock)
                                               THEN explicitBatchLedgerStock(stock);
inPriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(RRPPriceInvoiceDetail(invoiceDetailInvoicePriceListLedger(ledger))) AND type == SystemLedgerPriceListType.purchaseRRPInvoicePriceListType THEN TRUE;
pricePriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(RRPPriceInvoiceDetail(invoiceDetailInvoicePriceListLedger(ledger))) AND type == SystemLedgerPriceListType.purchaseRRPInvoicePriceListType THEN RRPPriceInvoiceDetail(invoiceDetailInvoicePriceListLedger(ledger));

//// Тип обмена для RRP, пок не используется.
//RRPTypeExchangeInvoiceDetail  (invoiceDetail) = ABSTRACT TypeExchange (InvoiceDetail) PERSISTENT;
//nameRRPTypeExchangeInvoiceDetail 'Тип обмена (RRP)' (invoiceDetail)= name(RRPTypeExchangeInvoiceDetail(invoiceDetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;
//
//RRPTypeExchangeUserInvoiceDetail (userInvoiceDetail) = DATA TypeExchange (UserInvoiceDetail);
//nameRRPTypeExchangeUserInvoiceDetail 'Тип обмена (RRP)' (userInvoiceDetail)= name(RRPTypeExchangeUserInvoiceDetail(userInvoiceDetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;
//
//CONSTRAINT currencyRRPUserInvoiceDetail(detail) != currencyTypeExchange(RRPTypeExchangeUserInvoiceDetail(detail))
//    CHECKED BY RRPTypeExchangeUserInvoiceDetail MESSAGE 'В накладной валюта типа обмена RRP не соавпадает с валютой вида цены RRP';
//
//RRPTypeExchangeInvoiceDetail(invoiceDetail) += RRPTypeExchangeUserInvoiceDetail(invoiceDetail);
//
//@defineDocumentInterfaceDetailPriceCustomPrefix (invoiceDetail, RRPExchange, ' (RRP) конвертированная');
//
//RRPExchangePriceUserInvoiceDetail (detail)  <-  roundPriceCurrency(           // Какое ставить округление?????
//    RRPPriceUserInvoiceDetail (detail)*rateTypeExchangeCurrencyDate(
//        RRPTypeExchangeUserInvoiceDetail(detail), currencyUserInvoiceDetail(detail), dateUserInvoiceDetail(detail)),
//            currencyUserInvoiceDetail(detail))
//
//        WHEN CHANGED(RRPTypeExchangeUserInvoiceDetail(detail)) OR
//             CHANGED(currencyUserInvoiceDetail(detail)) OR
//             CHANGED(dateUserInvoiceDetail(detail)) OR
//             CHANGED(RRPPriceUserInvoiceDetail (detail));
//
//showRRPExchangePriceInvoice(invoice) = [GROUP SUM 1 IF NOT currencyInvoiceDetail(invoiceDetail) == currencyRRPInvoiceDetail(invoiceDetail) BY invoiceInvoiceDetail(invoiceDetail)](
//    invoice) AND showRRPInvoice(invoice);
