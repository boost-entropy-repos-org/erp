MODULE PurchaseInvoiceCharge;

REQUIRE PurchaseInvoice;

NAMESPACE Purchase;

@defineDocumentInterfaceProperty(invoice, showChargePrice, 'Услуги');

// -- Операция
@defineOperationProperty(showChargePrice, 'Услуги', commonContainer);
@deriveDocumentOperationProperty(UserInvoice, showChargePrice);

@defineDocumentInterfaceDetailPriceCustomPrefix (invoiceDetail, charge, ' услуг за ед.'); // объявляем цену услуг
@defineDocumentInterfaceDetailDataSumCustomPrefix (invoiceDetail, charge, ' услуг'); // объявляем сумму услуг
@deriveDocumentDetailSumCustomPrefix(userInvoiceDetail, charge, currency, quantity); // записываем сумму услуг

extraCostPriceUserInvoiceDetail(detail) += chargePriceUserInvoiceDetail(detail);

chargeSumUserInvoiceDetailUserInvoice 'Сумма услуг' (i) = GROUP SUM chargeSumUserInvoiceDetail(idetail)
    BY userInvoiceUserInvoiceDetail(idetail) IN documentSum PREFCHARWIDTH 15;
chargeSumInvoiceDetailInvoice 'Сумма услуг' (i) = GROUP SUM chargeSumInvoiceDetail(idetail)
    BY invoiceInvoiceDetail(idetail) IN documentSum PREFCHARWIDTH 15;

chargePercentUserInvoiceDetail '% услуг' (userInvoiceDetail) = DATA NUMERIC[12,6] (UserInvoiceDetail) MINCHARWIDTH 8;

chargePercentUserInvoice '% услуг' (i) = NUMERIC[12,6](chargeSumUserInvoiceDetailUserInvoice(i) * 100.0 / (incomeSumUserInvoice(i) IF incomeSumUserInvoice(i) != 0)) FIXEDCHARWIDTH 10 PERSISTENT;
chargePercentInvoice '% услуг' (i) = NUMERIC[12,6](chargeSumInvoiceDetailInvoice(i) * 100.0 / (incomeSumInvoice(i) IF incomeSumInvoice(i) != 0)) FIXEDCHARWIDTH 10 PERSISTENT;

setChargePercentUserInvoice = ACTION (userInvoice, percent) {
    chargePercentUserInvoiceDetail(d) <- percent WHERE userInvoiceUserInvoiceDetail(d) == userInvoice;
}

WHEN SESSION FORMS userInvoice CHANGED(chargePercentUserInvoiceDetail(d)) OR CHANGED(incomePriceUserInvoiceDetail(d)) DO
    chargePriceUserInvoiceDetail(d) <- chargePercentUserInvoiceDetail(d) * incomePriceUserInvoiceDetail(d) / 100.0;


changeChargePercentUserInvoice = ACTION (userInvoice) {
    REQUEST NUMERIC[12,6] INPUT;
    setChargePercentUserInvoice(userInvoice, requestedNumeric());
}

changeChargeSumUserInvoiceDetailUserInvoice = ACTION (userInvoice) {
    REQUEST NUMERIC[16,2] INPUT;
    setChargePercentUserInvoice(userInvoice, requestedNumeric() * 100.000000 / (incomeSumUserInvoice(userInvoice) IF incomeSumUserInvoice(userInvoice) != 0));
}

backgroundChargeInvoice 'Цвет' = RGB(224, 255, 128);

EXTEND FORM userInvoice
    PROPERTIES(i) BACKGROUND backgroundChargeInvoice() showChargePriceUserInvoice
    PROPERTIES(i) BACKGROUND backgroundChargeInvoice() SHOWIF showChargePriceUserInvoice(i)
                                                        chargePercentUserInvoice ON CHANGE changeChargePercentUserInvoice(i),
                                                        chargeSumUserInvoiceDetailUserInvoice ON CHANGE changeChargeSumUserInvoiceDetailUserInvoice(i)
    PROPERTIES(d) BACKGROUND backgroundChargeInvoice() SHOWIF showChargePriceUserInvoice(i) BEFORE numberVATUserInvoiceDetail(d)
                                                        chargePercentUserInvoiceDetail, chargePriceUserInvoiceDetail, chargeSumUserInvoiceDetail
;


EXTEND DESIGN userInvoice {
    headerExtraParams {
        NEW headerCharge {
            caption = 'Услуги';
            type = COLUMNS;
            columns = 1;
            ADD PROPERTY(showChargePriceUserInvoice(i));
            ADD PROPERTY(chargePercentUserInvoice(i));
            ADD PROPERTY(chargeSumUserInvoiceDetailUserInvoice(i));
        }
    }
}

EXTEND FORM invoices
    PROPERTIES(d) BACKGROUND backgroundChargeInvoice() SHOWIF showChargePriceInvoice(i) READONLY BEFORE numberVATInvoiceDetail(d)
                                                        chargePriceInvoiceDetail, chargeSumInvoiceDetail
;

// ----------------------- Расчет по услугам, которые включаются в накладную отдельной строкой ------------------------ //

calcChargePriceUserInvoiceDetail  (detail) = [= (X*Y)/(Z*W)](
    sumUserInvoiceDetail(detail),
    sumChargeUserInvoiceDetailUserInvoice(userInvoiceUserInvoiceDetail(detail)),
    sumNotChargeUserInvoiceDetailUserInvoice(userInvoiceUserInvoiceDetail(detail)),
    quantityUserInvoiceDetail(detail)
) IF isStockSkuInvoiceDetail(detail);

deriveChargePriceUserInvoice 'Разнести услуги' = ACTION (userInvoice) {
    chargePriceUserInvoiceDetail(detail) <- calcChargePriceUserInvoiceDetail(detail) WHERE userInvoiceUserInvoiceDetail(detail) == userInvoice;
}

EXTEND FORM userInvoice
    PROPERTIES(i) SHOWIF sumChargeUserInvoiceDetailUserInvoice(i) deriveChargePriceUserInvoice TODRAW d FORCE PANEL TOOLBAR
;