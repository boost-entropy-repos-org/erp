MODULE PurchaseReturnInvoiceCharge;

REQUIRE PurchaseReturnInvoice, PurchaseInvoiceCharge;

NAMESPACE PurchaseReturn;

@defineDocumentInterfaceProperty(invoice, showChargePrice, 'Услуги');

// -- Операция

@deriveDocumentOperationProperty(UserInvoice, showChargePrice);

@defineDocumentInterfaceDetailPriceCustomPrefix (invoiceDetail, charge, ' услуг за ед. (закупка)'); // объявляем цену услуг
@defineDocumentInterfaceDetailDataSumCustomPrefix (invoiceDetail, charge, ' услуг (закупка)'); // объявляем сумму услуг
@deriveDocumentDetailSumCustomPrefix(userInvoiceDetail, charge, currency, quantity); // записываем сумму услуг

overRecalculatedPrice(UserInvoiceDetail detail) += ACTION (detail) {
    ASSIGN chargePrice(detail) <- chargePrice(invoiceDetail(detail));
}

chargeSumUserInvoiceDetail 'Сумма услуг в документе (построчно)' (userInvoice) = GROUP SUM chargeSum(UserInvoiceDetail idetail)
    BY userInvoice(idetail) IN documentSum;
chargeSumInvoiceDetail 'Сумма услуг в документе (построчно)' (invoice) = GROUP SUM chargeSum(InvoiceDetail idetail)
    BY invoice(idetail) IN documentSum;

backgroundCharge 'Цвет' (Invoice invoice) = RGB(224, 255, 128) IF invoice IS Invoice;

EXTEND FORM userInvoice
    PROPERTIES(i) BACKGROUND backgroundCharge(i) showChargePrice
    PROPERTIES(i) BACKGROUND backgroundCharge(i) SHOWIF showChargePrice(i)
                                                        sumChargeUserInvoiceDetail
    PROPERTIES(d) BACKGROUND backgroundCharge(i) SHOWIF showChargePrice(i) BEFORE numberVAT(d)
                                                        chargePrice, chargeSum
;

DESIGN userInvoice {
    headerExtraParams {
        NEW headerCharge {
            caption = 'Услуги';
            MOVE PROPERTY(showChargePrice(i));
        }
    }
}

EXTEND FORM invoices
    PROPERTIES(i) BACKGROUND backgroundCharge(i) sumChargeInvoiceDetail READONLY
    PROPERTIES(d) BACKGROUND backgroundCharge(i) SHOWIF showChargePrice(i) READONLY BEFORE numberVAT(d)
                                                        chargePrice, chargeSum
;

