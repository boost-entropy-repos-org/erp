MODULE ShipmentOrderLedger;

REQUIRE OrderLedger, PurchaseShipment;

NAMESPACE Purchase;


@defineDocumentInterfaceProperty (invoice, createOrderLedger, 'Создать резерв');

EXTEND FORM userInvoice 
    PROPERTIES(i) BACKGROUND backgroundShipped(i) SHOWIF createShipment(i) createOrderLedger
;

DESIGN userInvoice {
    headerCreateShipment {
        MOVE PROPERTY(createOrderLedger(i));
    }
}

// -- Операция
@defineOperationProperty(createOrderLedger, 'Создать резерв', showContainer);
@deriveDocumentOperationProperty(UserInvoice, createOrderLedger);

@defineDocumentInterfaceProperty (shipment, createOrderLedger, 'Создать резерв');

EXTEND FORM userShipment 
    PROPERTIES(s)  createOrderLedger
;

DESIGN userShipment {
    headerCreateDocuments {
        NEW headerCreateOrderLedger {
            caption = 'Резерв';
            MOVE PROPERTY(createOrderLedger(s));
        }            
    }          
}
@deriveDocumentOperationProperty(UserShipment, createOrderLedger);

createOrderLedger(InvoiceShipment s) += createOrderLedger(invoice(s));

excludeOrderLedger 'Исключить' (d) = ABSTRACT CASE BOOLEAN (ShipmentDetail) PERSISTENT; 

toCreateOrderLedger(ShipmentDetail d) = createOrderLedger(d) AND NOT excludeOrderLedger(d);

//--Резерв

CLASS ShipmentOrderLedger 'Резерв на основе поставки (закупка)' : OrderLedger;
TABLE shipmentOrderLedger (ShipmentOrderLedger);

@defineAggregation (shipmentDetail, shipmentOrderLedger, toCreateOrderLedger);

quantityOrderLedger = ABSTRACT NUMERIC[16,5] (ShipmentDetail);

//--------------------- Проводим по регистру резерва ------------------//

dateTime (ShipmentOrderLedger ledger) += dateTime(shipmentDetail(ledger));
isPosted (ShipmentOrderLedger ledger) += isPosted(shipmentDetail(ledger));
isClosed (ShipmentOrderLedger ledger) += isClosed(shipmentDetail(ledger));
sku (ShipmentOrderLedger ledger) += sku(shipmentDetail(ledger));
batch (ShipmentOrderLedger ledger) += ledgerBatch(shipmentDetail(ledger));
stock (ShipmentOrderLedger ledger) += customerStock(shipmentDetail(ledger));
description (ShipmentOrderLedger ledger) += description(shipmentDetail(ledger));
quantity (ShipmentOrderLedger ledger) += OVERRIDE quantity(shipmentDetail(ledger)), quantityOrderLedger(shipmentDetail(ledger));
contact (ShipmentOrderLedger ledger) += customer(shipmentDetail(ledger));
contactStock (ShipmentOrderLedger ledger) += customerStock(shipmentDetail(ledger));
toShipQuantity (ShipmentOrderLedger ledger) += quantity(shipmentDetail(ledger));
edit (ShipmentOrderLedger ledger) += ACTION edit(shipmentDetail(ledger));    
operation[OrderLedger](ShipmentOrderLedger ledger) += operation(shipmentDetail(ledger));

WHEN SET(isClosed(UserInvoice i)) AND createOrderLedger(i) DO createOrderLedger( i) <- NULL ;
WHEN SET(isClosed(UserShipment s)) AND createOrderLedger(s) DO createOrderLedger( s) <- NULL ;
