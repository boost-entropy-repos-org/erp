MODULE PurchaseOperation;

REQUIRE Operation, PriceListType, Purchase;

NAMESPACE Purchase;

@defineOperation('(закупка)');

@defineOperationPriceListType();

@defineOperationLegalEntity(supplier, s, 'Поставщики');
@defineOperationStock(supplierStock, sts, 'Склады поставщика');
@defineOperationLegalEntity(customer, c, 'Покупатели');
@defineOperationStock(customerStock, stc, 'Склады покупателя');

EXTEND FORM operation
    FILTERS isSellerLegalEntity(legalEntityStock(sts)),
            isBuyerLegalEntity(legalEntityStock(stc))
;

CONSTRAINT inSupplierStockOperation(stock, operation) AND NOT inSupplierOperation(supplier, operation) AND legalEntityStock(stock) == supplier
    CHECKED BY inSupplierStockOperation MESSAGE 'Компании отмеченных складов должны совпадать с отмеченными поставщиками';

CONSTRAINT inCustomerStockOperation(stock, operation) AND NOT inCustomerOperation(customer, operation) AND legalEntityStock(stock) == customer
    CHECKED BY inCustomerStockOperation MESSAGE 'Компании отмеченных складов должны совпадать с отмеченными покупателями';

@defineOperationRole();
@extendFormFilterRole(o, dialogOperations);
//@extendFormFilterRole(o, operations);     //-- пока не нужен

EXTEND FORM operation
    FILTERS isSellerLegalEntity(s),
            isCompanyLegalEntity(c)
;

EXTEND DESIGN operation {
    tabContainer{
        NEW createContainer {
            caption = 'Производные документы';
        }
        NEW showContainer {
            caption = 'Отображение свойств';
        }
    }
}

NAVIGATOR {
    purchaseMasterData {
        ADD operations;
    }
}
