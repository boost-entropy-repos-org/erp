MODULE PurchaseCreditNote;

REQUIRE CreditNote, PurchaseShipment, PurchaseOperation;

NAMESPACE Purchase;

//----------------------------------------------- Акт ---------------------------------------------------//

@defineCreditNote(' (закупка)', customer, customer, supplier, company, Purchase);
@defineCreditNotePaymentCondition(' (закупка)');
@extendFormFilterAccessStock(CreditNote, c, creditNotes, customerStock, company);
@defineCreditNoteBatch(customer, customer);

CONSTRAINT supplier(UserCreditNote userCreditNote) AND NOT isSupplier(supplier(userCreditNote))
    CHECKED BY supplier[UserCreditNote] MESSAGE 'Для акта расхождения выбрано в качестве поставщика организация, не являющаяся поставщиком';
CONSTRAINT customer(UserCreditNote userCreditNote) AND NOT isCompany(customer(userCreditNote))
    CHECKED BY customer[UserCreditNote] MESSAGE 'Для акта расхождения выбрано в качестве покупателя организация, не являющаяся компанией';

//------------------------------ Автоматическое проставление свойств -----------------------------//

@deriveDocumentLegalEntityDefaultStock(UserCreditNote, supplier, userCreditNote);
@defineDocumentLegalEntityStockAccess(UserCreditNote, customer, company, userCreditNote);

// -- Операция
@defineDocumentOperationContainer(creditNote ,c);
@extendFormFilterRoleAccess(creditNote, c, creditNotes);
@defineDocumentOperationConstraint(creditNote, 'акт расхождения (закупка)', Purchase);

@defineDocumentOperationRoleOver(userCreditNote, purchase);
@defineOperationProperty(createCreditNote, 'Акт расхождения', createContainer);
@deriveDocumentOperationProperty(UserInvoice, createCreditNote);

@defineDocumentOperationLegalEntity(userCreditNote, supplier, 'Поставщик');
@deriveDocumentOperationLegalEntity(userCreditNote, supplier, userCreditNote);
@defineDocumentOperationLegalEntity(userCreditNote, customer, 'Покупатель');
@deriveDocumentOperationLegalEntity(userCreditNote, customer, userCreditNote);
@defineDocumentOperationStock(userCreditNote, supplier, 'Склад поставщика');
@deriveDocumentOperationStock(userCreditNote, supplier, userCreditNote);
@defineDocumentOperationStock(userCreditNote, customer, 'Склад покупателя');
@deriveDocumentOperationStock(userCreditNote, customer, userCreditNote);


operation(InvoiceCreditNote creditNote) += operation(invoice(creditNote));

//------------------------------ Расширение формы -----------------------------//

// Фильтры
EXTEND FORM userCreditNote

    FILTERGROUP filter
        FILTER 'С остатком ' currentBalance(ks, st) 'F10' 
        FILTER 'В документе ' quantityCustomer(ks, c, st) 'F9'

;

EXTEND FORM userCreditNote

    FILTERGROUP filter3
        FILTER 'С остатком ' prevCurrentBalance(b, sto) 'F10' DEFAULT
        FILTER 'В документе ' quantityCustomer(b, c, sto) 'F9'
;

NAVIGATOR {
    purchasePurchaseNavigator {
        ADD creditNotes;
    }
}

//------------------- Печатные формы ----------------------//

FORM creditNotePrint 'Акт расхождений'
    OBJECTS c = CreditNote PANEL 
    PROPERTIES (c) READONLY seriesNumber, date, fullNameSupplier, nameSupplierStock, 
                            fullNameCustomer, addressCustomer, nameCustomerStock, addressCustomerStock,
                            seriesNumberContractSku, quantityCreditNoteDetail, sumCreditNoteDetail,
                            VATSumCreditNoteDetail, invoiceSumCreditNoteDetail, note

    OBJECTS d = CreditNoteDetail
    PROPERTIES (d) READONLY idBarcodeSku, nameSku, shortNameUOMSku,
                            quantity, price, sum, numberVAT, 
                            valueVAT, VATSum, invoiceSum,
                            documentQuantity, documentVATSum, documentInvoiceSum,
                            shipmentQuantity, shipmentVATSum, shipmentInvoiceSum
    FILTERS creditNote(d) == c
;        

print 'Акт расхождения' (CreditNote creditNote) = { PRINT creditNotePrint OBJECTS c = creditNote; }  IMAGE 'print.png';
EXTEND FORM creditNotes 
    PROPERTIES(c) print  
;
DESIGN creditNotes {
    printContainer{
        MOVE PROPERTY(print(c));
    }    
}

printCreditNote 'Акт расхождения' (Invoice invoice) = { print(invoiceCreditNote(invoice)); } IMAGE 'print.png' IN print; 
EXTEND FORM invoices
    PROPERTIES(i)  printCreditNote SHOWIF invoiceCreditNote(i)
;