MODULE PurchaseCreditNote;

REQUIRE CreditNote, PurchaseShipment, PurchaseOperation;

NAMESPACE Purchase;

//----------------------------------------------- Акт ---------------------------------------------------//

@defineCreditNote(' (закупка)', customer, customer, supplier, company, Purchase);
@defineCreditNotePaymentCondition(' (закупка)');
@extendFormFilterAccessStock(CreditNote, c, creditNotes, customerStock, company);
@extendFormFilterAccessStock(CreditNote, c, creditNotes, supplierStock, supplier);
@extendFormFilterAccessLegalEntity(CreditNote, c, creditNotes, customer, company);
@extendFormFilterAccessLegalEntity(CreditNote, c, creditNotes, supplier, supplier);
@defineCreditNoteBatch(customer, customer);

CONSTRAINT supplierUserCreditNote(userCreditNote) AND NOT isSupplierLegalEntity(supplierUserCreditNote(userCreditNote))
    CHECKED BY supplierUserCreditNote MESSAGE 'Для акта расхождения выбрано в качестве поставщика организация, не являющаяся поставщиком';
CONSTRAINT customerUserCreditNote(userCreditNote) AND NOT isCompanyLegalEntity(customerUserCreditNote(userCreditNote))
    CHECKED BY customerUserCreditNote MESSAGE 'Для акта расхождения выбрано в качестве покупателя организация, не являющаяся компанией';

//------------------------------ Автоматическое проставление свойств -----------------------------//

@defineDocumentSupplierCustomerStockAccess(UserCreditNote, supplier, company, userCreditNote);

// -- Операция
@defineDocumentOperationContainer(creditNote ,c);
@extendFormFilterRoleAccess(creditNote, c, creditNotes);
@defineDocumentOperationConstraint(creditNote, creditNotes, 'акт расхождения (закупка)', Purchase);

@defineDocumentOperationRoleOver(userCreditNote, purchase);
@defineOperationProperty(createCreditNote, 'Акт расхождения', createContainer);
@deriveDocumentOperationProperty(UserInvoice, createCreditNote);

@defineDocumentOperationLegalEntity(userCreditNote, supplier, 'Поставщик');
@deriveDocumentOperationLegalEntity(userCreditNote, supplier, userCreditNote);
@defineDocumentOperationLegalEntity(userCreditNote, customer, 'Покупатель');
@deriveDocumentOperationLegalEntity(userCreditNote, customer, userCreditNote);
@defineDocumentOperationStock(userCreditNote, supplier, 'Склад поставщика');
@deriveDocumentOperationStock(userCreditNote, supplier, userCreditNote);
@defineDocumentOperationStock(userCreditNote, customer, 'Склад покупателя');
@deriveDocumentOperationStock(userCreditNote, customer, userCreditNote);


operationCreditNote(creditNote) += operationInvoice(invoiceInvoiceCreditNote(creditNote));

//------------------------------ Расширение формы -----------------------------//

// Фильтры
EXTEND FORM userCreditNote

    FILTERGROUP filter
        FILTER 'С остатком ' currentBalanceSkuStock(ks, st) 'F10' 
        FILTER 'В документе ' quantitySkuUserCreditNoteCustomerStock(ks, c, st) 'F9'

;

EXTEND FORM userCreditNote

    FILTERGROUP filter3
        FILTER 'С остатком ' prevCurrentBalanceBatchStock(b, sto) 'F10' DEFAULT
        FILTER 'В документе ' quantityBatchUserCreditNoteCustomerStock(b, c, sto) 'F9'
;

NAVIGATOR {
    purchasePurchaseNavigator {
        ADD creditNotes;
    }
}

//------------------- Печатные формы ----------------------//

quantityInvoiceDetailCreditNoteDetail 'Кол-во по накладной' (detail) = quantityInvoiceDetail(invoiceDetailCreditNoteDetail(detail));
sumInvoiceDetailCreditNoteDetail 'Сумма по накладной' (detail) = invoiceSumInvoiceDetail(invoiceDetailCreditNoteDetail(detail));
shipmentQuantityInvoiceDetailCreditNoteDetail 'Поставленное кол-во' (detail) = shipmentQuantityInvoiceDetail(invoiceDetailCreditNoteDetail(detail));
shipmentSumInvoiceDetailCreditNoteDetail 'Поставленная сумма' (detail) = shipmentSumInvoiceDetail(invoiceDetailCreditNoteDetail(detail));

FORM creditNotePrint 'Акт расхождений'
    OBJECTS c = CreditNote FIXED PANEL 
    PROPERTIES (c) READONLY seriesNumberCreditNote, dateCreditNote, fullNameSupplierCreditNote, nameSupplierStockCreditNote, 
                            fullNameCustomerCreditNote, addressCustomerCreditNote, nameCustomerStockCreditNote, addressCustomerStockCreditNote,
                            seriesNumberContractSkuCreditNote, quantityCreditNoteDetailCreditNote, sumCreditNoteDetailCreditNote,
                            VATSumCreditNoteDetailCreditNote, invoiceSumCreditNoteDetailCreditNote, noteCreditNote

    OBJECTS d = CreditNoteDetail
    PROPERTIES (d) READONLY idBarcodeSkuCreditNoteDetail, nameSkuCreditNoteDetail, shortNameUOMSkuCreditNoteDetail,
                            quantityCreditNoteDetail, priceCreditNoteDetail, sumCreditNoteDetail, numberVATCreditNoteDetail, 
                            valueVATCreditNoteDetail, VATSumCreditNoteDetail, invoiceSumCreditNoteDetail,
                            quantityInvoiceDetailCreditNoteDetail, sumInvoiceDetailCreditNoteDetail,
                            shipmentQuantityInvoiceDetailCreditNoteDetail, shipmentSumInvoiceDetailCreditNoteDetail
    FILTERS creditNoteCreditNoteDetail(d) == c
;        

printCreditNote 'Акт расхождения' (creditNote) = ACTION FORM creditNotePrint OBJECTS c = creditNote PRINT IMAGE 'print.png';
EXTEND FORM creditNotes 
    PROPERTIES(c) printCreditNote FORCE PANEL 
;
DESIGN creditNotes {
    printContainer{
        MOVE PROPERTY(printCreditNote(c));
    }    
}

printCreditNoteInvoice 'Акт расхождения' (invoice) = ACTION printCreditNote(invoiceCreditNoteInvoice(invoice)) IMAGE 'print.png' IN print; 
EXTEND FORM invoices
    PROPERTIES(i) FORCE PANEL printCreditNoteInvoice SHOWIF invoiceCreditNoteInvoice(i)
;