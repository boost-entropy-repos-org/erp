MODULE PurchaseOrderStatus;

REQUIRE PurchaseOrder, OrderPrint, PurchaseShipment;

NAMESPACE Purchase;

//--------------- Статус заказа ---------------//

@defineDocumentInterfaceDetailQuantityPrefix (order, original, ' (предзаказ)');
//-- Отправлен

isSentOrder 'Отправлен' (o) = ABSTRACT BOOLEAN(Order) PERSISTENT;
isSentUserOrder 'Отправлен' (o) = DATA BOOLEAN (UserOrder);

sentDateTimeOrder 'Дата отправления' (o) = ABSTRACT DATETIME (Order) PERSISTENT;
sentDateTimeUserOrder 'Дата отправления' (o) = DATA DATETIME (UserOrder);

notSentOrder 'Не отправлен' (o) = o IS Order AND NOT isSentOrder(o) PERSISTENT;
notSentUserOrder 'Не отправлен' (o) = o IS UserOrder AND NOT isSentUserOrder(o) PERSISTENT;

isSentOrder(o) += isSentUserOrder(o);  

isSentOrderDetail 'Отправлен' (d) = isSentOrder(orderOrderDetail(d)) PERSISTENT;
notSentOrderDetail 'Не отправлен' (d) = d IS OrderDetail AND NOT isSentOrderDetail(d);

isSentUserOrderDetail 'Отправлен' (d) = isSentUserOrder(userOrderUserOrderDetail(d)) PERSISTENT;
notSentUserOrderDetail 'Не отправлен' (d) = d IS UserOrderDetail AND NOT isSentUserOrderDetail(d);  

//-- Подтвержден
isConfirmedOrder 'Подтвержден' (o) = ABSTRACT BOOLEAN(Order) PERSISTENT;
isConfirmedUserOrder 'Подтвержден' (o) = DATA BOOLEAN (UserOrder);

notConfirmedOrder 'Не подтвержден' (o) = o IS Order AND NOT isConfirmedOrder(o) PERSISTENT;
notConfirmedUserOrder 'Не подтвержден' (o) = o IS UserOrder AND NOT isConfirmedUserOrder(o) PERSISTENT;

isConfirmedOrder(o) += isConfirmedUserOrder(o);  

isConfirmedOrderDetail 'Подтвержден' (d) = isConfirmedOrder(orderOrderDetail(d)) PERSISTENT;
notConfirmedOrderDetail 'Не подтвержден' (d) = d IS OrderDetail AND NOT isConfirmedOrderDetail(d);

isConfirmedUserOrderDetail 'Подтвержден' (d) = isConfirmedUserOrder(userOrderUserOrderDetail(d)) PERSISTENT;
notConfirmedUserOrderDetail 'Не подтвержден' (d) = d IS UserOrderDetail AND NOT isConfirmedUserOrderDetail(d);  

statusOrder 'Статус заказа' = CASE 
    WHEN isClosedOrder(o) THEN 'Закрыт'
    WHEN shippedOrderDetailOrder(o) THEN 'Принят'
    WHEN invoicedOrderDetailOrder (o) THEN 'В приемке'
    WHEN isPostedOrder(o) THEN 'В работе'
    WHEN isConfirmedOrder(o) THEN 'Подтвержден'
    WHEN isSentOrder(o) THEN 'Отправлен'
    WHEN o IS Order THEN 'Создан' 
;

originalQuantityUserOrderDetail(d) <- quantityUserOrderDetail(d)
    WHEN CHANGED (quantityUserOrderDetail(d)) IF NOT (isPostedUserOrderDetail(d) OR isConfirmedUserOrderDetail(d) OR isSentUserOrderDetail(d));

backgroundOriginalQuantityOrderDetail 'Цвет' (d) = RGB(255,0,0) IF quantityOrderDetail(d) != originalQuantityOrderDetail(d);      

EXTEND FORM userOrder
    PROPERTIES (o) isSentUserOrder, isConfirmedUserOrder
    PROPERTIES (d) BACKGROUND backgroundOriginalQuantityOrderDetail(d) originalQuantityUserOrderDetail BEFORE quantityUserOrderDetail(d) SHOWIF isConfirmedUserOrder(o)
;
DESIGN userOrder {
    first {
        MOVE PROPERTY (isConfirmedUserOrder(o)) BEFORE PROPERTY(isPostedUserOrder(o));
        MOVE PROPERTY (isSentUserOrder(o)) BEFORE PROPERTY(isConfirmedUserOrder(o));    
    }
}

EXTEND FORM orders
    PROPERTIES (o) READONLY  BEFORE isPostedOrder(o) isSentOrder, isConfirmedOrder
    PROPERTIES (o) READONLY  AFTER isPostedOrder(o) statusOrder
    PROPERTIES (d) READONLY BACKGROUND backgroundOriginalQuantityOrderDetail(d) originalQuantityOrderDetail BEFORE quantityOrderDetail(d) SHOWIF isConfirmedOrder(o)
;

emailNameSkuOrderDetail = ABSTRACT VARISTRING[255] (OrderDetail) PERSISTENT;

fromEmailOrders 'E-mail, с которой идет отправка заказов поставщику' = DATA VARSTRING[300] () MINCHARWIDTH 30 PREFCHARWIDTH 50; 
messageEmailOrders 'Предупреждающая надпись в сообщении' = DATA RICHTEXT ();

EXTEND FORM options
    PROPERTIES() fromEmailOrders, messageEmailOrders
;

DESIGN options{
    orders{
        NEW email{
            caption = 'Почта';
            fill = 1;
            MOVE PROPERTY(fromEmailOrders());
            MOVE PROPERTY(messageEmailOrders()) {
                fill = 1;
                panelCaptionAbove = TRUE;
            }        
        }

    }
}

nameOrder = CONCAT '', 'Заказ № ' + seriesNumberOrder(order) + ' от '  + dateOrder(order)+ ' '+ fullNameCustomerOrder(order);

FORM messageOrders 'Сообщение'
    OBJECTS o = Order FIXED PANEL
    PROPERTIES(o) seriesNumberOrder, dateOrder, fullNameCustomerOrder
    PROPERTIES () messageEmailOrders TODRAW o
;

calcEmailCustomerOrder 'Отправить заказ поставщику' (order) = ACTION EMAIL
    FROM OVERRIDE fromEmailOrders(), emailContact(createdUserOrder(order))
    SUBJECT 'Заказ №' + seriesNumberOrder(order) + '/'  + dateOrder(order)+ ' от ' + nameCustomerOrder(order)
    TO (OVERRIDE emailLegalEntity(supplierOrder(order)), emailStock(supplierStockOrder(order)))
    INLINE messageOrders OBJECTS o=order
    ATTACH XLSX 
           NAME numberOrder(order) + '/' + dateOrder(order) // без кирилицы должно быть
           printOrderXLS OBJECTS o=order
;


overEmailCustomerOrder = ABSTRACT ACTION LIST (Order.Order);
emailCustomerOrder 'Отправить заказ поставщику' (order)= ACTION (order) {
    IF (OVERRIDE emailLegalEntity(supplierOrder(order)), emailStock(supplierStockOrder(order))) THEN {
        NEWSESSION {
            isSentOrder(order) <- TRUE;
            sentDateTimeOrder(order) <- currentDateTime();
            
            overEmailCustomerOrder(order);            
            
            calcEmailCustomerOrder(order);
            apply();
        }

    } ELSE {
        MESSAGE 'У поставщика не задан e-mail';
    }
} TOOLBAR;

EXTEND FORM orders 
    PROPERTIES(o) emailCustomerOrder  
; 
DESIGN orders {
    actionContainer {
        NEW emailContainer {
            caption = 'Почта';
                MOVE PROPERTY (emailCustomerOrder(o));
        }
    }
}

orderConfirmationAgreement 'Подтверждение заказа поставщиком'  = DATA BOOLEAN (Agreement);

EXTEND FORM agreement 
    PROPERTIES(a) orderConfirmationAgreement 
;
DESIGN agreement {
    orderContainer1 {
        MOVE PROPERTY (orderConfirmationAgreement(a));
    }    
}

orderConfirmationContractSku 'Подтверждение заказа поставщиком' = DATA BOOLEAN (ContractSku);
EXTEND FORM userContractSku
    PROPERTIES(c) orderConfirmationContractSku
;

DESIGN userContractSku {
    params {
        MOVE PROPERTY(orderConfirmationContractSku(c));
    }
}

disablePostedUserOrder (o) += (orderConfirmationAgreement(agreementUserOrder(o)) OR orderConfirmationContractSku(contractSkuUserOrder(o))) IF NOT isConfirmedUserOrder(o);
