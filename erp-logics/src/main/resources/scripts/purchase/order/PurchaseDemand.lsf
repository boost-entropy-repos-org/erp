MODULE PurchaseDemand;

REQUIRE PurchaseOrder;

NAMESPACE Purchase;

//-----------------------------------------------------------------------------------------------------------//

dateFromSoldPeriodUserOrder 'Дата с' = DATA DATE (UserOrder);
dateToSoldPeriodUserOrder 'Дата по' = DATA DATE (UserOrder);

WHEN SESSION CHANGED (fromShipmentDateUserOrder(o)) AND NOT CHANGED(dateFromSoldPeriodUserOrder(o)) DO {
    dateFromSoldPeriodUserOrder(o) <- fromShipmentDateUserOrder(o);   
}
WHEN SESSION CHANGED (dateUserOrder(o)) AND NOT CHANGED(dateToSoldPeriodUserOrder(o)) DO {
    dateToSoldPeriodUserOrder(o) <- subtractDate(dateUserOrder(o),1);   
}

quantitySoldSkuStockUserOrder 'Продано' (sku, stock, userOrder) = quantitySoldSkuStockDateFromTo(sku, stock, dateFromSoldPeriodUserOrder(userOrder), dateToSoldPeriodUserOrder(userOrder));

purchaseReserveStockSkuDate 'Страховой запас (кол-во)' = ABSTRACT NUMERIC[14,3](Stock, Sku, DATE);

recQuantitySkuStockUserOrder  (sku, stock, userOrder) =    purchaseReserveStockSkuDate(stock, sku, dateUserOrder(userOrder)) (+) 
                                                                            quantitySoldSkuStockUserOrder(sku, stock, userOrder) (-)
                                                                            currentReservePurchaseSkuStock(sku, stock) (-) 
                                                                            (currentBalanceSkuStock(sku, stock) IF currentBalanceSkuStock(sku, stock) > 0.0) ; 

recommendedQuantitySkuStockUserOrder 'Рекомендуемое к закупке кол-во' (sku, stock, userOrder) = (recQuantitySkuStockUserOrder(sku, stock, userOrder)) IF recQuantitySkuStockUserOrder(sku, stock, userOrder) > 0;
purchaseReserveSkuStockUserOrder 'Страховой запас (кол-во)' (sku, stock, userOrder) = purchaseReserveStockSkuDate(stock, sku, dateUserOrder(userOrder));

diffPurchaseReserveStockSkuIntegerDate 'Потребность' (stock, sku, int, date) = (averageSoldSkuStock(sku, stock) * (int AS INTEGER) (+) purchaseReserveStockSkuDate(stock, sku, date) (-) (currentBalanceSkuStock(sku, stock) IF currentBalanceSkuStock(sku, stock) > 0.0) ) 
                                              IF (averageSoldSkuStock(sku, stock) * (int AS INTEGER) (+) purchaseReserveStockSkuDate(stock, sku, date) (-) (currentBalanceSkuStock(sku, stock) IF currentBalanceSkuStock(sku, stock) > 0.0)) > 0;
diffPurchaseReserveStockSkuIntegerDateTime 'Потребность' (stock, sku, int, dateTime) = diffPurchaseReserveStockSkuIntegerDate(stock, sku, int, toDate(dateTime));

overPurchaseReserveStockSkuDateTime 'Страховой запас (кол-во)'(stock, sku, dateTime) = purchaseReserveStockSkuDate(stock, sku, toDate(dateTime));

numberSkuPurchaseReserveSupplierStockPriceListTypeIntegerDateTime 'Кол-во товаров' (supplier, stock, priceListType, int, dateTime) =
    GROUP SUM 1 IF (diffPurchaseReserveStockSkuIntegerDateTime(stock, sku, int, dateTime) > 0 AND
                    companyALedgerPriceListTypeSkuStockDateTime(priceListType, sku, stock, dateTime) == supplier)
          BY supplier, stock, priceListType, int, dateTime;

limitRecommendedQuantitySkuUserOrder = ABSTRACT BOOLEAN (Sku, UserOrder);

overRecommendedQuantityUserOrderDetailSku = ABSTRACT ACTION LIST (UserOrderDetail,Sku); 
fillRecommendedQuantityStockUserOrder 'Заполнить рекомендуемым' = ACTION (userOrder) {
    LOCAL inSku = BOOLEAN (Sku);
    inSku(sku) <- priceALedgerPriceListTypeSkuStockCompanyDateTime(
                              ledgerPriceListTypePriceListType(priceListTypeUserOrderSku(userOrder, sku)),
                              sku, customerStockUserOrder(userOrder), supplierUserOrder(userOrder), dateTimeUserOrder(userOrder))
                          AND NOT limitRecommendedQuantitySkuUserOrder(sku, userOrder); 
    FOR inSku(sku) AND r == recommendedQuantitySkuStockUserOrder (sku, customerStockUserOrder(userOrder), userOrder)
        ADDOBJ d = UserOrderDetail DO {
            userOrderUserOrderDetail(d) <- userOrder;
            skuUserOrderDetail(d) <- sku;
            quantityUserOrderDetail (d) <- IF amountPackSku(sku) > 0 THEN ceil(r, amountPackSku(sku)) ELSE r;
            overRecommendedQuantityUserOrderDetailSku(d,sku);
        }
} TOOLBAR CONFIRM;
                              
EXTEND FORM userOrder
    PROPERTIES(o) TODRAW sts FORCE PANEL dateFromSoldPeriodUserOrder, dateToSoldPeriodUserOrder

    PROPERTIES READONLY AFTER prevCurrentBalanceSkuStock(ks,st) purchaseReserveSkuStockUserOrder(ks,st,o), quantitySoldSkuStockUserOrder(ks,st,o)
    PROPERTIES READONLY AFTER quantitySkuUserOrderCustomerStock(ks, o, st)
        recommendedQuantitySkuStockUserOrder(ks,st,o) ON SHORTCUT fillRecommendedQuantityStockUserOrder(o)
;

DESIGN userOrder {
    sts.box {           
        NEW filterDate FIRST {
            caption= 'Период для расчета продаж';
            type = CONTAINERH;
            MOVE PROPERTY (dateFromSoldPeriodUserOrder(o));
            MOVE PROPERTY (dateToSoldPeriodUserOrder(o));
      
        }
    }
}