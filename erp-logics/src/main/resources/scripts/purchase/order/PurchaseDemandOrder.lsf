MODULE PurchaseDemandOrder;

REQUIRE System,
        Utils,
        Historizable,
        Stock,
        Barcode,
        PurchaseOrder,
        StockReserve,
        PurchaseReserve,
        PriceList,
        Document;

NAMESPACE Purchase;

createDemandUserOrder 'Создать заказ' = ACTION (supplier, stock, priceListType, dateTime) NEWSESSION {
    FOR ADDOBJ o = Purchase.UserOrder DO {
        dateUserOrder(o) <- toDate(dateTime);
        timeUserOrder(o) <- toTime(dateTime);

        supplierUserOrder(o) <- supplier;
        supplierStockUserOrder(o) <- defaultSupplierStockEmployeeLegalEntity(currentUser(), supplier)
            IF countAccessSupplierStockEmployeeLegalEntity (currentUser(), supplier) == 1;
        customerUserOrder(o) <- legalEntityStock(stock);
        customerStockUserOrder(o) <- stock;

        IF countOperationSupplierCustomerSupplierStockCustomerStockUser(supplierUserOrder(o), customerUserOrder(o), supplierStockUserOrder(o), customerStockUserOrder(o), currentUser()) == 1 THEN 
            operationUserOrder(o) <- defaultOperationSupplierCustomerSupplierStockCustomerStockUser(supplierUserOrder(o), customerUserOrder(o), supplierStockUserOrder(o), customerStockUserOrder(o), currentUser());
        
        priceListTypeUserOrder(o) <- priceListType;

        fillRecommendedQuantityStockUserOrder(o);
//        FOR priceALedgerPriceListTypeSkuStockCompanyDateTime(priceListType, sku, stock, supplier, dateTime)
//            AND recommendedQuantitySkuStockUserOrder (sku, stock, o)
//            ADDOBJ d = UserOrderDetail DO {
//                userOrderUserOrderDetail(d) <- o;
//                skuUserOrderDetail(d) <- sku;
//                quantityUserOrderDetail (d) <- recommendedQuantitySkuStockUserOrder (sku, stock, o);
//        }

        FORM userOrder OBJECTS o = o MANAGESESSION DOCKEDMODAL;
    }
}

FORM demandOrder 'Заказы по потребностям'
    OBJECTS dt = DATETIME FIXED PANEL
    PROPERTIES valDt = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES (st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS p = PriceListType FIXED PANEL
    PROPERTIES (p) SELECTOR namePriceListType

    OBJECTS l = LegalEntity
    PROPERTIES(l) READONLY nameLegalEntity
    PROPERTIES createDemandUserOrder(l, st, p, dt) FORCE PANEL TODRAW l TOOLBAR
    ORDER BY nameLegalEntity(l)
    FILTERS isSupplierLegalEntity(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' activeLegalEntity(l) 'shift F10' DEFAULT
    PROPERTIES numberSkuStockReserveSupplierStockPriceListTypeDateTime(l, st, p, dt)
    FILTERGROUP filtersLegalEntity
        FILTER 'Необходим заказ' numberSkuStockReserveSupplierStockPriceListTypeDateTime(l, st, p, dt)>0 'F10'

    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES orderSkuGroup(sk) READONLY, skuTreeName = nameSkuGroup(sk) READONLY
    ORDER BY orderSkuGroup(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' activeSkuGroup(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES READONLY nameSku(s), idBarcodeSku(s), shortNameUOMSku(s)
    ORDER BY nameSku(s)
    FILTERS isParentSkuGroupSku(sk, s)

    PROPERTIES overStockReserveStockSkuDateTime(st, s, dt)
    PROPERTIES currentBalanceSkuStock(s, st)
    PROPERTIES diffStockReserveStockSkuDateTime(st, s, dt)

    FILTERS companyALedgerPriceListTypeSkuStockDateTime(p, s, st, dt) == l

    FILTERGROUP filterdiff
        FILTER 'С потребностью ' diffStockReserveStockSkuDateTime(st, s, dt) > 0 'F11' DEFAULT            
        
    OBJECTS o = Order
    PROPERTIES (o) READONLY isPostedOrder, numberOrder, seriesOrder, dateOrder, timeOrder,
                            nameSupplierOrder, nameSupplierStockOrder, nameCustomerOrder, nameCustomerStockOrder,
                            countOrderDetailOrder, quantityOrderDetailOrder, sumOrderDetailOrder,
                            VATSumOrderDetailOrder, invoiceSumOrderDetailOrder, shipmentDateOrder, shipmentTimeOrder, 
                            closeDateOrder, noteOrder            
    PROPERTIES ()  addUserOrder TODRAW o
    PROPERTIES (o) editOrder SHOWIF isOpenedOrder(o)
    PROPERTIES     deleteo=DELETE(o) FORCE PANEL TOOLBAR  SHOWIF isUserOpenedOrder(o)            
    FILTERS  customerStockOrder(o) ==st
//             supplierOrder(o) == l
             
    FILTERGROUP dateFilter
        FILTER 'Заказы на дату' dateOrder(o) == toDate(dt) 'F9' DEFAULT                 
;

// Проставляем вид цены по умолчанию
defaultDemandOrderPriceListType = DATA PriceListType();
nameDefaultDemandOrderPriceListType 'Вид цены для заказов по потребностям' = namePriceListType(defaultDemandOrderPriceListType());
EXTEND FORM options
    PROPERTIES() nameDefaultDemandOrderPriceListType
;
DESIGN options {
    purchase {
        MOVE PROPERTY(nameDefaultDemandOrderPriceListType());
    }
}

seekDefaultDemandOrderPriceListType = ACTION SEEK demandOrder.p defaultDemandOrderPriceListType();
EXTEND FORM demandOrder
    EVENTS ON INIT seekDefaultDemandOrderPriceListType()
;

DESIGN demandOrder {
    main {
        NEW mainPane {
            fill = 1;
            type = SPLITV;
            NEW header {
                fill = 1;
                type = SPLITH;
                
                NEW left {
                    fill = 1;
                    type = CONTAINERV;
                    MOVE dt.box;
                    MOVE st.box;
                    MOVE p.box;
                }                   
                MOVE l.box{fill = 2;}
            }            
            
            NEW colum {
                fill = 2;
                type = TABBED;
                MOVE o.box {
                    caption = 'Заказы';
                }
                NEW column1 {
                    caption = 'Товары';                   
                    
                    type = CONTAINERH;
                    MOVE skuTree.tree.box;
                    MOVE s.box { fill = 3; }
                }
            }            
        }
        MOVE functions.box;
    }
}

@extendFormFilterRoleAccess(order, o, demandOrder); 

NAVIGATOR {
    purchaseDashboardNavigator {
        ADD demandOrder;
    }
}
