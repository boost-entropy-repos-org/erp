MODULE PurchaseDemandOrder;

REQUIRE System,
        Utils,
        Historizable,
        Stock,
        Barcode,
        PurchaseOrder,
        PurchaseDemand,
        PriceList,Pricing,
        Document,
        Range;

NAMESPACE Purchase;

createDemandUserOrder 'Создать заказ'(LegalEntity supplier, Stock stock, PriceListType priceListType, DATETIME dateTime, DATE dFrom, DATE dTo) = ACTION NEWSESSION {
    FOR ADDOBJ o = Purchase.UserOrder DO {
        date(o) <- toDate(dateTime);
        time(o) <- toTime(dateTime);

        supplier(o) <- supplier;
        supplierStock(o) <- defaultStock(supplier) IF countStocks (supplier) == 1;
        customer(o) <- legalEntity(stock);
        customerStock(o) <- stock;

        IF countOperationSupplierCustomerSupplierCustomer(supplier(o), customer(o), supplierStock(o), customerStock(o), currentUser()) == 1 THEN 
            operation(o) <- defaultOperationSupplierCustomerSupplierCustomer(supplier(o), customer(o), supplierStock(o), customerStock(o), currentUser());
        
        priceListType(o) <- priceListType;
        
        dateFromSoldPeriod(o) <- dFrom;
        dateToSoldPeriod (o) <- dTo;

        fillRecommendedQuantityStock(o);
//        FOR priceALedgerPriceListTypeSkuStockCompanyDateTime(priceListType, sku, stock, supplier, dateTime)
//            AND recommendedQuantitySkuStockUserOrder (sku, stock, o)
//            ADDOBJ d = UserOrderDetail DO {
//                userOrderUserOrderDetail(d) <- o;
//                skuUserOrderDetail(d) <- sku;
//                quantityUserOrderDetail (d) <- recommendedQuantitySkuStockUserOrder (sku, stock, o);
//        }

        FORM userOrder OBJECTS o = o MANAGESESSION DOCKEDMODAL NOCANCEL;
    }
}

recQuantityDemandOrder  (Sku sku, Stock stock, DATETIME dateTime, DATE dFrom, DATE dTo) =    purchaseReserve(stock, sku, DATE(dateTime AS DATETIME)) (+) 
                                                                            quantitySold(sku, stock, dFrom, dTo) (-)
                                                                            currentReservePurchase(sku, stock) (-) 
                                                                           (currentBalance(sku, stock) IF currentBalance(sku, stock) > 0.0) ; 

recommendedQuantityDemandOrder 'Рекомендуемое к закупке кол-во' (Sku sku, Stock stock, DATETIME dateTime, DATE dFrom, DATE dTo) = (recQuantityDemandOrder(sku, stock, dateTime, dFrom, dTo)) IF recQuantityDemandOrder(sku, stock, dateTime, dFrom, dTo) > 0;

numberSkuPurchaseSupplier 'Кол-во товаров' = DATA LOCAL INTEGER (LegalEntity);
recalculateNumberSkuPurchaseSupplier 'Рассчитать потребность'(Stock stock, LedgerPriceListType priceListType, INTEGER int, DATETIME dateTime) = ACTION {
    numberSkuPurchaseSupplier(LegalEntity supplier) <- numberSkuPurchaseReserve(supplier, stock, priceListType, int, dateTime);
} TOOLBAR;

FORM demandOrder 'Заказы по потребностям'
    OBJECTS dt = DATETIME FIXED PANEL
    PROPERTIES valDt = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES (st) SELECTOR name
    FILTERS isCompany(st)

    OBJECTS p = PriceListType FIXED PANEL
    PROPERTIES (p) SELECTOR name
    
    OBJECTS i = INTEGER FIXED PANEL 
    PROPERTIES valI = OBJVALUE (i)
    
    OBJECTS dFrom = DATE FIXED PANEL, dTo = DATE FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)

    OBJECTS l = LegalEntity
    PROPERTIES(l) READONLY name
    PROPERTIES createDemandUserOrder(l, st, p, dt, dFrom, dTo) FORCE PANEL TODRAW l TOOLBAR
    ORDER BY name(l)
    FILTERS isSupplier(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    PROPERTIES numberSkuPurchaseSupplier(l)
    PROPERTIES recalculateNumberSkuPurchaseSupplier(st, p, i, dt) TODRAW l
    FILTERGROUP filtersLegalEntity
        FILTER 'Необходим заказ' numberSkuPurchaseSupplier(l) > 0 'F10'

    TREE skuTree sk = SkuGroup PARENT parent
    PROPERTIES order(sk) READONLY, skuTreeName = name(sk) READONLY
    ORDER BY order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES READONLY idBarcode(s), name(s), shortNameUOM(s), amountPack(s)
    ORDER BY name(s)
    FILTERS isParent(sk, s)

    PROPERTIES READONLY overPurchaseReserve(st, s, dt), averageSold(s, st), quantitySold(s, st, dFrom, dTo), currentBalance(s, st), currentReserve(s, st),
        diffPurchaseReserve(st, s, i, dt), recommendedQuantityDemandOrder(s, st, dt, dFrom, dTo), nameCompanyA(p, s, st, dt),
        priceA[LedgerPriceListType,Sku,Stock,DATETIME](p, s, st, dt), retailPricingPriceA(s, st, dt),dateTimeLastOrderBatch(s,st), dateTimeLastMoved(s, st) 

    FILTERGROUP filterActive
        FILTER 'Активные' active(s) DEFAULT 
    
    FILTERGROUP filteInRange
       FILTER 'В ассортименте' countRange(s, st, DATE(dt))

    FILTERGROUP filterdiff
        FILTER 'С потребностью' calcDiffPurchaseReserve(st, s, i, dt) > 0 
        FILTER 'С рекомендацией' recommendedQuantityDemandOrder(s, st, dt, dFrom, dTo)
        FILTER 'С остатком' currentBalance(s, st)
        FILTER 'С продажами' quantitySold(s, st, dFrom, dTo)
        FILTER 'С остатком или продажами' currentBalance(s, st) OR quantitySold(s, st, dFrom, dTo) DEFAULT

    FILTERGROUP filterSupplier
        FILTER 'По поставщику' priceA(p, s, st, l, dt)
                                       //companyALedgerPriceListTypeSkuStockDateTime(p, s, st, dt) == l
        
    OBJECTS o = Order
    PROPERTIES (o) READONLY isPosted, number, series, date, time,
                            nameSupplier, nameSupplierStock, nameCustomer, nameCustomerStock,
                            countOrderDetail, quantityOrderDetail, sumOrderDetail,
                            VATSumOrderDetail, invoiceSumOrderDetail, shipmentDate, shipmentTime, 
                            closeDate, note            
    PROPERTIES ()  addUserOrder TODRAW o
    PROPERTIES (o) edit SHOWIF isOpened(o)
    PROPERTIES     deleteo=DELETE(o) FORCE PANEL TOOLBAR  SHOWIF overShowDelete(o)  
    FILTERS  customerStock(o) ==st
//             supplierOrder(o) == l
             
    FILTERGROUP dateFilter
        FILTER 'Заказы на дату' date(o) == toDate(dt) 'F9' DEFAULT
;

// Проставляем вид цены по умолчанию
defaultDemandOrderPriceListType = DATA PriceListType();
nameDefaultDemandOrderPriceListType 'Вид цены для заказов по потребностям' = name(defaultDemandOrderPriceListType());
EXTEND FORM options
    PROPERTIES() nameDefaultDemandOrderPriceListType
;
DESIGN options {
    purchase {
        MOVE PROPERTY(nameDefaultDemandOrderPriceListType());
    }
}

seekDefaultDemandOrderPriceListType = ACTION SEEK demandOrder.p defaultDemandOrderPriceListType();
EXTEND FORM demandOrder
    EVENTS ON INIT seekDefaultDemandOrderPriceListType()
;

DESIGN demandOrder {
    main {
        NEW mainPane {
            fill = 1;
            type = SPLITV;
            NEW header {
                fill = 1;
                type = SPLITH;
                
                NEW left {
                    fill = 1;
                    type = CONTAINERV;
                    MOVE dt.box;
                    MOVE st.box;
                    MOVE p.box;
                    MOVE i.box{caption = 'Количество дней до поставки';};
                    NEW period{
                        caption = 'Период для реализации';                   
                        type = CONTAINERH;
                        MOVE PROPERTY (valFrom);
                        MOVE PROPERTY (valTo);
                    }
                }                   
                MOVE l.box{fill = 2;}
            }            
            
            NEW colum {
                fill = 3;
                type = TABBED;
                NEW column1 {
                    caption = 'Товары';                   
                    type = SPLITH;
                    MOVE skuTree.tree.box;
                    MOVE s.box { fill = 3; }
                }
                MOVE o.box {
                    caption = 'Заказы';
                }
            }            
        }
        MOVE functions.box;
    }
}

@extendFormFilterRoleAccess(order, o, demandOrder); 

@extendFormFilterStockAccess(st, demandOrder);

NAVIGATOR {
    purchaseDashboardNavigator {
        ADD demandOrder;
    }
}

DESIGN demandOrder {
        PROPERTY(amountPack(s)) { background = #FFBC02;}
        PROPERTY(overPurchaseReserve(st, s, dt)) { background = #FFEEEE; }
        PROPERTY(currentBalance(s, st)) { background = #F4FFBD; }
        PROPERTY(diffPurchaseReserve(st, s, i, dt)) { background = #D4FFD4; }
        PROPERTY(recommendedQuantityDemandOrder(s, st, dt, dFrom, dTo)) { background = #BDE3FF; }
}

EXTEND FORM demandOrder
    FILTERGROUP myOrders
        FILTER 'Мои' createdUser(o) == currentUser() 'F7' DEFAULT
;