MODULE PurchaseLedgerWeek;

REQUIRE PurchaseLedger;

NAMESPACE PurchaseLedger;

quantityPurchaseSkuStockWeekDateFromTo 'Закуплено за неделю (кол-во)' (sku, stock, week, dateFrom, dateTo) = GROUP SUM
        quantityPurchaseSkuStockDate(sku, stock, date) IF date >= dateFrom AND date <= dateTo
        BY sku, stock, extractWeek(date), dateFrom, dateTo;

sumPurchaseSkuStockWeekDateFromTo 'Закуплено за неделю (сумма)' (sku, stock, week, dateFrom, dateTo) = GROUP SUM
        sumPurchaseSkuStockDate(sku, stock, date) IF date >= dateFrom AND date <= dateTo
        BY sku, stock, extractWeek(date), dateFrom, dateTo;

averagePricePurchaseSkuStockWeekDateFromTo 'Средняя цена за неделю' (sku, stock, week, dateFrom, dateTo)=  round2(sumPurchaseSkuStockWeekDateFromTo(sku, stock, week, dateFrom, dateTo) /
        quantityPurchaseSkuStockWeekDateFromTo(sku, stock, week, dateFrom, dateTo));

averagePurchaseSkuStockWeekDateFromTo 'Закуплено за неделю кол-во/цена' (sku, stock, week, dateFrom, dateTo)= 
        quantityPurchaseSkuStockWeekDateFromTo(sku, stock, week, dateFrom, dateTo) + '(' + averagePricePurchaseSkuStockWeekDateFromTo(sku, stock, week, dateFrom, dateTo) + ')' MINCHARWIDTH 10 PREFCHARWIDTH 15;

quantitySkuPurchaseWeekDateFromTo 'Закуплено за неделю (кол-во)' (week, dateFrom, dateTo) = GROUP SUM
        quantityPurchaseSkuStockWeekDateFromTo(sku, stock, week, dateFrom, dateTo) BY  week, dateFrom, dateTo;

sumPurchaseWeekDateFromTo 'Закуплено за неделю (сумма)' (week, dateFrom, dateTo) = GROUP SUM
        sumPurchaseSkuStockWeekDateFromTo(sku, stock, week, dateFrom, dateTo) BY  week, dateFrom, dateTo;

toString4 = FORMULA STRING[4] 'CAST($1 AS character(4))' FIXEDCHARWIDTH 4;

FORM purchaseSkuStock 'Поступления по неделям'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)

    OBJECTS te = TypeExchange FIXED PANEL
    PROPERTIES nameType = nameTypeExchange(te) SELECTOR, nameCurrencyTypeExchange(te) READONLY

    OBJECTS w = INTEGER
    FILTERS quantitySkuPurchaseWeekDateFromTo(w, dFrom, dTo)

    TREE stockTree sg = StockGroup PARENT parentStockGroup, ts = Stock
    PROPERTIES READONLY sgTreeName = nameStockGroup(sg), tsTreeName = nameStock(ts)
    FILTERS stockGroupStock(ts) == sg
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(ts) 'ctrl F10' DEFAULT
    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY orderSkuGroup(sk), skuTreeName = nameSkuGroup(sk)
    ORDER BY orderSkuGroup(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' activeSkuGroup(sk) 'F5' DEFAULT

    OBJECTS           sts=(st=Stock, s=Sku)
    PROPERTIES        READONLY nameSku(s), stockName = nameStock(st)

    FILTERS           isParentSkuGroupSku(sk, s),
                      (st == ts AND sg IS StockGroup) OR (isParentStockGroupStock(sg, st) AND NOT ts)
    FILTERGROUP inactiveStock2 FILTER 'Активный' activeStock(st) 'ctrl F10' DEFAULT
    ORDER BY          nameSku(s)

    PROPERTIES        balanceBSkuStockDate(s, st, dFrom), quantityPurchaseSkuStockWeekDateFromTo(s, st, w, dFrom, dTo)  COLUMNS (w) HEADER toString4 (w),
                      quantityPurchaseSkuStockDateFromTo(s, st, dFrom, dTo),
                      balanceASkuStockDate(s, st, dTo), sumPurchaseSkuStockDateFromTo (s, st, dFrom, dTo),  sumPurchaseTypeExchangeSkuStockDateFromTo(te,s, st, dFrom, dTo)

    FILTERGROUP filtersPurchase
        FILTER 'Показывать поступившие за интервал' quantityPurchaseSkuStockDateFromTo(s, st, dFrom, dTo) 'F11'

    FILTERGROUP filtersPurchase2
        FILTER 'Показывать с остатками' balanceASkuStockDate(s, st, dTo) 'F10'

;
@extendFormFilterStockAccess(st, purchaseSkuStock);
@extendFormFilterStockAccess(ts, purchaseSkuStock);
@extendFormFilterStockGroupAccess(sg, purchaseSkuStock);

DESIGN purchaseSkuStock {

    main {
        NEW topContainer {
            type = CONTAINERH;
            type = SPLITH;
            fill = 1;

            NEW firstCase {
                type = CONTAINERV;
                type = SPLITV;
                fill = 1;

                ADD stockTree.tree.box {caption = 'Магазины'; }
                ADD skuTree.tree.box { caption = 'Товарные группы'; }
            }

            NEW secondCase {
                fill = 2;
                type = CONTAINERV;

                ADD dates.box { type = CONTAINERH; }
                ADD te.box {
                    type = CONTAINERH;
                    PROPERTY(nameCurrencyTypeExchange(te)) { caption = 'Валюта'; preferredCharWidth = 20;}
                    PROPERTY(nameType) { caption = 'Тип обмена'; preferredCharWidth = 20;}
                }
                ADD sts.box { fill = 2; }
                REMOVE w.box;
            }
        }
        ADD functions.box;
    }
}

NAVIGATOR {
    purchasesReports {
       ADD purchaseSkuStock;
    }
}