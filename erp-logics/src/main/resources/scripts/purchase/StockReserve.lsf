MODULE StockReserve;

REQUIRE System,
        Utils,
        Historizable,
        Stock,
        Document,
        Currency,
        SaleLedger,
        Barcode,
        Purchase,
        PriceListType,
        Dashboard;

TABLE StockSkuDate(Stock, Sku, DATE);

@defineHistorizable(stockReserve, 'Страховой запас (кол-во)', NUMERIC[14,3], stock, nameStock, sku, nameSku, base);
dataStockReserveDaysStockSkuGroup 'Страховой запас (дн.)' = DATA NUMERIC[14,3] (Stock, SkuGroup);
dataStockReserveDaysStockSku 'Страховой запас (дн.)' = DATA NUMERIC[14,3] (Stock, Sku);

levelParentStockSkuGroup (stock, skuGroup) = GROUP MIN levelSkuGroupSkuGroup(skuGroup, parent) IF dataStockReserveDaysStockSkuGroup(stock, parent)
                                                               BY stock, skuGroup PERSISTENT;
nearestParentStockSkuGroup (stock, skuGroup) = skuGroupSkuGroupLevel(skuGroup, levelParentStockSkuGroup(stock, skuGroup));
nearestStockReserveDaysStockSkuGroup (stock, skuGroup) =
    dataStockReserveDaysStockSkuGroup(stock, nearestParentStockSkuGroup(stock, skuGroup));

stockReserveDaysStockSkuGroup 'Страховой запас (дн.)' (stock, skuGroup) = OVERRIDE
    nearestStockReserveDaysStockSkuGroup (stock, skuGroup),
    dataStockReserveDaysStockSkuGroup(stock, skuGroup);

stockReserveDaysStockSku 'Страховой запас (дн.)' (stock, sku) = OVERRIDE
    nearestStockReserveDaysStockSkuGroup(stock, skuGroupSku(sku)),
    dataStockReserveDaysStockSku(stock, sku);

fillStockReserveDateDateFromTo 'Проставить кол-во исходя из продаж в день и запаса(дн.) ' = ACTION (stock, date, dFrom, dTo) {
    FOR stockReserveDaysStockSku(stock, sku) AND averageSoldInDaySkuStockDateFromTo(sku,stock,dFrom,dTo) DO {
        ASSIGN dataStockReserveStockSkuDate(stock, sku, date) <- averageSoldInDaySkuStockDateFromTo(sku,stock,dFrom,dTo)*stockReserveDaysStockSku(stock,sku);
    }
} TOOLBAR CONFIRM;

// Вид цены
filterPriceListTypeStock = DATA LOCAL PriceListType ();
nameFilterPriceListTypeStock 'Вид цены' () = namePriceListType(filterPriceListTypeStock());

defaultStockReservePriceListType = DATA PriceListType();
nameDefaultStockReservePriceListType 'Вид цены для страховых запасов' = namePriceListType(defaultStockReservePriceListType());
EXTEND FORM options
    PROPERTIES() nameDefaultStockReservePriceListType
;
EXTEND DESIGN options {
    commons {
        ADD PROPERTY(nameDefaultStockReservePriceListType());
    }
}
setDefaultPriceListType = ACTION () filterPriceListTypeStock() <- defaultStockReservePriceListType();

filterPriceListTypeSkuStockDateTime (sku, stock, date, time) =
    priceBPriceListTypeSkuStockDateTime (filterPriceListTypeStock(), sku, stock, dateTimeToDateTime(date, time)) OR
    (sku IS Sku AND stock IS Stock AND date IS DATE AND time IS TIME AND NOT filterPriceListTypeStock());

FORM stockReserve 'Страховые запасы'
    OBJECTS dt = DATE FIXED PANEL
    PROPERTIES valDt = OBJVALUE(dt) BACKGROUND dateDiffersCurrent(dt)
    OBJECTS t = TIME FIXED PANEL
    PROPERTIES valT = OBJVALUE(t)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES SELECTOR nameSt = nameStock(st)
    FILTERS isCompanyStock(st)

    PROPERTIES() FORCE PANEL nameFilterPriceListTypeStock

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)

    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES orderSkuGroup(sk) READONLY, skuTreeName = nameSkuGroup(sk) READONLY, stockReserveDaysStockSkuGroup(st,sk)
    ORDER BY orderSkuGroup(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' activeSkuGroup(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES READONLY nameSku(s), idBarcodeSku(s), shortNameUOMSku(s)
    PROPERTIES overStockReserveStockSkuDate(st,s,dt), stockReserveDaysStockSku(st,s), quantitySoldSkuStockDateFromTo(s,st,dFrom,dTo) READONLY, averageSoldInDaySkuStockDateFromTo(s,st,dFrom,dTo) READONLY
    PROPERTIES fillStockReserveDateDateFromTo(st,dt,dFrom,dTo) TODRAW s
    ORDER BY          nameSku(s)
    FILTERS           isParentSkuGroupSku(sk, s),
                      filterPriceListTypeSkuStockDateTime(s,st,dt,t)

    FILTERGROUP soldFilter
        FILTER 'Только с реализацией' quantitySoldSkuStockDateFromTo(s,st,dFrom,dTo) 'F10'
    
    EVENTS ON INIT 
        setDefaultPriceListType();
;

@extendFormFilterStockAccess(st, stockReserve);

DESIGN stockReserve FROM DEFAULT {
    main {
        NEW row1 {
            type = CONTAINERH;
            ADD st.box;
            ADD dt.box;
            ADD t.box;
            ADD dates.box { caption = 'Интервал для реализации'; }
            NEW filterContainer {
                caption = ' Фильтр';
                ADD PROPERTY(nameFilterPriceListTypeStock());
            }
        }
        NEW row2  {
            type = SPLITH;
            fill = 1;
            ADD skuTree.tree.box { caption = 'Товарные группы'; }
            ADD s.box { fill = 3; };
        }
        ADD functions.box;
    }
}

NAVIGATOR {
    purchaseDashboardNavigator {
        ADD stockReserve;
    }
}
