MODULE PriceListCompare;

REQUIRE PriceList, PriceListDashboard;

//Подсветка строк сравнения прайсов
isSkuPriceList (sku, priceList) = GROUP SUM 1 BY skuPriceListDetail(detail), priceListPriceListDetail(detail);

priceSkuDataPriceListTypePriceList 'Цена' (sku, type, priceList) = GROUP MAX pricePriceListDetailDataPriceListType(detail, type)
    BY skuPriceListDetail(detail), type, priceListPriceListDetail(detail);

backgroundSkuPriceListPriceListPricelistType (sku, p1, p2, type) = 
    CASE WHEN isSkuPriceList(sku, p1) AND NOT isSkuPriceList(sku, p2) THEN RGB(192,255,192)  
         WHEN isSkuPriceList(sku, p2) AND NOT isSkuPriceList(sku, p1) THEN RGB(255,192,192)  
         WHEN priceSkuDataPriceListTypePriceList(sku, type, p1) != priceSkuDataPriceListTypePriceList(sku, type, p2) THEN RGB(255,255,192);  

headerNamePriceListDataPriceListType (priceList, dataPriceListType) =
    (namePriceListType(dataPriceListType) + ' (№' + numberPriceList(priceList) + ')') IF inPriceListDataPriceListType(priceList, dataPriceListType) MINCHARWIDTH 30 MAXCHARWIDTH 50;    

EXTEND FORM userPriceList
    OBJECTS p2 = UserPriceList FIXED PANEL
    PROPERTIES (p2) SELECTOR seriesNumberUserPriceList, dateUserPriceList, nameCurrencyUserPriceList, nameCompanyUserPriceList
    FILTERS p != p2
    
    OBJECTS s3=Sku
    PROPERTIES BACKGROUND backgroundSkuPriceListPriceListPricelistType(s3, p, p2, t) READONLY inputName3 = nameSku(s3), idBarcodeSku(s3), shortNameUOMSku(s3)
    PROPERTIES(s3, t, p) READONLY priceSkuDataPriceListTypePriceList COLUMNS (t) HEADER headerNamePriceListDataPriceListType(p, t) SHOWIF headerNamePriceListDataPriceListType(p, t) BACKGROUND backgroundSkuPriceListPriceListPricelistType(s3, p, p2, t) TODRAW s3 FORCE GRID    
    PROPERTIES(s3, t, p2) READONLY priceSkuDataPriceListTypePriceList COLUMNS (t) HEADER headerNamePriceListDataPriceListType(p2, t) SHOWIF headerNamePriceListDataPriceListType(p2, t) BACKGROUND backgroundSkuPriceListPriceListPricelistType(s3, p, p2, t) TODRAW s3 FORCE GRID    
    ORDER BY inputName3
    FILTERS isSkuPriceList(s3, p) OR isSkuPriceList(s3, p2),
            companyUserPriceList(p) == companyUserPriceList(p2)
    FILTERGROUP compareFilter
        FILTER 'Удаленные' isSkuPriceList(s3, p2) AND NOT isSkuPriceList(s3, p) 'F9' 
        FILTER 'Добавленные' isSkuPriceList(s3, p) AND NOT isSkuPriceList(s3, p2) 'F10' 
    FILTERGROUP differentPricesFilter
        FILTER 'Различные цены' priceSkuDataPriceListTypePriceList(s3, t, p) != priceSkuDataPriceListTypePriceList(s3, t, p2) 'F11' 
;

DESIGN userPriceList{
    detailContainer{
        NEW fifthContainer{
            fill = 1;
            caption = 'Сравнение';
            ADD p2.box{
                type = CONTAINERH;
                ADD PROPERTY (seriesNumberUserPriceList(p2));
                ADD PROPERTY (dateUserPriceList(p2));
                ADD PROPERTY (nameCurrencyUserPriceList(p2));
                ADD PROPERTY (nameCompanyUserPriceList(p2));
            }
            ADD s3.box;
        }
    }
}


percentPriceBPriceListTypePriceListTypeSkuStockDateTime 'Отклонение цены, %' (pa,pb,sk,st,d)  = (priceBPriceListTypeSkuStockDateTime(pb,sk,st,d) - priceBPriceListTypeSkuStockDateTime(pa,sk,st,d))*100.00/
                                                                           priceBPriceListTypeSkuStockDateTime(pa,sk,st,d) IF priceBPriceListTypeSkuStockDateTime(pa,sk,st,d)!=0;

backgroundPercentPriceBPriceListTypePriceListTypeSkuStockDateTime  = IF percentPriceBPriceListTypePriceListTypeSkuStockDateTime(pa,pb,sku,st,d) < 0 THEN RGB(255,100,100) 
                                                        ELSE IF percentPriceBPriceListTypePriceListTypeSkuStockDateTime(pa,pb,sku,st,d)> 0 THEN RGB(100,255,100);

FORM comparePriceList 'Сравнение цен '
    OBJECTS pa = PriceListType FIXED PANEL, pb = PriceListType FIXED PANEL  
    PROPERTIES SELECTOR namePriceListType(pa), namePriceListType(pb) 
    
    OBJECTS           st=Stock FIXED PANEL 
    PROPERTIES(st)    SELECTOR nameStock
    FILTERS           activeStock(st),
                      isCompanyStock(st)    
    
    OBJECTS d = DATETIME 'Дата' FIXED PANEL 
    PROPERTIES OBJVALUE (d)     
    
    OBJECTS           t=GroupType FIXED PANEL 
    PROPERTIES(t)     SELECTOR nameGroupType        
        
    TREE skuTree g = Group PARENT parentGroup
    PROPERTIES READONLY orderGroup(g), nameGroup(g)
    ORDER BY orderGroup(g), nameGroup(g)
    FILTERS groupTypeGroup(g) == t
    FILTERGROUP inactive FILTER 'Активные' activeGroup(g) 'F5' DEFAULT 

    OBJECTS sk = Sku FIXED GRID 
    PROPERTIES idBarcodeSku(sk),nameSku(sk), priceBPriceListTypeSkuStockDateTime(pa,sk,st,d), priceBPriceListTypeSkuStockDateTime(pb,sk,st,d),
               percentPriceBPriceListTypePriceListTypeSkuStockDateTime(pa,pb,sk,st,d) BACKGROUND backgroundPercentPriceBPriceListTypePriceListTypeSkuStockDateTime(pa,pb,sk,st,d)
    FILTERS priceBPriceListTypeSkuStockDateTime(pa,sk,st,d) > 0 OR priceBPriceListTypeSkuStockDateTime(pb,sk,st,d) > 0,
            isParentGroupSku(g,sk)
    FILTERGROUP compareFilter
        FILTER 'Первая цена выше' percentPriceBPriceListTypePriceListTypeSkuStockDateTime(pa,pb,sk,st,d) < 0 'F9' 
        FILTER 'Вторя цена выше' percentPriceBPriceListTypePriceListTypeSkuStockDateTime(pa,pb,sk,st,d) > 0 'F10'
    
;

DESIGN comparePriceList {
    NEW top FIRST{
        NEW cen  {
                type = CONTAINERH;
                ADD pa.box {caption = 'Первый вид цены';};
                ADD pb.box {caption = 'Второй вид цены';};
            } 
            NEW opt AFTER cen {
                type = CONTAINERH;
                ADD st.box;
                ADD d.box;
            }
    }
    
    NEW bottom AFTER top {
        fill = 1;
        type = SPLITH;
        NEW leftBottom {
            fill=2;
            ADD t.box;
            ADD skuTree.tree.box;
        }
        NEW rightBottom {
            fill = 5;
            ADD sk.box;
        }
    }

    ADD functions.box;

}

NAVIGATOR {
    priceListDashboardNavigator {
        ADD comparePriceList;
    }
}