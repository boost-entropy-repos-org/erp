MODULE PriceListLabel;

REQUIRE PriceList, Label;

NAMESPACE PriceList;

@Label.implementPriceTransactionDocument(PriceList);


FORM selectDepartmentStore 'Выбор отделов магазина для печати'
    OBJECTS p = PriceList FIXED PANEL 
    
    OBJECTS d = DepartmentStore 
    PROPERTIES READONLY id[Stock](d) SHOWIF showIDs(), name(d) 
    FILTERS in(p,d)
    FILTERGROUP inactiveStock 
        FILTER 'Активный' active(d) 'F10' DEFAULT    
;

createPriceListLabel 'Распечатать ценники'(PriceTransactionDocument priceList) = ACTION NEWSESSION {
    DIALOG selectDepartmentStore OBJECTS p = priceList, d INPUT DO {
        select(Sku sku, LabelType labelType, d) <- countPriceListDetail(sku,priceList) AND in(labelType, sku, d);   
    
        createLabelTransaction[DepartmentStore](d);  
        FOR Object t == addedObject() DO { 
            priceTransactionDocument(t) <- priceList;
        }
        apply();
    }
} TOOLBAR;
//createSelectedSkuStockSnapshotLabelTransaction 'Перепечатать ценники' = ACTION (priceList) {
//    
//    FORM selectDepartmentStore OBJECTS p = priceList DIALOG;
//    IF formResult() == FormResult.ok THEN {
//        selectSku(sku) <- TRUE IF countPriceListDetailSkuPriceList(sku,priceList);   
//    
//        createSnapshotLabelTransactionDepartmentStore(chosenObject('d'));   
//        FOR t == addedObject() DO { 
//            priceTransactionDocumentLabelTransaction(t) <- priceList;
//        }                
//    }
//    apply();
//    
//} TOOLBAR;
select 'Вкл.' = DATA LOCAL BOOLEAN (LabelType, DepartmentStore);
FORM selectDepartmentStoreLabelType 'Выбор магазина и ценника для печати'
    OBJECTS p = PriceList FIXED PANEL 
    
    OBJECTS d = DepartmentStore 
    PROPERTIES READONLY id[Stock](d) SHOWIF showIDs(), name(d) 
    FILTERS in(p,d)
    PROPERTIES change(d)
    FILTERGROUP inactiveStock 
        FILTER 'Активный' active(d) 'F10' DEFAULT    
        
    
    OBJECTS l = LabelType FIXED GRID
    PROPERTIES(l,d) select
    PROPERTIES(l) READONLY id, name, width, height, nameOrientation, fileTemplate,
                  namePriceListType, nameGroupType, printNullPrice, notPrintRetailPrice
    FILTERS in(l,d)        
;

createSelectedSkuStockSnapshotLabel 'Перепечатать ценники'(PriceTransactionDocument priceList) = ACTION {    
    DIALOG selectDepartmentStoreLabelType OBJECTS p = priceList, d INPUT DO {
        select(Sku sku) <- TRUE IF countPriceListDetail(sku,priceList);   
        FOR select(LabelType type, d) DO {
            createSnapshotLabelTransactionDepartmentStore(d, type);   
            FOR Object t == addedObject() DO { 
                priceTransactionDocument(t) <- priceList;
            }  
        } 
        apply();
    }
} TOOLBAR;

EXTEND FORM priceLists
    PROPERTIES(p)   createPriceListLabel, createSelectedSkuStockSnapshotLabel 
;
DESIGN priceLists {
    actionContainer {
        NEW priceContainer {
            caption = 'Ценники';                     
            type = CONTAINERV;
            MOVE PROPERTY (createPriceListLabel(p));
            MOVE PROPERTY (createSelectedSkuStockSnapshotLabel(p));
        }
    }
}

overFillDocument = ACTION ABSTRACT (LabelTransactionDetail, DocumentDetail); 
fillDocument 'Подбор документа'(LabelTransaction labelTransaction) = ACTION {
    DIALOG documents OBJECTS d INPUT DO {
        FOR document(DocumentDetail documentDetail) == d NEW i = LabelTransactionDetail DO {
            labelTransaction(i) <- labelTransaction;
            sku(i) <- sku(documentDetail);
            name(i) <- name(sku(i));
            createAttribute(i);        
            overFillDocument(i, documentDetail);
        }
    }
} TOOLBAR;

overFillDocument (LabelTransactionDetail i, DocumentDetail d) += ACTION {
    batch(i) <- batch(d);
}

EXTEND FORM customLabelTransaction
    PROPERTIES (l) TODRAW d fillDocument FORCE PANEL TOOLBAR 
;

