MODULE PriceListItem;

REQUIRE PriceList, Item;

NAMESPACE PriceList;

//Производитель
filterManufacturer = DATA LOCAL Manufacturer (UserPriceList);
nameFilterManufacturer 'Производитель' (UserPriceList userPriceList) = name(filterManufacturer(userPriceList)); 
   
filterManufacturer (UserPriceList userPriceList, Item sku) =
    filterManufacturer(userPriceList) == manufacturer(sku) OR sku IS Item AND NOT filterManufacturer(userPriceList);    
   
filterManufacturer (UserPriceList userPriceList, Batch batch) =
    filterManufacturer(userPriceList) == manufacturer(batch) OR batch IS Batch AND NOT filterManufacturer(userPriceList);      

EXTEND FORM userPriceList
    PROPERTIES(p) FORCE PANEL nameFilterManufacturer
    FILTERS filterManufacturer(p, s2)
    FILTERS filterManufacturer(p, b)
;

DESIGN userPriceList {
    filtersContainer {
        MOVE PROPERTY(nameFilterManufacturer(p));
    }
}
                 
currentPrice 'Текущая цена' (LedgerPriceListType type, Sku sku, Stock stock) = activePriceA(type, sku, stock, currentDateTime());
activeLedgerPriceA (type, sku, stock, dateTime) =
    GROUP LAST PriceListLedger ledger
          BY LedgerPriceListType type, sku(ledger), Stock stock,  DATETIME dateTimeIn
          ORDER fromDateTime(ledger), ledger
          WHERE price(ledger, type) AND active(ledger, type, stock) AND
                fromDateTime(ledger) <= dateTimeIn AND NOT toDateTime(ledger) < dateTimeIn COMPLEX;                                   
currentActiveLedgerPriceA (LedgerPriceListType type, Sku sku, Stock stock) = activeLedgerPriceA(type, sku, stock, currentDateTime());     

changePrice(LedgerPriceListType type, Sku sku, Stock stock) = ACTION {   //-- todo: что делать если нет детейла?
    REQUEST NUMERIC[16,4] INPUT;
    IF requestedNumeric() THEN {
        IF currentActiveLedgerPriceA(type, sku, stock) THEN {
            price(PriceListLedger ledger, type) <- requestedNumeric() WHERE ledger == currentActiveLedgerPriceA(type, sku, stock);
        }    
    } ELSE {
        DELETE PriceListLedger ledger WHERE ledger == currentActiveLedgerPriceA(type, sku, stock);
    }
};                
notePriceLIst 'Примечание' = note(priceList(PriceListDetail d)) MINCHARWIDTH 30 PREFCHARWIDTH 50;

EXTEND FORM item
    OBJECTS tc = DataPriceListType FIXED GRID
        FILTERGROUP filters
            FILTER 'С текущей ценой' currentPrice  (tc, i, st2) 'F10'
            
    PROPERTIES  READONLY name(tc), includeVAT[PriceListType](tc), nameCurrency(tc), nameRoundCondition(tc) 
    PROPERTIES(tc, i, st2)  currentPrice ON CHANGE  changePrice(tc, i, st2) 
                              
    OBJECTS pd = PriceListDetail
    PROPERTIES(pd) READONLY 
           isPosted FORCE GRID, seriesNumber, dateTime, 
           fromDate, fromTime, toDate, toTime, 
           nameCompany, nameCompanyStock, priceListTypes, stocks, notePriceLIst
    ORDER BY dateTime(pd)
           
    FILTERS sku(pd)==i
    FILTERGROUP inactivePriceList
        FILTER 'Текущие' isActive(pd) 'F11'            
        FILTER 'Активные' isActive(pd) OR (fromDateTime(pd) > currentDateTime()) 'F10' DEFAULT                      
;
DESIGN item {
    calcPriceListTypePrm {
        MOVE tc.box;        
    }
    itemDetail {
        MOVE pd.box {caption = 'Прайс';}
    }
}


