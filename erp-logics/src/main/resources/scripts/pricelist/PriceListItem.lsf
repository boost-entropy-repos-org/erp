MODULE PriceListItem;

REQUIRE PriceList, Item;

NAMESPACE PriceList;

//Производитель
filterManufacturerUserPriceList = DATA LOCAL Manufacturer (UserPriceList);
nameFilterManufacturerUserPriceList 'Производитель' (userPriceList) = nameManufacturer(filterManufacturerUserPriceList(userPriceList)); 
   
filterManufacturerUserPriceListSku (userPriceList, sku) =
    filterManufacturerUserPriceList(userPriceList) == manufacturerItem(sku) OR sku IS Item AND NOT filterManufacturerUserPriceList(userPriceList);    
   
filterManufacturerUserPriceListBatch (userPriceList, batch) =
    filterManufacturerUserPriceList(userPriceList) == manufacturerBatch(batch) OR batch IS Batch AND NOT filterManufacturerUserPriceList(userPriceList);      

EXTEND FORM userPriceList
    PROPERTIES(p) FORCE PANEL nameFilterManufacturerUserPriceList
    FILTERS filterManufacturerUserPriceListSku(p, s2)
    FILTERS filterManufacturerUserPriceListBatch(p, b)
;

DESIGN userPriceList {
    filtersContainer {
        ADD PROPERTY(nameFilterManufacturerUserPriceList(p));
    }
}
                 
currentPricePriceListTypeSkuStock 'Текущая цена' (type, sku, stock) = activePriceALedgerPriceListTypeSkuStockDateTime(type, sku, stock, currentDateTime());
activeLedgerPriceALedgerPriceListTypeSkuStockDateTime (type, sku, stock, dateTime) =
    GROUP LAST ledger
          BY type, skuPriceListLedger(ledger), stock,  dateTimeIn
          ORDER fromDateTimePriceListLedger(ledger), ledger
          WHERE pricePriceListLedgerLedgerPriceListType(ledger, type) AND activePriceListLedgerLedgerPriceListTypeStock(ledger, type, stock) AND
                fromDateTimePriceListLedger(ledger) <= dateTimeIn AND NOT toDateTimePriceListLedger(ledger) < dateTimeIn COMPLEX;                                   
currentActiveLedgerPriceALedgerPriceListTypeSkuStock (type, sku, stock) = activeLedgerPriceALedgerPriceListTypeSkuStockDateTime(type, sku, stock, currentDateTime());     

changePricePriceListTypeSkuStock = ACTION (type, sku, stock) {   //-- todo: что делать если нет детейла?
    REQUEST NUMERIC[14,2] INPUT;
    IF requestedNumeric() THEN {
        IF currentActiveLedgerPriceALedgerPriceListTypeSkuStock(type, sku, stock) THEN {
            pricePriceListLedgerLedgerPriceListType(ledger, type) <- requestedNumeric() WHERE ledger == currentActiveLedgerPriceALedgerPriceListTypeSkuStock(type, sku, stock);
        }    
    } ELSE {
        DELETE ledger WHERE ledger == currentActiveLedgerPriceALedgerPriceListTypeSkuStock(type, sku, stock);
    }
};                

EXTEND FORM item
    OBJECTS tc = DataPriceListType FIXED GRID
        FILTERGROUP filters
            FILTER 'С текущей ценой' currentPricePriceListTypeSkuStock  (tc, i, st2) 'F10'
            
    PROPERTIES  READONLY nameDataPriceListType(tc), includeVATPriceListType(tc), nameCurrencyDataPriceListType(tc), nameRoundConditionPriceListType(tc) 
    PROPERTIES(tc, i, st2)  currentPricePriceListTypeSkuStock ON CHANGE  changePricePriceListTypeSkuStock(tc, i, st2)                           
                      
;
DESIGN item {
    calcPriceListTypePrm {
        ADD tc.box;
    }
}

