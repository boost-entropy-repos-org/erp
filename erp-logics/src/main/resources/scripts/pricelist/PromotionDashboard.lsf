MODULE PromotionDashboard;

REQUIRE PriceListDashboard, PriceListOperation, Store, PriceListBefore, PriceListPromotion;

FORM promotionDashboard 'Управление акциями'
    OBJECTS dt = DATETIME PANEL
    PROPERTIES(dt) objValue = VALUE

    OBJECTS o = PriceList.Operation PANEL
    PROPERTIES(o) SELECTOR name

    OBJECTS pt = DataPriceListType PANEL
    PROPERTIES(pt) SELECTOR name[PriceListType]
    FILTERS change(pt,o)
;
DESIGN promotionDashboard {
    NEW params {
        type = CONTAINERH;
        MOVE BOX(dt) { 
            PROPERTY (objValue) { caption = 'Дата/время';}
        }
        MOVE BOX(o) {
            caption = 'Операция';
        }        
        MOVE BOX(pt) {
            caption = 'Вид цены';
        }
    }
    NEW detail {
        fill = 1;
        type = TABBED;
    }
    MOVE TOOLBARBOX;
}

seekDefaultPriceListOperation = { SEEK promotionDashboard.o = promotionPriceListOperation(); }

EXTEND FORM promotionDashboard
     EVENTS ON INIT seekDefaultPriceListOperation()
;
NAVIGATOR {
    priceListDashboardNavigator {
        ADD promotionDashboard;
    }   
} 

// ---------------------------- По организациям ----------------------- //
// c


filterPromotionStock  = DATA LOCAL NESTED DepartmentStore ();
nameFilterPromotionStock 'Склад' = name[Stock](filterPromotionStock()) MINCHARWIDTH 15 PREFCHARWIDTH 20;                                                     
notFilterPromotionStock = TRUE AND NOT filterPromotionStock();

//overPriceListDetailAPriceListTypeSkuDateTimeOperation  (type, sku, dateTime, operation) = IF filterPromotionStock() 
//    THEN activePriceListDetailAPriceListTypeSkuStockDateTimeOperation(type, sku, filterPromotionStock(), dateTime, operation)
//    ELSE activePriceListDetailAPriceListTypeSkuDateTimeOperation (type, sku, dateTime, operation);
//
//notePriceListTypeSkuDateTimeOperation 'Примечание' (type, sku, dateTime, operation) = notePriceList(priceListPriceListDetail(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation)));                                            
//stocksPriceListTypeSkuDateTimeOperation 'Склады' (type, sku, dateTime, operation) = stocksPriceList(priceListPriceListDetail(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation)));                                            
//fromDatePriceListTypeSkuDateTimeOperation 'Дата с' (type, sku, dateTime, operation) = fromDatePriceListDetail(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation));                                            
//toDatePriceListTypeSkuDateTimeOperation 'Дата по' (type, sku, dateTime, operation) = toDatePriceListDetail(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation));                                            
//priceBeforePriceListTypeSkuDateTimeOperation 'Цена (до)' (type, sku, dateTime, operation) = priceBeforePriceListDetail(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation));
//activePricePriceListTypeSkuDateTimeOperation 'Цена' (type, sku, dateTime, operation) = pricePriceListDetailDataPriceListType(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation),type);
//descriptionPriceListTypeSkuDateTimeOperation 'Описание' (type, sku, dateTime, operation) = descriptionPriceListDetail(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation));                                            
//editActiveLedgerALedgerPriceListTypeSkuDateTimeOperation'Редактировать' (type, sku, dateTime, operation) = editPriceListDetail(overPriceListDetailAPriceListTypeSkuDateTimeOperation(type, sku, dateTime, operation)) IMAGE 'edit.png';     

balanceB 'Остаток (до акции)' (PriceListDetail detail) = balanceB(sku(detail), filterPromotionStock(), fromDateTime(detail));
note 'Примечание' = note(priceList(PriceListDetail d));

EXTEND FORM promotionDashboard   
    PROPERTIES nameFilterPromotionStock()

    TREE cskg cskg = SkuGroup PARENT parent
    PROPERTIES READONLY order(cskg), cskgName = name(cskg)
    ORDER order(cskg), cskgName
    FILTERGROUP inactive FILTER 'Активные' active(cskg) 'F5' DEFAULT

    OBJECTS csk = PriceListDetail
    PROPERTIES(csk) READONLY nameSku, idBarcodeSku, fromDateTime, toDateTime, namePromotion
    ORDER nameSku(csk), fromDateTime(csk)
    FILTERS isParent(cskg, sku(csk)),
            fromDate(csk) <= toDate(dt) AND NOT (toDate(csk) < toDate(dt)),
            in(csk,pt) AND price(csk,pt),
            operation(csk) == o,
            in(priceList(csk),filterPromotionStock()) OR (csk IS PriceListDetail AND NOT filterPromotionStock())
            
    PROPERTIES READONLY  balanceB(csk) SHOWIF filterPromotionStock(), 
                         priceBefore(csk), 
                         price(csk,pt), 
                         fromDate(csk), 
                         toDate(csk)
    PROPERTIES READONLY  stocks(csk), priceListTypes(csk), note(csk), 
                         description(csk)
    PROPERTIES NEWSESSION EDIT(csk)           
            
;

DESIGN promotionDashboard {
    detail {
        NEW c {
            caption = 'Акционные товары';
            type = SPLITV;
            NEW cSkus {
                fill = 2;
                type = SPLITH;
                NEW cSkuFilters {
                    fill = 1;
                    MOVE BOX(TREE cskg) {
                        caption = 'Товарные группы';
                    }
                }
                NEW box {
                    fill = 3;
                    NEW fiter {
                        caption = 'Фильтр';
                        MOVE PROPERTY (nameFilterPromotionStock());
                    }
                    MOVE BOX(csk) {caption = 'Товары';}                                                                    
                }
            }
        }
    }
}
//@extendFormFilterStockAccess(cst, promotionDashboard, company){
//    EXTEND FORM promotionDashboard FILTERS accessCompanyEmployeeStock(currentUser(), cst);
//};

// ----------------------------------- Список прайсов ---------------------------- //
// p

addUserPriceList 'Добавить'(PriceListType type, DATETIME dateTime, PriceList.Operation operation) = {
	NEWSESSION {
	    NEW p = UserPriceList {
	        fromDate(p) <- toDate(dateTime);
	        fromTime(p) <- toTime(dateTime);
	        operation(p) <- operation;
	        in[UserPriceList,DataPriceListType](p, type) <- TRUE;
	        show[PriceList,PriceListType](p, type) <- TRUE;
	        overAdd(p); 
	        SHOW userPriceList OBJECTS p = p DOCKED NOCANCEL;
	    }
	}
} TOOLBAR IMAGE 'add.png' CHANGEKEY 'INSERT';

EXTEND FORM promotionDashboard
    OBJECTS p = UserPriceList
    PROPERTIES(p) READONLY BACKGROUND background(p) isPosted, namePromotion[PriceList], number, series, date, time,
                           fromDate, fromTime, toDate, toTime,
                           nameCurrency, nameCompany, priceListTypes, stocks,
                           note
    PROPERTIES(p) NEWSESSION EDIT, DELETE
    ORDER fromDate(p), fromTime(p)
    FILTERS in(p, pt),
            operation(p) ==o
    PROPERTIES(pt, dt, o) addUserPriceList TODRAW p       
    FILTERGROUP inactivePriceList
        FILTER 'Текущие' isActive(p,dt) 'F11'            
        FILTER 'Активные' isActive(p,dt) OR (fromDateTime[PriceList](p) > dt) 'F10' DEFAULT   
        
    OBJECTS t = DataPriceListType GRID
    FILTERS t == pt
    
    OBJECTS d = PriceListDetail
    PROPERTIES(d) READONLY BACKGROUND background(d) index, idBarcodeSku, nameSku,
                           shortNameUOMSku, nameBatch, nameCompany
    PROPERTIES(d) READONLY AFTER nameSku(d) originalIdBarcodeSku SHOWIF showOriginalIdBarcodeSku[PriceList](p), originalNameSku SHOWIF showOriginalNameSku[PriceList](p)
    
    ORDER index(d)
    
    OBJECTS ts = Stock
    PROPERTIES(ts) READONLY name
    PROPERTIES(p, ts) READONLY in

    PROPERTIES(d, t) READONLY BACKGROUND background(d) price COLUMNS (t) HEADER name(t)
    FILTERS priceList(d) == p,
            in(p, ts),
            isCompany(ts)
;
DESIGN promotionDashboard {
    detail {
        NEW p {
            caption = 'Акционные прайсы';
            type = SPLITV;
            MOVE BOX(p);
            NEW detailContainer{
                fill = 1;
                type = TABBED;
                NEW firstContainer{
                    caption = 'Спецификация';
                    type = SPLITH;
                    MOVE BOX(d) {
                        fill = 4;
                    }
                    MOVE BOX(ts);
                }
                NEW printTab {
                    caption = 'Печатные формы';
                    NEW printContainer {
                        caption = 'Печать';                       
                    }
                }
                NEW actionContainer {
                    caption = 'Действия';
                    type = CONTAINERH;
                    NEW createdContainer {
                        caption = 'Создание на основе';
                    }
                }
            }
        }
    }
}
//@extendFormFilterStockAccess(ts, promotionDashboard, company){
//    EXTEND FORM promotionDashboard FILTERS accessCompanyEmployeeStock(currentUser(), ts);
//};