MODULE PriceRound;

REQUIRE System, Utils, DefaultData, Stock, Sku;


//--  По группам
CLASS RoundCondition 'Условие округления';
TABLE roundCondition (RoundCondition);

name 'Наименование' = DATA VARISTRING[50](RoundCondition);

currency = DATA Currency(RoundCondition) NONULL DELETE;
nameCurrency 'Валюта' (RoundCondition roundCondition)= name(currency(roundCondition));

denominatorPrice 'Делитель' =  DATA NUMERIC[16,4](RoundCondition);
minPrice 'Нижний порог' =  DATA NUMERIC[16,4](RoundCondition);
priceRound 'Количество знаков после запятой' (roundCondition)=  DATA INTEGER (RoundCondition);

defaultRoundCondition = DATA RoundCondition(Currency);
defaultRound 'Округление' (Currency currency) = priceRound(defaultRoundCondition(currency)) MATERIALIZED;
isDefault 'По умолчанию' (RoundCondition roundCondition, Currency currency) = defaultRoundCondition(currency) == roundCondition;
defaultRound 'Округление' () = defaultRound(defaultCurrency());

//priceRound 'Округление по умолчанию' (Currency currency) = priceRound(defaultRoundCondition(currency)) MATERIALIZED;

CLASS PriceInterval 'Диапазон цен';
TABLE priceInterval (PriceInterval);

roundCondition = DATA RoundCondition(PriceInterval) NONULL DELETE;

from 'от' = DATA NUMERIC[16,4](PriceInterval) IN base;
to 'до' = DATA NUMERIC[16,4](PriceInterval) IN base;
modifier 'Округлённая цена интервала' = DATA NUMERIC[16,4](PriceInterval) IN base;

integer 'Целое' (price, RoundCondition roundCondition) = floor(price / denominatorPrice(roundCondition));

fraction 'Дробное' (price, RoundCondition roundCondition) = price -
    integer(price, roundCondition) * denominatorPrice(roundCondition);

modifierPriceInterval (price, roundCondition) =
    GROUP LAST modifier(PriceInterval interval)
          BY NUMERIC[22,10] price AS NUMERIC[22,10], roundCondition(interval)
          ORDER interval
          WHERE fraction(price, roundCondition(interval)) >= from(interval) AND
                fraction(price, roundCondition(interval)) < to(interval);


round (NUMERIC[16,4] price, RoundCondition roundCondition) = NUMERIC[16,4](
    IF (price AS NUMERIC[22,10]) > minPrice(roundCondition) AND modifierPriceInterval(price, roundCondition)
        THEN
            integer(price, roundCondition) * denominatorPrice(roundCondition) +
            modifierPriceInterval(price, roundCondition)
        ELSE
            Utils.round(price AS NUMERIC[22,10], priceRound(roundCondition))
    ) COMPLEX; // для COMPLEX

round(price, Currency currency) = Utils.round(price, defaultRound(currency));

FORM priceIntervals 'Округления цен'

    OBJECTS c=Currency PANEL
    PROPERTIES (c)  SELECTOR name

    OBJECTS rc=RoundCondition
    PROPERTIES(rc) name, denominatorPrice, minPrice, priceRound, NEW, DELETE 
    PROPERTIES(rc, c) isDefault
    
    OBJECTS p=PriceInterval
    PROPERTIES(p) from, to, modifier, NEW, DELETE 

    OBJECTS nu=NUMERIC[16,4] PANEL
    PROPERTIES val = VALUE(nu)
    PROPERTIES(nu, rc) READONLY round

    FILTERS currency(rc) == c,
            roundCondition(p) == rc
;

DESIGN priceIntervals {
    MOVE BOX(c) {
        PROPERTY (name(c)) {
            charWidth = 30;
            panelCaptionAbove = TRUE;
            font = 'bold 24';
        }
    }

    NEW specification {
        fill = 1;

        MOVE BOX(rc);
        MOVE BOX(p);
        MOVE BOX(nu) {
            caption = 'Тестовая форма';
            type = CONTAINERH;
            MOVE PROPERTY (val) {
                caption = 'Введите число для примера';
                panelCaptionAbove = TRUE;
                font = 'bold 36';
            }
            MOVE PROPERTY (round(nu, rc)) {
                caption = 'Результат';
                panelCaptionAbove = TRUE;
                font = 'bold 36';
            }
        }
    }
    MOVE TOOLBARBOX;
}

FORM dialogPriceIntervals 'Округления цен'

    OBJECTS rc=RoundCondition
    PROPERTIES(rc) READONLY name, denominatorPrice, minPrice, priceRound, nameCurrency
    OBJECTS p=PriceInterval
    PROPERTIES(p) READONLY from, to, modifier

    FILTERS roundCondition(p) == rc

    LIST RoundCondition OBJECT rc
;
DESIGN dialogPriceIntervals {
    BOX {
        size = (1024, 768);
    }
}