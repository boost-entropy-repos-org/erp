MODULE PriceListManage;

REQUIRE PriceList;

FORM priceListManage 'Управление ценами'
    OBJECTS dt = DATETIME FIXED PANEL
    PROPERTIES(dt) objValue = OBJVALUE

    OBJECTS pt = DataPriceListType FIXED PANEL
    PROPERTIES(pt) SELECTOR namePriceListType
;

DESIGN priceListManage FROM DEFAULT {
    main {
        type = CONTAINERV;
        NEW params {
            type = CONTAINERH;
            ADD dt.box;
            ADD pt.box {
                caption = 'Вид цены';
            }
        }
        NEW detail {
            type = TABBED;
        }
        ADD functions.box;
    }
}

NAVIGATOR {
    priceListDocuments {
        ADD priceListManage FIRST;
    }
}

inSku 'Отм.' = DATA SESSION BOOLEAN (Sku);

TABLE skuCustomUser(Sku, CustomUser);
inSkuCustomUser = DATA BOOLEAN (Sku, CustomUser);

// ---------------------------- По организациям ----------------------- //
// c

EXTEND FORM priceListManage
    OBJECTS c = LegalEntity FIXED PANEL
    PROPERTIES(c) nameLegalEntity SELECTOR

    TREE cskg cskg = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY cskgName = nameSkuGroup(cskg)
    ORDER BY cskgName

    OBJECTS csk = Sku
    PROPERTIES(csk)          inSku
    PROPERTIES(csk) READONLY nameSku, idBarcodeSku
    ORDER BY nameSku(csk)
    FILTERS isParentSkuGroupSku(cskg, csk)

    PROPERTIES READONLY cPrice = activePriceLedgerPriceListTypeSkuCompanyDateTime(pt, csk, c, dt), // последний прайс, в котором есть цена
                        activeDescriptionLedgerPriceListTypeSkuCompanyDateTime(pt, csk, c, dt)
    // на больших объемах возможно будет тормозить
    FILTERS countStockPriceListTypeSkuCompanyDateTime(pt, csk, c, dt) // фильтруем все товары, которые входят в ассортимент хотя бы одного склада

    OBJECTS cst = Stock
    PROPERTIES(cst)          READONLY nameStock
    PROPERTIES(csk, cst, dt) READONLY balanceASkuStockDateTime
    PROPERTIES               READONLY cPriceStock = priceLedgerPriceListTypeSkuStockCompanyDateTime(pt, csk, cst, c, dt)
    ORDER BY nameStock(cst)
    FILTERS priceLedgerPriceListTypeSkuStockCompanyDateTime(pt, csk, cst, c, dt)

    OBJECTS cpl = PriceListLedger
    PROPERTIES(cpl) READONLY isPostedPriceListLedger, fromDateTimePriceListLedger, toDateTimePriceListLedger, descriptionPriceListLedger, stocksPriceListLedger
    PROPERTIES      READONLY pricePriceListLedgerLedgerPriceListType(cpl, pt)
    FILTERS inPriceListLedgerLedgerPriceListType(cpl, pt),
            skuPriceListLedger(cpl) == csk,
            companyPriceListLedger(cpl) == c
;

EXTEND DESIGN priceListManage {
    detail {
        NEW c {
            caption = 'По организациям';
            type = SPLITV;
            NEW c.skus {
                type = SPLITH;
                fillVertical = 2.0;
                NEW c.skuFilters {
                    type = CONTAINERV;
                    ADD c.box;
                    ADD cskg.tree.box {
                        caption = 'Товарные группы';
                    }
                }
                ADD csk.box {
                    caption = 'Товары';
                    fillHorizontal = 2.0;
                }
            }
            NEW c.detail {
                type = TABBED;
                NEW c.stocks {
                    caption = 'Склады';
                    type = CONTAINERH;
                    ADD cst.box {
                        caption = 'Склады';
                    }
                }
                ADD cpl.box {
                    caption = 'История';
                }
            }
        }
    }
}

// Создание прайс-листов

fillCompanyPriceList = ACTION (userPriceList, dateTime, dataPriceListType, company) {
    SET fromDateUserPriceList(userPriceList) <- toDate(dateTime);
    SET fromTimeUserPriceList(userPriceList) <- toTime(subtractDateTimeSeconds(dateTime,1));
    SET companyUserPriceList(userPriceList) <- company;
    SET currencyUserPriceList(userPriceList) <- currencyDataPriceListType(dataPriceListType);
    SET inUserPriceListDataPriceListType(userPriceList, dataPriceListType) <- TRUE;
    SET showUserPriceListPriceListType(userPriceList, dataPriceListType) <- TRUE;
    FOR inSkuCustomUser(sku, currentUser()) ADDOBJ d = UserPriceListDetail DO {
        SET skuUserPriceListDetail(d) <- sku;
        SET userPriceListUserPriceListDetail(d) <- userPriceList;
    }

    // Выставляем все склады, которые есть хотя бы один раз для товаров
    FOR [GROUP SUM 1 IF inSkuCustomUser(sku, currentUser()) AND priceLedgerPriceListTypeSkuStockCompanyDateTime(t, sku, st, c, d) BY t, st, c, d] (dataPriceListType, stock, company, dateTime) DO {
        dataInUserPriceListStock(userPriceList, stock) <- TRUE;
    }
}

createCompanyPriceList 'Создать прайс' = ACTION (dateTime, dataPriceListType, company) NEWSESSION {
    FOR ADDOBJ u = UserPriceList DO {
        fillCompanyPriceList(u, dateTime, dataPriceListType, company);
        FORM userPriceList OBJECTS p = u MANAGESESSION DOCKEDMODAL;
    }
}

createNewCompanyPriceList 'Создать прайс' = ACTION (dateTime, dataPriceListType, company) {
    inSkuCustomUser(s, u) <- inSku(s) WHERE u == currentUser();
    apply();
    createCompanyPriceList(dateTime, dataPriceListType, company);
} TOOLBAR;

EXTEND FORM priceListManage
    PROPERTIES createNewCompanyPriceList(dt, pt, c) TODRAW csk FORCE PANEL
;

// ---------------------------- По складам ---------------------------- //
// s

EXTEND FORM priceListManage
    OBJECTS s = Stock FIXED PANEL
    PROPERTIES(s) nameStock SELECTOR
    FILTERS isCompanyStock(s)

    TREE sskg sskg = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY sskgName = nameSkuGroup(sskg)
    ORDER BY sskgName

    OBJECTS ssk = Sku
    PROPERTIES(ssk)          inSku
    PROPERTIES(ssk) READONLY nameSku, idBarcodeSku
    PROPERTIES      READONLY balanceASkuStockDateTime(ssk, s, dt)
    ORDER BY nameSku(ssk)
    FILTERS isParentSkuGroupSku(sskg, ssk)

    PROPERTIES(pt, ssk, s, dt) READONLY sPrice = pricePriceListTypeSkuStockDateTime,
                                        nameCompanyLedgerPriceListTypeSkuStockDateTime,
                                        descriptionLedgerPriceListTypeSkuStockDateTime
    FILTERS pricePriceListTypeSkuStockDateTime(pt, ssk, s, dt)

    OBJECTS sst = Stock
    PROPERTIES(sst)          READONLY nameStock
    PROPERTIES(ssk, sst, dt) READONLY balanceASkuStockDateTime
    PROPERTIES(pt, ssk, sst, dt) READONLY sPriceStock = pricePriceListTypeSkuStockDateTime,
                                          nameCompanyLedgerPriceListTypeSkuStockDateTime,
                                          descriptionLedgerPriceListTypeSkuStockDateTime

    ORDER BY nameStock(cst)
    FILTERS pricePriceListTypeSkuStockDateTime(pt, ssk, sst, dt)

    OBJECTS spl = PriceListLedger
    PROPERTIES(spl) READONLY isPostedPriceListLedger, fromDateTimePriceListLedger, toDateTimePriceListLedger, descriptionPriceListLedger, stocksPriceListLedger
    PROPERTIES      READONLY pricePriceListLedgerLedgerPriceListType(spl, pt)
    FILTERS inPriceListLedgerLedgerPriceListType(spl, pt),
            skuPriceListLedger(spl) == ssk,
            inPriceListLedgerStock(spl, s)
;

EXTEND DESIGN priceListManage {
    detail {
        NEW s {
            caption = 'По складам';
            type = SPLITV;
            NEW s.skus {
                type = SPLITH;
                fillVertical = 2.0;
                NEW s.skuFilters {
                    type = CONTAINERV;
                    ADD s.box;
                    ADD sskg.tree.box {
                        caption = 'Товарные группы';
                    }
                }
                ADD ssk.box {
                    caption = 'Товары';
                    fillHorizontal = 2.0;
                }
            }
            NEW s.detail {
                type = TABBED;
                NEW s.stocks {
                    caption = 'Склады';
                    type = CONTAINERH;
                    ADD sst.box {
                        caption = 'Склады';
                    }
                }
                ADD spl.box {
                    caption = 'История';
                }
            }
        }
    }
}

createCompanyStockPriceList = ACTION (company, dateTime, dataPriceListType, stock) NEWSESSION {
    FOR ADDOBJ u = UserPriceList DO {
        SET fromDateUserPriceList(u) <- toDate(dateTime);
        SET fromTimeUserPriceList(u) <- toTime(subtractDateTimeSeconds(dateTime,1));
        SET companyUserPriceList(u) <- company;
        SET currencyUserPriceList(u) <- currencyDataPriceListType(dataPriceListType);
        SET inUserPriceListDataPriceListType(u, dataPriceListType) <- TRUE;
        SET showUserPriceListPriceListType(u, dataPriceListType) <- TRUE;
        SET dataInUserPriceListStock(u, stock) <- TRUE;
        FOR inSkuCustomUser(sku, currentUser()) AND companyLedgerPriceListTypeSkuStockDateTime(dataPriceListType, sku, stock, dateTime) == company
            ADDOBJ d = UserPriceListDetail DO {
            SET skuUserPriceListDetail(d) <- sku;
            SET userPriceListUserPriceListDetail(d) <- u;
        }
        FORM userPriceList OBJECTS p = u MANAGESESSION DOCKEDMODAL;
    }
}
// Создание прайс-листов
createStockPriceList 'Создать прайсы' = ACTION (dateTime, dataPriceListType, stock) {
    FOR [GROUP SUM 1 IF inSkuCustomUser(s, currentUser()) BY companyLedgerPriceListTypeSkuStockDateTime(t, s, st, d), t, st, d] (company, dataPriceListType, stock, dateTime) DO {
        createCompanyStockPriceList(company, dateTime, dataPriceListType, stock);
    }
} TOOLBAR;

createNewStockPriceList 'Создать прайс' = ACTION (dateTime, dataPriceListType, company) {
    inSkuCustomUser(s, u) <- inSku(s) WHERE u == currentUser();
    apply();
    createStockPriceList(dateTime, dataPriceListType, company);
} TOOLBAR;

EXTEND FORM priceListManage
    PROPERTIES createNewStockPriceList(dt, pt, s) TODRAW ssk FORCE PANEL
;

// ----------------------------------- Список прайсов ---------------------------- //
// p

EXTEND FORM priceListManage
    PROPERTIES(c) pNameCompany = nameLegalEntity SELECTOR

    OBJECTS p = UserPriceList
    PROPERTIES(p) READONLY isPostedUserPriceList FORCE GRID, numberObject, seriesObject, dateUserPriceList, timeUserPriceList,
                           fromDateUserPriceList, fromTimeUserPriceList, toDateUserPriceList, toTimeUserPriceList,
                           nameCurrencyUserPriceList, nameCompanyUserPriceList, priceListTypesPriceList, stocksPriceList,
                           noteUserPriceList, objectClassName
    PROPERTIES(p) EDITFORM, DELETE, updatePriceList FORCE PANEL TOOLBAR
    ORDER BY fromDateUserPriceList, fromTimeUserPriceList
    FILTERS inPriceListDataPriceListType(p, pt),
            companyUserPriceList(p) == c
;
EXTEND DESIGN priceListManage {
    detail {
        NEW p {
            caption = 'Прайсы';
            type = CONTAINERV;

            ADD PROPERTY(pNameCompany);
            ADD p.box;
        }
    }
}
