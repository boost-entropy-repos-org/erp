MODULE PriceListSaleLedger;

REQUIRE PriceList, SaleLedgerWeek;

EXTEND FORM userPriceList
    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)

    OBJECTS w = INTEGER FIXED GRID
    FILTERS quantitySkuSoldWeekDateFromTo(w, dFrom, dTo)

// todo : при добавлении этого свойства выскакивает внутрення ошибка сервера при открытии формы UserPriceList
//    PROPERTIES quantitySoldSkuStockWeekDateFromTo(s2, ts2, w, dFrom, dTo)  COLUMNS (w) HEADER toString4 (w)
;

DESIGN userPriceList{
    topThirdContainer{
        MOVE dates.box {
            type = CONTAINERH;
        }
    }
}
intervalPriceList 'Интервал' (p)= subtractInteger(toDatePriceList(p), fromDatePriceList(p));
intervalPriceListDetail 'Интервал' (d)= subtractInteger(toDatePriceListDetail(d), fromDatePriceListDetail(d));

currentBalancePriceListDetailStock 'Текущий остаток (к-во)' (d, stock) = currentBalanceSkuStock(skuPriceListDetail(d), stock);

//-- Перед акцией
quantitySoldBeforePromotionPriceListDetailStock 'Продано перед акцией (кол-во)' (d, stock) = quantitySoldSkuStockDateFromTo(skuPriceListDetail(d), stock, (subtractDate(fromDatePriceListDetail(d),intervalPriceListDetail(d)+1)), subtractDate(fromDatePriceListDetail(d),1));
sumSoldBeforePromotionPriceListDetailStock 'Продано перед акцией (сумма)' (d, stock) = sumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, (subtractDate(fromDatePriceListDetail(d),intervalPriceListDetail(d)+1)), subtractDate(fromDatePriceListDetail(d),1));
markupSumSoldBeforePromotionPriceListDetailStock 'Надбавка перед акцией (сумма)' (d, stock) = markupSumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, (subtractDate(fromDatePriceListDetail(d),intervalPriceListDetail(d)+1)), subtractDate(fromDatePriceListDetail(d),1));
costSumSoldBeforePromotionPriceListDetailStock 'Себестоимость перед акцией (сумма)' (d, stock) = costSumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, (subtractDate(fromDatePriceListDetail(d),intervalPriceListDetail(d)+1)), subtractDate(fromDatePriceListDetail(d),1));
markupPercSoldBeforePromotionPriceListDetailStock 'Надбавка, %' (d, stock) = markupSumSoldBeforePromotionPriceListDetailStock(d, stock) * 100.00 / costSumSoldBeforePromotionPriceListDetailStock(d, stock);
//-- За время акции
quantitySoldPromotionPriceListDetailStock 'Продано акция (кол-во)' (d, stock) = quantitySoldSkuStockDateFromTo(skuPriceListDetail(d), stock, fromDatePriceListDetail(d), toDatePriceListDetail(d));
sumSoldPromotionPriceListDetailStock 'Продано акция (сумма)' (d, stock) = sumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, fromDatePriceListDetail(d), toDatePriceListDetail(d));
markupSumSoldPromotionPriceListDetailStock 'Надбавка акция (сумма)' (d, stock) = markupSumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, fromDatePriceListDetail(d), toDatePriceListDetail(d));
costSumSoldPromotionPriceListDetailStock 'Себестоимость акция (сумма)' (d, stock) = costSumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, fromDatePriceListDetail(d), toDatePriceListDetail(d));
markupPercSoldPromotionPriceListDetailStock 'Надбавка, %' (d, stock) = markupSumSoldPromotionPriceListDetailStock(d, stock) * 100.00 / costSumSoldPromotionPriceListDetailStock(d, stock);

//-- После акции
quantitySoldAfterPromotionPriceListDetailStock 'Продано после акции (кол-во)' (d, stock) = quantitySoldSkuStockDateFromTo(skuPriceListDetail(d), stock, sumDate(toDatePriceListDetail(d),1), (sumDate(toDatePriceListDetail(d),intervalPriceListDetail(d)+1)));
sumSoldAfterPromotionPriceListDetailStock 'Продано после акции (сумма)' (d, stock) = sumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, sumDate(toDatePriceListDetail(d),1), (sumDate(toDatePriceListDetail(d),intervalPriceListDetail(d)+1)));
markupSumSoldAfterPromotionPriceListDetailStock 'Надбавка после акции (сумма)' (d, stock) = markupSumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, sumDate(toDatePriceListDetail(d),1), (sumDate(toDatePriceListDetail(d),intervalPriceListDetail(d)+1)));
costSumSoldAfterPromotionPriceListDetailStock 'Себестоимость после акции (сумма)' (d, stock) = costSumSoldSkuStockDateFromTo(skuPriceListDetail(d), stock, sumDate(toDatePriceListDetail(d),1), (sumDate(toDatePriceListDetail(d),intervalPriceListDetail(d)+1)));
markupPercSoldAfterPromotionPriceListDetailStock 'Надбавка, %' (d, stock) = markupSumSoldAfterPromotionPriceListDetailStock(d, stock) * 100.00 / costSumSoldAfterPromotionPriceListDetailStock(d, stock);


hintBeforePromotionBackground 'Зеленого чая'  = RGB(204,255,204) IF TRUE;  
hintPromotionBackground 'Небесный'  = RGB(127,199,255) IF TRUE;                                                                                     
hintAfterPromotionBackground 'Лимонный' = RGB(255, 250, 205) IF TRUE;    
                                                                               
//---------------- По всем складам ------------------//
currentBalancePriceListDetail 'Текущий остаток (к-во)' (d) = GROUP SUM currentBalancePriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
//-- Перед акцией
quantitySoldBeforePromotionPriceListDetail 'Продано перед акцией (кол-во)' (d) = GROUP SUM quantitySoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
sumSoldBeforePromotionPriceListDetail 'Продано перед акцией (сумма)' (d) = GROUP SUM sumSoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
markupSumSoldBeforePromotionPriceListDetail 'Надбавка перед акцией (сумма)' (d) = GROUP SUM markupSumSoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
costSumSoldBeforePromotionPriceListDetail 'Себестоимость перед акцией (сумма)' (d) = GROUP SUM costSumSoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
markupPercSoldBeforePromotionPriceListDetail 'Надбавка, %' (d) = markupSumSoldBeforePromotionPriceListDetail(d) * 100.00 / costSumSoldBeforePromotionPriceListDetail(d);
//-- За время акции
quantitySoldPromotionPriceListDetail 'Продано акция (кол-во)' (d) = GROUP SUM quantitySoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
sumSoldPromotionPriceListDetail 'Продано акция (сумма)' (d) = GROUP SUM sumSoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
markupSumSoldPromotionPriceListDetail 'Надбавка акция (сумма)' (d) = GROUP SUM markupSumSoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
costSumSoldPromotionPriceListDetail 'Себестоимость акция (сумма)' (d) = GROUP SUM costSumSoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
markupPercSoldPromotionPriceListDetail 'Надбавка, %' (d) = markupSumSoldPromotionPriceListDetail(d) * 100.00 / costSumSoldPromotionPriceListDetail(d);

//-- После акции
quantitySoldAfterPromotionPriceListDetail 'Продано после акции (кол-во)' (d) = GROUP SUM quantitySoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
sumSoldAfterPromotionPriceListDetail 'Продано после акции (сумма)' (d) = GROUP SUM sumSoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
markupSumSoldAfterPromotionPriceListDetail 'Надбавка после акции (сумма)' (d) = GROUP SUM markupSumSoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
costSumSoldAfterPromotionPriceListDetail 'Себестоимость после акции (сумма)' (d) = GROUP SUM costSumSoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
markupPercSoldAfterPromotionPriceListDetail 'Надбавка, %' (d) = markupSumSoldAfterPromotionPriceListDetail(d) * 100.00 / costSumSoldAfterPromotionPriceListDetail(d);                                                                               

//------------------- Таблица ------------//
TABLE priceListDetailStock (PriceListDetail, Stock);
dcurrentBalancePriceListDetailStock 'Текущий остаток (к-во)' (d, stock) = DATA NUMERIC[16,3] (PriceListDetail,Stock);

//-- Перед акцией
dquantitySoldBeforePromotionPriceListDetailStock 'Продано перед акцией (кол-во)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dsumSoldBeforePromotionPriceListDetailStock 'Продано перед акцией (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dmarkupSumSoldBeforePromotionPriceListDetailStock 'Надбавка перед акцией (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dcostSumSoldBeforePromotionPriceListDetailStock 'Себестоимость перед акцией (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dmarkupPercSoldBeforePromotionPriceListDetailStock 'Надбавка, %' (d, stock) = dmarkupSumSoldBeforePromotionPriceListDetailStock(d, stock) * 100.00 / dcostSumSoldBeforePromotionPriceListDetailStock(d, stock);
//-- За время акции
dquantitySoldPromotionPriceListDetailStock 'Продано акция (кол-во)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dsumSoldPromotionPriceListDetailStock 'Продано акция (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dmarkupSumSoldPromotionPriceListDetailStock 'Надбавка акция (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dcostSumSoldPromotionPriceListDetailStock 'Себестоимость акция (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dmarkupPercSoldPromotionPriceListDetailStock 'Надбавка, %' (d, stock) = dmarkupSumSoldPromotionPriceListDetailStock(d, stock) * 100.00 / dcostSumSoldPromotionPriceListDetailStock(d, stock);

//-- После акции
dquantitySoldAfterPromotionPriceListDetailStock 'Продано после акции (кол-во)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dsumSoldAfterPromotionPriceListDetailStock 'Продано после акции (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dmarkupSumSoldAfterPromotionPriceListDetailStock 'Надбавка после акции (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dcostSumSoldAfterPromotionPriceListDetailStock 'Себестоимость после акции (сумма)' (d, stock) = DATA NUMERIC[16,2] (PriceListDetail,Stock);
dmarkupPercSoldAfterPromotionPriceListDetailStock 'Надбавка, %' (d, stock) = dmarkupSumSoldAfterPromotionPriceListDetailStock(d,stock) * 100.00 / dcostSumSoldAfterPromotionPriceListDetailStock(d,stock);                                                                                

//---------------- По всем складам ------------------//
dcurrentBalancePriceListDetail 'Текущий остаток (к-во)' (d) = GROUP SUM dcurrentBalancePriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
//-- Перед акцией
dquantitySoldBeforePromotionPriceListDetail 'Продано перед акцией (кол-во)' (d) = GROUP SUM dquantitySoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dsumSoldBeforePromotionPriceListDetail 'Продано перед акцией (сумма)' (d) = GROUP SUM dsumSoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dmarkupSumSoldBeforePromotionPriceListDetail 'Надбавка перед акцией (сумма)' (d) = GROUP SUM dmarkupSumSoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dcostSumSoldBeforePromotionPriceListDetail 'Себестоимость перед акцией (сумма)' (d) = GROUP SUM dcostSumSoldBeforePromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dmarkupPercSoldBeforePromotionPriceListDetail 'Надбавка, %' (d) = dmarkupSumSoldBeforePromotionPriceListDetail(d) * 100.00 / dcostSumSoldBeforePromotionPriceListDetail(d);
//-- За время акции
dquantitySoldPromotionPriceListDetail 'Продано акция (кол-во)' (d) = GROUP SUM dquantitySoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dsumSoldPromotionPriceListDetail 'Продано акция (сумма)' (d) = GROUP SUM dsumSoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dmarkupSumSoldPromotionPriceListDetail 'Надбавка акция (сумма)' (d) = GROUP SUM dmarkupSumSoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dcostSumSoldPromotionPriceListDetail 'Себестоимость акция (сумма)' (d) = GROUP SUM dcostSumSoldPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dmarkupPercSoldPromotionPriceListDetail 'Надбавка, %' (d) = dmarkupSumSoldPromotionPriceListDetail(d) * 100.00 / dcostSumSoldPromotionPriceListDetail(d);

//-- После акции
dquantitySoldAfterPromotionPriceListDetail 'Продано после акции (кол-во)' (d) = GROUP SUM dquantitySoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dsumSoldAfterPromotionPriceListDetail 'Продано после акции (сумма)' (d) = GROUP SUM dsumSoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dmarkupSumSoldAfterPromotionPriceListDetail 'Надбавка после акции (сумма)' (d) = GROUP SUM dmarkupSumSoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dcostSumSoldAfterPromotionPriceListDetail 'Себестоимость после акции (сумма)' (d) = GROUP SUM dcostSumSoldAfterPromotionPriceListDetailStock(d, stock) IF inPriceListStock(priceListPriceListDetail(d), stock) BY d;
dmarkupPercSoldAfterPromotionPriceListDetail 'Надбавка, %' (d) = dmarkupSumSoldAfterPromotionPriceListDetail(d) * 100.00 / dcostSumSoldAfterPromotionPriceListDetail(d);                                                                        

fillDataPriceListDetail= ABSTRACT ACTION LIST (PriceListDetail);
overFillDataPriceList= ABSTRACT ACTION LIST (PriceList);

fillDataPriceList 'Заполнить данные' (p) = ACTION (p) {

    dcurrentBalancePriceListDetailStock (d, stock) <- NUMERIC[16,3] (currentBalancePriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    
    //-- Перед акцией
    dquantitySoldBeforePromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (quantitySoldBeforePromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dsumSoldBeforePromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (sumSoldBeforePromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dmarkupSumSoldBeforePromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (markupSumSoldBeforePromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dcostSumSoldBeforePromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (costSumSoldBeforePromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    
    //-- За время акции
    dquantitySoldPromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (quantitySoldPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dsumSoldPromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (sumSoldPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dmarkupSumSoldPromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (markupSumSoldPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dcostSumSoldPromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (costSumSoldPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    
    //-- После акции
    dquantitySoldAfterPromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (quantitySoldAfterPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dsumSoldAfterPromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (sumSoldAfterPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dmarkupSumSoldAfterPromotionPriceListDetailStock(d, stock) <- NUMERIC[16,2] (markupSumSoldAfterPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    dcostSumSoldAfterPromotionPriceListDetailStock (d, stock) <- NUMERIC[16,2] (costSumSoldAfterPromotionPriceListDetailStock(d,stock)) WHERE priceListPriceListDetail(d) == p AND inPriceListStock(p, stock);
    
    FOR priceListPriceListDetail(d) == p DO {
        fillDataPriceListDetail(d);
    }
    overFillDataPriceList(p);
    apply();
}

EXTEND FORM priceLists

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES SELECTOR nameStock(st)
    FILTERS inPriceListStock(p,st)

    OBJECTS dd = PriceListDetail
    PROPERTIES(dd) READONLY indexPriceListDetail, idBarcodeSkuPriceListDetail, nameSkuPriceListDetail, shortNameUOMSkuPriceListDetail
    PROPERTIES READONLY dcurrentBalancePriceListDetailStock(dd,st)
    PROPERTIES(dd,st) READONLY BACKGROUND hintBeforePromotionBackground() dquantitySoldBeforePromotionPriceListDetailStock, 
                      dcostSumSoldBeforePromotionPriceListDetailStock, dmarkupSumSoldBeforePromotionPriceListDetailStock,
                      dmarkupPercSoldBeforePromotionPriceListDetailStock, dsumSoldBeforePromotionPriceListDetailStock 
    PROPERTIES(dd,st) READONLY BACKGROUND hintPromotionBackground() dquantitySoldPromotionPriceListDetailStock, 
                      dcostSumSoldPromotionPriceListDetailStock, dmarkupSumSoldPromotionPriceListDetailStock,
                      dmarkupPercSoldPromotionPriceListDetailStock, dsumSoldPromotionPriceListDetailStock 
    PROPERTIES(dd,st) READONLY BACKGROUND hintAfterPromotionBackground() dquantitySoldAfterPromotionPriceListDetailStock, 
                      dcostSumSoldAfterPromotionPriceListDetailStock, dmarkupSumSoldAfterPromotionPriceListDetailStock,
                      dmarkupPercSoldAfterPromotionPriceListDetailStock, dsumSoldAfterPromotionPriceListDetailStock           
    FILTERS priceListPriceListDetail(dd) == p     
        
    PROPERTIES fillDataPriceList(p) FORCE PANEL TOOLBAR TODRAW dd
             
    OBJECTS ddd = PriceListDetail
    PROPERTIES(ddd) READONLY indexPriceListDetail, idBarcodeSkuPriceListDetail, nameSkuPriceListDetail, shortNameUOMSkuPriceListDetail
    PROPERTIES READONLY dcurrentBalancePriceListDetail(ddd)
    PROPERTIES(ddd) READONLY BACKGROUND hintBeforePromotionBackground() dquantitySoldBeforePromotionPriceListDetail, 
                      dcostSumSoldBeforePromotionPriceListDetail, dmarkupSumSoldBeforePromotionPriceListDetail,
                      dmarkupPercSoldBeforePromotionPriceListDetail, dsumSoldBeforePromotionPriceListDetail 
    PROPERTIES(ddd) READONLY BACKGROUND hintPromotionBackground() dquantitySoldPromotionPriceListDetail, 
                      dcostSumSoldPromotionPriceListDetail, dmarkupSumSoldPromotionPriceListDetail,
                      dmarkupPercSoldPromotionPriceListDetail, dsumSoldPromotionPriceListDetail 
    PROPERTIES(ddd) READONLY BACKGROUND hintAfterPromotionBackground() dquantitySoldAfterPromotionPriceListDetail, 
                      dcostSumSoldAfterPromotionPriceListDetail, dmarkupSumSoldAfterPromotionPriceListDetail,
                      dmarkupPercSoldAfterPromotionPriceListDetail, dsumSoldAfterPromotionPriceListDetail           
    FILTERS priceListPriceListDetail(ddd) == p               
             
;
DESIGN priceLists{
    detailContainer{
        NEW promotion{
            caption = 'Акция';
            type = TABBED;
            NEW promotion1 {
                caption = 'По складу';
                fill = 1;
                MOVE st.box;
                MOVE dd.box;                
            }
            MOVE ddd.box {
                caption = 'По всем складам, которые в прайсе';
            }
        }
    }
}
