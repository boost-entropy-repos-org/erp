MODULE PriceListManageStore;

REQUIRE PriceListManage, Store;

// -------------------- В ассортименте ----------------- //

countDepartmentStoreALedgerPriceListTypeSkuStoreDateTime 'В ассортименте' (type, sku, store, dateTime) =
    GROUP SUM 1 IF priceALedgerPriceListTypeSkuStockDateTime(type, sku, stock, dateTime)
    BY type, sku, storeDepartmentStore(stock), dateTime;

countStoreALedgerPriceListTypeSkuChainStoresDateTime 'В ассортименте' (type, sku, chainStores, dateTime) =
    GROUP SUM 1 IF countDepartmentStoreALedgerPriceListTypeSkuStoreDateTime(type, sku, store, dateTime)
    BY type, sku, chainStoresStore(store), dateTime;

countStoreALedgerPriceListTypeSkuStoreTypeDateTime 'В ассортименте' (type, sku, storeType, dateTime) =
    GROUP SUM 1 IF countDepartmentStoreALedgerPriceListTypeSkuStoreDateTime(type, sku, store, dateTime)
    BY type, sku, storeTypeStore(store), dateTime;

countStoreALedgerPriceListTypeSkuDateTime 'В ассортименте' (type, sku, dateTime) =
    GROUP SUM 1 IF countDepartmentStoreALedgerPriceListTypeSkuStoreDateTime(type, sku, store, dateTime)
    BY type, sku, dateTime;

// --------------------- В наличии ---------------- //

countStoreASkuStoreTypeDateTime 'В наличии' (sku, storeType, dateTime) =
    GROUP SUM 1 IF balanceASkuStoreDateTime(sku, store, dateTime)
    BY sku, storeTypeStore(store), dateTime;

countStoreASkuChainStoresDateTime 'В наличии' (sku, chainStores, dateTime) =
    GROUP SUM 1 IF balanceASkuStoreDateTime(sku, store, dateTime)
    BY sku, chainStoresStore(store), dateTime;

EXTEND FORM priceListManage
    // --- По организациям
    PROPERTIES READONLY countStoreALedgerPriceListTypeSkuDateTime(pt, csk, dt) AFTER idBarcodeSku(csk)

    OBJECTS ccs = ChainStores
    PROPERTIES READONLY nameChainStores(ccs), countStoreChainStores(ccs), countStoreALedgerPriceListTypeSkuChainStoresDateTime(pt, csk, ccs, dt), countStoreASkuChainStoresDateTime(csk, ccs, dt)
    FILTERS countStoreALedgerPriceListTypeSkuChainStoresDateTime(pt, csk, ccs, dt)

    OBJECTS ctp=StoreType
    PROPERTIES READONLY nameStoreType(ctp), countStoreStoreType(ctp), countStoreALedgerPriceListTypeSkuStoreTypeDateTime(pt, csk, ctp, dt), countStoreASkuStoreTypeDateTime(csk, ctp, dt)
    FILTERS countStoreALedgerPriceListTypeSkuStoreTypeDateTime(pt, csk, ctp, dt)

    // --- По складам
    PROPERTIES READONLY countStoreALedgerPriceListTypeSkuDateTime(pt, ssk, dt) AFTER idBarcodeSku(ssk)

    OBJECTS scs = ChainStores
    PROPERTIES READONLY nameChainStores(scs), countStoreChainStores(scs), countStoreALedgerPriceListTypeSkuChainStoresDateTime(pt, ssk, scs, dt), countStoreASkuChainStoresDateTime(ssk, scs, dt)
    FILTERS countStoreALedgerPriceListTypeSkuChainStoresDateTime(pt, ssk, scs, dt)

    OBJECTS stp=StoreType
    PROPERTIES READONLY nameStoreType(stp), countStoreStoreType(stp), countStoreALedgerPriceListTypeSkuStoreTypeDateTime(pt, ssk, stp, dt), countStoreASkuStoreTypeDateTime(ssk, stp, dt)
    FILTERS countStoreALedgerPriceListTypeSkuStoreTypeDateTime(pt, ssk, stp, dt)
;

EXTEND DESIGN priceListManage {
    c.stocks {
        ADD ccs.box BEFORE cst.box;
        ADD ctp.box BEFORE cst.box;
    }
    s.stocks {
        ADD scs.box BEFORE sst.box;
        ADD stp.box BEFORE sst.box;
    }
}

// ------------------------------- Добавляем розничный вид цены ----------------------------------- //

showRetailPrice (p, r) = p != r;

activeMarkupALedgerPriceListTypeLedgerPriceListTypeSkuCompanyDateTime 'Надбавка, %' (rt, pt, s, c, dt) =
    activePriceALedgerPriceListTypeSkuCompanyDateTime (rt, s, c, dt) * 10000.0 /
    ((valueRateRangeDate(VATSkuCountryDate(s, countryLegalEntity(c), DATE(dt)), DATE(dt)) + 100.0) *
     activePriceALedgerPriceListTypeSkuCompanyDateTime (pt, s, c, dt) IF activePriceALedgerPriceListTypeSkuCompanyDateTime (pt, s, c, dt) != 0)
    - 100.0;

markupALedgerPriceListTypePriceListTypeSkuStockDateTime 'Надбавка, %' (rt, pt, sk, st, dt) =
    priceALedgerPriceListTypeSkuStockDateTime (rt, sk, st, dt) * 10000.0 /
    ((valueRateRangeDate(VATSkuCountryDate(sk, countryStock(st), DATE(dt)), DATE(dt)) + 100.0) *
     priceALedgerPriceListTypeSkuStockDateTime (pt, sk, st, dt) IF priceALedgerPriceListTypeSkuStockDateTime (pt, sk, st, dt) != 0)
    - 100.0;


EXTEND FORM priceListManage
    OBJECTS rt = DataPriceListType FIXED PANEL
    PROPERTIES(rt) SELECTOR namePriceListType

    PROPERTIES TODRAW csk READONLY SHOWIF showRetailPrice(pt, rt) AFTER cPrice
            cRetailPrice = activePriceALedgerPriceListTypeSkuCompanyDateTime(rt, csk, c, dt),
            activeMarkupALedgerPriceListTypeLedgerPriceListTypeSkuCompanyDateTime(rt, pt, csk, c, dt)
    PROPERTIES(rt, csk, cst, dt) TODRAW cst READONLY cRetailPriceStock = priceALedgerPriceListTypeSkuStockDateTime AFTER cPriceStock SHOWIF showRetailPrice(pt, rt)

    PROPERTIES TODRAW ssk READONLY SHOWIF showRetailPrice(pt, rt) AFTER sPrice
            sRetailPrice = priceALedgerPriceListTypeSkuStockDateTime(rt, ssk, s, dt),
            markupALedgerPriceListTypePriceListTypeSkuStockDateTime(rt, pt, ssk, s, dt)
    PROPERTIES(rt, ssk, sst, dt) TODRAW sst READONLY sRetailPriceStock = priceALedgerPriceListTypeSkuStockDateTime AFTER sPriceStock SHOWIF showRetailPrice(pt, rt)
;

EXTEND DESIGN priceListManage {
    params {
        ADD rt.box {
            caption = 'Розничный вид цены';
        }
    }
    PROPERTY(cRetailPrice) {
        caption = 'Розничная цена';
    }
    PROPERTY(cRetailPriceStock) {
        caption = 'Розничная цена';
    }
    PROPERTY(sRetailPrice) {
        caption = 'Розничная цена';
    }
    PROPERTY(sRetailPriceStock) {
        caption = 'Розничная цена';
    }
}

createCompanyRetailPriceList 'Создать розничный прайс' = ACTION (dateTime, dataPriceListType, retailPriceListType, company) {
    FOR ADDOBJ u = UserPriceList DO {
        fillCompanyPriceList(u, dateTime, dataPriceListType, company);
        inUserPriceListDataPriceListType(u, retailPriceListType) <- TRUE;
        showUserPriceListPriceListType(u, retailPriceListType) <- TRUE;
        FORM userPriceList OBJECTS p = u MANAGESESSION DOCKEDMODAL;
    }
} TOOLBAR;

createNewCompanyRetailPriceList 'Создать розничный прайс' = ACTION (dateTime, dataPriceListType, retailPriceListType, company) {
    inSkuCustomUser(s, u) <- inSku(s) WHERE u == currentUser();
    apply();
    createCompanyRetailPriceList(dateTime, dataPriceListType, retailPriceListType, company);
} TOOLBAR;

EXTEND FORM priceListManage
    PROPERTIES createNewCompanyRetailPriceList(dt, pt, rt, c) TODRAW csk FORCE PANEL SHOWIF showRetailPrice(pt, rt)
;
