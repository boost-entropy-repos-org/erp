MODULE PriceListArticle;

REQUIRE PriceList, StockArticle;

NAMESPACE PriceList;

TABLE articleUserPriceListDataPriceListType (Article, UserPriceList, DataPriceListType);

// Подбор по артикулу
countDetail(article, priceList) = GROUP SUM 1 BY article(sku(UserPriceListDetail detail)), userPriceList(detail);

countDetailSkus(article, priceList) = GROUP SUM 1 IF detail(Item sku, UserPriceList priceList) BY article(sku), priceList; 

in 'Вкл.' (Article article, UserPriceList priceList) = TRUE IF countDetail(article, priceList);
backgroundIn 'Цвет' (Article article, UserPriceList priceList) = RGB(213, 213, 213) IF (countItem(article)!=countDetailSkus(article, priceList));

priceLis 'Цена (новая)' = DATA NUMERIC[16,4] (Article, UserPriceList, DataPriceListType);


changeIn(Article article, UserPriceList priceList) = ACTION {
    REQUEST BOOLEAN INPUT;
    IF requestedLogical() THEN {
        IF NOT countDetail(article, priceList) THEN {
            FOR article == article(Item sku) NEW d = UserPriceListDetail DO {
               userPriceList(d) <- priceList;
               sku(d) <- sku;
            }        
        }        
    } ELSE {        
        IF countDetail(article, priceList) THEN {
            DELETE UserPriceListDetail detail WHERE article == article(sku(detail)) AND priceList == userPriceList(detail);
        }
    }
}

changePrice(Article article, UserPriceList priceList, DataPriceListType type) = ACTION {
    REQUEST NUMERIC[16,4] INPUT;
    IF requestedNumeric() THEN {                       
        IF countDetail(article, priceList) THEN {       
            priceLis(article, priceList, type) <- requestedNumeric();        
            price(UserPriceListDetail d,type) <- requestedNumeric() WHERE userPriceList(d) == priceList AND article(sku(d))==article;               
        }        
    } ELSE {    
        priceLis(article, priceList, type) <- NULL;
        IF countDetail(article, priceList) THEN { 
            price(UserPriceListDetail d,type) <- NULL WHERE userPriceList(d) == priceList AND article(sku(d))==article;                       
        }
    }
}

maxCurrentPriceData 'Макс. цена' (article, priceList, dataPriceListType, stock) = 
    GROUP MAX currentPriceUser(Item sku, PriceList priceList, PriceListType dataPriceListType, Stock stock) 
        BY article(sku), priceList, dataPriceListType, stock;
minCurrentPriceData 'Мин. цена' (article, priceList, dataPriceListType, stock) = 
    GROUP MIN currentPriceUser(Item sku, PriceList priceList, PriceListType dataPriceListType, Stock stock) 
        BY article(sku), priceList, dataPriceListType, stock;
headerNameMaxCurrentData (PriceListType dataPriceListType) =
    name(dataPriceListType) + ' (старая max)' MINCHARWIDTH 30 MAXCHARWIDTH 50;
headerNameMinCurrentData (PriceListType dataPriceListType) =
    name(dataPriceListType) + ' (старая min)' MINCHARWIDTH 30 MAXCHARWIDTH 50;    
    
maxCurrentPrice 'Текущая цена (max)' (article, userPriceList, stock)= 
    GROUP MAX currentPrice (Item sku, UserPriceList userPriceList, Stock stock) BY article(sku), userPriceList, stock;
 
    
EXTEND FORM userPriceList
    OBJECTS ar=Article
    PROPERTIES in(ar, p) ON CHANGE changeIn(ar, p) BACKGROUND backgroundIn(ar, p)
    PROPERTIES READONLY id(ar), caption(ar), nameBrand(ar), currentBalance(ar, ts2)
                                             
    PROPERTIES(ar, p, tc) priceLis COLUMNS (tc) HEADER headerNameData(tc) BACKGROUND background(tc) ON CHANGE changePrice(ar, p, tc)
    
    PROPERTIES(ar, p, to, ts2) READONLY maxCurrentPriceData COLUMNS 'arTo' (to) HEADER headerNameMaxCurrentData(to) BACKGROUND backgroundCurrent(to)
    PROPERTIES(ar, p, to, ts2) READONLY minCurrentPriceData COLUMNS 'arTo' (to) HEADER headerNameMinCurrentData(to) BACKGROUND backgroundCurrent(to)
    
    
    FILTERS isParent(sk2, ar)
    FILTERS maxCurrentPrice (ar, p, ts2) OR
            NOT filterPriceListType(p)
            
    FILTERGROUP filters5
        FILTER 'С остатком' currentBalance(ar, ts2) 'F10' DEFAULT
    FILTERGROUP filters6
        FILTER 'Отмеченные' in(ar, p) 'ctrl F10'       
    ORDER BY id(ar)
;

DESIGN userPriceList {
    tabContainer {
        MOVE ar.box BEFORE s2.box {caption = 'Артикулы';}
    }
}