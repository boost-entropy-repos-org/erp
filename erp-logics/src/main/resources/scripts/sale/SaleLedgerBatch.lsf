MODULE SaleLedgerBatch;

REQUIRE SaleLedger, TaxItem, SkuLedgerTax;

NAMESPACE SaleLedger;

//------------------- Продажи по партиям -------------------------//

nameBatchBalanceBStock (stock)= nameStock(stock) + ' (остаток на начало)';    
nameBatchSumBStock (stock)= nameStock(stock) + ' (сумма на начало)';    
nameBatchBalanceAStock (stock)= nameStock(stock) + ' (остаток на конец)';    
nameBatchSumAStock (stock)= nameStock(stock) + ' (сумма на конец)';    
nameBatchQuantitySoldStock (stock)= nameStock(stock) + ' (продано кол-во)';    
nameBatchSumSoldStock (stock)= nameStock(stock) + ' (продано сумма)';    
 
inBatchReportStock 'Отм.' = DATA SESSION BOOLEAN (Stock);

                  
filterBalanceBatchDateFromTo 'С остатком' (b,dFrom, dTo) = GROUP SUM 1 IF inBatchReportStock(st) AND (balanceBBatchStockDate(b,st,dFrom) OR balanceABatchStockDate(b,st,dTo))
    BY b,dFrom, dTo;
filterSoldBatchDateFromTo 'С продажей' (b,dFrom,dTo) = GROUP SUM quantitySoldBatchStockDateFromTo(b,st,dFrom,dTo) IF inBatchReportStock(st) 
    BY b,dFrom,dTo;           
       
//-------------------------------------------------------------------------//
   
backgroundLavenderBatch 'Розовато-лавандовый' (b) = RGB(255,238,238) IF b IS Batch;  
backgroundGreenTeaBatch 'Зеленого чая' (b) = RGB(204,255,204) IF b IS Batch;  
backgroundSkyBatch 'Небесный' (b) = RGB(127,199,255) IF b IS Batch;  

dbalanceBBatchStockDate 'Остаток на начало дня' = DATA SESSION NUMERIC[14,3] (Batch, Stock, DATE);
dcostBBatchStockDate 'Себестоимость на начало дня' = DATA SESSION NUMERIC[15,3] (Batch, Stock, DATE);
daccountSumBBatchStockDate 'Учетная сумма на начало дня' = DATA SESSION NUMERIC[15,3] (Batch, Stock, DATE); 
        
dquantitySoldBatchStockDateFromTo 'Продано за интервал (кол-во)' = DATA SESSION NUMERIC[14,3] (Batch, Stock, DATE, DATE);  
dcostSumSoldBatchStockDateFromTo 'Себестоимость проданного за интервал' = DATA SESSION NUMERIC[22,8] (Batch, Stock, DATE, DATE);   
dmarkupSumSoldBatchStockDateFromTo 'Надбавка проданного за интервал' = DATA SESSION NUMERIC[22,8] (Batch, Stock, DATE, DATE);  

dsumVATSoldBatchStockDateFromTo 'Сумма НДС проданного за интервал' = DATA SESSION NUMERIC[22,8] (Batch, Stock, DATE, DATE);  
daveragePriceSoldBatchStockDateFromTo 'Цена за интервал' = DATA SESSION NUMERIC[22,8] (Batch, Stock, DATE, DATE);  
dsumSoldBatchStockDateFromTo 'Продано за интервал (сумма)' = DATA SESSION NUMERIC[22,8] (Batch, Stock, DATE, DATE);  
daverageMarkupSoldBatchStockDateFromTo 'Средний процент надбавки' = DATA SESSION NUMERIC[22,8] (Batch, Stock, DATE, DATE);  
   
dbalanceABatchStockDate 'Остаток на конец дня' = DATA SESSION NUMERIC[14,3] (Batch, Stock, DATE);
dcostABatchStockDate 'Себестоимость на конец дня' = DATA SESSION NUMERIC[15,3] (Batch, Stock, DATE);
daccountSumABatchStockDate 'Учетная сумма на конец дня' = DATA SESSION NUMERIC[15,3] (Batch, Stock, DATE);                     
                   
overFillPropertyDateFromTo = ABSTRACT ACTION LIST (DATE, DATE);   
                   
fillPropertyBatchStockDateFromTo 'Заполнить данные'  = ACTION (dFrom,dTo) {
    dbalanceBBatchStockDate(bb,sts,dFrom) <- balanceBBatchStockDate(bb,sts,dFrom) 
        WHERE inBatchReportStock(sts);
    dcostBBatchStockDate(bb,sts,dFrom) <- dbalanceBBatchStockDate(bb,sts,dFrom) * costBatch(bb); 
    daccountSumBBatchStockDate(bb,sts,dFrom) <- dbalanceBBatchStockDate(bb,sts,dFrom) * accountPriceBBatchStockDate(bb,sts,dFrom); 
//--            
    dquantitySoldBatchStockDateFromTo(bb,sts,dFrom,dTo) <- quantitySoldBatchStockDateFromTo(bb,sts,dFrom,dTo) 
        WHERE inBatchReportStock(sts);
    dcostSumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) <- costSumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) 
        WHERE inBatchReportStock(sts);
    dmarkupSumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) <- markupSumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) 
        WHERE inBatchReportStock(sts);     
    dsumVATSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) <- sumVATSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) 
        WHERE inBatchReportStock(sts);
    dsumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) <- sumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) 
        WHERE inBatchReportStock(sts);
    daveragePriceSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) <- dsumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) / dquantitySoldBatchStockDateFromTo(bb,sts,dFrom,dTo); 
    daverageMarkupSoldBatchStockDateFromTo(bb,sts,dFrom,dTo) <- dmarkupSumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo)/dcostSumSoldBatchStockDateFromTo(bb,sts,dFrom,dTo);
    //--
    dbalanceABatchStockDate(bb,sts,dTo) <- balanceABatchStockDate(bb,sts,dTo) 
        WHERE inBatchReportStock(sts);
    dcostABatchStockDate(bb,sts,dTo) <- dbalanceABatchStockDate(bb,sts,dTo) * costBatch(bb); 
    daccountSumABatchStockDate(bb,sts,dTo) <- dbalanceABatchStockDate(bb,sts,dTo) * accountPriceABatchStockDate(bb,sts,dTo); 
    
    overFillPropertyDateFromTo(dFrom,dTo);
}                      
        
FORM saleBatch 'Продажи по партиям'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)
       
    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType    
    
    
    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES READONLY orderGroup(sk), skuTreeName = nameGroup(sk)
    ORDER BY orderGroup(sk), skuTreeName
    FILTERS groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT       
     
    OBJECTS ts = Stock
    PROPERTIES tsTreeName = nameStock(ts) READONLY, nameLegalEntityStock(ts) READONLY, inBatchReportStock(ts)
    ORDER BY tsTreeName
    FILTERS isCompanyStock(ts)     
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(ts) 'ctrl F10' DEFAULT  
    OBJECTS st = Stock      
    FILTERS inBatchReportStock(st)
    OBJECTS b = Batch 
    PROPERTIES(b)  READONLY nameSkuBatch, idBarcodeSkuBatch, nameSkuGroup3Batch, nameSkuGroup4Batch, dateBatch, costBatch,                     
                   currentValueVATBatch                    
    FILTERGROUP inactiveStock2 FILTER 'Активный' activeStock(st) 'ctrl F10' DEFAULT                   
    PROPERTIES(b)  READONLY imageBatch FORCE PANEL
    PROPERTIES     READONLY BACKGROUND backgroundLavenderBatch(b) balanceBBatchStockDate(b,st,dFrom)  COLUMNS (st) HEADER nameBatchBalanceBStock(st)
    PROPERTIES     READONLY BACKGROUND backgroundLavenderBatch(b) accountSumBBatchStockDate(b,st,dFrom)  COLUMNS (st) HEADER nameBatchSumBStock(st)
    PROPERTIES     READONLY BACKGROUND backgroundGreenTeaBatch(b) quantitySoldBatchStockDateFromTo(b,st,dFrom,dTo)  COLUMNS (st) HEADER nameBatchQuantitySoldStock(st)  
    PROPERTIES     READONLY BACKGROUND backgroundGreenTeaBatch(b) sumSoldBatchStockDateFromTo(b,st,dFrom,dTo)  COLUMNS (st) HEADER nameBatchSumSoldStock(st)                       
    PROPERTIES     READONLY BACKGROUND backgroundSkyBatch(b) balanceABatchStockDate(b,st,dTo)  COLUMNS (st) HEADER nameBatchBalanceAStock(st)
    PROPERTIES     READONLY BACKGROUND backgroundSkyBatch(b) accountSumABatchStockDate(b,st,dTo)  COLUMNS (st) HEADER nameBatchSumAStock(st)    
                
    FILTERS           isParentGroupBatch(sk, b)                
                            
    FILTERGROUP filtersSold
        FILTER 'С движением' filterSoldBatchDateFromTo(b,dFrom,dTo) OR filterBalanceBatchDateFromTo(b,dFrom,dTo) 'F11' DEFAULT
        FILTER 'С продажей' filterSoldBatchDateFromTo(b,dFrom,dTo) 'F10'
        FILTER 'С остатком' filterBalanceBatchDateFromTo(b,dFrom,dTo) 'F9'      
                             
    OBJECTS stb = (sts=Stock, bb=Batch)                              
    PROPERTIES(sts)READONLY stsName = nameStock                          
    PROPERTIES(bb) READONLY nameSkuBatch, idBarcodeSkuBatch, nameSkuGroup3Batch, nameSkuGroup4Batch, dateBatch,  
                   costBatch
    PROPERTIES(sts, bb) READONLY currentValueVATStockBatch
                       
    PROPERTIES(bb,sts,dFrom) READONLY READONLY BACKGROUND backgroundLavenderBatch(bb) balanceBBatchStockDate, 
                   costBBatchStockDate, accountSumBBatchStockDate         
    PROPERTIES(bb,sts,dFrom,dTo) READONLY BACKGROUND backgroundGreenTeaBatch(bb) quantitySoldBatchStockDateFromTo, 
                   costSumSoldBatchStockDateFromTo, markupSumSoldBatchStockDateFromTo
    PROPERTIES(bb,sts,dFrom,dTo) READONLY BACKGROUND backgroundGreenTeaBatch(bb) sumVATSoldBatchStockDateFromTo, averagePriceSoldBatchStockDateFromTo,  
                   sumSoldBatchStockDateFromTo, averageMarkupSoldBatchStockDateFromTo
    FILTERGROUP inactiveStock3 FILTER 'Активный' activeStock(sts) 'ctrl F10' DEFAULT
                                       
    PROPERTIES(bb,sts,dTo) READONLY BACKGROUND backgroundSkyBatch(bb) balanceABatchStockDate, costABatchStockDate, accountSumABatchStockDate                 
                             
    FILTERS inBatchReportStock(sts),
            isParentGroupBatch(sk, bb)  
    FILTERGROUP filtersSold1
        FILTER 'С движением' quantitySoldBatchStockDateFromTo(bb,sts,dFrom,dTo) OR balanceBBatchStockDate(bb,sts,dFrom) OR balanceABatchStockDate(bb,sts,dTo) 'F11' DEFAULT
        FILTER 'С продажей' quantitySoldBatchStockDateFromTo(bb,sts,dFrom,dTo) 'F10'
        FILTER 'С остатком' balanceBBatchStockDate(bb,sts,dFrom) OR balanceABatchStockDate(bb,sts,dTo) 'F9'      

//-- Таблица                                                 
    OBJECTS stbs = (stst=Stock, bbb=Batch)                              
    PROPERTIES(stst)READONLY nameStock                          
    PROPERTIES(bbb) READONLY nameSkuBatch, idBarcodeSkuBatch, nameSkuGroup3Batch, nameSkuGroup4Batch, dateBatch,  
                   costBatch
    PROPERTIES(stst, bbb) READONLY currentValueVATStockBatch
                       
    PROPERTIES(bbb,stst,dFrom) READONLY READONLY BACKGROUND backgroundLavenderBatch(bbb) dbalanceBBatchStockDate, 
                   dcostBBatchStockDate, daccountSumBBatchStockDate         
    PROPERTIES(bbb,stst,dFrom,dTo) READONLY BACKGROUND backgroundGreenTeaBatch(bbb) dquantitySoldBatchStockDateFromTo, 
                   dcostSumSoldBatchStockDateFromTo, dmarkupSumSoldBatchStockDateFromTo
    PROPERTIES(bbb,stst,dFrom,dTo) READONLY BACKGROUND backgroundGreenTeaBatch(bbb) dsumVATSoldBatchStockDateFromTo, daveragePriceSoldBatchStockDateFromTo,  
                   dsumSoldBatchStockDateFromTo, daverageMarkupSoldBatchStockDateFromTo
                   
                   
    FILTERGROUP inactiveStock4 FILTER 'Активный' activeStock(stst) 'ctrl F10' DEFAULT
                                       
    PROPERTIES(bbb,stst,dTo) READONLY BACKGROUND backgroundSkyBatch(bbb) dbalanceABatchStockDate, dcostABatchStockDate, daccountSumABatchStockDate                 
                             
    FILTERS inBatchReportStock(stst),
            isParentGroupBatch(sk, bbb)  
    FILTERGROUP filtersSold2
        FILTER 'С движением' dquantitySoldBatchStockDateFromTo(bbb,stst,dFrom,dTo) OR dbalanceBBatchStockDate(bbb,stst,dFrom) OR dbalanceABatchStockDate(bbb,stst,dTo) 'F11' DEFAULT
        FILTER 'С продажей' dquantitySoldBatchStockDateFromTo(bbb,stst,dFrom,dTo) 'F10'
        FILTER 'С остатком' dbalanceBBatchStockDate(bbb,stst,dFrom) OR dbalanceABatchStockDate(bbb,stst,dTo) 'F9'                                                      
    PROPERTIES fillPropertyBatchStockDateFromTo(dFrom,dTo) TODRAW  stbs FORCE PANEL TOOLBAR                                 
;

EXTEND FORM saleBatch FILTERS (ts IS Stock AND NOT limitAccessEmployee(currentUser())) OR accessCompanyEmployeeStock(currentUser(),ts);

DESIGN saleBatch FROM DEFAULT {
    NEW top {
        type = CONTAINERH;
        ADD dates.box {
            type = CONTAINERH;
        }
        ADD gt.box;
    }
    REMOVE st.box;
    NEW article {
        type = SPLITH;
        fill = 1;
        NEW skuFilters {
            fill = 1;
            type = SPLITV;
            NEW column{
                fill = 1.5;
                type = SPLITV;
                ADD ts.box;
                ADD skuTree.tree.box { caption = 'Группы SKU'; }
            }    
            NEW imageBox {
                fill = 1;
                caption = 'Изображение';                     
                ADD PROPERTY(imageBatch(b)) {
                    caption = '';
                    fill = 1;
                }
            }
        }
        NEW insetContainer {
            fill = 2.5;
            type = TABBED;            
            ADD stbs.box { caption = 'Партия/склад (таблица)';}
            ADD stb.box { caption = 'Партия/склад';}
            ADD b.box; 
        }            
    } 
    ADD functions.box;
}

NAVIGATOR {                                              
    salesReports{
        ADD saleBatch;
    }
}