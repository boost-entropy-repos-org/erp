MODULE SaleInvoiceContract;

REQUIRE SaleInvoice, InvoiceContract, ContractPayment;

NAMESPACE Sale;

@defineInvoicePaymentCondition(' (продажа)');

// --------------------------- Проведение по регистру задолженностей ------------------------------------ //

@implementContractLedger(a, Invoice, contractSku);
sumContractALedger(contractALedger) +=
    IF currencyInvoice(contractALedger) != currencyContract(contractSkuInvoice(contractALedger)) THEN 
        NUMERIC[16,2](invoiceSumInvoiceDetailInvoice(contractALedger) * 
                      rateOnTypeExchangeCurrencyDate(typeExchangeContract(contractSkuInvoice(contractALedger)), 
                                                     currencyInvoice(contractALedger),
                                                     dateInvoice(contractALedger)))
    ELSE 
        invoiceSumInvoiceDetailInvoice(contractALedger);

@implementContractPrepaymentLedger(invoice, invoiceSumInvoiceDetail, contractSku);

@implementInContractLedger(Invoice, contractSku);
sumInContractLedger(inContractLedger) +=
    IF currencyInvoice(inContractLedger) != currencyContract(contractSkuInvoice(inContractLedger)) THEN 
        NUMERIC[16,2](invoiceSumInvoiceDetailInvoice(inContractLedger) * 
                      rateOnTypeExchangeCurrencyDate(typeExchangeContract(contractSkuInvoice(inContractLedger)), 
                                                     currencyInvoice(inContractLedger),
                                                     dateInvoice(inContractLedger)))
    ELSE 
        invoiceSumInvoiceDetailInvoice(inContractLedger);