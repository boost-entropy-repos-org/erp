MODULE SaleInvoiceContract;

REQUIRE SaleInvoice, InvoiceContract, ContractPayment;

NAMESPACE Sale;

@defineInvoicePaymentCondition(' (продажа)');

// --------------------------- Проведение по регистру задолженностей ------------------------------------ //

@implementContractLedger(a, Invoice, contractSku);
sum[ContractALedger](Invoice contractALedger) +=
    IF currency(contractALedger) != currency(contractSku(contractALedger)) THEN 
        NUMERIC[18,4](invoiceSumInvoiceDetail(contractALedger) * 
                      rateOn(typeExchange(contractSku(contractALedger)), 
                                                     currency(contractALedger),
                                                     date(contractALedger)))
    ELSE 
        invoiceSumInvoiceDetail(contractALedger);

@implementContractPrepaymentLedger(invoice, invoiceSumInvoiceDetail, contractSku);                                                                                                          
                                                       

@implementInContractLedger(Invoice, contractSku);
sum[InContractLedger](Invoice inContractLedger) +=
    IF currency(inContractLedger) != currency(contractSku(inContractLedger)) THEN 
        NUMERIC[18,4](invoiceSumInvoiceDetail(inContractLedger) * 
                      rateOn(typeExchange(contractSku(inContractLedger)), 
                                                     currency(inContractLedger),
                                                     date(inContractLedger)))
    ELSE 
        invoiceSumInvoiceDetail(inContractLedger);
        
inContractLedger[ContractLedger](InvoiceContractLedger l) += invoice(l);        