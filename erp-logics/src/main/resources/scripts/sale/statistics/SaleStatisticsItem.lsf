MODULE SaleStatisticsItem;

REQUIRE SaleStatistics, Item;

NAMESPACE Sale;

statisticGroupTypeItem 'Статистическая группа' = DATA StatisticGroup (StatisticGroupType, Item);
nameStatisticGroupTypeItem 'Статистическая группа' = nameStatisticGroup(statisticGroupTypeItem(type, item));
canonicalNameStatisticGroupTypeItem 'Каноническое имя' = canonicalNameStatisticGroup(statisticGroupTypeItem(type, item));

CONSTRAINT groupTypeStatisticGroup(parentStatisticGroup(group)) != groupTypeStatisticGroup(group)
           CHECKED BY parentStatisticGroup MESSAGE 'Родительский объект статистической группы имеет неправильный тип классификатора';

statisticGroupTypeSku (type, sku) += statisticGroupTypeItem (type, sku);

overCopyItem(s, d) += ACTION (s, d) {
    ASSIGN statisticGroupTypeItem(type, d) <- statisticGroupTypeItem(type, s) WHERE statisticGroupTypeItem(type, s);
}

EXTEND FORM item
    OBJECTS sgt = StatisticGroupType
    PROPERTIES(sgt) READONLY nameStatisticGroupType, idStatisticGroupType
    FILTERS countryStatisticGroupType(sgt) == c

    PROPERTIES(sgt,i) nameStatisticGroupTypeItem
;
EXTEND DESIGN item { regionalPrm { ADD sgt.box;} }

statisticGroupTypeItemGroup  = DATA StatisticGroup (StatisticGroupType, ItemGroup); 
nameStatisticGroupTypeItemGroup 'Статистическая группа (по-умолчанию)' (type, group) = nameStatisticGroup(statisticGroupTypeItemGroup(type, group)) IN defaultItemGroup;

//META hhhhhCustomTwo(property, caption, type, typeIdentity, object, object2Class, object2, group) // Первыйй объект должен быть группа иерархии
//    data###property###object###object2 caption = DATA type (###object, object2Class);
//    data###typeIdentity###property###object###object2 caption (object, object2) = typeIdentity(data###property###object###object2(object, object2)) IN group;
//    
//    levelParent###property###object###object2 (object, object2) = GROUP MIN level###object###object(object, parent) IF data###property###object###object2(parent, object)
//                                                                  BY object, object2 PERSISTENT;    
//    nearestParent###property###object###object2 (object, object2) = object###object###level(object, levelParent###property###object###object2(object, object2));
//    nearest###property###object###object2 (object, object2) = data###property###object###object2(object, nearestParent###property###object###object2 (object, object2));
//    
//    property###object###object2 (object, object2) =
//        OVERRIDE nearest###property###object###object2 (object, object2), 
//                 data###property###object###object2(object, object2) PERSISTENT;    
//    
//    typeIdentity###object###object2 caption (object, object2) = typeIdentity(property###object###object2 (object, object2)) IN group;
//END 
//@hhhhhCustomTwo(statisticGroup, 'Статистическая группа (по-умолчанию)', StatisticGroup, nameStatisticGroup, itemGroup, StatisticGroupType, statisticGroupType, defaultItemGroup){ // Первыйй объект должен быть группа иерархии
//    dataStatisticGroupItemGroupStatisticGroupType 'Статистическая группа (по-умолчанию)' = DATA StatisticGroup (ItemGroup, StatisticGroupType);
//    dataNameStatisticGroupStatisticGroupItemGroupStatisticGroupType 'Статистическая группа (по-умолчанию)' (itemGroup, statisticGroupType) = nameStatisticGroup(dataStatisticGroupItemGroupStatisticGroupType(itemGroup, statisticGroupType)) IN defaultItemGroup;
//    
//    levelParentStatisticGroupItemGroupStatisticGroupType (itemGroup, statisticGroupType) = GROUP MIN levelItemGroupItemGroup(itemGroup, parent) IF dataStatisticGroupItemGroupStatisticGroupType(parent, itemGroup)
//                                                                  BY itemGroup, statisticGroupType PERSISTENT;    
//    nearestParentStatisticGroupItemGroupStatisticGroupType (itemGroup, statisticGroupType) = itemGroupItemGroupLevel(itemGroup, levelParentStatisticGroupItemGroupStatisticGroupType(itemGroup, statisticGroupType));
//    nearestStatisticGroupItemGroupStatisticGroupType (itemGroup, statisticGroupType) = dataStatisticGroupItemGroupStatisticGroupType(itemGroup, nearestParentStatisticGroupItemGroupStatisticGroupType (itemGroup, statisticGroupType));
//    
//    statisticGroupItemGroupStatisticGroupType (itemGroup, statisticGroupType) =
//        OVERRIDE nearestStatisticGroupItemGroupStatisticGroupType (itemGroup, statisticGroupType), 
//                 dataStatisticGroupItemGroupStatisticGroupType(itemGroup, statisticGroupType) PERSISTENT;    
//    
//    nameStatisticGroupItemGroupStatisticGroupType 'Статистическая группа (по-умолчанию)' (itemGroup, statisticGroupType) = nameStatisticGroup(statisticGroupItemGroupStatisticGroupType (itemGroup, statisticGroupType)) IN defaultItemGroup;
//};


EXTEND FORM itemGroup
    OBJECTS t=StatisticGroupType 
    PROPERTIES(t)   READONLY nameStatisticGroupType, idStatisticGroupType
    PROPERTIES(t, g) nameStatisticGroupTypeItemGroup
    FILTERS countryStatisticGroupType(t) == defaultCountry()
    
;    
EXTEND DESIGN itemGroup {

    NEW type BEFORE functions.box{
        fill = 1;
        NEW detail {
            fill = 1;
            ADD g.defaultItemGroup {
                columns = 6;
            }
            ADD t.box;
        }          
    }
}

WHEN SESSION CHANGED(itemGroupItem(i)) AND t IS StatisticGroupType AND NOT statisticGroupTypeItem(t, i) DO
    statisticGroupTypeItem(t, i) <- statisticGroupTypeItemGroup(t, itemGroupItem(i));
