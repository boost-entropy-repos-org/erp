MODULE SaleStatisticsItem;

REQUIRE SaleStatistics, Item;

NAMESPACE Sale;

statisticGroupTypeItem 'Статистическая группа' = DATA StatisticGroup (StatisticGroupType, Item);
nameStatisticGroupTypeItem 'Статистическая группа' = nameStatisticGroup(statisticGroupTypeItem(type, item));
canonicalNameStatisticGroupTypeItem 'Каноническое имя' = canonicalNameStatisticGroup(statisticGroupTypeItem(type, item));

CONSTRAINT groupTypeStatisticGroup(parentStatisticGroup(group)) != groupTypeStatisticGroup(group)
           CHECKED BY parentStatisticGroup MESSAGE 'Родительский объект статистической группы имеет неправильный тип классификатора';

statisticGroupTypeSku (type, sku) += statisticGroupTypeItem (type, sku);

overCopyItem(s, d) += ACTION (s, d) {
    ASSIGN statisticGroupTypeItem(type, d) <- statisticGroupTypeItem(type, s) WHERE statisticGroupTypeItem(type, s);
}

EXTEND FORM item
    OBJECTS sgt = StatisticGroupType
    PROPERTIES(sgt) READONLY nameStatisticGroupType, idStatisticGroupType
    FILTERS countryStatisticGroupType(sgt) == c

    PROPERTIES(sgt,i) nameStatisticGroupTypeItem
;
EXTEND DESIGN item { regionalPrm { ADD sgt.box;} }


@defineNearestValueCustom(statisticGroup, 'Статистическая группа (по-умолчанию)', StatisticGroup, nameStatisticGroup, statisticGroupType, ItemGroup, itemGroup, defaultItemGroup);


EXTEND FORM itemGroup
    OBJECTS t=StatisticGroupType 
    PROPERTIES(t)   READONLY nameStatisticGroupType, idStatisticGroupType
    PROPERTIES(t, g) nameStatisticGroupStatisticGroupTypeItemGroup
    FILTERS countryStatisticGroupType(t) == defaultCountry()
    
;    
EXTEND DESIGN itemGroup {

    NEW type BEFORE functions.box{
        fill = 1;
        NEW detail {
            fill = 1;
            ADD g.defaultItemGroup {
                columns = 6;
            }
            ADD t.box;
        }          
    }
}

WHEN SESSION CHANGED(itemGroupItem(i)) AND t IS StatisticGroupType AND NOT statisticGroupTypeItem(t, i) DO
    statisticGroupTypeItem(t, i) <- statisticGroupStatisticGroupTypeItemGroup(t, itemGroupItem(i));
