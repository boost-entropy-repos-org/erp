MODULE StoreSaleOrder;

REQUIRE Store, SaleOrder, PriceRoundStore;

NAMESPACE Sale;

// --------------------- НДС расчетный ----------------------- //

@defineDocumentInterfaceHeaderTAX(order, VAT, 'НДС расч.');

CONSTRAINT tax(VAT(UserOrder userOrder)) != Tax.taxVAT OR
           country(VAT(userOrder)) != country(supplierStock[Order](userOrder)) OR
           rangeType(VAT(userOrder)) != RangeType.units
           CHECKED BY VAT[UserOrder]
           MESSAGE 'ошибка: Шкала и страна строки должна соответствовать шкале и строке НДС: продажа';

useCountVATOperation = useCountVAT(operation(UserOrder order));

VAT (UserOrder userOrder) <- range(Tax.taxVAT, store(supplierStock(userOrder)))
        IF useCountVATOperation(userOrder)
        WHEN DO CHANGED(supplierStock(userOrder));

//@deriveDocumentDetailVATHeader(userOrder, VAT, supplierStock);

overVAT (UserOrderDetail d) += VAT(userOrder(d));
WHEN SESSION FORMS userOrder CHANGED(VAT(userOrder(UserOrderDetail d))) DO {
    VAT(d) <- overVAT(d);
}


EXTEND FORM userOrder
    PROPERTIES(o) numberVAT SHOWIF useCountVATOperation(o), valueVAT SHOWIF useCountVATOperation(o);
;

WHEN SESSION FORMS userOrder (CHANGED(quantity(UserOrderDetail d)) OR CHANGED(invoicePrice(d)) OR CHANGED(valueVAT(d))) 
                               AND VAT(userOrder(d)) AND includeVAT(priceListType(d)) DO {
    invoiceSum(d) <- IF individualLegalEntitySale(operation(d)) THEN
            round(quantity(d) * invoicePrice(d), roundCondition(supplierStock(d)))
        ELSE round(quantity(d) * invoicePrice(d), currency(d));
    VATSum(d) <- round(invoiceSum(d) * calcValueVAT(d) / (100.0 + calcValueVAT(d)), currency(d));
    sum(d) <- invoiceSum(d) (-) VATSum(d); 
}