MODULE SaleInvoiceOrderPayment;

REQUIRE SaleInvoiceOrderAggregation, SaleInvoicePayment;

NAMESPACE Sale;
  
cost 'Оплачено из документа' = cost(OutContractLedger payment, orderInvoice(Order order));

addPayment 'Оплатить'(Order order) = ACTION {
    currentInContractLedger() <- orderInvoice(order);
    FOR ADDOBJ p = Payment DO{
        contract(p) <- contractSku(orderInvoice(order));
        date(p) <- currentDate();
        time(p) <- currentTime();
        payer(p) <- customer[Invoice](orderInvoice(order));
        beneficiary(p) <- supplier[Invoice](orderInvoice(order));
        sum(p) <- invoiceSumInvoiceDetail(orderInvoice(order));
        cost(p, InContractLedger invoice) <- sumContract(p) WHERE invoice == currentInContractLedger();
        FORM payment OBJECTS p=p MODAL;
        IF NOT formResult() == FormResult.ok THEN {
            DELETE p;
        }
    }
}

edit 'Редактировать'(Payment payment, Order order) = ACTION {
    currentInContractLedger() <- orderInvoice(order);
    FORM payment OBJECTS p=payment MODAL;
} IMAGE 'edit.png';
    
EXTEND FORM userOrder
    OBJECTS pm = Payment FIXED GRID
    PROPERTIES(pm) READONLY SHOWIF createInvoice(o) seriesNumber, dateTime, namePayer, nameBeneficiary,
                            note, isPosted
    ORDER BY dateTime(pm)
    PROPERTIES(pm, o) SHOWIF createInvoice(o)  cost
    PROPERTIES TODRAW pm FORCE PANEL TOOLBAR SHOWIF createInvoice(o)  addPayment(o), edit(pm, o)
    PROPERTIES(pm) SHOWIF createInvoice(o) DELETESESSION

    FILTERGROUP filters
        FILTER 'Платежи по накладной' cost(pm, o) 'F10' DEFAULT
    FILTERS contract(pm) == contractSku(o)
;

DESIGN userOrder{
    specification.box{
        NEW paymentContainer{
            caption = 'Платежи';
            MOVE pm.box;
        }
    }
}
