MODULE SaleReports;

REQUIRE SaleLedger;

//отчет по продажам

dataInSessionGroup 'Отм.' = DATA LOCAL BOOLEAN (Group);

levelParentGroup (group) = GROUP MIN levelGroupGroup(group, parent) IF dataInSessionGroup(parent)
    BY group;

inParentGroup (group) = TRUE IF levelParentGroup(group);

inSessionGroup 'Отм.' (group) = OVERRIDE
    inParentGroup(group),
    dataInSessionGroup(group);

sessionConcatGroups 'Группы' (groupType) =
    GROUP CONCAT nameGroup(group) IF inSessionGroup(group) AND NOT inSessionGroup(parentGroup(group)),'; '
    BY groupTypeGroup(group);

// --------------------------------- Оптимизация с хранимыми свойствами ------------------------------------- //

quantitySkuStock 'Количество' = DATA LOCAL NUMERIC[16,5] (Sku, Stock); 
costSumSkuStock 'Себестоимость' = DATA LOCAL NUMERIC[16,2] (Sku, Stock); 
markupSumSkuStock 'Надбавка' = DATA LOCAL NUMERIC[16,2] (Sku, Stock);
sumVATSkuStock 'Сумма НДС' = DATA LOCAL NUMERIC[16,2] (Sku, Stock);
sumSkuStock 'Сумма' = DATA LOCAL NUMERIC[16,2] (Sku, Stock);

quantityGroupStock 'Количество' = DATA LOCAL NUMERIC[16,5] (Group, Stock); 
sumVATGroupStock 'Сумма НДС' = DATA LOCAL NUMERIC[16,2] (Group, Stock);
costSumGroupStock 'Себестоимость' = DATA LOCAL NUMERIC[16,2] (Group, Stock);
markupSumGroupStock 'Надбавка' = DATA LOCAL NUMERIC[16,2] (Group, Stock);
sumGroupStock 'Сумма' = DATA LOCAL NUMERIC[16,2] (Group, Stock);

fillSaleReportDateFromTo 'Рассчитать' = ACTION (st, gt, df, dt) {

    quantitySkuStock(sk, st) <- NUMERIC[16,5](quantitySoldSkuStockDateFromTo(sk, st, df, dt));    
    sumSkuStock(sk, st) <- NUMERIC[16,2](sumSoldSkuStockDateFromTo(sk, st, df, dt));
    sumVATSkuStock(sk, st) <- NUMERIC[16,2](sumVATSoldSkuStockDateFromTo(sk, st, df, dt));
    costSumSkuStock(sk, st) <- NUMERIC[16,2](costSumSoldSkuStockDateFromTo(sk, st, df, dt));
    markupSumSkuStock(sk, st) <- sumSkuStock(sk, st) (-) sumVATSkuStock(sk, st) (-) costSumSkuStock(sk, st);

    quantityGroupStock(g, st) <- [= GROUP SUM quantitySkuStock(sk, st) BY groupGroupTypeSku(gt, sk), st](g, st) IF  groupTypeGroup(g) == gt;
    sumGroupStock(g, st) <- [= GROUP SUM sumSkuStock(sk, st) BY groupGroupTypeSku(gt, sk), st](g, st) IF groupTypeGroup(g) == gt;
    sumVATGroupStock(g, st) <- [= GROUP SUM sumVATSkuStock(sk, st) BY groupGroupTypeSku(gt, sk), st](g, st) IF groupTypeGroup(g) == gt;
    costSumGroupStock(g, st) <- [= GROUP SUM costSumSkuStock(sk, st) BY groupGroupTypeSku(gt, sk), st](g, st) IF groupTypeGroup(g) == gt;
    markupSumGroupStock(g, st) <- [= GROUP SUM markupSumSkuStock(sk, st) BY groupGroupTypeSku(gt, sk), st](g, st) IF groupTypeGroup(g) == gt;                     
}
recSumGroupStock 'Сумма' (group, stock) =
    GROUP SUM sumGroupStock (child, stock) IF isParentGroupGroup(child, parent)
    BY parent, stock;
recSumVATGroupStock 'Сумма НДС' (group, stock) =
    GROUP SUM sumVATGroupStock (child, stock) IF isParentGroupGroup(child, parent)
    BY parent, stock;
recCostSumGroupStock 'Себестоимость' (group, stock) =
    GROUP SUM costSumGroupStock (child, stock) IF isParentGroupGroup(child, parent)
    BY parent, stock;
recMarkupSumGroupStock 'Надбавка' (group, stock) =
    GROUP SUM markupSumGroupStock (child, stock) IF isParentGroupGroup(child, parent)
    BY parent, stock;
            
//суммы продаж по группе рекурсивно 
sumRecSalesSkuGroupStockDateDate 'Сумма продаж (всего)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumSaleLedger(saleLedger) IF isParentGroupSku(group, skuSaleLedger(saleLedger)) AND
                                           activeSaleLedger(saleLedger) AND
                                           dateSaleLedger(saleLedger) >= dateFrom AND
                                           dateSaleLedger(saleLedger) <= dateTo
    BY group, stockSaleLedger(saleLedger), dateFrom, dateTo;

//суммы продаж по покупателю
costSumSalesGroupTypeCustomerStockDateDate 'Себестоимость продаж (по покупателю)' (groupType, customer, stock, dateFrom, dateTo) =
    GROUP SUM costSumSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                               inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                               dateSaleLedger(saleLedger) >= dateFrom AND
                                               dateSaleLedger(saleLedger) <= dateTo
    BY groupType, customerSaleLedger(saleLedger), stockSaleLedger(saleLedger), dateFrom, dateTo;
markupSumSalesGroupTypeCustomerStockDateDate 'Надбавка (по покупателю)'(groupType, customer, stock, dateFrom, dateTo) =
    GROUP SUM markupSumSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                               inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                               dateSaleLedger(saleLedger) >= dateFrom AND
                                               dateSaleLedger(saleLedger) <= dateTo
    BY groupType, customerSaleLedger(saleLedger), stockSaleLedger(saleLedger), dateFrom, dateTo;
sumVATSalesGroupTypeCustomerStockDateDate 'Сумма НДС (по покупателю)'(groupType, customer, stock, dateFrom, dateTo) =
    GROUP SUM sumVATSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                              inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                              dateSaleLedger(saleLedger) >= dateFrom AND
                                              dateSaleLedger(saleLedger) <= dateTo
    BY groupType, customerSaleLedger(saleLedger), stockSaleLedger(saleLedger), dateFrom, dateTo;
sumSalesGroupTypeCustomerStockDateDate 'Сумма продаж (по покупателю)' (groupType, customer, stock, dateFrom, dateTo) =
    GROUP SUM sumSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                           inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                           dateSaleLedger(saleLedger) >= dateFrom AND
                                           dateSaleLedger(saleLedger) <= dateTo
    BY groupType, customerSaleLedger(saleLedger), stockSaleLedger(saleLedger), dateFrom, dateTo;

//суммы продаж по SKU    
costSumGroupTypeStock 'Итоговая себестоимость продаж' (groupType, stock) =
    GROUP SUM costSumSkuStock(sku, stock) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType, stock PREFCHARWIDTH 15;
markupSumGroupTypeStock 'Итоговая надбавка продаж' (groupType, stock) =
    GROUP SUM markupSumSkuStock(sku, stock) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType, stock PREFCHARWIDTH 15;
sumVATGroupTypeStock 'Итоговая сумма НДС продаж' (groupType, stock) =
    GROUP SUM sumVATSkuStock(sku, stock) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType, stock PREFCHARWIDTH 15;
sumGroupTypeStock 'Итоговая сумма продаж' (groupType, stock) =
    GROUP SUM sumSkuStock(sku, stock) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType, stock PREFCHARWIDTH 15;       

//формы
FORM printListSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,
                                sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS activeSaleLedger(s),
            stockSaleLedger(s) == st,
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            inSessionGroup(groupGroupTypeSku(gt, skuSaleLedger(s)))
;

printListSalesReport 'Списком' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printListSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printListSalesReportXLS 'Списком (XLS)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printListSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;    
    
inReportSku= DATA LOCAL BOOLEAN (Sku);
filterSkuStock (s, st) =   quantitySkuStock(s, st) OR 
                                      costSumSkuStock(s, st) OR
                                      markupSumSkuStock(s, st) OR 
                                      sumVATSkuStock(s, st) OR
                                      sumSkuStock(s, st);
filterGroupStock (g, st) = quantityGroupStock(g, st) OR 
                                      costSumGroupStock(g, st) OR
                                      markupSumGroupStock(g, st) OR 
                                      sumVATGroupStock(g, st) OR
                                      sumGroupStock(g, st);
FORM printListSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt,st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,
                               sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = Sku
    PROPERTIES(s) READONLY nameSku
    PROPERTIES(s, st) READONLY quantitySkuStock, costSumSkuStock, markupSumSkuStock,
                                       sumVATSkuStock, sumSkuStock
    ORDER BY nameSku(s)
    FILTERS inSessionGroup(groupGroupTypeSku(gt, s)),
            inReportSku(s) AND st IS Stock AND dt IS DATE AND df IS DATE
;

printListSkuSalesReport 'Списком(по товарам)' (stock, groupType, dateFrom, dateTo) = ACTION {
    inReportSku(sku) <- NULL;
    inReportSku(sku) <- filterSkuStock (sku, stock) WHERE filterSkuStock (sku, stock);
    FORM printListSkuSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT;
    
} IMAGE 'print.png' IN print;
printListSkuSalesReportXLS 'Списком(по товарам) (XLS)' (stock, groupType, dateFrom, dateTo) = ACTION {
    inReportSku(sku) <- NULL;
    inReportSku(sku) <- filterSkuStock (sku, stock) WHERE filterSkuStock (sku, stock);
    FORM printListSkuSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS;
    
} IMAGE 'print.png' IN print;     

FORM printSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,
                                        sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    PROPERTIES(sk, st) READONLY costSumGroupStock, markupSumGroupStock, sumVATGroupStock, sumGroupStock
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS activeSaleLedger(s),
            stockSaleLedger(s) == st,
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            groupGroupTypeSku(gt, skuSaleLedger(s)) == sk
;

printSalesReport 'По группам' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printSalesReportXLS 'По группам (XLS)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    PROPERTIES(sk, st) READONLY costSumGroupStock, markupSumGroupStock, sumVATGroupStock, sumGroupStock
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES(s) READONLY nameSku
    PROPERTIES(s, st) READONLY quantitySkuStock, costSumSkuStock, markupSumSkuStock, sumVATSkuStock, sumSkuStock
    ORDER BY nameSku(s)
    FILTERS groupGroupTypeSku(gt, s) == sk,
            filterSkuStock(s,st) AND dt IS DATE AND df IS DATE
;

printSkuSalesReport 'По товарам(группы)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printSkuSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printSkuSalesReportXLS 'По товарам(группы) (XLS)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printSkuSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printGroupSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    PROPERTIES(sk, st) READONLY costSumGroupStock, markupSumGroupStock, sumVATGroupStock, sumGroupStock
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt,
            filterGroupStock(sk, st) AND dt IS DATE AND  df IS DATE
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT
;

printGroupSalesReport 'По группам' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printGroupSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printGroupSalesReportXLS 'По группам (XLS)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printGroupSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printGroupCustomerSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    PROPERTIES(gt, l, st, df, dt) READONLY costSumSalesGroupTypeCustomerStockDateDate, markupSumSalesGroupTypeCustomerStockDateDate,
                                           sumVATSalesGroupTypeCustomerStockDateDate, sumSalesGroupTypeCustomerStockDateDate
    FILTERS isBuyerLegalEntity(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' activeLegalEntity(l) 'shift F10' DEFAULT
    
    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS activeSaleLedger(s),
            inSessionGroup(groupGroupTypeSku(gt, skuSaleLedger(s))),
            stockSaleLedger(s) == st,
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            customerSaleLedger(s) == l
;

printGroupCustomerSalesReport 'По покупателям' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printGroupCustomerSalesReportXLS 'По покупателям (XLS)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printGroupCustomerSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    PROPERTIES(gt, l, st, df, dt) READONLY costSumSalesGroupTypeCustomerStockDateDate, markupSumSalesGroupTypeCustomerStockDateDate,
                                           sumVATSalesGroupTypeCustomerStockDateDate, sumSalesGroupTypeCustomerStockDateDate
    FILTERS isBuyerLegalEntity(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' activeLegalEntity(l) 'shift F10' DEFAULT
    
    OBJECTS s = Sku
    PROPERTIES(s) READONLY nameSku
    PROPERTIES(s, st, l, df, dt) READONLY quantitySoldSkuStockCustomerDateFromTo, costSumSoldSkuStockCustomerDateFromTo, markupSumSoldSkuStockCustomerDateFromTo,
                                          sumVATSoldSkuStockCustomerDateFromTo, sumSoldSkuStockCustomerDateFromTo
    ORDER BY nameSku(s)
    FILTERS inSessionGroup(groupGroupTypeSku(gt, s)),
            quantitySoldSkuStockCustomerDateFromTo(s, st, l, df, dt) OR costSumSoldSkuStockCustomerDateFromTo(s, st, l, df, dt) OR
            markupSumSoldSkuStockCustomerDateFromTo(s, st, l, df, dt) OR sumVATSoldSkuStockCustomerDateFromTo(s, st, l, df, dt) OR
            sumSoldSkuStockCustomerDateFromTo(s, st, l, df, dt)
;

printGroupCustomerSkuSalesReport 'По товарам(покупатели)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSkuSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printGroupCustomerSkuSalesReportXLS 'По товарам(покупатели) (XLS)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSkuSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printCustomerSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    PROPERTIES(gt, l, st, df, dt) READONLY costSumSalesGroupTypeCustomerStockDateDate, markupSumSalesGroupTypeCustomerStockDateDate,
                                           sumVATSalesGroupTypeCustomerStockDateDate, sumSalesGroupTypeCustomerStockDateDate
    FILTERS isBuyerLegalEntity(l),
            costSumSalesGroupTypeCustomerStockDateDate(gt, l, st, df, dt) OR markupSumSalesGroupTypeCustomerStockDateDate(gt, l, st, df, dt) OR
            sumVATSalesGroupTypeCustomerStockDateDate(gt, l, st, df, dt) OR sumSalesGroupTypeCustomerStockDateDate(gt, l, st, df, dt)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' activeLegalEntity(l) 'shift F10' DEFAULT        
;

printCustomerSalesReport 'По покупателям' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printCustomerSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printCustomerSalesReportXLS 'По покупателям (XLS)' (stock, groupType, dateFrom, dateTo) =
    ACTION FORM printCustomerSalesReport OBJECTS st = stock, gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
idSkuSaleLedger 'Код товара' (s) = idSku(skuSaleLedger(s));
FORM salesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st) READONLY sumGroupTypeStock
//    PROPERTIES(gt) READONLY sessionConcatGroups

    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES inSessionGroup(sk)
    PROPERTIES READONLY orderGroup(sk), skuTreeName = nameGroup(sk)
    PROPERTIES(sk, st) READONLY recCostSumGroupStock, recMarkupSumGroupStock, 
                                        recSumVATGroupStock, recSumGroupStock
    ORDER BY orderGroup(sk), skuTreeName
    FILTERS groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, idSkuSaleLedger SHOWIF showIDs(), descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS isParentGroupSku(sk, skuSaleLedger(s)),
            activeSaleLedger(s),
            stockSaleLedger(s) == st,
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt
    PROPERTIES(st, gt,df, dt) printListSalesReport, printListSkuSalesReport, printSalesReport, printSkuSalesReport, printGroupSalesReport,
                           printGroupCustomerSalesReport, printGroupCustomerSkuSalesReport, printCustomerSalesReport
    PROPERTIES(st, gt,df, dt) printListSalesReportXLS, printListSkuSalesReportXLS, printSalesReportXLS, printSkuSalesReportXLS, printGroupSalesReportXLS,
                           printGroupCustomerSalesReportXLS, printGroupCustomerSkuSalesReportXLS, printCustomerSalesReportXLS                           
    EVENTS 
        ON CHANGE gt fillSaleReportDateFromTo(st, gt, df, dt), 
        ON CHANGE df fillSaleReportDateFromTo(st, gt, df, dt), 
        ON CHANGE dt fillSaleReportDateFromTo(st, gt, df, dt),
        ON CHANGE st fillSaleReportDateFromTo(st, gt, df, dt)                       
                           
;

DESIGN salesReport {
    NEW top {
        type = CONTAINERH;
        NEW dateContainer{
            caption = 'Период';
            type = CONTAINERH;
            MOVE PROPERTY(dateFrom){caption = 'Дата (с)';}
            MOVE PROPERTY(dateTo){caption = 'Дата (по)';}
        }
        MOVE st.box;
        MOVE gt.box;
        NEW sumContainer{
            caption = 'Итоговые суммы';
            type = CONTAINERH;
            MOVE PROPERTY(sumGroupTypeStock(gt,st));
        }
    }

    NEW center {
        fill = 1;
        type = SPLITH;

        MOVE skuTree.tree.box;
        NEW tabContainer {
            fill = 1;
            type = TABBED;
            NEW salesContainer {
                type = CONTAINERV;
                caption = 'Продажи';

                NEW rowSalesContainer{
                    type = CONTAINERH;
                    NEW firstColumnSalesContainer{
                        caption = 'С детализацией';
                        type = COLUMNS;
                        columns = 2;
                        MOVE PROPERTY(printSalesReport(st,gt,df,dt));
                        MOVE PROPERTY(printSkuSalesReport(st,gt,df,dt));
                        MOVE PROPERTY(printGroupCustomerSalesReport(st,gt,df,dt));
                        MOVE PROPERTY(printGroupCustomerSkuSalesReport(st,gt,df,dt));
                    }
                    NEW secondColumnSalesContainer{
                        caption = 'Без детализации';
                        type = CONTAINERV;
                        MOVE PROPERTY(printGroupSalesReport(st,gt,df,dt));
                        MOVE PROPERTY(printCustomerSalesReport(st,gt,df,dt));
                    }
                    NEW thirdColumnSalesContainer{
                        caption = 'Список';
                        type = CONTAINERV;
                        MOVE PROPERTY(printListSalesReport(st,gt,df,dt));
                        MOVE PROPERTY(printListSkuSalesReport(st,gt,df,dt));
                    }
                }
                NEW rowSalesContainerXLS{
                    type = CONTAINERH;
                    NEW firstColumnSalesContainerXLS{
                        caption = 'С детализацией';
                        type = COLUMNS;
                        columns = 2;
                        MOVE PROPERTY(printSalesReportXLS(st,gt,df,dt));
                        MOVE PROPERTY(printSkuSalesReportXLS(st,gt,df,dt));
                        MOVE PROPERTY(printGroupCustomerSalesReportXLS(st,gt,df,dt));
                        MOVE PROPERTY(printGroupCustomerSkuSalesReportXLS(st,gt,df,dt));
                    }
                    NEW secondColumnSalesContainerXLS{
                        caption = 'Без детализации';
                        type = CONTAINERV;
                        MOVE PROPERTY(printGroupSalesReportXLS(st,gt,df,dt));
                        MOVE PROPERTY(printCustomerSalesReportXLS(st,gt,df,dt));
                    }
                    NEW thirdColumnSalesContainerXLS{
                        caption = 'Список';
                        type = CONTAINERV;
                        MOVE PROPERTY(printListSalesReportXLS(st,gt,df,dt));
                        MOVE PROPERTY(printListSkuSalesReportXLS(st,gt,df,dt));
                    }
                }                
                MOVE s.box;
            }
        }
    }
    MOVE functions.box;
}

NAVIGATOR {
    salesReports {
        ADD salesReport;
    }
}