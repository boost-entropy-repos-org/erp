MODULE SaleReports;

REQUIRE SaleLedger;

//отчет по продажам

dataInSessionGroup 'Отм.' = DATA LOCAL BOOLEAN (Group);

levelParentGroup (group) = GROUP MIN levelGroupGroup(group, parent) IF dataInSessionGroup(parent)
    BY group;

inParentGroup (group) = TRUE IF levelParentGroup(group);

inSessionGroup 'Отм.' (group) = OVERRIDE
    inParentGroup(group),
    dataInSessionGroup(group);

sessionConcatGroups 'Группы' (groupType) =
    GROUP CONCAT nameGroup(group) IF inSessionGroup(group) AND NOT inSessionGroup(parentGroup(group)),'; '
    BY groupTypeGroup(group);

// --------------------------------- Оптимизация с хранимыми свойствами ------------------------------------- //

quantitySkuStock 'Количество' = DATA LOCAL NUMERIC[16,5] (Sku); 
costSumSkuStock 'Себестоимость' = DATA LOCAL NUMERIC[16,2] (Sku); 
markupSumSkuStock 'Надбавка' = DATA LOCAL NUMERIC[16,2] (Sku);
sumVATSkuStock 'Сумма НДС' = DATA LOCAL NUMERIC[16,2] (Sku);
sumSkuStock 'Сумма' = DATA LOCAL NUMERIC[16,2] (Sku);

quantityGroupStock 'Количество' = DATA LOCAL NUMERIC[16,5] (Group); 
sumVATGroupStock 'Сумма НДС' = DATA LOCAL NUMERIC[16,2] (Group);
costSumGroupStock 'Себестоимость' = DATA LOCAL NUMERIC[16,2] (Group);
markupSumGroupStock 'Надбавка' = DATA LOCAL NUMERIC[16,2] (Group);
sumGroupStock 'Сумма' = DATA LOCAL NUMERIC[16,2] (Group);

inSaleReportStock 'Вкл.' = DATA LOCAL BOOLEAN (Stock);
inSaleReportStocks 'Склады' () =
    GROUP CONCAT nameStock(st) IF inSaleReportStock(st) ,', ' PREFCHARWIDTH 30;
defaultStockSaleReport = GROUP MIN st IF inSaleReportStock(st);

fillSaleReportDateFromTo 'Сформировать' = ACTION (gt, df, dt) {

    quantitySkuStock(sk) <- NULL;           
    sumSkuStock(sk) <- NULL;  
    sumVATSkuStock(sk) <- NULL;  
    costSumSkuStock(sk) <- NULL;  
    markupSumSkuStock(sk) <- NULL;  

    quantityGroupStock(g) <- NULL;  
    sumGroupStock(g) <-NULL;  
    sumVATGroupStock(g) <- NULL;  
    costSumGroupStock(g) <- NULL;  
    markupSumGroupStock(g) <- NULL; 

    quantitySkuStock(sk) <- NUMERIC[16,5]([ = GROUP SUM quantitySoldSkuStockDateFromTo(sk, st, df, dt) IF inSaleReportStock(st) BY sk, df, dt](sk, df, dt));           
    sumSkuStock(sk) <- NUMERIC[16,2]([ = GROUP SUM sumSoldSkuStockDateFromTo(sk, st, df, dt) IF inSaleReportStock(st) BY sk, df, dt](sk, df, dt));   
    sumVATSkuStock(sk) <- NUMERIC[16,2]([ = GROUP SUM sumVATSoldSkuStockDateFromTo(sk, st, df, dt) IF inSaleReportStock(st) BY sk, df, dt](sk, df, dt));   
    costSumSkuStock(sk) <- NUMERIC[16,2]([ = GROUP SUM costSumSoldSkuStockDateFromTo(sk, st, df, dt) IF inSaleReportStock(st) BY sk, df, dt](sk, df, dt));   
    markupSumSkuStock(sk) <- sumSkuStock(sk) (-) sumVATSkuStock(sk) (-) costSumSkuStock(sk);

    quantityGroupStock(g) <- [= GROUP SUM quantitySkuStock(sk) BY groupGroupTypeSku(gt, sk)](g) IF  groupTypeGroup(g) == gt;
    sumGroupStock(g) <- [= GROUP SUM sumSkuStock(sk) BY groupGroupTypeSku(gt, sk)](g) IF groupTypeGroup(g) == gt;
    sumVATGroupStock(g) <- [= GROUP SUM sumVATSkuStock(sk) BY groupGroupTypeSku(gt, sk)](g) IF groupTypeGroup(g) == gt;
    costSumGroupStock(g) <- [= GROUP SUM costSumSkuStock(sk) BY groupGroupTypeSku(gt, sk)](g) IF groupTypeGroup(g) == gt;
    markupSumGroupStock(g) <- [= GROUP SUM markupSumSkuStock(sk) BY groupGroupTypeSku(gt, sk)](g) IF groupTypeGroup(g) == gt;                     
}

filterSkuStockDateFromTo (s,st,df,dt) =   quantitySoldSkuStockDateFromTo(s,st,df,dt) OR 
                                                     sumSoldSkuStockDateFromTo(s,st,df,dt) OR
                                                     sumVATSoldSkuStockDateFromTo(s,st,df,dt) OR 
                                                     costSumSoldSkuStockDateFromTo(s,st,df,dt);

recSumGroupStock 'Сумма' (group) =
    GROUP SUM sumGroupStock (child) IF isParentGroupGroup(child, parent)
    BY parent;
recSumVATGroupStock 'Сумма НДС' (group) =
    GROUP SUM sumVATGroupStock (child) IF isParentGroupGroup(child, parent)
    BY parent;
recCostSumGroupStock 'Себестоимость' (group) =
    GROUP SUM costSumGroupStock (child) IF isParentGroupGroup(child, parent)
    BY parent;
recMarkupSumGroupStock 'Надбавка' (group) =
    GROUP SUM markupSumGroupStock (child) IF isParentGroupGroup(child, parent)
    BY parent;
            
//суммы продаж по группе рекурсивно 
sumRecSalesSkuGroupStockDateDate 'Сумма продаж (всего)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumSaleLedger(saleLedger) IF isParentGroupSku(group, skuSaleLedger(saleLedger)) AND
                                           activeSaleLedger(saleLedger) AND
                                           dateSaleLedger(saleLedger) >= dateFrom AND
                                           dateSaleLedger(saleLedger) <= dateTo
    BY group, stockSaleLedger(saleLedger), dateFrom, dateTo;

//суммы продаж по покупателю
costSumSalesGroupTypeCustomerStockDateDate 'Себестоимость продаж (по покупателю)' (groupType, customer, dateFrom, dateTo) =
    GROUP SUM costSumSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                               inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                               dateSaleLedger(saleLedger) >= dateFrom AND
                                               dateSaleLedger(saleLedger) <= dateTo AND
                                               inSaleReportStock(stockSaleLedger(saleLedger))
    BY groupType, customerSaleLedger(saleLedger), dateFrom, dateTo;
markupSumSalesGroupTypeCustomerStockDateDate 'Надбавка (по покупателю)'(groupType, customer, dateFrom, dateTo) =
    GROUP SUM markupSumSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                               inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                               dateSaleLedger(saleLedger) >= dateFrom AND
                                               dateSaleLedger(saleLedger) <= dateTo AND
                                               inSaleReportStock(stockSaleLedger(saleLedger))
    BY groupType, customerSaleLedger(saleLedger), dateFrom, dateTo;
sumVATSalesGroupTypeCustomerStockDateDate 'Сумма НДС (по покупателю)'(groupType, customer, dateFrom, dateTo) =
    GROUP SUM sumVATSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                              inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                              dateSaleLedger(saleLedger) >= dateFrom AND
                                              dateSaleLedger(saleLedger) <= dateTo AND 
                                              inSaleReportStock(stockSaleLedger(saleLedger))
    BY groupType, customerSaleLedger(saleLedger), dateFrom, dateTo;
sumSalesGroupTypeCustomerStockDateDate 'Сумма продаж (по покупателю)' (groupType, customer, dateFrom, dateTo) =
    GROUP SUM sumSaleLedger(saleLedger) IF activeSaleLedger(saleLedger) AND
                                           inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                           dateSaleLedger(saleLedger) >= dateFrom AND
                                           dateSaleLedger(saleLedger) <= dateTo AND
                                           inSaleReportStock(stockSaleLedger(saleLedger))
    BY groupType, customerSaleLedger(saleLedger), dateFrom, dateTo;

//суммы продаж по SKU    
costSumGroupTypeStock 'Итоговая себестоимость продаж' (groupType) =
    GROUP SUM costSumSkuStock(sku) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;
markupSumGroupTypeStock 'Итоговая надбавка продаж' (groupType) =
    GROUP SUM markupSumSkuStock(sku) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;
sumVATGroupTypeStock 'Итоговая сумма НДС продаж' (groupType) =
    GROUP SUM sumVATSkuStock(sku) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;
sumGroupTypeStock 'Итоговая сумма продаж' (groupType) =
    GROUP SUM sumSkuStock(sku) IF inSessionGroup(groupGroupTypeSku(groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;       

//формы
FORM printListSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)
    PROPERTIES inSaleReportStocks()
    
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,
                                sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameStockSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS activeSaleLedger(s),
            inSaleReportStock(stockSaleLedger(s)),
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            inSessionGroup(groupGroupTypeSku(gt, skuSaleLedger(s)))
;

printListSalesReport 'Списком' (groupType, dateFrom, dateTo) =
    ACTION FORM printListSalesReport OBJECTS  gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printListSalesReportXLS 'Списком (XLS)' (groupType, dateFrom, dateTo) =
    ACTION FORM printListSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;    
    
inReportSku= DATA LOCAL BOOLEAN (Sku);
filterSkuStock (s) =   quantitySkuStock(s) OR 
                                      costSumSkuStock(s) OR
                                      markupSumSkuStock(s) OR 
                                      sumVATSkuStock(s) OR
                                      sumSkuStock(s);
filterGroupStock (g) = quantityGroupStock(g) OR 
                                      costSumGroupStock(g) OR
                                      markupSumGroupStock(g) OR 
                                      sumVATGroupStock(g) OR
                                      sumGroupStock(g);


FORM printListSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)
    PROPERTIES inSaleReportStocks()
    
    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,
                               sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = Sku
    PROPERTIES(s) READONLY nameSku
    PROPERTIES(s) READONLY quantitySkuStock, costSumSkuStock, markupSumSkuStock,
                                       sumVATSkuStock, sumSkuStock
    ORDER BY nameSku(s)
    FILTERS inSessionGroup(groupGroupTypeSku(gt, s)),
            inReportSku(s) AND dt IS DATE AND df IS DATE
;

printListSkuSalesReport 'Списком(по товарам)' (groupType, dateFrom, dateTo) = ACTION {
    inReportSku(sku) <- NULL;
    inReportSku(sku) <- filterSkuStock (sku) WHERE filterSkuStock (sku);
    FORM printListSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT;
    
} IMAGE 'print.png' IN print;
printListSkuSalesReportXLS 'Списком(по товарам) (XLS)' (groupType, dateFrom, dateTo) = ACTION {
    inReportSku(sku) <- NULL;
    inReportSku(sku) <- filterSkuStock (sku) WHERE filterSkuStock (sku);
    FORM printListSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS;
    
} IMAGE 'print.png' IN print;     

FORM printSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)
    PROPERTIES inSaleReportStocks()
    
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,
                                        sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    PROPERTIES(sk) READONLY costSumGroupStock, markupSumGroupStock, sumVATGroupStock, sumGroupStock
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameStockSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS activeSaleLedger(s),
            inSaleReportStock(stockSaleLedger(s)),
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            groupGroupTypeSku(gt, skuSaleLedger(s)) == sk
;

printSalesReport 'По группам' (groupType, dateFrom, dateTo) =
    ACTION FORM printSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printSalesReportXLS 'По группам (XLS)' (groupType, dateFrom, dateTo) =
    ACTION FORM printSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    PROPERTIES(sk) READONLY costSumGroupStock, markupSumGroupStock, sumVATGroupStock, sumGroupStock
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES(s) READONLY nameSku
    PROPERTIES(s) READONLY quantitySkuStock, costSumSkuStock, markupSumSkuStock, sumVATSkuStock, sumSkuStock
    ORDER BY nameSku(s)
    FILTERS groupGroupTypeSku(gt, s) == sk,
            filterSkuStock(s) AND dt IS DATE AND df IS DATE
;

printSkuSalesReport 'По товарам(группы)' (groupType, dateFrom, dateTo) =
    ACTION FORM printSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printSkuSalesReportXLS 'По товарам(группы) (XLS)' (groupType, dateFrom, dateTo) =
    ACTION FORM printSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printGroupSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    PROPERTIES(sk) READONLY costSumGroupStock, markupSumGroupStock, sumVATGroupStock, sumGroupStock
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt,
            filterGroupStock(sk) AND dt IS DATE AND  df IS DATE
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT
;

printGrSalesReport 'По группам' (groupType, dateFrom, dateTo) =
    ACTION FORM printGroupSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printGrSalesReportXLS 'По группам (XLS)' (groupType, dateFrom, dateTo) =
    ACTION FORM printGroupSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printGroupCustomerSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock,sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesGroupTypeCustomerStockDateDate, markupSumSalesGroupTypeCustomerStockDateDate,
                                           sumVATSalesGroupTypeCustomerStockDateDate, sumSalesGroupTypeCustomerStockDateDate
    FILTERS isBuyerLegalEntity(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' activeLegalEntity(l) 'shift F10' DEFAULT
    
    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameStockSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS activeSaleLedger(s),
            inSessionGroup(groupGroupTypeSku(gt, skuSaleLedger(s))),
            inSaleReportStock(stockSaleLedger(s)),
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            customerSaleLedger(s) == l
;

printGrCustomerSalesReport 'По покупателям' (groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printGrCustomerSalesReportXLS 'По покупателям (XLS)' (groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
    
quantitySoldSkuCustomerDateFromTo 'Продано за интервал (кол-во)' (sku, customer, dateFrom, dateTo) = GROUP SUM
        quantitySoldSkuStockCustomerDateFromTo(sku, stock, customer, dateFrom, dateTo) IF inSaleReportStock(stock)
        BY sku, customer, dateFrom, dateTo;

costSumSoldSkuCustomerDateFromTo 'Себестоимость проданного за интервал' (sku, customer, dateFrom, dateTo) = GROUP SUM        
        costSumSoldSkuStockCustomerDateFromTo(sku, stock, customer, dateFrom, dateTo) IF inSaleReportStock(stock)
        BY sku, customer, dateFrom, dateTo;

markupSumSoldSkuCustomerDateFromTo 'Надбавка проданного за интервал' (sku, customer, dateFrom, dateTo) = GROUP SUM
        markupSumSoldSkuStockCustomerDateFromTo(sku, stock, customer, dateFrom, dateTo) IF inSaleReportStock(stock)
        BY sku, customer, dateFrom, dateTo;

sumVATSoldSkuCustomerDateFromTo 'Сумма НДС проданного за интервал' (sku, customer, dateFrom, dateTo) = GROUP SUM
        sumVATSoldSkuStockCustomerDateFromTo(sku, stock, customer, dateFrom, dateTo) IF inSaleReportStock(stock)
        BY sku, customer, dateFrom, dateTo;

sumSoldSkuCustomerDateFromTo 'Продано за интервал (сумма)' (sku, customer, dateFrom, dateTo) = GROUP SUM
        sumSoldSkuStockCustomerDateFromTo(sku, stock, customer, dateFrom, dateTo) IF inSaleReportStock(stock)
        BY sku, customer, dateFrom, dateTo;
    
    
FORM printGroupCustomerSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesGroupTypeCustomerStockDateDate, markupSumSalesGroupTypeCustomerStockDateDate,
                                           sumVATSalesGroupTypeCustomerStockDateDate, sumSalesGroupTypeCustomerStockDateDate
    FILTERS isBuyerLegalEntity(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' activeLegalEntity(l) 'shift F10' DEFAULT
    
    OBJECTS s = Sku
    PROPERTIES(s) READONLY nameSku
    PROPERTIES(s, l, df, dt) READONLY quantitySoldSkuCustomerDateFromTo, costSumSoldSkuCustomerDateFromTo, markupSumSoldSkuCustomerDateFromTo,
                                          sumVATSoldSkuCustomerDateFromTo, sumSoldSkuCustomerDateFromTo
    ORDER BY nameSku(s)
    FILTERS inSessionGroup(groupGroupTypeSku(gt, s)),
            quantitySoldSkuCustomerDateFromTo(s, l, df, dt) OR costSumSoldSkuCustomerDateFromTo(s, l, df, dt) OR
            markupSumSoldSkuCustomerDateFromTo(s, l, df, dt) OR sumVATSoldSkuCustomerDateFromTo(s, l, df, dt) OR
            sumSoldSkuCustomerDateFromTo(s, l, df, dt)
;

printGroupCustomerSkuSalesReport 'По товарам(покупатели)' (groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printGroupCustomerSkuSalesReportXLS 'По товарам(покупатели) (XLS)' (groupType, dateFrom, dateTo) =
    ACTION FORM printGroupCustomerSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM printCustomerSalesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY costSumGroupTypeStock, markupSumGroupTypeStock, sumVATGroupTypeStock, sumGroupTypeStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesGroupTypeCustomerStockDateDate, markupSumSalesGroupTypeCustomerStockDateDate,
                                           sumVATSalesGroupTypeCustomerStockDateDate, sumSalesGroupTypeCustomerStockDateDate
    FILTERS isBuyerLegalEntity(l),
            costSumSalesGroupTypeCustomerStockDateDate(gt, l, df, dt) OR markupSumSalesGroupTypeCustomerStockDateDate(gt, l, df, dt) OR
            sumVATSalesGroupTypeCustomerStockDateDate(gt, l, df, dt) OR sumSalesGroupTypeCustomerStockDateDate(gt, l, df, dt)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' activeLegalEntity(l) 'shift F10' DEFAULT        
;

printCustomerSalesReport 'По покупателям' (groupType, dateFrom, dateTo) =
    ACTION FORM printCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;
printCustomerSalesReportXLS 'По покупателям (XLS)' (groupType, dateFrom, dateTo) =
    ACTION FORM printCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo PRINT XLS IMAGE 'print.png' IN print;
    
FORM salesReport 'Отчет по продажам'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock //FIXED PANEL
    PROPERTIES(st) READONLY idStock, nameStock
    FILTERS isCompanyStock(st)
    PROPERTIES inSaleReportStock(st)
    FILTERGROUP select FILTER 'Отм.' inSaleReportStock(st) 'F6'
    
    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sumGroupTypeStock
//    PROPERTIES(gt) READONLY sessionConcatGroups

    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES inSessionGroup(sk)
    PROPERTIES READONLY orderGroup(sk), skuTreeName = nameGroup(sk)
    PROPERTIES(sk) READONLY recCostSumGroupStock, recMarkupSumGroupStock, 
                                        recSumVATGroupStock, recSumGroupStock
    ORDER BY orderGroup(sk), skuTreeName
    FILTERS groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameStockSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, idSkuSaleLedger SHOWIF showIDs(), descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger(s)
    FILTERS isParentGroupSku(sk, skuSaleLedger(s)),
            activeSaleLedger(s),
            inSaleReportStock(stockSaleLedger(s)),
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt
    PROPERTIES(gt,df, dt) printListSalesReport, printListSkuSalesReport, printSalesReport, printSkuSalesReport, printGrSalesReport,
                           printGrCustomerSalesReport, printGroupCustomerSkuSalesReport, printCustomerSalesReport
    PROPERTIES(gt,df, dt) printListSalesReportXLS, printListSkuSalesReportXLS, printSalesReportXLS, printSkuSalesReportXLS, printGrSalesReportXLS,
                           printGrCustomerSalesReportXLS, printGroupCustomerSkuSalesReportXLS, printCustomerSalesReportXLS
    PROPERTIES fillSaleReportDateFromTo(gt, df, dt)
//    EVENTS 
//        ON CHANGE gt fillSaleReportDateFromTo(gt, df, dt), 
//        ON CHANGE df fillSaleReportDateFromTo(gt, df, dt), 
//        ON CHANGE dt fillSaleReportDateFromTo(gt, df, dt),
//        ON CHANGE st fillSaleReportDateFromTo(gt, df, dt)                       
                           
;

DESIGN salesReport {
    NEW top {
        type = CONTAINERH;
        NEW dateContainer{
            caption = 'Период';
            type = CONTAINERH;
            MOVE PROPERTY(dateFrom){caption = 'Дата (с)';}
            MOVE PROPERTY(dateTo){caption = 'Дата (по)';}
        }
        
        MOVE gt.box;
        NEW sumContainer{
            caption = 'Итоговые суммы';
            type = CONTAINERH;
            MOVE PROPERTY(sumGroupTypeStock(gt));
        }
    }

    NEW center {
        fill = 1;
        type = SPLITH;
        NEW center1 {
            fill = 1;
            type = SPLITV;
            MOVE st.box;
            MOVE skuTree.tree.box {fill = 3;}
        }
        NEW tab {
            caption = 'Результат';
            fill = 3;   
            type = CONTAINERV;
            NEW action {
                alignment = STRETCH;
                MOVE PROPERTY (fillSaleReportDateFromTo(gt, df, dt)){alignment = STRETCH; font = 'bold 22';}
            }
            NEW tabContainer {
                fill = 1;
    //            type = TABBED;
                NEW salesContainer {
                    type = CONTAINERV;
                    caption = 'Продажи';
                    fill = 1;
                    NEW actionContainer {
                        type = TABBED;
                        NEW rowSalesContainer{
                            type = CONTAINERH;
                            caption = 'Печать';
                            NEW firstColumnSalesContainer{
                                caption = 'С детализацией';
                                type = COLUMNS;
                                columns = 2;
                                MOVE PROPERTY(printSalesReport(gt,df,dt));
                                MOVE PROPERTY(printSkuSalesReport(gt,df,dt));
                                MOVE PROPERTY(printGrCustomerSalesReport(gt,df,dt));
                                MOVE PROPERTY(printGroupCustomerSkuSalesReport(gt,df,dt));
                            }
                            NEW secondColumnSalesContainer{
                                caption = 'Без детализации';
                                type = CONTAINERV;
                                MOVE PROPERTY(printGrSalesReport(gt,df,dt));
                                MOVE PROPERTY(printCustomerSalesReport(gt,df,dt));
                            }
                            NEW thirdColumnSalesContainer{
                                caption = 'Список';
                                type = CONTAINERV;
                                MOVE PROPERTY(printListSalesReport(gt,df,dt));
                                MOVE PROPERTY(printListSkuSalesReport(gt,df,dt));
                            }
                        }
                        NEW rowSalesContainerXLS{
                            type = CONTAINERH;
                            caption = 'XLS';
                            NEW firstColumnSalesContainerXLS{
                                caption = 'С детализацией';
                                type = COLUMNS;
                                columns = 2;
                                MOVE PROPERTY(printSalesReportXLS(gt,df,dt));
                                MOVE PROPERTY(printSkuSalesReportXLS(gt,df,dt));
                                MOVE PROPERTY(printGrCustomerSalesReportXLS(gt,df,dt));
                                MOVE PROPERTY(printGroupCustomerSkuSalesReportXLS(gt,df,dt));
                            }
                            NEW secondColumnSalesContainerXLS{
                                caption = 'Без детализации';
                                type = CONTAINERV;
                                MOVE PROPERTY(printGrSalesReportXLS(gt,df,dt));
                                MOVE PROPERTY(printCustomerSalesReportXLS(gt,df,dt));
                            }
                            NEW thirdColumnSalesContainerXLS{
                                caption = 'Список';
                                type = CONTAINERV;
                                MOVE PROPERTY(printListSalesReportXLS(gt,df,dt));
                                MOVE PROPERTY(printListSkuSalesReportXLS(gt,df,dt));
                            }
                        }                
                    }
                    MOVE s.box;
                }
            }
        }
    }
    MOVE functions.box;
}

@extendFormFilterStockAccess(st, salesReport, company);

NAVIGATOR {
    salesReports {
        ADD salesReport;
    }
}