MODULE SaleReports;

REQUIRE SaleLedger, Store, StockMovement;

//отчет по продажам

dataInSession 'Отм.' = DATA LOCAL BOOLEAN (Group);

levelParent (group) = GROUP MIN level(Group group, Group parent) IF dataInSession(parent)
    BY group;

inParent (Group group) = TRUE IF levelParent(group);

inSession 'Отм.' (Group group) = OVERRIDE
    inParent(group),
    dataInSession(group);

sessionConcatGroups 'Группы' (groupType) =
    GROUP CONCAT name(Group group) IF inSession(group) AND NOT inSession(parent(group)),'; '
    BY groupType(group);

// --------------------------------- Оптимизация с хранимыми свойствами ------------------------------------- //

quantityStock 'Количество' = DATA LOCAL NUMERIC[16,5] (Sku); 
costSumStock 'Себестоимость' = DATA LOCAL NUMERIC[18,4] (Sku); 
markupSumStock 'Надбавка' = DATA LOCAL NUMERIC[18,4] (Sku);
sumVATStock 'Сумма НДС' = DATA LOCAL NUMERIC[18,4] (Sku);
sumStock 'Сумма' = DATA LOCAL NUMERIC[18,4] (Sku);

quantityStock 'Количество' = DATA LOCAL NUMERIC[16,5] (Group); 
sumVATStock 'Сумма НДС' = DATA LOCAL NUMERIC[18,4] (Group);
costSumStock 'Себестоимость' = DATA LOCAL NUMERIC[18,4] (Group);
markupSumStock 'Надбавка' = DATA LOCAL NUMERIC[18,4] (Group);
sumStock 'Сумма' = DATA LOCAL NUMERIC[18,4] (Group);

inSaleReport 'Вкл.' = DATA LOCAL BOOLEAN (Stock);

inSaleReportStocks 'Склады' () =
    GROUP CONCAT name(Stock st) IF inSaleReport(st) ,', ' PREFCHARWIDTH 30;
defaultStockSaleReport = GROUP MIN Stock st IF inSaleReport(st);

overfillSaleReportFromTo = ACTION ABSTRACT (GroupType, DATE, DATE);

fillSaleReportFromTo 'Сформировать'(GroupType gt, DATE df, DATE dt) = ACTION {

    quantityStock(Sku sk) <- NULL;           
    sumStock(Sku sk) <- NULL;  
    sumVATStock(Sku sk) <- NULL;  
    costSumStock(Sku sk) <- NULL;  
    markupSumStock(Sku sk) <- NULL;  

    quantityStock(Group g) <- NULL;  
    sumStock(Group g) <-NULL;  
    sumVATStock(Group g) <- NULL;  
    costSumStock(Group g) <- NULL;  
    markupSumStock(Group g) <- NULL; 

    quantityStock(Sku sk) <- NUMERIC[16,5]([ = GROUP SUM quantitySold(Sku sk, Stock st, DATE df, DATE dt) IF inSaleReport(st) BY sk, df, dt](sk, df, dt));           
    sumStock(Sku sk) <- NUMERIC[18,4]([ = GROUP SUM sumSold(Sku sk, Stock st, DATE df, DATE dt) IF inSaleReport(st) BY sk, df, dt](sk, df, dt));   
    sumVATStock(Sku sk) <- NUMERIC[18,4]([ = GROUP SUM sumVATSold(Sku sk, Stock st, DATE df, DATE dt) IF inSaleReport(st) BY sk, df, dt](sk, df, dt));   
    costSumStock(Sku sk) <- NUMERIC[18,4]([ = GROUP SUM costSumSold(Sku sk, Stock st, DATE df, DATE dt) IF inSaleReport(st) BY sk, df, dt](sk, df, dt));   
    markupSumStock(Sku sk) <- sumStock(sk) (-) sumVATStock(sk) (-) costSumStock(sk);

    quantityStock(Group g) <- [= GROUP SUM quantityStock(Sku sk) BY group(GroupType gt, sk)](g) IF  groupType(g) == gt;
    sumStock(Group g) <- [= GROUP SUM sumStock(Sku sk) BY group(GroupType gt, sk)](g) IF groupType(g) == gt;
    sumVATStock(Group g) <- [= GROUP SUM sumVATStock(Sku sk) BY group(GroupType gt, sk)](g) IF groupType(g) == gt;
    costSumStock(Group g) <- [= GROUP SUM costSumStock(Sku sk) BY group(GroupType gt, sk)](g) IF groupType(g) == gt;
    markupSumStock(Group g) <- [= GROUP SUM markupSumStock(Sku sk) BY group(GroupType gt, sk)](g) IF groupType(g) == gt; 
       
    overfillSaleReportFromTo(gt, df, dt);                 
}

filterFromTo (Sku s,Stock st,DATE df,DATE dt) =   quantitySold(s,st,df,dt) OR 
                                                     sumSold(s,st,df,dt) OR
                                                     sumVATSold(s,st,df,dt) OR 
                                                     costSumSold(s,st,df,dt);

recSumStock 'Сумма' (group) =
    GROUP SUM sumStock (Group child) IF isParent(child, Group parent)
    BY parent;
recSumVATStock 'Сумма НДС' (group) =
    GROUP SUM sumVATStock (Group child) IF isParent(child, Group parent)
    BY parent;
recCostSumStock 'Себестоимость' (group) =
    GROUP SUM costSumStock (Group child) IF isParent(child, Group parent)
    BY parent;
recMarkupSumStock 'Надбавка' (group) =
    GROUP SUM markupSumStock (Group child) IF isParent(child, Group parent)
    BY parent;
recQuantityStock 'Кол-во' (group) =
    GROUP SUM quantityStock (Group child) IF isParent(child, Group parent)
    BY parent;
            
//суммы продаж по группе рекурсивно 
sumRecSalesSku 'Сумма продаж (всего)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sum(SaleLedger saleLedger) IF isParent(Group group, sku(saleLedger)) AND
                                           active(saleLedger) AND
                                           date(saleLedger) >= DATE dateFrom AND
                                           date(saleLedger) <= DATE dateTo
    BY group, stock(saleLedger), dateFrom, dateTo;

//суммы продаж по покупателю
costSumSalesStock 'Себестоимость продаж (по покупателю)' (groupType, customer, dateFrom, dateTo) =
    GROUP SUM costSum(SaleLedger saleLedger) IF active(saleLedger) AND
                                               inSession(group(GroupType groupType, sku(saleLedger))) AND
                                               date(saleLedger) >= DATE dateFrom AND
                                               date(saleLedger) <= DATE dateTo AND
                                               inSaleReport(stock(saleLedger))
    BY groupType, customer(saleLedger), dateFrom, dateTo;
markupSumSalesStock 'Надбавка (по покупателю)'(groupType, customer, dateFrom, dateTo) =
    GROUP SUM markupSum(SaleLedger saleLedger) IF active(saleLedger) AND
                                               inSession(group(GroupType groupType, sku(saleLedger))) AND
                                               date(saleLedger) >= DATE dateFrom AND
                                               date(saleLedger) <= DATE dateTo AND
                                               inSaleReport(stock(saleLedger))
    BY groupType, customer(saleLedger), dateFrom, dateTo;
sumVATSalesStock 'Сумма НДС (по покупателю)'(groupType, customer, dateFrom, dateTo) =
    GROUP SUM sumVAT(SaleLedger saleLedger) IF active(saleLedger) AND
                                              inSession(group(GroupType groupType, sku(saleLedger))) AND
                                              date(saleLedger) >= DATE dateFrom AND
                                              date(saleLedger) <= DATE dateTo AND 
                                              inSaleReport(stock(saleLedger))
    BY groupType, customer(saleLedger), dateFrom, dateTo;
sumSalesStock 'Сумма продаж (по покупателю)' (groupType, customer, dateFrom, dateTo) =
    GROUP SUM sum(SaleLedger saleLedger) IF active(saleLedger) AND
                                           inSession(group(GroupType groupType, sku(saleLedger))) AND
                                           date(saleLedger) >= DATE dateFrom AND
                                           date(saleLedger) <= DATE dateTo AND
                                           inSaleReport(stock(saleLedger))
    BY groupType, customer(saleLedger), dateFrom, dateTo;

//суммы продаж по складу покупателю
costSumSalesStock 'Себестоимость продаж (по покупателю)' (groupType, customer, dateFrom, dateTo) =
    GROUP SUM costSum(SaleLedger saleLedger) IF active(saleLedger) AND
                                               inSession(group(GroupType groupType, sku(saleLedger))) AND
                                               date(saleLedger) >= DATE dateFrom AND
                                               date(saleLedger) <= DATE dateTo AND
                                               inSaleReport(stock(saleLedger))
    BY groupType, customerStock(saleLedger), dateFrom, dateTo;
markupSumSalesStock 'Надбавка (по покупателю)'(groupType, customer, dateFrom, dateTo) =
    GROUP SUM markupSum(SaleLedger saleLedger) IF active(saleLedger) AND
                                               inSession(group(GroupType groupType, sku(saleLedger))) AND
                                               date(saleLedger) >= DATE dateFrom AND
                                               date(saleLedger) <= DATE dateTo AND
                                               inSaleReport(stock(saleLedger))
    BY groupType, customerStock(saleLedger), dateFrom, dateTo;
sumVATSalesStock 'Сумма НДС (по покупателю)'(groupType, customer, dateFrom, dateTo) =
    GROUP SUM sumVAT(SaleLedger saleLedger) IF active(saleLedger) AND
                                              inSession(group(GroupType groupType, sku(saleLedger))) AND
                                              date(saleLedger) >= DATE dateFrom AND
                                              date(saleLedger) <= DATE dateTo AND 
                                              inSaleReport(stock(saleLedger))
    BY groupType, customerStock(saleLedger), dateFrom, dateTo;
sumSalesStock 'Сумма продаж (по покупателю)' (groupType, customer, dateFrom, dateTo) =
    GROUP SUM sum(SaleLedger saleLedger) IF active(saleLedger) AND
                                           inSession(group(GroupType groupType, sku(saleLedger))) AND
                                           date(saleLedger) >= DATE dateFrom AND
                                           date(saleLedger) <= DATE dateTo AND
                                           inSaleReport(stock(saleLedger))
    BY groupType, customerStock(saleLedger), dateFrom, dateTo;
    
// склад покупателя 
inCustomerStockSaleReport 'Вкл.' = DATA LOCAL BOOLEAN (Stock);
countInCustomerStockSaleReport = GROUP SUM 1 IF inCustomerStockSaleReport(Stock st) ;    
inSaleReportCustomerStocks 'Склады' () =
    GROUP CONCAT name(Stock st) IF inCustomerStockSaleReport(st) ,', ' PREFCHARWIDTH 30;    

//суммы продаж по складу покупателю
costSumSalesStock 'Себестоимость продаж (по покупателю)' (groupType, dateFrom, dateTo) =
    GROUP SUM costSum(SaleLedger saleLedger) IF active(saleLedger) AND
                                               inSession(group(GroupType groupType, sku(saleLedger))) AND
                                               date(saleLedger) >= DATE dateFrom AND
                                               date(saleLedger) <= DATE dateTo AND
                                               inSaleReport(stock(saleLedger)) AND ((inCustomerStockSaleReport(customerStock(saleLedger)) IF countInCustomerStockSaleReport()) OR (customerStock(saleLedger) AND NOT countInCustomerStockSaleReport()))
    BY groupType, dateFrom, dateTo;
markupSumSalesStock 'Надбавка (по покупателю)'(groupType, dateFrom, dateTo) =
    GROUP SUM markupSum(SaleLedger saleLedger) IF active(saleLedger) AND
                                               inSession(group(GroupType groupType, sku(saleLedger))) AND
                                               date(saleLedger) >= DATE dateFrom AND
                                               date(saleLedger) <= DATE dateTo AND
                                               inSaleReport(stock(saleLedger)) AND ((inCustomerStockSaleReport(customerStock(saleLedger)) IF countInCustomerStockSaleReport()) OR (customerStock(saleLedger) AND NOT countInCustomerStockSaleReport()))
    BY groupType, dateFrom, dateTo;
sumVATSalesStock 'Сумма НДС (по покупателю)'(groupType, dateFrom, dateTo) =
    GROUP SUM sumVAT(SaleLedger saleLedger) IF active(saleLedger) AND
                                              inSession(group(GroupType groupType, sku(saleLedger))) AND
                                              date(saleLedger) >= DATE dateFrom AND
                                              date(saleLedger) <= DATE dateTo AND 
                                              inSaleReport(stock(saleLedger)) AND ((inCustomerStockSaleReport(customerStock(saleLedger)) IF countInCustomerStockSaleReport()) OR (customerStock(saleLedger) AND NOT countInCustomerStockSaleReport()))
    BY groupType, dateFrom, dateTo;
sumSalesStock 'Сумма продаж (по покупателю)' (groupType, dateFrom, dateTo) =
    GROUP SUM sum(SaleLedger saleLedger) IF active(saleLedger) AND
                                           inSession(group(GroupType groupType, sku(saleLedger))) AND
                                           date(saleLedger) >= DATE dateFrom AND
                                           date(saleLedger) <= DATE dateTo AND
                                           inSaleReport(stock(saleLedger)) AND ((inCustomerStockSaleReport(customerStock(saleLedger)) IF countInCustomerStockSaleReport()) OR (customerStock(saleLedger) AND NOT countInCustomerStockSaleReport()))
    BY groupType, dateFrom, dateTo;

//суммы продаж по SKU    
costSumStock 'Итоговая себестоимость продаж' (groupType) =
    GROUP SUM costSumStock(Sku sku) IF inSession(group(GroupType groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;
markupSumStock 'Итоговая надбавка продаж' (groupType) =
    GROUP SUM markupSumStock(Sku sku) IF inSession(group(GroupType groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;
sumVATStock 'Итоговая сумма НДС продаж' (groupType) =
    GROUP SUM sumVATStock(Sku sku) IF inSession(group(GroupType groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;
sumStock 'Итоговая сумма продаж' (groupType) =
    GROUP SUM sumStock(Sku sku) IF inSession(group(GroupType groupType, sku))                                                
        BY groupType PREFCHARWIDTH 15;       

//формы
FORM printListSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock,
                                sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTime, nameStock, nameCustomer, nameSku, description,
                           quantity, costSum, markupSum, sumVAT, sum, averagePrice
    ORDER BY nameSku(s)
    FILTERS active(s),
            inSaleReport(stock(s)),
            date(s) >= df,
            date(s) <= dt,
            inSession(group(gt, sku(s)))
;

printListSalesReport 'Списком' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printListSalesReport OBJECTS  gt = groupType, df = dateFrom, dt = dateTo   IMAGE 'print.png' IN print;
printListSalesReportXLS 'Списком (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printListSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS IMAGE 'print.png' IN print;    
    
inReport= DATA LOCAL BOOLEAN (Sku);
filterStock (Sku s) =   quantityStock(s) OR 
                                      costSumStock(s) OR
                                      markupSumStock(s) OR 
                                      sumVATStock(s) OR
                                      sumStock(s);
filterStock (Group g) = quantityStock(g) OR 
                                      costSumStock(g) OR
                                      markupSumStock(g) OR 
                                      sumVATStock(g) OR
                                      sumStock(g);


FORM printListSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)
    PROPERTIES inSaleReportStocks()
    
    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock,
                               sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = Sku
    PROPERTIES(s) READONLY name
    PROPERTIES(s) READONLY quantityStock, costSumStock, markupSumStock,
                                       sumVATStock, sumStock
    ORDER BY name(s)
    FILTERS inSession(group(gt, s)),
            inReport(s) AND dt IS DATE AND df IS DATE
;

printListSkuSalesReport 'Списком(по товарам)' (GroupType groupType, DATE dateFrom, DATE dateTo) = ACTION {
    inReport(Sku sku) <- NULL;
    inReport(Sku sku) <- filterStock (sku) WHERE filterStock (sku);
    PRINT printListSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo ;
    
} IMAGE 'print.png' IN print;
printListSkuSalesReportXLS 'Списком(по товарам) (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) = ACTION {
    inReport(Sku sku) <- NULL;
    inReport(Sku sku) <- filterStock (sku) WHERE filterStock (sku);
    PRINT printListSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS;
    
} IMAGE 'print.png' IN print;     

FORM printSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock,
                                        sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalName(sk)
    ORDER BY canonicalName(sk)
    PROPERTIES(sk) READONLY costSumStock, markupSumStock, sumVATStock, sumStock
    FILTERS inSession(sk) AND countSku(sk, gt),
            groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTime, nameStock, nameCustomer, nameSku, description,
                           quantity, costSum, markupSum, sumVAT, sum, averagePrice
    ORDER BY nameSku(s)
    FILTERS active(s),
            inSaleReport(stock(s)),
            date(s) >= df,
            date(s) <= dt,
            group(gt, sku(s)) == sk
;

printSalesReport 'По группам' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo   IMAGE 'print.png' IN print;
printSalesReportXLS 'По группам (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS IMAGE 'print.png' IN print;
    
FORM printSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock, sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalName(sk)
    ORDER BY canonicalName(sk)
    PROPERTIES(sk) READONLY costSumStock, markupSumStock, sumVATStock, sumStock
    FILTERS inSession(sk) AND countSku(sk, gt),
            groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES(s) READONLY name
    PROPERTIES(s) READONLY quantityStock, costSumStock, markupSumStock, sumVATStock, sumStock
    ORDER BY name(s)
    FILTERS group(gt, s) == sk,
            filterStock(s) AND dt IS DATE AND df IS DATE
;

printSkuSalesReport 'По товарам(группы)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo   IMAGE 'print.png' IN print;
printSkuSalesReportXLS 'По товарам(группы) (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS IMAGE 'print.png' IN print;
    
FORM printGroupSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock, sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalName(sk)
    ORDER BY canonicalName(sk)
    PROPERTIES(sk) READONLY costSumStock, markupSumStock, sumVATStock, sumStock
    FILTERS inSession(sk) AND countSku(sk, gt),
            groupType(sk) == gt,
            filterStock(sk) AND dt IS DATE AND  df IS DATE
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT
;

printGrSalesReport 'По группам' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printGroupSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo   IMAGE 'print.png' IN print;
printGrSalesReportXLS 'По группам (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printGroupSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS IMAGE 'print.png' IN print;
    
FORM printGroupCustomerSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock,sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY name(l)
    ORDER BY name(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesStock, markupSumSalesStock,
                                           sumVATSalesStock, sumSalesStock
    FILTERS isBuyer(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    
    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTime, nameStock, nameCustomer, nameSku, description,
                           quantity, costSum, markupSum, sumVAT, sum, averagePrice
    ORDER BY nameSku(s)
    FILTERS active(s),
            inSession(group(gt, sku(s))),
            inSaleReport(stock(s)),
            date(s) >= df,
            date(s) <= dt,
            customer(s) == l
;

printGrCustomerSalesReport 'По покупателям' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printGroupCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo   IMAGE 'print.png' IN print;
printGrCustomerSalesReportXLS 'По покупателям (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printGroupCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS IMAGE 'print.png' IN print;


FORM dialogCustomerStocksSaleReport 'Выбор складов (не обязательно)'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL    
    OBJECTS gt = GroupType PANEL
        
    TREE stockTree a = STRING[3], sg = StockGroup PARENT parent
    PROPERTIES READONLY VALUE(a), name(sg)
    ORDER BY name(sg)
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY id, name
    PROPERTIES (s) inCustomerStockSaleReport
    ORDER BY name(s)
    FILTERS isParent(sg, s) OR (s IS Stock AND NOT sg),
            isBuyer(s),
            countCompanyStock(sg) OR countCustomerStock(sg)

    FILTERGROUP inactiveStock FILTER 'Активный' active(s) 'ctrl F10' DEFAULT    
    FILTERGROUP select FILTER 'Отм.' inCustomerStockSaleReport(s) 'F9' 
    FILTERGROUP sold FILTER 'С продажей' sumSalesStock(gt,s,dFrom,dTo) 'F8'
;

DESIGN dialogCustomerStocksSaleReport {
    main{
        preferredSize = (1024, 768);        
        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(name(s)){
                    minimumCharWidth = 35;
                    preferredCharWidth = 35;
                }
            }
        }

        MOVE functions.box;
    }
}
    
FORM printGroupCustomerStockSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt,df,dt) READONLY costSumSalesStock, markupSumSalesStock, sumVATSalesStock, sumSalesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = Stock
    PROPERTIES READONLY name(l), nameLegalEntity(l)
    ORDER BY name(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesStock, markupSumSalesStock, sumVATSalesStock, sumSalesStock
    FILTERS isBuyer(l),
            (inCustomerStockSaleReport(l) AND countInCustomerStockSaleReport()) OR (l IS Stock AND NOT countInCustomerStockSaleReport())
    
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    
    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTime, nameStock, nameCustomer, nameSku, description,
                           quantity, costSum, markupSum, sumVAT, sum, averagePrice
    ORDER BY nameSku(s)
    FILTERS active(s),
            inSession(group(gt, sku(s))),
            inSaleReport(stock(s)),
            date(s) >= df,
            date(s) <= dt,
            customerStock(s) == l
;
printGrCustomerStockSalesReport 'По складам покупателя' (GroupType groupType, DATE dateFrom, DATE dateTo) = ACTION {
    inCustomerStockSaleReport(Stock l) <- NULL;
    DIALOG dialogCustomerStocksSaleReport OBJECTS gt = groupType, dFrom = dateFrom, dTo = dateTo DO
        PRINT printGroupCustomerStockSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo;
    inCustomerStockSaleReport(Stock l) <- NULL;     
    
}   IMAGE 'print.png' IN print;
printGrCustomerStockSalesReportXLS 'По складам покупателя (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) = ACTION {
    inCustomerStockSaleReport(Stock l) <- NULL;
    DIALOG dialogCustomerStocksSaleReport OBJECTS gt = groupType, dFrom = dateFrom, dTo = dateTo DO
        PRINT printGroupCustomerStockSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS;
    inCustomerStockSaleReport(Stock l) <- NULL;     
    
}   IMAGE 'print.png' IN print;
    
    
quantitySold 'Продано за интервал (кол-во)' (sku, customer, dateFrom, dateTo) = GROUP SUM
        quantitySold(Sku sku, Stock stock, LegalEntity customer, DATE dateFrom, DATE dateTo) IF inSaleReport(stock)
        BY sku, customer, dateFrom, dateTo;

costSumSold 'Себестоимость проданного за интервал' (sku, customer, dateFrom, dateTo) = GROUP SUM        
        costSumSold(Sku sku, Stock stock, LegalEntity customer, DATE dateFrom, DATE dateTo) IF inSaleReport(stock)
        BY sku, customer, dateFrom, dateTo;

markupSumSold 'Надбавка проданного за интервал' (sku, customer, dateFrom, dateTo) = GROUP SUM
        markupSumSold(Sku sku, Stock stock, LegalEntity customer, DATE dateFrom, DATE dateTo) IF inSaleReport(stock)
        BY sku, customer, dateFrom, dateTo;

sumVATSold 'Сумма НДС проданного за интервал' (sku, customer, dateFrom, dateTo) = GROUP SUM
        sumVATSold(Sku sku, Stock stock, LegalEntity customer, DATE dateFrom, DATE dateTo) IF inSaleReport(stock)
        BY sku, customer, dateFrom, dateTo;

sumSold 'Продано за интервал (сумма)' (sku, customer, dateFrom, dateTo) = GROUP SUM
        sumSold(Sku sku, Stock stock, LegalEntity customer, DATE dateFrom, DATE dateTo) IF inSaleReport(stock)
        BY sku, customer, dateFrom, dateTo;
    
    
FORM printGroupCustomerSkuSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock, sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY name(l)
    ORDER BY name(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesStock, markupSumSalesStock,
                                           sumVATSalesStock, sumSalesStock
    FILTERS isBuyer(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    
    OBJECTS s = Sku
    PROPERTIES(s) READONLY name
    PROPERTIES(s, l, df, dt) READONLY quantitySold, costSumSold, markupSumSold,
                                          sumVATSold, sumSold
    ORDER BY name(s)
    FILTERS inSession(group(gt, s)),
            quantitySold(s, l, df, dt) OR costSumSold(s, l, df, dt) OR
            markupSumSold(s, l, df, dt) OR sumVATSold(s, l, df, dt) OR
            sumSold(s, l, df, dt)
;

printGroupCustomerSkuSalesReport 'По товарам(покупатели)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printGroupCustomerSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo   IMAGE 'print.png' IN print;
printGroupCustomerSkuSalesReportXLS 'По товарам(покупатели) (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printGroupCustomerSkuSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS IMAGE 'print.png' IN print;
    
FORM printCustomerSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY costSumStock, markupSumStock, sumVATStock, sumStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY name(l)
    ORDER BY name(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesStock, markupSumSalesStock,
                                           sumVATSalesStock, sumSalesStock
    FILTERS isBuyer(l),
            costSumSalesStock(gt, l, df, dt) OR markupSumSalesStock(gt, l, df, dt) OR
            sumVATSalesStock(gt, l, df, dt) OR sumSalesStock(gt, l, df, dt)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT        
;

printCustomerSalesReport 'По покупателям' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo   IMAGE 'print.png' IN print;
printCustomerSalesReportXLS 'По покупателям (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    ACTION PRINT printCustomerSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS IMAGE 'print.png' IN print;
    
FORM printCustomerStockSalesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)
    PROPERTIES inSaleReportStocks()
    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt,df,dt) READONLY costSumSalesStock, markupSumSalesStock, sumVATSalesStock, sumSalesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = Stock
    PROPERTIES READONLY name(l), nameLegalEntity(l)
    ORDER BY name(l)
    PROPERTIES(gt, l, df, dt) READONLY costSumSalesStock, markupSumSalesStock, sumVATSalesStock, sumSalesStock
    FILTERS isBuyer(l),
            (inCustomerStockSaleReport(l) AND countInCustomerStockSaleReport()) OR (l IS Stock AND NOT countInCustomerStockSaleReport()),    
            costSumSalesStock(gt, l, df, dt) OR markupSumSalesStock(gt, l, df, dt) OR
            sumVATSalesStock(gt, l, df, dt) OR sumSalesStock(gt, l, df, dt)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT        
;

printCustomerStockSalesReport 'По складам покупателя' (GroupType groupType, DATE dateFrom, DATE dateTo) = ACTION {
    inCustomerStockSaleReport(Stock l) <- NULL;
    DIALOG dialogCustomerStocksSaleReport OBJECTS gt = groupType, dFrom = dateFrom, dTo = dateTo DO
        PRINT printCustomerStockSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo ;
    inCustomerStockSaleReport(Stock l) <- NULL;     
    
}   IMAGE 'print.png' IN print;
printCustomerStockSalesReportXLS 'По складам покупателя (XLS)' (GroupType groupType, DATE dateFrom, DATE dateTo) = ACTION {
    inCustomerStockSaleReport(Stock l) <- NULL;
    DIALOG dialogCustomerStocksSaleReport OBJECTS gt = groupType, dFrom = dateFrom, dTo = dateTo DO
        PRINT printCustomerStockSalesReport OBJECTS gt = groupType, df = dateFrom, dt = dateTo XLS;
    inCustomerStockSaleReport(Stock l) <- NULL;     
    
}   IMAGE 'print.png' IN print;
    
    
FORM dialogStocksSaleReport 'Выбор складов'

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parent
    PROPERTIES READONLY VALUE(a), name(sg)
    ORDER BY name(sg)
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY id, name
    PROPERTIES (s) inSaleReport
    ORDER BY name(s)
    FILTERS isParent(sg, s) OR (s IS Stock AND NOT sg),
            isCompany(s),
            countCompanyStock(sg)

    FILTERGROUP inactiveStock FILTER 'Активный' active(s) 'ctrl F10' DEFAULT    
    FILTERGROUP select FILTER 'Отм.' inSaleReport(s) 'F9' 
;

DESIGN dialogStocksSaleReport {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(name(s)){
                    minimumCharWidth = 35;
                    preferredCharWidth = 35;
                }
            }
        }

        MOVE functions.box;
    }
}
@extendFormFilterStockAccess(s, dialogStocksSaleReport, company);    
changeStocksSalesReport(GroupType gt, DATE df, DATE dt) = ACTION {
    DIALOG dialogStocksSaleReport DO 
        fillSaleReportFromTo(gt, df, dt);
}
 
showMovementSkuStocksSale 'Показать движение товара по складу' (Sku sku) = ACTION NEWSESSION SHOW movementSkuStock OBJECTS s = sku, st = [ = GROUP MIN Stock st IF inSaleReport(st)]() ;
showMovementPriceSkuStocksSale 'Показать изменение цены товара по складу' (Sku sku) = ACTION NEWSESSION SHOW movementPriceSkuStock OBJECTS s = sku, st = [ = GROUP MIN Stock st IF inSaleReport(st)]() ;
    
FORM salesReport 'Отчет по продажам'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)          
    
    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY sumStock
    
    PROPERTIES inSaleReportStocks() ON CHANGE changeStocksSalesReport(gt, df, dt)
    
    TREE skuTree sk = Group PARENT parent
    PROPERTIES inSession(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    PROPERTIES(sk) READONLY recQuantityStock, recCostSumStock, recMarkupSumStock, 
                                        recSumVATStock, recSumStock
    ORDER BY order(sk), skuTreeName
    FILTERS groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTime, nameStock, nameCustomer, nameCustomerStock, nameSku, idSku SHOWIF showIDs(), description,
                           quantity, costSum, markupSum, sumVAT, sum, averagePrice
    ORDER BY nameSku(s)
    FILTERS isParent(sk, sku(s)),
            active(s),
            inSaleReport(stock(s)),
            date(s) >= df,
            date(s) <= dt
            
    OBJECTS sku = Sku
    PROPERTIES(sku) READONLY name ON SHORTCUT showMovementSkuStocksSale[Sku](sku) ON SHORTCUT showMovementPriceSkuStocksSale[Sku](sku), id SHOWIF showIDs()
    PROPERTIES(sku) READONLY quantityStock, costSumStock, markupSumStock, sumVATStock, sumStock
    FILTERS isParent(sk, sku),
            active(sku),
            filterStock(sku)
            
    PROPERTIES(gt,df, dt) printListSalesReport, printListSkuSalesReport, printSalesReport, printSkuSalesReport, printGrSalesReport,
                           printGrCustomerSalesReport, printGrCustomerStockSalesReport, printGroupCustomerSkuSalesReport, printCustomerSalesReport, printCustomerStockSalesReport
    PROPERTIES(gt,df, dt) printListSalesReportXLS, printListSkuSalesReportXLS, printSalesReportXLS, printSkuSalesReportXLS, printGrSalesReportXLS,
                           printGrCustomerSalesReportXLS, printGrCustomerStockSalesReportXLS, printGroupCustomerSkuSalesReportXLS, printCustomerSalesReportXLS, printCustomerStockSalesReportXLS
    EVENTS 
        ON CHANGE gt fillSaleReportFromTo(gt, df, dt), 
        ON CHANGE df fillSaleReportFromTo(gt, df, dt), 
        ON CHANGE dt fillSaleReportFromTo(gt, df, dt)                                                 
;

DESIGN salesReport {
    NEW top {
        type = CONTAINERH;
        NEW dateContainer{
            caption = 'Период';
            type = CONTAINERH;
            MOVE PROPERTY(dateFrom){caption = 'Дата (с)';}
            MOVE PROPERTY(dateTo){caption = 'Дата (по)';}
        }
        
        MOVE gt.box;
        NEW stocks {
            caption = 'Склады';
            type = CONTAINERH;
            MOVE PROPERTY(inSaleReportStocks());        
        }
        NEW sumContainer{
            caption = 'Итоговые суммы';
            type = CONTAINERH;
            MOVE PROPERTY(sumStock(gt));
        }
    }

    NEW center {
        fill = 1;
        type = SPLITH;
        NEW center1 {
            fill = 1;
            type = CONTAINERV ;                         
            MOVE skuTree.tree.box;
        }
        NEW tab {
            caption = 'Результат';
            fill = 1;   
            type = CONTAINERV;

            NEW tabContainer {
                fill = 1;
                type = TABBED;
                MOVE sku.box { caption = 'Товар';}
                MOVE s.box { caption = 'Регистр';}
                NEW salesContainer {
                    type = CONTAINERV;
                    caption = 'Печать';
                    fill = 1;

                    NEW rowSalesContainer{
                        type = CONTAINERH;
                        caption = 'Печать';
                        NEW firstColumnSalesContainer{
                            caption = 'С детализацией';
                            type = COLUMNS;
                            columns = 2;
                            MOVE PROPERTY(printSalesReport(gt,df,dt));
                            MOVE PROPERTY(printSkuSalesReport(gt,df,dt));
                            MOVE PROPERTY(printGrCustomerSalesReport(gt,df,dt));
                            MOVE PROPERTY(printGrCustomerStockSalesReport(gt,df,dt));
                            MOVE PROPERTY(printGroupCustomerSkuSalesReport(gt,df,dt));
                        }
                        NEW secondColumnSalesContainer{
                            caption = 'Без детализации';
                            type = CONTAINERV;
                            MOVE PROPERTY(printGrSalesReport(gt,df,dt));
                            MOVE PROPERTY(printCustomerSalesReport(gt,df,dt));
                            MOVE PROPERTY(printCustomerStockSalesReport(gt,df,dt));
                        }
                        NEW thirdColumnSalesContainer{
                            caption = 'Список';
                            type = CONTAINERV;
                            MOVE PROPERTY(printListSalesReport(gt,df,dt));
                            MOVE PROPERTY(printListSkuSalesReport(gt,df,dt));                            
                        }
                    }
                    NEW rowSalesContainerXLS{
                        type = CONTAINERH;
                        caption = 'Экспорт XLS';
                        NEW firstColumnSalesContainerXLS{
                            caption = 'С детализацией';
                            type = COLUMNS;
                            columns = 2;
                            MOVE PROPERTY(printSalesReportXLS(gt,df,dt));
                            MOVE PROPERTY(printSkuSalesReportXLS(gt,df,dt));
                            MOVE PROPERTY(printGrCustomerSalesReportXLS(gt,df,dt));
                            MOVE PROPERTY(printGrCustomerStockSalesReportXLS(gt,df,dt));
                            MOVE PROPERTY(printGroupCustomerSkuSalesReportXLS(gt,df,dt));
                        }
                        NEW secondColumnSalesContainerXLS{
                            caption = 'Без детализации';
                            type = CONTAINERV;
                            MOVE PROPERTY(printGrSalesReportXLS(gt,df,dt));
                            MOVE PROPERTY(printCustomerSalesReportXLS(gt,df,dt));
                            MOVE PROPERTY(printCustomerStockSalesReportXLS(gt,df,dt));
                        }
                        NEW thirdColumnSalesContainerXLS{
                            caption = 'Список';
                            type = CONTAINERV;
                            MOVE PROPERTY(printListSalesReportXLS(gt,df,dt));
                            MOVE PROPERTY(printListSkuSalesReportXLS(gt,df,dt));
                        }
                    }               
                                        
                }
            }
        }
    }
    MOVE functions.box;
}

onInitSalesReport() = ACTION {
    IF countAccessCompanyStock(currentUser()) ==1 THEN {
        inSaleReport(Stock st)  <- TRUE WHERE  defaultCompanyStock(currentUser())== st; 
        fillSaleReportFromTo(SystemGroupType.skuGroupType,currentDate(),currentDate());
    }    
}
EXTEND FORM salesReport 
    EVENTS 
        ON INIT onInitSalesReport()
;


NAVIGATOR {
    salesReports {
        ADD salesReport;
    }
}