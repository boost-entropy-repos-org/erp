MODULE SaleLedgerArticle;

REQUIRE SaleLedger, SaleLedgerItemArticle, StockArticle;

NAMESPACE SaleLedger;

//------------------- Продажи по артикулам -------------------------//


nameArticleBalanceBStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(остаток на начало)\''](nameStock(stock));    
nameArticleSumBStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(сумма на начало)\''](nameStock(stock));    
nameArticleBalanceAStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(остаток на конец)\''](nameStock(stock));    
nameArticleSumAStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(сумма на конец)\''](nameStock(stock));    
nameArticleQuantitySoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(продано кол-во)\''](nameStock(stock));    
nameArticleSumSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(продано сумма)\''](nameStock(stock));    
nameArticleDaysOnStockStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(дней на складе)\''](nameStock(stock));    
nameArticleAverageReportSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(продаж в день)\''](nameStock(stock));    
nameArticleTurnoverStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(товарооборачиваемость)\''](nameStock(stock));

nameArticleContractSumSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(сумма контр. вал.)\''](nameStock(stock));    
nameArticleCostSumSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(сумма себестоимость)\''](nameStock(stock));    
nameArticleMarkupSumSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(сумма торг. надбавки)\''](nameStock(stock));    
nameArticleVATSumSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(сумма НДС)\''](nameStock(stock));    
nameArticleAveragePriceSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(цена ср.)\''](nameStock(stock));    
nameArticleContractSumByrSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(сумма контр. руб.)\''](nameStock(stock));    
nameArticleAverageMarkupSoldStock (stock)= [= FORMULA VARSTRING[50] 'CAST($1 AS TEXT) || \' \' || \'(ср. % надбавки)\''](nameStock(stock));    
    
    
inArticleReportStock 'Отм.' = DATA SESSION BOOLEAN (Stock);

filterBalanceArticleDateFromTo 'С остатком' (ar,dFrom, dTo) = GROUP SUM 1 IF inArticleReportStock(st) AND (balanceBArticleStockDate(ar,st,dFrom) OR balanceAArticleStockDate(ar,st,dTo))
    BY ar,dFrom, dTo;
filterSoldArticleDateFromTo 'С продажей' (ar,dFrom,dTo) = GROUP SUM quantitySoldArticleStockDateFromTo(ar,st,dFrom,dTo) IF inArticleReportStock(st) 
    BY ar,dFrom,dTo;   

daysOnStockArticleStock 'Дней на складе' = DATA SESSION INTEGER (Article, Stock);
averageReportSoldArticleStock 'Продаж в день' = DATA SESSION NUMERIC[14,3] (Article, Stock);
turnoverArticleStock 'Товароооборачиваемость' = DATA SESSION NUMERIC[14,2] (Article, Stock);
//-- Итого по всем выделенным складам 
daysOnStockArticle 'Дней на складе (итого)' = DATA SESSION INTEGER (Article);
averageReportSoldArticle 'Продаж в день  (итого)' = DATA SESSION NUMERIC[14,3] (Article);
turnoverArticle 'Товароооборачиваемость  (итого)' = DATA SESSION NUMERIC[14,2] (Article);

filterBalanceSkuDateFromTo 'С остатком' (ks,dFrom, dTo) = GROUP SUM 1 IF inArticleReportStock(st) AND (balanceBSkuStockDate(ks,st,dFrom) OR balanceASkuStockDate(ks,st,dTo))
    BY ks,dFrom, dTo;
filterSoldSkuDateFromTo 'С продажей' (ks,dFrom,dTo) = GROUP SUM quantitySoldSkuStockDateFromTo(ks,st,dFrom,dTo) IF inArticleReportStock(st) 
    BY ks,dFrom,dTo; 
      
quantitySoldInArticleDateFromTo 'Продано за интервал (кол-во)' (article, dateFrom, dateTo) = GROUP SUM
        quantitySoldArticleStockDateFromTo(article, stock, dateFrom, dateTo) IF inArticleReportStock(stock)
        BY article, dateFrom, dateTo;      
      

calcSaleArticleParamsInterval 'Рассчитать продажи в день и товарооборачиваемость' = ACTION (dateFrom, dateTo) {
    LOCAL balance = NUMERIC[14,3] (Article, Stock);
    LOCAL cumBalance = NUMERIC[16,3] (Article, Stock);
    LOCAL dateCur = DATE();

    dateCur() <- dateFrom;
    balance(a, stock) <- balanceBArticleStockDate(a, stock, dateFrom) WHERE inArticleReportStock(stock);
    daysOnStockArticleStock(a, stock) <- NULL;
    
    daysOnStockArticle(a) <- NULL;
    
    WHILE dateCur() <= dateTo DO {
        daysOnStockArticleStock(a, stock) <- daysOnStockArticleStock(a, stock) (+)
                   (1 IF ((balance(a, stock) > 0) OR (quantityArticleStockDate(a, stock, dateCur()) > 0)));
        cumBalance(a, stock) <- cumBalance(a, stock) (+) balance(a, stock);  
        balance(a, stock) <- balance(a, stock) (+)
                   signedQuantityArticleStockDate(a, stock, dateCur());
        daysOnStockArticle(a) <- daysOnStockArticle(a) (+) (1 IF [ = GROUP SUM 1 IF ((balance(a, stock) > 0) OR (quantityArticleStockDate(a, stock, dateCur()) > 0)) AND inArticleReportStock(stock) BY a](a));                                                

        dateCur() <- sumDate(dateCur(), 1);
    }

    averageReportSoldArticleStock(a, stock) <- quantitySoldArticleStockDateFromTo (a, stock, dateFrom, dateTo) / daysOnStockArticleStock(a, stock);
    turnoverArticleStock(a, stock) <- IF quantitySoldArticleStockDateFromTo (a, stock, dateFrom, dateTo) != 0 THEN
                                         cumBalance(a, stock) / quantitySoldArticleStockDateFromTo (a, stock, dateFrom, dateTo)
                                      ELSE
                                        9999.99;
                                        
    averageReportSoldArticle(a) <- quantitySoldInArticleDateFromTo (a, dateFrom, dateTo) / daysOnStockArticle(a);
    turnoverArticle(a) <- IF quantitySoldInArticleDateFromTo (a, dateFrom, dateTo) != 0 THEN
                                         [ = GROUP SUM cumBalance(a, stock) IF inArticleReportStock(stock) BY a](a) / quantitySoldInArticleDateFromTo (a, dateFrom, dateTo)
                                      ELSE
                                        9999.99;                                    
                                        
} TOOLBAR; 


balanceBInReportArticleDate 'Итого (остаток на начало)' (ar,dFrom)= GROUP SUM balanceBArticleStockDate(ar,st,dFrom) IF inArticleReportStock(st) BY ar, dFrom;
quantitySoldInReportArticleDateFromTo 'Итого (продано кол-во)' (ar,dFrom,dTo)= GROUP SUM quantitySoldArticleStockDateFromTo(ar,st,dFrom,dTo) IF inArticleReportStock(st) BY ar, dFrom, dTo;
balanceAInReportArticleDate 'Итого (остаток на конец)' (ar,dTo)= GROUP SUM balanceAArticleStockDate(ar,st,dTo) IF inArticleReportStock(st) BY ar, dTo;

sumBInReportArticleDate 'Итого (сумма на начало)' (ar,dFrom)= GROUP SUM sumBArticleStockDate(ar,st,dFrom) IF inArticleReportStock(st) BY ar, dFrom;
sumSoldInReportArticleDateFromTo 'Итого (продано сумма)' (ar,dFrom,dTo)= GROUP SUM sumSoldArticleStockDateFromTo(ar,st,dFrom,dTo) IF inArticleReportStock(st) BY ar, dFrom, dTo;
sumAInReportArticleDate 'Итого (сумма на конец)' (ar,dTo)= GROUP SUM sumAArticleStockDate(ar,st,dTo) IF inArticleReportStock(st) BY ar, dTo; 

balanceBInReportSkuDate 'Итого (остаток на начало)' (ks,dFrom)= GROUP SUM balanceBSkuStockDate(ks,st,dFrom) IF inArticleReportStock(st) BY ks, dFrom;
quantitySoldInReportSkuDateFromTo 'Итого (продано кол-во)' (ks,dFrom,dTo)= GROUP SUM quantitySoldSkuStockDateFromTo(ks,st,dFrom,dTo) IF inArticleReportStock(st) BY ks, dFrom, dTo;
balanceAInReportSkuDate 'Итого (остаток на конец)' (ks,dTo)= GROUP SUM balanceASkuStockDate(ks,st,dTo) IF inArticleReportStock(st) BY ks, dTo;

sumBInReportSkuDate 'Итого (сумма на начало)' (ks,dFrom)= GROUP SUM sumBSkuStockDate(ks,st,dFrom) IF inArticleReportStock(st) BY ks, dFrom;
sumSoldInReportSkuDateFromTo 'Итого (продано сумма)' (ks,dFrom,dTo)= GROUP SUM sumSoldSkuStockDateFromTo(ks,st,dFrom,dTo) IF inArticleReportStock(st) BY ks, dFrom, dTo;
sumAInReportSkuDate 'Итого (сумма на конец)' (ks,dTo)= GROUP SUM sumASkuStockDate(ks,st,dTo) IF inArticleReportStock(st) BY ks, dTo; 

FORM saleArticle 'Продажи по артикулам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)
       
    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType    
    
    
    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES READONLY skuTreeName = nameGroup(sk)
    ORDER BY skuTreeName
    FILTERS groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' 'F5' activeGroup(sk) DEFAULT       
     
    OBJECTS ts = Stock
    PROPERTIES tsTreeName = nameStock(ts) READONLY, nameLegalEntityStock(ts) READONLY, inArticleReportStock(ts)
    ORDER BY tsTreeName
    FILTERS isCompanyStock(ts)     
    FILTERGROUP inactiveStock FILTER 'Активный' 'ctrl F10' activeStock(ts) DEFAULT
      
    OBJECTS st = Stock      
    FILTERS isCompanyStock(st),
            activeStock(st),
            inArticleReportStock(st)
            
    OBJECTS ar = Article 
    PROPERTIES(ar) READONLY idArticle, captionArticle,
                   nameSkuGroup3Article, nameSkuGroup4Article, imageArticle FORCE PANEL, imageArticleGrid=imageArticle
    PROPERTIES     READONLY balanceBArticleStockDate(ar,st,dFrom)  COLUMNS (st) HEADER nameArticleBalanceBStock(st), 
                   balanceBInReportArticleDate(ar,dFrom)
    PROPERTIES     READONLY quantitySoldArticleStockDateFromTo(ar,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleQuantitySoldStock(st),
                   quantitySoldInReportArticleDateFromTo(ar,dFrom,dTo)
    PROPERTIES     READONLY balanceAArticleStockDate(ar,st,dTo)  COLUMNS (st) HEADER nameArticleBalanceAStock(st),
                   balanceAInReportArticleDate(ar,dTo)

    PROPERTIES     READONLY sumBArticleStockDate(ar,st,dFrom)  COLUMNS (st) HEADER nameArticleSumBStock(st),
                   sumBInReportArticleDate(ar,dFrom)
    PROPERTIES     READONLY sumSoldArticleStockDateFromTo(ar,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleSumSoldStock(st),
                   sumSoldInReportArticleDateFromTo(ar,dFrom,dTo)
    PROPERTIES     READONLY sumAArticleStockDate(ar,st,dTo)  COLUMNS (st) HEADER nameArticleSumAStock(st),    
                   sumAInReportArticleDate(ar,dTo)
                   
    PROPERTIES     READONLY daysOnStockArticleStock(ar, st) COLUMNS (st) HEADER nameArticleDaysOnStockStock(st),
                   daysOnStockArticle(ar)
    PROPERTIES     READONLY averageReportSoldArticleStock(ar, st) COLUMNS (st) HEADER nameArticleAverageReportSoldStock(st),
                   averageReportSoldArticle(ar)
    PROPERTIES     READONLY turnoverArticleStock(ar, st) COLUMNS (st) HEADER nameArticleTurnoverStock(st),
                   turnoverArticle(ar) 

    PROPERTIES(dFrom, dTo) calcSaleArticleParamsInterval FORCE PANEL TODRAW ar
                
    FILTERS           isParentGroupArticle(sk, ar)                
                            
    FILTERGROUP filtersSold
        FILTER 'С движением' 'F11' filterSoldArticleDateFromTo(ar,dFrom,dTo) OR filterBalanceArticleDateFromTo(ar,dFrom,dTo) DEFAULT
        FILTER 'С продажей' 'F10' filterSoldArticleDateFromTo(ar,dFrom,dTo)
        FILTER 'С остатком' 'F9' filterBalanceArticleDateFromTo(ar,dFrom,dTo)      
             
    OBJECTS sts = Stock      
    FILTERS isCompanyStock(sts),
            inArticleReportStock(sts)                             
    FILTERGROUP inactiveStock2 FILTER 'Активный' 'ctrl F10' activeStock(sts) DEFAULT                         
    OBJECTS ks = Sku 
    PROPERTIES(ks) READONLY idBarcodeSku, nameSku, nameSkuGroup3Sku, nameSkuGroup4Sku                            
    PROPERTIES     READONLY balanceBSkuStockDate(ks,st,dFrom)  COLUMNS (st) HEADER nameArticleBalanceBStock(st),
                   balanceBInReportSkuDate(ks,dFrom)
    PROPERTIES     READONLY quantitySoldSkuStockDateFromTo(ks,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleQuantitySoldStock(st),
                   quantitySoldInReportSkuDateFromTo(ks,dFrom,dTo)
    PROPERTIES     READONLY balanceASkuStockDate(ks,st,dTo)  COLUMNS (st) HEADER nameArticleBalanceAStock(st),
                   balanceAInReportSkuDate(ks,dTo) 
    
    PROPERTIES     READONLY sumBSkuStockDate(ks,st,dFrom)  COLUMNS (st) HEADER nameArticleSumBStock(st),
                   sumBInReportSkuDate(ks,dFrom)
    PROPERTIES     READONLY sumSoldSkuStockDateFromTo(ks,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleSumSoldStock(st),
                   sumSoldInReportSkuDateFromTo(ks,dFrom,dTo)
    PROPERTIES     READONLY sumASkuStockDate(ks,st,dTo)  COLUMNS (st) HEADER nameArticleSumAStock(st),
                   sumAInReportSkuDate(ks,dTo)                  
                             
    FILTERS           articleItem(ks) == ar  
              
    FILTERGROUP filtersSold1
        FILTER 'С движением' 'F11' filterSoldSkuDateFromTo(ks,dFrom,dTo) OR filterBalanceSkuDateFromTo(ks,dFrom,dTo) DEFAULT
        FILTER 'С продажей' 'F10' filterSoldSkuDateFromTo(ks,dFrom,dTo)
        FILTER 'С остатком' 'F9' filterBalanceSkuDateFromTo(ks,dFrom,dTo)      
                      
    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, 
                           nameStockSaleLedger, nameCustomerSaleLedger, 
                           nameSkuSaleLedger,
                           quantitySaleLedger,
                           averagePriceSaleLedger,
                           sumSaleLedger 
    ORDER BY nameStockSaleLedger(s)
                           
    FILTERS activeSaleLedger(s),
            dateSaleLedger(s) >= dFrom, dateSaleLedger(s) <= dTo,                      
            inArticleReportStock(stockSaleLedger(s)),
            articleItem(skuSaleLedger(s)) == ar                                        
;


DESIGN saleArticle FROM DEFAULT {
    NEW top {
        type = CONTAINERH;
        ADD dates.box {
            type = CONTAINERH;
        }
        ADD gt.box;
    }
    REMOVE st.box;
    REMOVE sts.box;
    NEW article {
        type = SPLITH;
        fill = 1;
        NEW skuFilters {
            fill = 1;
            type = SPLITV;
            NEW column{
                fill = 1.5;
                type = SPLITV;
                ADD ts.box;
                ADD skuTree.tree.box { caption = 'Группы SKU'; }
            }    
            NEW imageBox {
                fill = 1;
                caption = 'Изображение';                     
                ADD PROPERTY(imageArticle(ar)) {
                    caption = '';
                    fill = 1;
                }
            }
        }
        NEW row {
            fill = 2.5;
            type = SPLITV;
            ADD ar.box {  fill = 2;}           
            NEW row1 {
                fill = 1;
                type = TABBED;
                ADD ks.box { caption = 'Товар';} 
                ADD s.box { caption = 'Регистр продаж';}
            }    
        }     
    } 
    ADD functions.box;
    PROPERTY(balanceBArticleStockDate(ar,st,dFrom)) { background = #FFEEEE; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumBArticleStockDate(ar,st,dFrom)) { background = #FFEEEE; }
    PROPERTY(quantitySoldArticleStockDateFromTo(ar,st,dFrom,dTo)) { background = #CCFFCC; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumSoldArticleStockDateFromTo(ar,st,dFrom,dTo)) { background = #CCFFCC; }
    PROPERTY(balanceAArticleStockDate(ar,st,dTo)) { background = #BDE3FF; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumAArticleStockDate(ar,st,dTo)) { background = #BDE3FF; }        

    PROPERTY(balanceBInReportArticleDate(ar,dFrom)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(quantitySoldInReportArticleDateFromTo(ar,dFrom,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(balanceAInReportArticleDate(ar,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
   
    PROPERTY(balanceBSkuStockDate(ks,st,dFrom)) { background = #FFEEEE; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumBSkuStockDate(ks,st,dFrom)) { background = #FFEEEE; }
    PROPERTY(quantitySoldSkuStockDateFromTo(ks,st,dFrom,dTo)) { background = #CCFFCC; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumSoldSkuStockDateFromTo(ks,st,dFrom,dTo)) { background = #CCFFCC; }
    PROPERTY(balanceASkuStockDate(ks,st,dTo)) { background = #BDE3FF; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumASkuStockDate(ks,st,dTo)) { background = #BDE3FF; }

    PROPERTY(balanceBInReportSkuDate(ks,dFrom)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(quantitySoldInReportSkuDateFromTo(ks,dFrom,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(balanceAInReportSkuDate(ks,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    
    PROPERTY(quantitySaleLedger(s)) { background = #CCFFCC; }
    PROPERTY(sumSaleLedger(s)) { background = #CCFFCC; }
    
}

NAVIGATOR {                                              
    salesReports{
        ADD saleArticle;
    }
}
