MODULE SaleLedgerArticle;

REQUIRE SaleLedger, SaleLedgerItemArticle, StockArticle;

NAMESPACE SaleLedger;

//------------------- Продажи по артикулам -------------------------//


nameArticleBalanceB (Stock stock)= name(stock) + ' (остаток на начало)';    
nameArticleSumB (Stock stock)= name(stock) + ' (сумма на начало)';    
nameArticleBalanceA (Stock stock)= name(stock) + ' (остаток на конец)';    
nameArticleSumA (Stock stock)= name(stock) + ' (сумма на конец)';    
nameArticleQuantitySold (Stock stock)= name(stock) + ' (продано кол-во)';    
nameArticleSumSold (Stock stock)= name(stock) + ' (продано сумма)';    
nameArticleDaysOnStock (Stock stock)= name(stock) + ' (дней на складе)';    
nameArticleAverageReportSold (Stock stock)= name(stock) + ' (продаж в день)';    
nameArticleTurnover (Stock stock)= name(stock) + ' (товарооборачиваемость)';

nameArticleContractSumSold (Stock stock)= name(stock) + ' (сумма контр. вал.)';    
nameArticleCostSumSold (Stock stock)= name(stock) + ' (сумма себестоимость)';    
nameArticleMarkupSumSold (Stock stock)= name(stock) + ' (сумма торг. надбавки)';    
nameArticleVATSumSold (Stock stock)= name(stock) + ' (сумма НДС)';    
nameArticleAveragePriceSold (Stock stock)= name(stock) + ' (цена ср.)';    
nameArticleContractSumByrSold (Stock stock)= name(stock) + ' (сумма контр. руб.)';    
nameArticleAverageMarkupSold (Stock stock)= name(stock) + ' (ср. % надбавки)';    
    
inArticleReport 'Отм.' = DATA LOCAL BOOLEAN (Stock);

filterBalanceDate 'С остатком' (ar,dFrom, dTo) = GROUP SUM 1 IF inArticleReport(Stock st) AND (balanceB(Article ar,st,DATE dFrom) OR balanceA(ar,st,DATE dTo))
    BY ar,dFrom, dTo;
filterSoldDate 'С продажей' (ar,dFrom,dTo) = GROUP SUM quantitySold(Article ar,Stock st,DATE dFrom,DATE dTo) IF inArticleReport(st) 
    BY ar,dFrom,dTo;   

daysOnStock 'Дней на складе' = DATA LOCAL INTEGER (Article, Stock);
averageReportSold 'Продаж в день' = DATA LOCAL NUMERIC[14,3] (Article, Stock);
turnover 'Товарооборачиваемость' = DATA LOCAL NUMERIC[14,2] (Article, Stock);
//-- Итого по всем выделенным складам 
daysOnStock 'Дней на складе (итого)' = DATA LOCAL INTEGER (Article);
averageReportSold 'Продаж в день  (итого)' = DATA LOCAL NUMERIC[14,3] (Article);
turnover 'Товарооборачиваемость  (итого)' = DATA LOCAL NUMERIC[14,2] (Article);

filterBalanceDate 'С остатком' (ks,dFrom, dTo) = GROUP SUM 1 IF inArticleReport(Stock st) AND (balanceB(Sku ks,st,DATE dFrom) OR balanceA(ks,st,DATE dTo))
    BY ks,dFrom, dTo;
filterSoldDate 'С продажей' (ks,dFrom,dTo) = GROUP SUM quantitySold(Sku ks,Stock st,DATE dFrom,DATE dTo) IF inArticleReport(st) 
    BY ks,dFrom,dTo; 
      
quantitySoldIn 'Продано за интервал (кол-во)' (article, dateFrom, dateTo) = GROUP SUM
        quantitySold(Article article, Stock stock, DATE dateFrom, DATE dateTo) IF inArticleReport(stock)
        BY article, dateFrom, dateTo;      
      

calcSaleArticleParamsInterval 'Рассчитать продажи в день и товарооборачиваемость'(DATE dateFrom, DATE dateTo) = ACTION {
    LOCAL balance = NUMERIC[14,3] (Article, Stock);
    LOCAL cumBalance = NUMERIC[16,3] (Article, Stock);
    LOCAL dateCur = DATE();

    dateCur() <- dateFrom;
    balance(Article a, Stock stock) <- balanceB(a, stock, dateFrom) WHERE inArticleReport(stock);
    daysOnStock(Article a, Stock stock) <- NULL;
    
    daysOnStock(Article a) <- NULL;
    
    WHILE dateCur() <= dateTo DO {
        daysOnStock(Article a, Stock stock) <- daysOnStock(a, stock) (+)
                   (1 IF ((balance(a, stock) > 0) OR (quantity(a, stock, dateCur()) > 0)));
        cumBalance(Article a, Stock stock) <- cumBalance(a, stock) (+) balance(a, stock);  
        balance(Article a, Stock stock) <- balance(a, stock) (+)
                   signedQuantity(a, stock, dateCur());
        daysOnStock(Article a) <- daysOnStock(a) (+) (1 IF [ = GROUP SUM 1 IF ((balance(Article a, Stock stock) > 0) OR (quantity(a, stock, dateCur()) > 0)) AND inArticleReport(stock) BY a](a));                                                

        dateCur() <- sum(dateCur(), 1);
    }

    averageReportSold(Article a, Stock stock) <- quantitySold (a, stock, dateFrom, dateTo) / daysOnStock(a, stock);
    turnover(Article a, Stock stock) <- IF quantitySold (a, stock, dateFrom, dateTo) != 0 THEN
                                         cumBalance(a, stock) / quantitySold (a, stock, dateFrom, dateTo)
                                      ELSE
                                        9999.99;
                                        
    averageReportSold(Article a) <- quantitySoldIn (a, dateFrom, dateTo) / daysOnStock(a);
    turnover(Article a) <- IF quantitySoldIn (a, dateFrom, dateTo) != 0 THEN
                                         [ = GROUP SUM cumBalance(Article a, Stock stock) IF inArticleReport(stock) BY a](a) / quantitySoldIn (a, dateFrom, dateTo)
                                      ELSE
                                        9999.99;                                    
                                        
} TOOLBAR; 


balanceBInReport 'Итого (остаток на начало)' (ar,dFrom)= GROUP SUM balanceB(Article ar,Stock st,DATE dFrom) IF inArticleReport(st) BY ar, dFrom;
quantitySoldInReportDate 'Итого (продано кол-во)' (ar,dFrom,dTo)= GROUP SUM quantitySold(Article ar,Stock st,DATE dFrom,DATE dTo) IF inArticleReport(st) BY ar, dFrom, dTo;
balanceAInReport 'Итого (остаток на конец)' (ar,dTo)= GROUP SUM balanceA(Article ar,Stock st,DATE dTo) IF inArticleReport(st) BY ar, dTo;

sumBInReport 'Итого (сумма на начало)' (ar,dFrom)= GROUP SUM sumB(Article ar,Stock st,DATE dFrom) IF inArticleReport(st) BY ar, dFrom;
sumSoldInReportDate 'Итого (продано сумма)' (ar,dFrom,dTo)= GROUP SUM sumSold(Article ar,Stock st,DATE dFrom,DATE dTo) IF inArticleReport(st) BY ar, dFrom, dTo;
sumAInReport 'Итого (сумма на конец)' (ar,dTo)= GROUP SUM sumA(Article ar,Stock st,DATE dTo) IF inArticleReport(st) BY ar, dTo; 

balanceBInReport 'Итого (остаток на начало)' (ks,dFrom)= GROUP SUM balanceB(Sku ks,Stock st,DATE dFrom) IF inArticleReport(st) BY ks, dFrom;
quantitySoldInReportDate 'Итого (продано кол-во)' (ks,dFrom,dTo)= GROUP SUM quantitySold(Sku ks,Stock st,DATE dFrom,DATE dTo) IF inArticleReport(st) BY ks, dFrom, dTo;
balanceAInReport 'Итого (остаток на конец)' (ks,dTo)= GROUP SUM balanceA(Sku ks,Stock st,DATE dTo) IF inArticleReport(st) BY ks, dTo;

sumBInReport 'Итого (сумма на начало)' (ks,dFrom)= GROUP SUM sumB(Sku ks,Stock st,DATE dFrom) IF inArticleReport(st) BY ks, dFrom;
sumSoldInReportDate 'Итого (продано сумма)' (ks,dFrom,dTo)= GROUP SUM sumSold(Sku ks,Stock st,DATE dFrom,DATE dTo) IF inArticleReport(st) BY ks, dFrom, dTo;
sumAInReport 'Итого (сумма на конец)' (ks,dTo)= GROUP SUM sumA(Sku ks,Stock st,DATE dTo) IF inArticleReport(st) BY ks, dTo; 

FORM saleArticle 'Продажи по артикулам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)
       
    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR name    
    
    
    TREE skuTree sk = Group PARENT parent
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDER BY order(sk), skuTreeName
    FILTERS groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT       
     
    OBJECTS ts = Stock
    PROPERTIES tsTreeName = name(ts) READONLY, nameLegalEntity(ts) READONLY, inArticleReport(ts)
    ORDER BY tsTreeName
    FILTERS isCompany(ts)     
    FILTERGROUP inactiveStock FILTER 'Активный' active(ts) 'ctrl F10' DEFAULT
      
    OBJECTS st = Stock      
    FILTERS isCompany(st),
            active(st),
            inArticleReport(st)
            
    OBJECTS ar = Article 
    PROPERTIES(ar) READONLY id, caption,
                   nameSkuGroup3, nameSkuGroup4, nameSkuGroup5, image FORCE PANEL, imageArticleGrid=image
    PROPERTIES     READONLY balanceB(ar,st,dFrom)  COLUMNS (st) HEADER nameArticleBalanceB(st), 
                   balanceBInReport(ar,dFrom)
    PROPERTIES     READONLY quantitySold(ar,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleQuantitySold(st),
                   quantitySoldInReportDate(ar,dFrom,dTo)
    PROPERTIES     READONLY balanceA(ar,st,dTo)  COLUMNS (st) HEADER nameArticleBalanceA(st),
                   balanceAInReport(ar,dTo)

    PROPERTIES     READONLY sumB(ar,st,dFrom)  COLUMNS (st) HEADER nameArticleSumB(st),
                   sumBInReport(ar,dFrom)
    PROPERTIES     READONLY sumSold(ar,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleSumSold(st),
                   sumSoldInReportDate(ar,dFrom,dTo)
    PROPERTIES     READONLY sumA(ar,st,dTo)  COLUMNS (st) HEADER nameArticleSumA(st),    
                   sumAInReport(ar,dTo)
                   
    PROPERTIES     READONLY daysOnStock(ar, st) COLUMNS (st) HEADER nameArticleDaysOnStock(st),
                   daysOnStock(ar)
    PROPERTIES     READONLY averageReportSold(ar, st) COLUMNS (st) HEADER nameArticleAverageReportSold(st),
                   averageReportSold(ar)
    PROPERTIES     READONLY turnover(ar, st) COLUMNS (st) HEADER nameArticleTurnover(st),
                   turnover(ar) 

    PROPERTIES(dFrom, dTo) calcSaleArticleParamsInterval FORCE PANEL TODRAW ar
                
    FILTERS           isParent(sk, ar)                
                            
    FILTERGROUP filtersSold
        FILTER 'С движением' filterSoldDate(ar,dFrom,dTo) OR filterBalanceDate(ar,dFrom,dTo) 'F11' DEFAULT
        FILTER 'С продажей' filterSoldDate(ar,dFrom,dTo) 'F10'
        FILTER 'С остатком' filterBalanceDate(ar,dFrom,dTo) 'F9'      
             
    OBJECTS sts = Stock      
    FILTERS isCompany(sts),
            inArticleReport(sts)                             
    FILTERGROUP inactiveStock2 FILTER 'Активный' active(sts) 'ctrl F10' DEFAULT                         
    OBJECTS ks = Sku 
    PROPERTIES(ks) READONLY idBarcode, name, nameSkuGroup3, nameSkuGroup4, nameSkuGroup5                            
    PROPERTIES     READONLY balanceB(ks,st,dFrom)  COLUMNS (st) HEADER nameArticleBalanceB(st),
                   balanceBInReport(ks,dFrom)
    PROPERTIES     READONLY quantitySold(ks,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleQuantitySold(st),
                   quantitySoldInReportDate(ks,dFrom,dTo)
    PROPERTIES     READONLY balanceA(ks,st,dTo)  COLUMNS (st) HEADER nameArticleBalanceA(st),
                   balanceAInReport(ks,dTo) 
    
    PROPERTIES     READONLY sumB(ks,st,dFrom)  COLUMNS (st) HEADER nameArticleSumB(st),
                   sumBInReport(ks,dFrom)
    PROPERTIES     READONLY sumSold(ks,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleSumSold(st),
                   sumSoldInReportDate(ks,dFrom,dTo)
    PROPERTIES     READONLY sumA(ks,st,dTo)  COLUMNS (st) HEADER nameArticleSumA(st),
                   sumAInReport(ks,dTo)                  
                             
    FILTERS           article(ks) == ar  
              
    FILTERGROUP filtersSold1
        FILTER 'С движением' filterSoldDate(ks,dFrom,dTo) OR filterBalanceDate(ks,dFrom,dTo) 'F11' DEFAULT
        FILTER 'С продажей' filterSoldDate(ks,dFrom,dTo) 'F10'
        FILTER 'С остатком' filterBalanceDate(ks,dFrom,dTo) 'F9'      
                      
    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTime, 
                           nameStock, nameCustomer, 
                           nameSku,
                           quantity,
                           averagePrice,
                           sum 
    ORDER BY nameStock(s)
                           
    FILTERS active(s),
            date(s) >= dFrom, date(s) <= dTo,                      
            inArticleReport(stock(s)),
            article(sku(s)) == ar                                        
;

EXTEND FORM saleArticle FILTERS (ts IS Stock AND NOT limitAccess(currentUser())) OR accessCompany(currentUser(),ts);

DESIGN saleArticle {
    NEW top {
        type = CONTAINERH;
        MOVE dates.box {
            type = CONTAINERH;
        }
        MOVE gt.box;
    }
    REMOVE st.box;
    REMOVE sts.box;
    NEW article {
        type = SPLITH;
        fill = 1;
        NEW skuFilters {
            fill = 1;
            type = SPLITV;
            NEW column{
                fill = 1.5;
                type = SPLITV;
                MOVE ts.box;
                MOVE skuTree.tree.box { caption = 'Группы SKU'; }
            }    
            NEW imageBox {
                fill = 1;
                caption = 'Изображение';                     
                MOVE PROPERTY(image(ar)) {
                    caption = '';
                    fill = 1;
                }
            }
        }
        NEW row {
            fill = 2.5;
            type = SPLITV;
            MOVE ar.box {  fill = 2;}           
            NEW row1 {
                fill = 1;
                type = TABBED;
                MOVE ks.box { caption = 'Товар';} 
                MOVE s.box { caption = 'Регистр продаж';}
            }    
        }     
    } 
    MOVE functions.box;
    PROPERTY(balanceB(ar,st,dFrom)) { background = #FFEEEE; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumB(ar,st,dFrom)) { background = #FFEEEE; }
    PROPERTY(quantitySold(ar,st,dFrom,dTo)) { background = #CCFFCC; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumSold(ar,st,dFrom,dTo)) { background = #CCFFCC; }
    PROPERTY(balanceA(ar,st,dTo)) { background = #BDE3FF; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumA(ar,st,dTo)) { background = #BDE3FF; }        

    PROPERTY(balanceBInReport(ar,dFrom)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(quantitySoldInReportDate(ar,dFrom,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(balanceAInReport(ar,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
   
    PROPERTY(balanceB(ks,st,dFrom)) { background = #FFEEEE; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumB(ks,st,dFrom)) { background = #FFEEEE; }
    PROPERTY(quantitySold(ks,st,dFrom,dTo)) { background = #CCFFCC; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumSold(ks,st,dFrom,dTo)) { background = #CCFFCC; }
    PROPERTY(balanceA(ks,st,dTo)) { background = #BDE3FF; minimumCharWidth = 2; preferredCharWidth = 2;}
    PROPERTY(sumA(ks,st,dTo)) { background = #BDE3FF; }

    PROPERTY(balanceBInReport(ks,dFrom)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(quantitySoldInReportDate(ks,dFrom,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    PROPERTY(balanceAInReport(ks,dTo)) { minimumCharWidth = 4; preferredCharWidth = 4;}
    
    PROPERTY(quantity(s)) { background = #CCFFCC; }
    PROPERTY(sum(s)) { background = #CCFFCC; }
    
}

NAVIGATOR {                                              
    salesReports{
        ADD saleArticle;
    }
}
