MODULE SaleOperation;

REQUIRE Operation, PriceListType, Sale;

NAMESPACE Sale;

@defineOperation('(продажа)');

@defineOperationPriceListType();

TABLE stockOperation(Stock, Operation);
TABLE stockGroupOperation(StockGroup, Operation);
TABLE legalEntityOperation(LegalEntity, Operation);
TABLE legalEntityGroupOperation(LegalEntityGroup, Operation);
@defineOperationLegalEntity(supplier, s, 'Поставщики');
@defineCountLegalEntityOperation(supplier, company);
@defineOperationStock(supplierStock, sts, 'Склады поставщика');
@defineCountStockOperation(supplier, company, seller);
@defineOperationLegalEntity(customer, c, 'Покупатели');
@defineCountLegalEntityOperation(customer, buyer);
@defineOperationStock(customerStock, stc, 'Склады покупателя');
@defineCountStockOperation(customer, customer, buyer);

EXTEND FORM operation
    FILTERS countCompanyStockStockGroup(stsg),
            isCompanyStock(sts),
            countCustomerStockStockGroup(stcg),
            isCustomerStock(stc),
            inSupplierOperation(legalEntityStock(sts), o),
            inCustomerOperation(legalEntityStock(stc), o),
            isSellerLegalEntity(legalEntityStock(sts)),
            isBuyerLegalEntity(legalEntityStock(stc))
;

@defineOperationRole();
@extendFormFilterRole(o, dialogOperations);
//@extendFormFilterRole(o, operations);     //-- пока не нужен

EXTEND FORM operation
    FILTERS isCompanyLegalEntity(s),
            isBuyerLegalEntity(c)
;

EXTEND DESIGN operation{
    tabContainer {
        NEW createContainer {
            caption = 'Производные документы';
            type = CONTAINERH;
            NEW saleContainer{
                type = CONTAINERV;
            }
        }
        NEW showContainer {
            caption = 'Отображение свойств';
            type = CONTAINERV;
        }
    }
}

@defineOperationProperty(showPack, 'Упаковка', showContainer);

NAVIGATOR {
    saleMasterData {
        ADD operations;
    }
}
