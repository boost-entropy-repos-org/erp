MODULE ScheduleOrder;

REQUIRE System,
        Time,
        Utils,
        Historizable,
        Stock,
        Numerator,
        Document;

CLASS GenType 'Тип генерации' {
    genDays 'Генерация через N дней',
    genNumber 'Генерация по числам',
    genDayMonth 'Генерация по дням недели и месяца'
}
FORM genTypes
    OBJECTS t = GenType
    PROPERTIES(t) READONLY staticCaption
    DIALOG GenType OBJECT t
;

CLASS ABSTRACT ScheduleOrder 'График';
TABLE scheduleOrder(ScheduleOrder);

CLASS ABSTRACT ScheduleOrderDetail 'Заказ по графику';
TABLE scheduleOrderDetail(ScheduleOrderDetail);

startDateScheduleOrder 'Дата начала' = ABSTRACT DATE (ScheduleOrder) IN base;
endDateScheduleOrder 'Дата окончания' = ABSTRACT DATE (ScheduleOrder) IN base;

typeScheduleOrder 'Тип генерации графика' = ABSTRACT GenType (ScheduleOrder);
nameTypeScheduleOrder 'Тип генерации графика' (scheduleOrder) = staticCaption(typeScheduleOrder(scheduleOrder)) IN base;

supplierScheduleOrder = ABSTRACT LegalEntity(ScheduleOrder);
nameSupplierScheduleOrder 'Поставщик' (scheduleOrder) = nameLegalEntity(supplierScheduleOrder(scheduleOrder)) IN base;
customerScheduleOrder = ABSTRACT LegalEntity(ScheduleOrder);
nameCustomerScheduleOrder 'Покупатель' (scheduleOrder) = nameLegalEntity(customerScheduleOrder(scheduleOrder)) IN base;

supplierStockScheduleOrder = ABSTRACT Stock(ScheduleOrder);
nameSupplierStockScheduleOrder 'Склад поставщика' (scheduleOrder) = nameStock(supplierStockScheduleOrder(scheduleOrder));
customerStockScheduleOrder = ABSTRACT Stock(ScheduleOrder);
nameCustomerStockScheduleOrder 'Склад покупателя' (scheduleOrder) = nameStock(customerStockScheduleOrder(scheduleOrder));


addScheduleOrderSupplierCustomer 'Добавить' = ABSTRACT ACTION LIST (LegalEntity, LegalEntity) IMAGE 'add.png' EDITKEY 'INSERT' HIDE TOOLBAR;
editScheduleOrder 'Редактировать' = ABSTRACT ACTION LIST (ScheduleOrder) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

META defineScheduleOrder(sign, stockProp)

    CLASS ScheduleOrder 'График поставок'##sign : ScheduleOrder.ScheduleOrder;
    CLASS ScheduleOrderDetail 'Заказ по графику'##sign : ScheduleOrder.ScheduleOrderDetail;

    //общие свойства
    typeScheduleOrder 'Тип генерации графика (ИД)' = DATA GenType (ScheduleOrder);
    ScheduleOrder.typeScheduleOrder(scheduleOrder) += typeScheduleOrder(scheduleOrder);
    nameTypeScheduleOrder 'Тип генерации графика' (scheduleOrder) = staticCaption(typeScheduleOrder(scheduleOrder)) IN base;

    supplierScheduleOrder 'Поставщик (ИД)' = DATA LegalEntity(ScheduleOrder);
    nameSupplierScheduleOrder 'Поставщик' (scheduleOrder) = nameLegalEntity(supplierScheduleOrder(scheduleOrder)) IN base;

    customerScheduleOrder 'Покупатель (ИД)' = DATA LegalEntity(ScheduleOrder);
    nameCustomerScheduleOrder 'Покупатель' (scheduleOrder) = nameLegalEntity(customerScheduleOrder(scheduleOrder)) IN base;

    ScheduleOrder.supplierScheduleOrder(scheduleOrder) += supplierScheduleOrder(scheduleOrder);
    ScheduleOrder.customerScheduleOrder(scheduleOrder) += customerScheduleOrder(scheduleOrder);

    supplierStockScheduleOrder = DATA Stock(ScheduleOrder);
    nameSupplierStockScheduleOrder 'Склад поставщика' (scheduleOrder) = nameStock(supplierStockScheduleOrder(scheduleOrder));

    customerStockScheduleOrder = DATA Stock(ScheduleOrder);
    nameCustomerStockScheduleOrder 'Склад покупателя' (scheduleOrder) = nameStock(customerStockScheduleOrder(scheduleOrder));

    ScheduleOrder.supplierStockScheduleOrder(scheduleOrder) += supplierStockScheduleOrder(scheduleOrder);
    ScheduleOrder.customerStockScheduleOrder(scheduleOrder) += customerStockScheduleOrder(scheduleOrder);
    
    CONSTRAINT supplierScheduleOrder(scheduleOrder) AND supplierStockScheduleOrder(scheduleOrder) AND NOT
    inLegalEntityStock(supplierScheduleOrder(scheduleOrder), supplierStockScheduleOrder(scheduleOrder))
        CHECKED BY supplierScheduleOrder, supplierStockScheduleOrder
            MESSAGE 'Поставщик и склад поставщика для графика заказов не имеют связи';

    CONSTRAINT customerScheduleOrder(scheduleOrder) AND customerStockScheduleOrder(scheduleOrder) AND NOT
    inLegalEntityStock(customerScheduleOrder(scheduleOrder), customerStockScheduleOrder(scheduleOrder))
        CHECKED BY customerScheduleOrder, customerStockScheduleOrder
            MESSAGE 'Покупатель и склад покупателя для графика заказов не имеют связи';

    startDateScheduleOrder 'Дата начала' = DATA DATE (ScheduleOrder) IN base;
    endDateScheduleOrder 'Дата окончания' = DATA DATE (ScheduleOrder) IN base;

    ScheduleOrder.startDateScheduleOrder (scheduleOrder) += startDateScheduleOrder(scheduleOrder);
    ScheduleOrder.endDateScheduleOrder (scheduleOrder) += endDateScheduleOrder(scheduleOrder);

    dayBeforeScheduleOrder 'За сколько дней формировать заказ' = DATA INTEGER (ScheduleOrder);

    //свойства "Каждые N недель"
    periodScheduleOrder 'Кол-во недель между поставками' = DATA INTEGER (ScheduleOrder);
    overPeriodScheduleOrder 'Кол-во недель между поставками' (scheduleOrder) = OVERRIDE 1 IF scheduleOrder IS ScheduleOrder, periodScheduleOrder(scheduleOrder);

    //свойства "Каждые N дней"
    dayAfterScheduleOrder 'Через сколько дней после последней поставки делать заказ' = DATA INTEGER (ScheduleOrder);
    dayLastOrderScheduleOrder 'Дата последнего заказа' = DATA DATE (ScheduleOrder);

    //свойства "По числам"
    stringNumberScheduleOrder 'Числа месяца поставок (указывать через запятую)' = DATA VARSTRING[100] (ScheduleOrder);
    transferDayScheduleOrder 'День на который переносить поставки с Субботы и Воскресенья (ИД)' = DATA DOW (ScheduleOrder);
    nameTransferDayScheduleOrder 'День на который переносить поставки с Субботы и Воскресенья' (scheduleOrder) = staticCaption(transferDayScheduleOrder(scheduleOrder));
    CONSTRAINT transferDayScheduleOrder(scheduleOrder) != DOW.friday AND transferDayScheduleOrder(scheduleOrder) != DOW.monday CHECKED MESSAGE 'Выберите день с ПН по ПТ';

    //свойства "По дням недели и месяца"
    TABLE scheduleOrderMonth(ScheduleOrder, Month);
    inMonthScheduleOrder 'Включать' = DATA BOOLEAN (ScheduleOrder, Month);
    inAllMonthScheduleOrder 'Включить все месяцы' = DATA BOOLEAN (ScheduleOrder);
    inMonthScheduleOrder(scheduleOrder, month) <- inAllMonthScheduleOrder(scheduleOrder) WHEN SET(inAllMonthScheduleOrder(scheduleOrder) AND month IS Month);

    TABLE scheduleOrderDOW(ScheduleOrder, DOW);
    inDayScheduleOrder 'Включать' = DATA BOOLEAN (ScheduleOrder, DOW);

    toShowGenDay (scheduleOrder) = typeScheduleOrder(scheduleOrder) == GenType.genDays;
    toShowGenNumber (scheduleOrder) = typeScheduleOrder(scheduleOrder) == GenType.genNumber;
    toShowGenDayMonth (scheduleOrder) = typeScheduleOrder(scheduleOrder) == GenType.genDayMonth;

    dateOrderScheduleOrderDetail 'Дата заказа' = DATA DATE (ScheduleOrderDetail) IN base;
    dateSupplyScheduleOrderDetail 'Дата поставки' = DATA DATE (ScheduleOrderDetail) IN base;

    scheduleOrderScheduleOrderDetail 'График поставок' = DATA ScheduleOrder(ScheduleOrderDetail) NOT NULL DELETE;

    CONSTRAINT scheduleOrderScheduleOrderDetail(scheduleOrderDetail1) == scheduleOrderScheduleOrderDetail(scheduleOrderDetail2) AND
               dateSupplyScheduleOrderDetail(scheduleOrderDetail1) == dateSupplyScheduleOrderDetail(scheduleOrderDetail2) AND
               dateOrderScheduleOrderDetail(scheduleOrderDetail1) == dateOrderScheduleOrderDetail(scheduleOrderDetail2) AND NOT
               scheduleOrderDetail1 == scheduleOrderDetail2 MESSAGE 'Совпадение даты заказа и даты поставки';

    supplierScheduleOrderDetail(scheduleOrderDetail) = supplierScheduleOrder(scheduleOrderScheduleOrderDetail(scheduleOrderDetail));
    nameSupplierScheduleOrderDetail 'Поставщик' (scheduleOrderDetail) = nameLegalEntity(supplierScheduleOrderDetail(scheduleOrderDetail));

    customerScheduleOrderDetail(scheduleOrderDetail) = customerScheduleOrder(scheduleOrderScheduleOrderDetail(scheduleOrderDetail));
    nameCustomerScheduleOrderDetail 'Покупатель' (scheduleOrderDetail) = nameLegalEntity(customerScheduleOrderDetail(scheduleOrderDetail));

    supplierStockScheduleOrderDetail(scheduleOrderDetail) = supplierStockScheduleOrder(scheduleOrderScheduleOrderDetail(scheduleOrderDetail));
    nameSupplierStockScheduleOrderDetail 'Склад поставщика' (scheduleOrderDetail) = nameStock(supplierStockScheduleOrderDetail(scheduleOrderDetail));

    customerStockScheduleOrderDetail(scheduleOrderDetail) = customerStockScheduleOrder(scheduleOrderScheduleOrderDetail(scheduleOrderDetail));
    nameCustomerStockScheduleOrderDetail 'Склад покупателя' (scheduleOrderDetail) = nameStock(customerStockScheduleOrderDetail(scheduleOrderDetail));

    tmpDate = DATA SESSION DATE();
    tmpDateP = DATA SESSION DATE();
    tmpDateS = DATA SESSION DATE();

    createScheduleOrder 'Сгенерировать предварительные заказы' = ACTION (scheduleOrder) {
        // генерация через N дней
        IF typeScheduleOrder(scheduleOrder) == GenType.genDays THEN {
            ASSIGN tmpDate() <- dayLastOrderScheduleOrder(scheduleOrder);
            // итерируемся по всем датам через n дней
            WHILE tmpDate() <= endDateScheduleOrder(scheduleOrder) DO {
                IF tmpDate() >= startDateScheduleOrder(scheduleOrder) THEN {
                    FOR ADDOBJ o = ScheduleOrderDetail DO {
                        ASSIGN dateOrderScheduleOrderDetail(o) <- subtractDate(tmpDate(), dayBeforeScheduleOrder(scheduleOrder));
                        ASSIGN dateSupplyScheduleOrderDetail(o) <- tmpDate();
                        ASSIGN scheduleOrderScheduleOrderDetail(o) <- scheduleOrder;
                    };
                };
                ASSIGN tmpDate() <- sumDate(tmpDate(), dayAfterScheduleOrder(scheduleOrder));
            };
        };

        // генерация по числам
        IF typeScheduleOrder(scheduleOrder) == GenType.genNumber THEN {
            ASSIGN tmpDate() <- startDateScheduleOrder(scheduleOrder);
            // итерируемся по всем датам через 1 день
            WHILE tmpDate() <= endDateScheduleOrder(scheduleOrder) DO {
                IF isWordInCSV(extractDay(tmpDate()), stringNumberScheduleOrder(scheduleOrder)) == 1 THEN {
                    FOR ADDOBJ o = ScheduleOrderDetail DO {
                        ASSIGN tmpDateS() <- tmpDate();
                        ASSIGN scheduleOrderScheduleOrderDetail(o) <- scheduleOrder;
                        // если попали на субботу или воскресенье
                        IF extractDOWNumber(tmpDateS()) == 0 OR extractDOWNumber(tmpDateS()) == 6 THEN {
                            IF numberDOW(transferDayScheduleOrder(scheduleOrder)) == 1 THEN {
                            // если нужно переносить на понедельник, то добавляем
                                WHILE extractDOWNumber(tmpDateS()) != 1 DO ASSIGN tmpDateS() <- sumDate(tmpDateS(), 1);
                            }
                            ELSE {
                                // если нужно переносить на пятницу, то отнимаем
                                WHILE extractDOWNumber(tmpDateS()) != 5 DO ASSIGN tmpDateS() <- subtractDate(tmpDateS(), 1);
                            };
                        };
                        ASSIGN dateSupplyScheduleOrderDetail(o) <- tmpDateS();
                        ASSIGN dateOrderScheduleOrderDetail(o) <- subtractDate(tmpDateS(), dayBeforeScheduleOrder(scheduleOrder));
                    };
                };
                ASSIGN tmpDate() <- sumDate(tmpDate(), 1);
            };
        };

        // генерация по дням и месяцам
        IF typeScheduleOrder(scheduleOrder) == GenType.genDayMonth THEN {
            ASSIGN tmpDate() <- startDateScheduleOrder(scheduleOrder);
            // итерируемся по всем датам через 1 день
            WHILE tmpDate() <= endDateScheduleOrder(scheduleOrder) DO {
                ASSIGN tmpDateP() <- tmpDate();
                WHILE tmpDate() < sumDate(tmpDateP(), 7) AND tmpDate() <= endDateScheduleOrder(scheduleOrder) DO {
                    IF inMonthScheduleOrder(scheduleOrder, extractMonth(tmpDate())) AND inDayScheduleOrder(scheduleOrder, extractDOW(tmpDate())) THEN {
                        FOR ADDOBJ o = ScheduleOrderDetail DO {
                            ASSIGN dateOrderScheduleOrderDetail(o) <- subtractDate(tmpDate(), dayBeforeScheduleOrder(scheduleOrder));
                            ASSIGN dateSupplyScheduleOrderDetail(o) <- tmpDate();
                            ASSIGN scheduleOrderScheduleOrderDetail(o) <- scheduleOrder;
                        };
                    };
                    ASSIGN tmpDate() <- sumDate(tmpDate(), 1);
                };
                ASSIGN tmpDate() <- sumDate(tmpDate(), (overPeriodScheduleOrder(scheduleOrder) - 1) * 7);
            };
        };

        //EXEC apply();
    } TOOLBAR;


    monthInDateScheduleOrderDetail 'Месяц'(scheduleOrderDetail) = extractMonthName(dateSupplyScheduleOrderDetail(scheduleOrderDetail));
    DOWInDateScheduleOrderDetail 'День недели'(scheduleOrderDetail) = extractDOWName(dateSupplyScheduleOrderDetail(scheduleOrderDetail));

    orderScheduleOrderDetail = STRUCT(dateSupplyScheduleOrderDetail(scheduleOrderDetail), scheduleOrderDetail) PERSISTENT;

    concatNextScheduleOrderDetail(scheduleOrderDetail, scheduleOrder) = GROUP MIN orderScheduleOrderDetail(scheduleOrderDetail1) IF
                                                                                  dateSupplyScheduleOrderDetail(scheduleOrderDetail1) > dateSupplyScheduleOrderDetail(scheduleOrderDetail)
                                                                               BY scheduleOrderDetail, scheduleOrderScheduleOrderDetail(scheduleOrderDetail1);

    nextScheduleOrderDetail(scheduleOrderDetail) = concatNextScheduleOrderDetail(scheduleOrderDetail, scheduleOrderScheduleOrderDetail(scheduleOrderDetail))[2];

    dateSupplyNextScheduleOrderDetail(scheduleOrderDetail) = dateSupplyScheduleOrderDetail(nextScheduleOrderDetail(scheduleOrderDetail));

    scheduleOrderDetailUserOrder = DATA ScheduleOrderDetail(UserOrder);
    quantityOrdersScheduleOrderDetail 'Кол-во заказов' (scheduleOrderDetail) =
        GROUP SUM 1 IF supplierStockOrder(userOrder)==supplierStockScheduleOrderDetail(scheduleOrderDetail) AND
                       customerStockOrder(userOrder)==customerStockScheduleOrderDetail(scheduleOrderDetail) AND
                       shipmentDateUserOrder(userOrder)==dateSupplyScheduleOrderDetail(scheduleOrderDetail) AND
                       dateOrder(userOrder)==dateOrderScheduleOrderDetail(scheduleOrderDetail)
               BY scheduleOrderDetail PERSISTENT;
               
    lastScheduleOrderDetailDateSupplierStockCustomerStock (d,s,ss,c,cs) = 
        GROUP LAST sd
               BY d, supplierScheduleOrderDetail(sd), supplierStockScheduleOrderDetail(sd), customerScheduleOrderDetail(sd), customerStockScheduleOrderDetail(sd)
               ORDER dateOrderScheduleOrderDetail(sd), sd 
               WHERE dateOrderScheduleOrderDetail(sd) <= (d AS DATE);             
    isLastScheduleOrderDetailDate (sd,d)= lastScheduleOrderDetailDateSupplierStockCustomerStock(d,supplierScheduleOrderDetail(sd), supplierStockScheduleOrderDetail(sd), customerScheduleOrderDetail(sd), customerStockScheduleOrderDetail(sd)) == sd;           

    lastScheduleOrderDetailSupplierStockCustomerStock (s,ss,c,cs) = 
        GROUP LAST sd
               BY supplierScheduleOrderDetail(sd), supplierStockScheduleOrderDetail(sd), customerScheduleOrderDetail(sd), customerStockScheduleOrderDetail(sd)
               ORDER dateOrderScheduleOrderDetail(sd), sd 
               WHERE sd IS ScheduleOrderDetail;             
    isLastScheduleOrderDetail (sd)= lastScheduleOrderDetailSupplierStockCustomerStock(supplierScheduleOrderDetail(sd), supplierStockScheduleOrderDetail(sd), customerScheduleOrderDetail(sd), customerStockScheduleOrderDetail(sd)) == sd;   

    overCreateOrder = ABSTRACT ACTION LIST (UserOrder);

    createScheduleUserOrder 'Создать заказ' = ACTION (scheduleOrderDetail) NEWSESSION {
        FOR ADDOBJ o = UserOrder DO {
            scheduleOrderDetailUserOrder(o) <- scheduleOrderDetail;
            dateUserOrder(o) <- currentDate();
            timeUserOrder(o) <- currentTime();
            shipmentDateUserOrder(o) <- dateSupplyScheduleOrderDetail(scheduleOrderDetail);
            shipmentTimeUserOrder(o) <- currentTime();
            nextShipmentDateUserOrder(o) <- dateSupplyNextScheduleOrderDetail(scheduleOrderDetail);
            supplierUserOrder(o) <- supplierScheduleOrderDetail(scheduleOrderDetail);
            customerUserOrder(o) <- customerScheduleOrderDetail(scheduleOrderDetail);
            supplierStockUserOrder(o) <- supplierStockScheduleOrderDetail(scheduleOrderDetail);
            customerStockUserOrder(o) <- customerStockScheduleOrderDetail(scheduleOrderDetail);

            IF countOperationSupplierCustomerSupplierStockCustomerStockUser(supplierUserOrder(o), customerUserOrder(o), supplierStockUserOrder(o), customerStockUserOrder(o), currentUser()) == 1 THEN 
                operationUserOrder(o) <- defaultOperationSupplierCustomerSupplierStockCustomerStockUser(supplierUserOrder(o), customerUserOrder(o), supplierStockUserOrder(o), customerStockUserOrder(o), currentUser());

            EXEC overCreateOrder(o);

            FORM userOrder OBJECTS o = o MANAGESESSION DOCKEDMODAL;
        };
    } TOOLBAR;


    FORM scheduleOrder 'График поставок'
        OBJECTS s=ScheduleOrder FIXED PANEL
        PROPERTIES (s) nameSupplierScheduleOrder, nameSupplierStockScheduleOrder, nameCustomerScheduleOrder, nameCustomerStockScheduleOrder,
                       startDateScheduleOrder, endDateScheduleOrder, nameTypeScheduleOrder, dayBeforeScheduleOrder,
                       overPeriodScheduleOrder SHOWIF toShowGenDayMonth(s), inAllMonthScheduleOrder SHOWIF toShowGenDayMonth(s),
                       dayLastOrderScheduleOrder SHOWIF toShowGenDay(s), dayAfterScheduleOrder SHOWIF toShowGenDay(s),
                       stringNumberScheduleOrder SHOWIF toShowGenNumber(s), nameTransferDayScheduleOrder SHOWIF toShowGenNumber(s)

        OBJECTS m=Month FIXED GRID
        PROPERTIES(m) staticCaption SHOWIF toShowGenDayMonth(s)
        PROPERTIES(s, m) inMonthScheduleOrder SHOWIF toShowGenDayMonth(s)

        OBJECTS d=DOW FIXED GRID
        PROPERTIES(d) staticCaption SHOWIF toShowGenDayMonth(s)
        PROPERTIES(s, d) inDayScheduleOrder SHOWIF toShowGenDayMonth(s)

        OBJECTS sd=ScheduleOrderDetail
        PROPERTIES (sd) dateOrderScheduleOrderDetail, dateSupplyScheduleOrderDetail
        PROPERTIES (sd) READONLY monthInDateScheduleOrderDetail, DOWInDateScheduleOrderDetail,
                        nameSupplierScheduleOrderDetail, nameSupplierStockScheduleOrderDetail,
                        nameCustomerScheduleOrderDetail, nameCustomerStockScheduleOrderDetail
        PROPERTIES (sd) createScheduleUserOrder, DELETESESSION
        ORDER BY dateSupplyScheduleOrderDetail(sd)
        PROPERTIES createScheduleOrder(s) TODRAW sd

        PROPERTIES(sd) ADDOBJ TOOLBAR

        FILTERS scheduleOrderScheduleOrderDetail(sd)==s

        EDIT ScheduleOrder OBJECT s
    ;

    DESIGN scheduleOrder FROM DEFAULT{
        NEW header {
            type = CONTAINERH;
            NEW suppContainer {
                caption = 'Поставщик';
                type = COLUMNS;
                columns = 1;
                ADD PROPERTY(nameSupplierScheduleOrder(s));
                ADD PROPERTY(nameSupplierStockScheduleOrder(s));
            }

            NEW custContainer {
                caption = 'Покупатель';
                type = COLUMNS;
                columns = 1;
                ADD PROPERTY(nameCustomerScheduleOrder(s));
                ADD PROPERTY(nameCustomerStockScheduleOrder(s));
            }

            NEW dateContainer {
                caption = 'Сроки';
                type = COLUMNS;
                columns = 1;
                ADD PROPERTY(startDateScheduleOrder(s));
                ADD PROPERTY(endDateScheduleOrder(s));
            }
        }

        NEW bottomContainer {
            fill = 1;
            type = TABBED;
            NEW params {
                caption = 'Параметры';
                NEW paramsHeader {
                    NEW paramsProps {
                        caption = 'Общие';
                        type = CONTAINERH;
                        ADD PROPERTY(nameTypeScheduleOrder(s));
                        ADD PROPERTY(dayBeforeScheduleOrder(s));
                    }

                    NEW paramsCustom {
                        caption = 'Параметры графика';
                        ADD PROPERTY(overPeriodScheduleOrder(s));
                        ADD PROPERTY(inAllMonthScheduleOrder(s));
                        ADD PROPERTY(dayLastOrderScheduleOrder(s));
                        ADD PROPERTY(dayAfterScheduleOrder(s));
                        ADD PROPERTY(stringNumberScheduleOrder(s));
                        ADD PROPERTY(nameTransferDayScheduleOrder(s));
                    }
                }

                NEW days {
                    fill = 1;
                    type = CONTAINERH;
                    ADD m.box;
                    ADD d.box;
                }
            }

            ADD sd.box {
                caption = 'Предварительные заказы';
            }
        }
        ADD functions.box;
    }

    editScheduleOrder 'Редактировать' = ACTION EDITFORM ScheduleOrder TOOLBAR;

    ScheduleOrder.editScheduleOrder(scheduleOrder) += editScheduleOrder(scheduleOrder);

    editScheduleOrderDetail 'Редактировать' (detail) = editScheduleOrder(scheduleOrderScheduleOrderDetail(detail)) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

    addScheduleOrderSupplierCustomer 'Добавить'##sign = ACTION (supplier, customer) {
        FOR ADDOBJ s = ScheduleOrder DO {
            ASSIGN supplierScheduleOrder(s) <- supplier;
            ASSIGN customerScheduleOrder(s) <- customer;

            FORM scheduleOrder OBJECTS s = s MANAGESESSION DOCKEDMODAL;
            IF NOT formResult() == FormResult.ok THEN {
                DELETE s;
            }
        }
    } IMAGE 'add.png' EDITKEY 'INSERT' HIDE TOOLBAR;

    ScheduleOrder.addScheduleOrderSupplierCustomer(supplier, customer) += addScheduleOrderSupplierCustomer(supplier, customer);

    supplier = DATA SESSION LegalEntity();
    nameSupplier 'Поставщик' = nameLegalEntity(supplier());
    customer = DATA SESSION LegalEntity();
    nameCustomer 'Покупатель' = nameLegalEntity(customer());
    supplierStock = DATA SESSION Stock();
    nameSupplierStock 'Склад поставщика' = nameStock(supplierStock());
    customerStock = DATA SESSION Stock();
    nameCustomerStock 'Склад покупателя' = nameStock(customerStock());

    CONSTRAINT supplier() AND supplierStock() AND NOT inLegalEntityStock(supplier(), supplierStock())
        CHECKED BY supplierStock MESSAGE 'Поставщик и склад поставщика для графика заказов не имеют связи';

    CONSTRAINT customer() AND customerStock() AND NOT inLegalEntityStock(customer(), customerStock())
        CHECKED BY customerStock MESSAGE 'Покупатель и склад покупателя для графика заказов не имеют связи';


    FORM scheduleOrderDetails 'Заказы по графику'

        OBJECTS d=DATE FIXED PANEL
        PROPERTIES dv=OBJVALUE(d)
        PROPERTIES () nameSupplier, nameCustomer, nameSupplierStock, nameCustomerStock

        OBJECTS sd=ScheduleOrderDetail
        PROPERTIES (sd) READONLY dateOrderScheduleOrderDetail, dateSupplyScheduleOrderDetail,
                        monthInDateScheduleOrderDetail, DOWInDateScheduleOrderDetail,
                        nameSupplierScheduleOrderDetail, nameSupplierStockScheduleOrderDetail,
                        nameCustomerScheduleOrderDetail, nameCustomerStockScheduleOrderDetail, quantityOrdersScheduleOrderDetail
        PROPERTIES (sd) createScheduleUserOrder, editScheduleOrderDetail

        ORDER BY dateSupplyScheduleOrderDetail(sd)

        FILTERS supplierScheduleOrderDetail(sd) == supplier() OR (sd IS ScheduleOrderDetail AND NOT supplier()),
                supplierStockScheduleOrderDetail(sd) == supplierStock() OR (sd IS ScheduleOrderDetail AND NOT supplierStock()),
                customerScheduleOrderDetail(sd) == customer() OR (sd IS ScheduleOrderDetail AND NOT customer()),
                customerStockScheduleOrderDetail(sd) == customerStock() OR (sd IS ScheduleOrderDetail AND NOT customerStock())

        FILTERGROUP dateFilter
            FILTER 'Без заказов' 'F11' sd IS ScheduleOrderDetail  AND NOT quantityOrdersScheduleOrderDetail(sd) DEFAULT
        FILTERGROUP countFilter
            FILTER 'Последний на дату' 'F10' isLastScheduleOrderDetailDate(sd,d) DEFAULT      
            FILTER 'На дату' 'F9' dateOrderScheduleOrderDetail(sd) <= d                                                  
            FILTER 'Последний' 'F8' isLastScheduleOrderDetail(sd)
             
        OBJECTS o = Order
        PROPERTIES (o) READONLY isPostedOrder, numberOrder, seriesOrder, dateOrder, timeOrder,
                                nameSupplierOrder, nameSupplierStockOrder, nameCustomerOrder, nameCustomerStockOrder,
                                countOrderDetailOrder, quantityOrderDetailOrder, sumOrderDetailOrder,
                                VATSumOrderDetailOrder, invoiceSumOrderDetailOrder, shipmentDateOrder, shipmentTimeOrder, 
                                closeDateOrder, noteOrder            
        PROPERTIES ()  addUserOrder TODRAW o
        PROPERTIES (o) editOrder SHOWIF isOpenedOrder(o)
        PROPERTIES     deleteo=DELETE(o) FORCE PANEL TOOLBAR  SHOWIF isUserOpenedOrder(o)
            
        FILTERS supplierOrder(o) == supplier() OR (o IS Order AND NOT supplier()),
                supplierStockOrder(o) == supplierStock() OR (o IS Order AND NOT supplierStock()),
                customerOrder(o) == customer() OR (o IS Order AND NOT customer()),
                customerStockOrder(o) == customerStock() OR (o IS Order AND NOT customerStock())            
        
        FILTERGROUP dateFilter
            FILTER 'На дату' 'F10' dateOrder(o) == d DEFAULT                       
    ;

    DESIGN scheduleOrderDetails FROM DEFAULT{
        NEW header {
            type = CONTAINERH;
            ADD PROPERTY(dv);
            ADD PROPERTY(nameSupplier());
            ADD PROPERTY(nameSupplierStock());
            ADD PROPERTY(nameCustomer());
            ADD PROPERTY(nameCustomerStock());
        }
        ADD sd.box;
        ADD o.box;
        ADD functions.box;
    }


    FORM scheduleOrders 'Графики поставок'

        OBJECTS d=DATE FIXED PANEL
        PROPERTIES dv=OBJVALUE(d)
        PROPERTIES () nameSupplier, nameCustomer, nameSupplierStock, nameCustomerStock

        OBJECTS s=ScheduleOrder
        PROPERTIES(s) READONLY nameSupplierScheduleOrder, nameSupplierStockScheduleOrder,
                      nameCustomerScheduleOrder, nameCustomerStockScheduleOrder, nameTypeScheduleOrder

        PROPERTIES(s) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

        OBJECTS sd=ScheduleOrderDetail
        PROPERTIES(sd) READONLY dateOrderScheduleOrderDetail, dateSupplyScheduleOrderDetail,
                       monthInDateScheduleOrderDetail, DOWInDateScheduleOrderDetail,
                       nameSupplierScheduleOrderDetail, nameSupplierStockScheduleOrderDetail,
                       nameCustomerScheduleOrderDetail, nameCustomerStockScheduleOrderDetail

        ORDER BY dateSupplyScheduleOrderDetail(sd)

        FILTERS supplierScheduleOrderDetail(sd) == supplier() OR (sd IS ScheduleOrderDetail AND NOT supplier()),
                supplierStockScheduleOrderDetail(sd) == supplierStock() OR (sd IS ScheduleOrderDetail AND NOT supplierStock()),
                customerScheduleOrderDetail(sd) == customer() OR (sd IS ScheduleOrderDetail AND NOT customer()),
                customerStockScheduleOrderDetail(sd) == customerStock() OR (sd IS ScheduleOrderDetail AND NOT customerStock())

        FILTERGROUP dateFilter
            FILTER 'На дату' 'F10' dateSupplyScheduleOrderDetail(sd) == d

        FILTERGROUP orderFilter
            FILTER 'Текущего графика' 'F11' scheduleOrderScheduleOrderDetail(sd) == s DEFAULT
    ;

    DESIGN scheduleOrders FROM DEFAULT{
        NEW header {
            type = CONTAINERH;
            ADD PROPERTY(dv);
            ADD PROPERTY(nameSupplier());
            ADD PROPERTY(nameSupplierStock());
            ADD PROPERTY(nameCustomer());
            ADD PROPERTY(nameCustomerStock());
        }
        ADD s.box;
        ADD sd.box;

        ADD functions.box;
    }

END

filterCompanySupplier(legalEntity, legalFilt) = (isCompanyLegalEntity(legalEntity) AND isSupplierLegalEntity(legalFilt)) OR
                                               (isCustomerLegalEntity(legalEntity) AND isCompanyLegalEntity(legalFilt));

filterCompanyCustomer(legalEntity, legalFilt) = (isCompanyLegalEntity(legalEntity) AND isCustomerLegalEntity(legalFilt)) OR
                                               (isSupplierLegalEntity(legalEntity) AND isCompanyLegalEntity(legalFilt));

EXTEND FORM legalEntity

    OBJECTS ss=ScheduleOrder FIXED GRID
    PROPERTIES(ss) SHOWIF isCustomerLegalEntity(l) READONLY startDateScheduleOrder, endDateScheduleOrder, nameSupplierStockScheduleOrder, nameCustomerStockScheduleOrder, nameTypeScheduleOrder
    PROPERTIES(ss) SHOWIF isCustomerLegalEntity(l) DELETE FORCE PANEL TOOLBAR, editScheduleOrder

    FILTERS filterCompanySupplier(l, s)
    FILTERS supplierScheduleOrder(ss) == s, customerScheduleOrder(ss) == l

    OBJECTS sc=ScheduleOrder FIXED  GRID 
    PROPERTIES(sc) SHOWIF isSupplierLegalEntity(l) READONLY startDateScheduleOrder, endDateScheduleOrder, nameSupplierStockScheduleOrder, nameCustomerStockScheduleOrder, nameTypeScheduleOrder
    PROPERTIES(sc) SHOWIF isSupplierLegalEntity(l) DELETE FORCE PANEL TOOLBAR, editScheduleOrder

    FILTERS filterCompanyCustomer(l, c)
    FILTERS customerScheduleOrder(sc) == c, supplierScheduleOrder(sc) == l


;

EXTEND DESIGN legalEntity {
    extendContainer {
        docPurchaseContainer{
            ADD ss.box;
        }

        docSaleContainer{
            ADD sc.box;
        }
    }
}

META defineScheduleOrderDashboard(sign)

countRemainingScheduleOrderDate 'Кол-во оставшихся заказов'##sign (scheduleOrder,date) = GROUP SUM 1 IF dateSupplyScheduleOrderDetail(d) >= (date AS DATE) 
                                                                                        BY scheduleOrderScheduleOrderDetail(d), date; 
lastScheduleOrderSupplierStockCustomerStock (s,ss,c,cs) = 
    GROUP LAST scheduleOrder IF endDateScheduleOrder(scheduleOrder)
           BY supplierScheduleOrder(scheduleOrder), supplierStockScheduleOrder(scheduleOrder), customerScheduleOrder(scheduleOrder), customerStockScheduleOrder(scheduleOrder)
           ORDER endDateScheduleOrder(scheduleOrder), scheduleOrder 
           WHERE scheduleOrder IS ScheduleOrder;  
                                                                                                                                                                                       
isLastScheduleOrder 'Последний график' (s)= 
    lastScheduleOrderSupplierStockCustomerStock(supplierScheduleOrder(s),supplierStockScheduleOrder(s),customerScheduleOrder(s),customerStockScheduleOrder(s)) ==s;
                                                                                                                                                                            
    FORM scheduleOrderDashboard 'Графики заказов' TITLE 'Графики заказов'###sign

        OBJECTS d=DATE FIXED PANEL
        PROPERTIES dv=OBJVALUE(d)
        PROPERTIES () nameSupplier, nameCustomer, nameSupplierStock, nameCustomerStock
        
        OBJECTS s=ScheduleOrder
        PROPERTIES(s) READONLY startDateScheduleOrder, endDateScheduleOrder, nameSupplierScheduleOrder, nameSupplierStockScheduleOrder,
                      nameCustomerScheduleOrder, nameCustomerStockScheduleOrder, nameTypeScheduleOrder
        PROPERTIES(s,d) READONLY countRemainingScheduleOrderDate
        PROPERTIES(s) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
        ORDER BY endDateScheduleOrder(s)

        FILTERS supplierScheduleOrder(s) == supplier() OR (s IS ScheduleOrder AND NOT supplier()),
                supplierStockScheduleOrder(s) == supplierStock() OR (s IS ScheduleOrder AND NOT supplierStock()),
                customerScheduleOrder(s) == customer() OR (s IS ScheduleOrder AND NOT customer()),
                customerStockScheduleOrder(s) == customerStock() OR (s IS ScheduleOrder AND NOT customerStock())

        FILTERGROUP countFilter
            FILTER 'Последний график' 'F11' isLastScheduleOrder(s)             
            FILTER 'Заканчивается в течение 3 дн.' 'F10' isLastScheduleOrder(s)  AND endDateScheduleOrder(s) <= sumDate(d,2) AND endDateScheduleOrder(s) >= d DEFAULT
            FILTER 'Заканчивается в течение 5 дн.' 'F9' isLastScheduleOrder(s)  AND endDateScheduleOrder(s) <= sumDate(d,4) AND endDateScheduleOrder(s) >= d 
                              
        OBJECTS ss=ScheduleOrder
        PROPERTIES(ss) READONLY startDateScheduleOrder, endDateScheduleOrder, nameSupplierScheduleOrder, nameSupplierStockScheduleOrder,
                      nameCustomerScheduleOrder, nameCustomerStockScheduleOrder, nameTypeScheduleOrder     
        PROPERTIES(ss) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR              
        ORDER BY startDateScheduleOrder(ss)
              
        FILTERS supplierScheduleOrder(ss) == supplier() OR (ss IS ScheduleOrder AND NOT supplier()),
                supplierStockScheduleOrder(ss) == supplierStock() OR (ss IS ScheduleOrder AND NOT supplierStock()),
                customerScheduleOrder(ss) == customer() OR (ss IS ScheduleOrder AND NOT customer()),
                customerStockScheduleOrder(ss) == customerStock() OR (ss IS ScheduleOrder AND NOT customerStock())
                                                       
        FILTERGROUP countFilter
            FILTER 'Будущие графики' 'F8' startDateScheduleOrder(ss) >= d DEFAULT                                           
    ;

    DESIGN scheduleOrderDashboard FROM DEFAULT{
        NEW header {
            type = CONTAINERH;
            ADD PROPERTY(dv);
            ADD PROPERTY(nameSupplier());
            ADD PROPERTY(nameSupplierStock());
            ADD PROPERTY(nameCustomer());
            ADD PROPERTY(nameCustomerStock());
        }
        ADD s.box;
        ADD ss.box;
        ADD functions.box;
    }
    
END

