MODULE OrderLedger;

REQUIRE System, SkuLedger, StockSkuDocument, Operation;

CLASS ABSTRACT OrderLedger 'Резерв товара';
TABLE orderLedger(OrderLedger);

dateTime 'Дата/время' (ledger) = ABSTRACT DATETIME (OrderLedger) PERSISTENT INDEXED;
date 'Дата' (OrderLedger ledger) = toDate(dateTime(ledger)) PERSISTENT INDEXED;

isPosted 'Проведен' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;
isClosed 'Закрыт' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;

sku (ledger) = ABSTRACT Sku (OrderLedger) PERSISTENT INDEXED;
nameSku 'SKU' (OrderLedger ledger) = name(sku(ledger));

countOrderLedger = GROUP SUM 1 BY sku(OrderLedger ledger);

batch (ledger) = ABSTRACT Batch (OrderLedger) PERSISTENT INDEXED;

stock (ledger) = ABSTRACT Stock (OrderLedger) PERSISTENT INDEXED;
nameStock 'Склад' (OrderLedger ledger) = name(stock(ledger));

description 'Название документа' (ledger) = ABSTRACT VARSTRING[200] (OrderLedger) PERSISTENT;

quantity 'Кол-во (заказано)' (ledger) = ABSTRACT NUMERIC[16,5] (OrderLedger) PERSISTENT;
toShipQuantity 'Кол-во (не выполнено)' (ledger) = ABSTRACT NUMERIC[16,5] (OrderLedger) PERSISTENT;

isPurchase 'Закупка' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;
statusReserve 'Статус резерва' (OrderLedger ledger) = IF isPurchase(ledger) THEN 'Закупка' ELSE 'Продажа' MINCHARWIDTH 8 PREFCHARWIDTH 15;               
backgroundReserve 'Статус резерва' (OrderLedger ledger) = IF isPurchase(ledger) THEN RGB(204,255,204) ELSE RGB(189,227,255);               

operation  (ledger) = ABSTRACT Operation (OrderLedger) PERSISTENT;
nameOperation 'Операция' (OrderLedger ledger) = name(operation(ledger)) MINCHARWIDTH 15 PREFCHARWIDTH 20;

contact (ledger) = ABSTRACT LegalEntity (OrderLedger) PERSISTENT INDEXED;
nameContact 'Контрагент' (OrderLedger ledger) = name(contact(ledger));

contactStock (ledger) = ABSTRACT Stock (OrderLedger) PERSISTENT INDEXED;
nameContactStock 'Склад контрагента' (OrderLedger ledger) = name(contactStock(ledger));

background 'Цвет' (OrderLedger ledger,DATETIME dateTime) = RGB(212,255,212) IF dateTime(ledger) > dateTime;

edit 'Редактировать' = ACTION ABSTRACT LIST (OrderLedger) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

//-------------------------------Продажа----------------------------------//

//по SKU
currentReserveSale 'Резерв продажа (всего)' (sku, stock) = GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger)
    BY sku(ledger), stock(ledger) PERSISTENT;
prevCurrentReserveSale 'Резерв продажа (всего)' (Sku sku, Stock stock) = PREV(currentReserveSale(sku, stock));

// без учета текущей даты/времени
reserveBSale 'Резерв продажи на начало дня' (Sku sku, Stock stock, DATE date) = (currentReserveSale(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) >= DATE date
        BY sku(ledger), stock(ledger), date](sku, stock, date);

// с учетом текущей даты/времени
reserveASale 'Резерв продажи на конец дня' (Sku sku, Stock stock, DATE date) = (currentReserveSale(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) > DATE date
        BY sku(ledger), stock(ledger), date](sku, stock, date);

// без учета текущей даты/времени
reserveBSale 'Резерв продажи (до)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReserveSale(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) >= DATETIME dateTime
        BY sku(ledger), stock(ledger), dateTime](sku, stock, dateTime);
prevReserveBSale 'Резерв продажи (до)' (Sku sku, Stock stock, DATETIME dateTime) = PREV(reserveBSale(sku, stock, dateTime));

// с учетом текущей даты/времени
reserveASale 'Резерв продажи (после)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReserveSale(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) > DATETIME dateTime
        BY sku(ledger), stock(ledger), dateTime](sku, stock, dateTime);

//по партиям
currentReserveSale 'Резерв продажа (всего)' (batch, stock) = GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger)
    BY batch(ledger), stock(ledger) PERSISTENT;
prevCurrentReserveSale 'Резерв продажа (всего)' (Batch batch, Stock stock) = PREV(currentReserveSale(batch, stock));

// без учета текущей даты/времени
reserveBSale 'Резерв продажи на начало дня' (Batch batch, Stock stock, DATE date) = (currentReserveSale(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) >= DATE date
        BY batch(ledger), stock(ledger), date](batch, stock, date);

// с учетом текущей даты/времени
reserveASale 'Резерв продажи на конец дня' (Batch batch, Stock stock, DATE date) = (currentReserveSale(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) > DATE date
        BY batch(ledger), stock(ledger), date](batch, stock, date);

// без учета текущей даты/времени
reserveBSale 'Резерв продажи (до)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReserveSale(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) >= DATETIME dateTime
        BY batch(ledger), stock(ledger), dateTime](batch, stock, dateTime);
prevReserveBSale 'Резерв продажи (до)' (Batch batch, Stock stock, DATETIME dateTime) = PREV(reserveBSale(batch, stock, dateTime));

// с учетом текущей даты/времени
reserveASale 'Резерв продажи (после)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReserveSale(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND NOT isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) > DATETIME dateTime
        BY batch(ledger), stock(ledger), dateTime](batch, stock, dateTime);


//-------------------------------Закупка----------------------------------//

//по SKU
currentReservePurchase 'Резерв закупка (всего)' (sku, stock) = GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger)
    BY sku(ledger), stock(ledger) PERSISTENT;
prevCurrentReservePurchase 'Резерв закупка (всего)' (Sku sku, Stock stock) = PREV(currentReservePurchase(sku, stock));

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки на начало дня' (Sku sku, Stock stock, DATE date) = (currentReservePurchase(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) >= DATE date
        BY sku(ledger), stock(ledger), date](sku, stock, date);

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки на конец дня' (Sku sku, Stock stock, DATE date) = (currentReservePurchase(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) > DATE date
        BY sku(ledger), stock(ledger), date](sku, stock, date);

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки (до)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReservePurchase(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) >= DATETIME dateTime
        BY sku(ledger), stock(ledger), dateTime](sku, stock, dateTime);
prevReserveBPurchase 'Резерв закупки (до)' (Sku sku, Stock stock, DATETIME dateTime) = PREV(reserveBPurchase(sku, stock, dateTime));

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки (после)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReservePurchase(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) > DATETIME dateTime
        BY sku(ledger), stock(ledger), dateTime](sku, stock, dateTime);

//по партиям
currentReservePurchase 'Резерв закупка (всего)'(batch, stock) = GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger)
    BY batch(ledger), stock(ledger) PERSISTENT;
prevCurrentReservePurchase 'Резерв закупка (всего)'(Batch batch, Stock stock) = PREV(currentReservePurchase(batch, stock));

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки на начало дня' (Batch batch, Stock stock, DATE date) = (currentReservePurchase(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) >= DATE date
        BY batch(ledger), stock(ledger), date](batch, stock, date);

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки на конец дня' (Batch batch, Stock stock, DATE date) = (currentReservePurchase(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND date(ledger) > DATE date
        BY batch(ledger), stock(ledger), date](batch, stock, date);

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки (до)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReservePurchase(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) >= DATETIME dateTime
        BY batch(ledger), stock(ledger), dateTime](batch, stock, dateTime);
prevReserveBPurchase 'Резерв закупки (до)' (Batch batch, Stock stock, DATETIME dateTime) = PREV(reserveBPurchase(batch, stock, dateTime));

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки (после)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReservePurchase(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantity(OrderLedger ledger) IF isPosted(ledger) AND isPurchase(ledger) AND NOT isClosed(ledger) AND dateTime(ledger) > DATETIME dateTime
        BY batch(ledger), stock(ledger), dateTime](batch, stock, dateTime);

//-------------------------------Общий----------------------------------//

//по Sku
currentReserve 'Текущий резерв' (Sku sku, Stock stock) = currentReservePurchase (sku, stock) (-) currentReserveSale (sku, stock);
prevCurrentReserve 'Текущий резерв' (Sku sku, Stock stock) = prevCurrentReservePurchase (sku, stock) (-) prevCurrentReserveSale (sku, stock);

reserveB 'Резерв на начало дня' (Sku sku, Stock stock, DATE date) = reserveBPurchase (sku, stock, date) (-) reserveBSale (sku, stock, date);
reserveA 'Резерв на конец дня' (Sku sku, Stock stock, DATE date) = reserveAPurchase (sku, stock, date) (-) reserveASale (sku, stock, date);

reserveB 'Резерв (до)' (Sku sku, Stock stock, DATETIME dateTime) = reserveBPurchase (sku, stock, dateTime) (-) reserveBSale (sku, stock, dateTime);
reserveA 'Резерв (после)' (Sku sku, Stock stock, DATETIME dateTime) = reserveAPurchase (sku, stock, dateTime) (-) reserveASale (sku, stock, dateTime);

prevReserveB 'Резерв (до)' (Sku sku, Stock stock, DATETIME dateTime) = PREV(reserveB(sku, stock, dateTime));
//по партиям
currentReserve 'Текущий резерв' (Batch batch, Stock stock) = currentReservePurchase (batch, stock) (-) currentReserveSale (batch, stock);
prevCurrentReserve 'Текущий резерв' (Batch batch, Stock stock) = prevCurrentReservePurchase (batch, stock) (-) prevCurrentReserveSale (batch, stock);

reserveB 'Резерв на начало дня' (Batch batch, Stock stock, DATE date) = reserveBPurchase (batch, stock, date) (-) reserveBSale (batch, stock, date);
reserveA 'Резерв на конец дня' (Batch batch, Stock stock, DATE date) = reserveAPurchase (batch, stock, date) (-) reserveASale (batch, stock, date);

reserveB 'Резерв (до)' (Batch batch, Stock stock, DATETIME dateTime) = reserveBPurchase (batch, stock, dateTime) (-) reserveBSale (batch, stock, dateTime);
reserveA 'Резерв (после)' (Batch batch, Stock stock, DATETIME dateTime) = reserveAPurchase (batch, stock, dateTime) (-) reserveASale (batch, stock, dateTime);

prevReserveB 'Резерв (до)' (Batch batch, Stock stock, DATETIME dateTime) = PREV(reserveB(batch, stock, dateTime));

// ----------------------- Доступное к-во -------------------------- //
availableQuantity 'Доступное к-во (всего)' (Sku sku, Stock stock) = currentBalance(sku, stock) (+) currentReserve(sku, stock);
availableQuantity 'Доступное к-во (всего)' (Batch batch, Stock stock) = currentBalance(batch, stock) (+) currentReserve(batch, stock);

prevAvailableQuantity 'Доступное к-во (всего)' (Sku sku, Stock stock) = prevCurrentBalance(sku, stock) (+) prevCurrentReserve(sku, stock);
prevAvailableQuantity 'Доступное к-во (всего)' (Batch batch, Stock stock) = prevCurrentBalance(batch, stock) (+) prevCurrentReserve(batch, stock);

prevAvailableQuantity 'Доступное к-во' (Sku sku, Stock stock, DATETIME dateTime) = (prevCurrentBalance(sku, stock) IF dateTime IS DATETIME) (+) prevReserveB(sku, stock, dateTime);
prevAvailableQuantity 'Доступное к-во' (Batch batch, Stock stock, DATETIME dateTime) = (prevCurrentBalance(batch, stock) IF dateTime IS DATETIME) (+) prevReserveB(batch, stock, dateTime);

//---------------------------------------------- Формы продаж -------------------------------------//

FORM orderSkuLedgerStocksNotDate 'Резерв товара'

    OBJECTS sk = Sku FIXED PANEL
    PROPERTIES  SELECTOR name(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve
    PROPERTIES(s) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description, nameStock,
                  toShipQuantity, quantity
    PROPERTIES(s) edit       
    ORDER BY statusReserve(s), dateTime(s)
    FILTERS sku(s)==sk

    FILTERS isPosted(s) AND NOT isClosed(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
;

DESIGN orderSkuLedgerStocksNotDate {
    main {
        type = CONTAINERV;
        MOVE sk.box;
        MOVE s.box;
    }
    MOVE functions.box;
}
@extendFormFilterAccessStock(OrderLedger, s, orderSkuLedgerStocksNotDate, stock, company);

FORM orderSkuLedgerNotDate 'Резерв товара по складу'

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS sk = Sku FIXED PANEL
    PROPERTIES  SELECTOR name(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve
    PROPERTIES(s) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  toShipQuantity, quantity
    PROPERTIES(s) edit       
    ORDER BY statusReserve(s), dateTime(s)
    FILTERS stock(s)==st,
            sku(s)==sk

    FILTERS isPosted(s) AND NOT isClosed(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
;

DESIGN orderSkuLedgerNotDate {
    main {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;            
            MOVE sk.box;
            MOVE st.box;
        }
        MOVE s.box;
    }
    MOVE functions.box;
}
@extendFormFilterStockAccess(st, orderSkuLedgerNotDate);
 
META defineReserveSku(detail, stockProp)
    showReserveSkuStock 'Показать резерв товара по складу' (###detail detail) = ACTION FORM orderSkuLedgerNotDate OBJECTS sk = sku(detail), st = stockProp(detail) NEWSESSION MODAL SHORTCUT nameSku[###detail];
    showReserveSku 'Показать резерв товара' (###detail detail) = ACTION FORM orderSkuLedgerStocksNotDate OBJECTS sk = sku(detail) NEWSESSION MODAL SHORTCUT nameSku[###detail];
END
META defineReserveSku(detail)
    showReserveSkuStock 'Показать резерв товара по складу' (###detail detail) = ACTION FORM orderSkuLedgerNotDate OBJECTS sk = sku(detail) NEWSESSION MODAL SHORTCUT nameSku[###detail];
    showReserveSku 'Показать резерв товара' (###detail detail) = ACTION FORM orderSkuLedgerStocksNotDate OBJECTS sk = sku(detail) NEWSESSION MODAL SHORTCUT nameSku[###detail];
END
    
showReserveSku 'Показать резерв' (Sku sku) = ACTION  FORM orderSkuLedgerStocksNotDate OBJECTS  sk = sku NEWSESSION MODAL SHORTCUT name[Sku];

showReserveSku 'Показать изменение цены товара по складу' (Sku sku, Stock stock) = ACTION FORM orderSkuLedgerNotDate OBJECTS sk = sku, st = stock NEWSESSION MODAL;
showBalanceReserveSku(Sku sku, Stock stock) += ACTION showReserveSku(sku, stock); 
  
FORM orderSkuLedger 'Резерв по позициям на дату'

    OBJECTS t = DATETIME FIXED PANEL
    PROPERTIES  dVal=OBJVALUE(t)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS sk = Sku FIXED PANEL
    PROPERTIES  SELECTOR name(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve
    PROPERTIES(s) READONLY BACKGROUND background(s,t) date, 
                  dateTime, nameContact, nameContactStock, description,
                  toShipQuantity, quantity
    PROPERTIES(s) edit       
    ORDER BY statusReserve(s)
    FILTERS stock(s)==st,
            sku(s)==sk

    FILTERS isPosted(s) AND NOT isClosed(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
        FILTER 'Резерв (закупки) на дату' dateTime(s) < t AND isPurchase(s) 'F9'
        FILTER 'Резерв (продажи) на дату' dateTime(s)< t AND NOT isPurchase(s) 'F8'
        FILTER 'На дату' dateTime(s) < t 'F7'
;

DESIGN orderSkuLedger {
    main {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;
            MOVE t.box;            
            MOVE sk.box;
            MOVE st.box;
        }
        MOVE s.box;
    }
    MOVE functions.box;
}

@extendFormFilterStockAccess(st, orderSkuLedger);
FORM orderBatchLedgerNotDate 'Резерв по партиям'

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS bt = Batch FIXED PANEL
    PROPERTIES SELECTOR name(bt)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve     
    PROPERTIES(s) READONLY date, 
                  dateTime, nameContact, nameContactStock, description,
                  toShipQuantity, quantity
    PROPERTIES(s) edit                     
    ORDER BY statusReserve(s), dateTime(s)
    FILTERS stock(s)==st,
            batch(s)==bt

    FILTERS isPosted(s) AND NOT isClosed(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT
        
    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
;

DESIGN orderBatchLedgerNotDate {
    main {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;          
            MOVE st.box;
            MOVE bt.box;
        }
        MOVE s.box;
    }
    MOVE functions.box;
}

FORM orderBatchLedger 'Резерв по партиям'

    OBJECTS t = DATETIME FIXED PANEL
    PROPERTIES  dVal=OBJVALUE(t)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS bt = Batch FIXED PANEL
    PROPERTIES SELECTOR name(bt)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve     
    PROPERTIES(s) READONLY BACKGROUND background(s,t) date, 
                  dateTime, nameContact, nameContactStock, description,
                  toShipQuantity, quantity
    PROPERTIES(s) edit                     
    ORDER BY statusReserve(s)
    FILTERS stock(s)==st,
            batch(s)==bt

    FILTERS isPosted(s) AND NOT isClosed(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT
        
    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
        FILTER 'Резерв (закупки) на дату' dateTime(s) < t AND isPurchase(s) 'F9'
        FILTER 'Резерв (продажи) на дату' dateTime(s)< t AND NOT isPurchase(s) 'F8'
        FILTER 'На дату' dateTime(s) < t 'F7'


;

DESIGN orderBatchLedger {
    main {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;
            MOVE t.box;
            MOVE st.box;
            MOVE bt.box;
        }
        MOVE s.box;
    }
    MOVE functions.box;
}

allowNegativeAvailableSku 'Разрешить расходовать в минус' = DATA BOOLEAN (UserRole);
EXTEND FORM userRole
    PROPERTIES(ur) allowNegativeAvailableSku
;

//-- Запрет на расходование товаров по партиям больше чем есть в остатке

// по товарам

banNegativeSku 'Запретить расходовать больше чем в остатке по товару' = DATA BOOLEAN ();
banNegativeSku 'Запретить расходовать больше чем в остатке по товару' = DATA BOOLEAN (Stock);
overBanNegativeSku (Stock st) = (banNegativeSku() AND isCompany(st)) OR banNegativeSku(st);

EXTEND FORM options
    PROPERTIES() banNegativeSku 
    PROPERTIES banNegativeSku(s)
;

DESIGN options {
    stock1 {
        MOVE PROPERTY(banNegativeSku());
    }
}

CONSTRAINT SETCHANGED(availableQuantity(Sku sk, Stock st)) AND availableQuantity(sk, st) < 0.0 AND NOT availableQuantity(sk, st) >= PREV(availableQuantity(sk, st)) AND 
           overBanNegativeSku(st) AND NOT allowNegativeAvailableSku(mainRole(currentUser()))
    MESSAGE 'Текущий резерв по товарам превышает текущий остаток';

// по партия

banNegativeBatch 'Запретить расходовать больше чем в остатке по партии' = DATA BOOLEAN ();
banNegativeBatch 'Запретить расходовать больше чем в остатке по партии' = DATA BOOLEAN (Stock);
overBanNegativeBatch (Stock st) = (banNegativeBatch() AND isCompany(st)) OR banNegativeBatch(st);


EXTEND FORM options 
    PROPERTIES() banNegativeBatch 
    PROPERTIES banNegativeBatch(s)
;

DESIGN options {
    stock1 {
        MOVE PROPERTY(banNegativeBatch());
    }
}

CONSTRAINT SETCHANGED(availableQuantity(Batch bt, Stock st)) AND availableQuantity(bt, st) < 0.0 AND NOT availableQuantity(bt, st) >= PREV(availableQuantity(bt, st)) AND
           overBanNegativeBatch(st) AND NOT allowNegativeAvailableSku(mainRole(currentUser()))
    MESSAGE 'Текущий резерв по партиям превышает текущий остаток';

//---------------------------------------------- Макросы для имплементаций Продажа-------------------------------------//

META implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTime (concrete##Detail ledger) += dateTimeProp(ledger);
    isPosted (concrete##Detail ledger) += isPosted(ledger);
    isClosed (concrete##Detail ledger) += isClosed(ledger);
    skuProp[concrete##Ledger] (concrete##Detail ledger) += skuProp(ledger);
    batch[concrete##Ledger] (concrete##Detail ledger) += batch(ledger);
    stock (concrete##Detail ledger) += stockProp(ledger);
    description (concrete##Detail ledger) += description(ledger);
    quantity[concrete##Ledger] (concrete##Detail ledger) += quantity(ledger);
    contact (concrete##Detail ledger) += contactProp(ledger);
    contactStock (concrete##Detail ledger) += contactProp##Stock(ledger);    
END
META implementSaleOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

//---------------------------------------------- Макросы для имплементаций Покупка-------------------------------------//

META implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTime (concrete##Detail ledger) += dateTimeProp(ledger);
    isPosted (concrete##Detail ledger) += isPosted(ledger);
    isClosed (concrete##Detail ledger) += isClosed(ledger);
    skuProp[concrete##Ledger] (concrete##Detail ledger) += skuProp(ledger);
    batch[concrete##Ledger] (concrete##Detail ledger) += batch(ledger);
    stock (concrete##Detail ledger) += stockProp(ledger);
    description (concrete##Detail ledger) += description(ledger);
    quantity[concrete##Ledger] (concrete##Detail ledger) += quantity(ledger);
    isPurchase (concrete##Detail ledger) += ledger IS concrete##Detail;
    contact (concrete##Detail ledger) += contactProp(ledger);
    contactStock (concrete##Detail ledger) += contactProp##Stock(ledger);
END
META implementPurchaseOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

// ----------------------- Расширение формы подбора товаров (диалоговой) --------------------- //

META defineDialogSkuReserve (form)

    dialogSaleReserve 'Резерв (продажи)' (Sku sku) = currentReserveSale(sku, form##Stock());
    dialogPurchaseReserve 'Резерв (закупки)' (Sku sku) = currentReservePurchase(sku, form##Stock());

    EXTEND FORM form
        PROPERTIES(s) READONLY  AFTER dialogBalance(s) SHOWIF form##Stock() dialogPurchaseReserve, dialogSaleReserve
    ;
END

@defineDialogSkuReserve(dialogSku);

// ----------------------- Расширение формы текущих остатков --------------------- //

//--Sku
EXTEND FORM currentBalanceSkuStock
    PROPERTIES(s, st) READONLY AFTER currentBalance(s,st) currentReserve, availableQuantity

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity

    FILTERS stock(l)==st,
            sku(l)==s

    FILTERS isPosted(l) AND NOT isClosed(l) AND isPurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                   quantity, toShipQuantity
    PROPERTIES(ll) edit

    FILTERS stock(ll)==st,
            sku(ll)==s

    FILTERS isPosted(ll) AND NOT isClosed(ll) AND NOT isPurchase(ll)

;
DESIGN currentBalanceSkuStock {

    ledger.box {
        MOVE l.box {caption = 'Резерв (закупки)';}
        MOVE ll.box {caption = 'Резерв (продажи)';}
    }
}

//--Batch
EXTEND FORM currentBalanceBatchStock
    PROPERTIES(bt, st) AFTER currentBalance(bt,st) READONLY currentReserve, availableQuantity 

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity

    FILTERS stock(l)==st,
            batch(l)==bt

    FILTERS isPosted(l) AND NOT isClosed(l) AND isPurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                   quantity, toShipQuantity
    PROPERTIES(ll) edit

    FILTERS stock(ll)==st,
            batch(ll)==bt

    FILTERS isPosted(ll) AND NOT isClosed(ll) AND NOT isPurchase(ll)

;
DESIGN currentBalanceBatchStock {

    ledger.box {
        MOVE l.box {caption = 'Резерв (закупки)';}
        MOVE ll.box {caption = 'Резерв (продажи)';}
    }
}




// ----------------------- Расширение формы текущих остатков на дату --------------------- //

//-- Sku
EXTEND FORM balanceSkuStock
    PROPERTIES(s, st, t) READONLY AFTER balanceB(s,st,t) reserveA , prevAvailableQuantity 

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity

    FILTERS stock(l)==st,
            sku(l)==s,
            dateTime(l) <= t

    FILTERS isPosted(l) AND NOT isClosed(l) AND isPurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                   quantity, toShipQuantity
    PROPERTIES(ll) edit

    FILTERS stock(ll)==st,
            sku(ll)==s,
            dateTime(ll) <= t

    FILTERS isPosted(ll) AND NOT isClosed(ll) AND NOT isPurchase(ll)

;
DESIGN balanceSkuStock {

    ledger.box {
        MOVE l.box {caption = 'Резерв (закупки)';}
        MOVE ll.box {caption = 'Резерв (продажи)';}
    }
}

//-- Batch
EXTEND FORM balanceBatchStock
    PROPERTIES(bt, st, t) reserveA READONLY AFTER balanceB(bt,st,t)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity

    FILTERS stock(l)==st,
            batch(l)==bt,
            dateTime(l) <= t

    FILTERS isPosted(l) AND NOT isClosed(l) AND isPurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                   quantity, toShipQuantity
    PROPERTIES(ll) edit

    FILTERS stock(ll)==st,
            batch(ll)==bt,
            dateTime(ll) <= t

    FILTERS isPosted(ll) AND NOT isClosed(ll) AND NOT isPurchase(ll)

;
DESIGN balanceBatchStock {

    ledger.box {
        MOVE l.box {caption = 'Резерв (закупки)';}
        MOVE ll.box {caption = 'Резерв (продажи)';}
    }
}

// ----------- Подбор (товар / один склад)---------------//

META extendFormDocumentSkuOrderLedgerOver(object, form, concrete, stockProp)

    prevAvailableQuantity 'Доступное к-во' (Sku sku, ###object object)= prevAvailableQuantity(sku, stockProp(object), dateTime(object));
    prevCurrentAvailableQuantity 'Доступное кол-во (всего)' (Sku sku, ###object object) = prevAvailableQuantity(sku, stockProp(object));

    prevReserveBPurchase 'Резерв закупка' (Sku sku, ###object object) = prevReserveBPurchase(sku, stockProp(object), dateTime(object));
    prevCurrentReservePurchase 'Резерв закупка (всего)' (Sku sku, ###object object) = prevCurrentReservePurchase(sku, stockProp(object));

    prevReserveBSale 'Резерв продажа' (Sku sku, ###object object) = prevReserveBSale(sku, stockProp(object), dateTime(object));
    prevCurrentReserveSale 'Резерв продажа (всего)' (Sku sku, ###object object) = prevCurrentReserveSale(sku, stockProp(object));

    reviewReserve 'Резерв' (Sku sku, ###object object) = ACTION {
        IF dateTime(object) THEN {
            FORM orderSkuLedger OBJECTS t=dateTime(object), st = stockProp(object), sk = sku NEWSESSION MODAL;
        } ELSE {
            FORM orderSkuLedgerNotDate OBJECTS st=stockProp(object), sk = sku NEWSESSION MODAL;
        }
    }     
    @defineReserveSku(object###Detail, stockProp);     
    EXTEND FORM form
        PROPERTIES BEFORE prevCurrentBalance(ks, concrete) 
                   prevCurrentAvailableQuantity(ks, concrete) ON CHANGE reviewReserve(ks,concrete)

        PROPERTIES AFTER prevCurrentBalance(ks, concrete)
                   prevCurrentReservePurchase(ks,concrete) ON CHANGE reviewReserve(ks,concrete),
                   prevCurrentReserveSale(ks,concrete) ON CHANGE reviewReserve(ks,concrete)
        
        PROPERTIES prevAvailableQuantity(ks, concrete) ON CHANGE reviewReserve(ks,concrete),
                   prevReserveBPurchase(ks, concrete) ON CHANGE reviewReserve(ks,concrete),
                   prevReserveBSale(ks, concrete) ON CHANGE reviewReserve(ks,concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(ks, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentAvailableQuantity(ks, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSale(ks, concrete)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(ks, concrete)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSale(ks, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(ks, concrete)) { background = #CCFFCC; }
    }
END

META extendFormDocumentSkuOrderLedger(object, form, concrete, stockProp)
    @extendFormDocumentSkuOrderLedgerOver(user###object,form, concrete, stockProp);
    @defineReserveSku(object###Detail, stockProp);     
END 

META extendFormDocumentSkuOrderLedgerAll(object, form, concrete)

    allAvailable 'Доступное кол-во' = DATA LOCAL BOOLEAN (Sku, ###object);
    changeAllAvailable(Sku sku, ###object object) = ACTION {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailable (sku,object) <- TRUE;
            requestedNumeric() <- prevAvailableQuantity(sku, object);
            changeQuantityValue(sku, object);
        } ELSE {
            allAvailable (sku,object) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValue(sku, object);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantity(ks, concrete) allAvailable (ks,concrete) ON CHANGE changeAllAvailable(ks,concrete)
    ;
END

// ----------- Подбор (партия / один склад)---------------//

META extendFormDocumentBatchOrderLedger(object, form, concrete, stockProp)

    prevAvailableQuantity 'Доступное к-во' (Batch batch, ###object object) = prevAvailableQuantity(batch, stockProp(object), dateTime(object));

    prevReserveBPurchase 'Резерв закупка' (Batch batch, ###object object) = prevReserveBPurchase(batch, stockProp(object), dateTime(object));
    prevCurrentReservePurchase 'Резерв закупка (всего)' (Batch batch, ###object object) = prevCurrentReservePurchase(batch, stockProp(object));

    prevReserveBSale 'Резерв продажа' (Batch batch, ###object object) = prevReserveBSale(batch, stockProp(object), dateTime(object));
    prevCurrentReserveSale 'Резерв продажа (всего)' (Batch batch, ###object object) = prevCurrentReserveSale(batch, stockProp(object));

    reviewReserve 'Резерв' (Batch batch, ###object object) = ACTION  {
        IF dateTime(object) THEN {
            FORM orderBatchLedger OBJECTS t=dateTime(object), st=stockProp(object), bt = batch MODAL;
        } ELSE {
            FORM orderBatchLedgerNotDate OBJECTS st=stockProp(object), bt = batch MODAL;
        }
    }         

    EXTEND FORM form
        PROPERTIES SHOWIF showBatch(concrete) BEFORE prevCurrentBalance(b, concrete) 
                   prevAvailableQuantity(b, concrete) ON CHANGE reviewReserve(b,concrete)

        PROPERTIES SHOWIF showBatch(concrete) AFTER prevCurrentBalance(b, concrete)
                   prevReserveBPurchase(b, concrete) ON CHANGE reviewReserve(b,concrete),
                   prevReserveBSale(b, concrete) ON CHANGE reviewReserve(b,concrete),
                   prevCurrentReservePurchase(b,concrete) ON CHANGE reviewReserve(b,concrete),
                   prevCurrentReserveSale(b,concrete) ON CHANGE reviewReserve(b,concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(b, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSale(b, concrete)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(b, concrete)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSale(b, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(b, concrete)) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchOrderLedgerAll(object, form, concrete)

    allAvailable 'Доступное кол-во' = DATA LOCAL BOOLEAN (Batch, ###object);
    changeAllAvailable(Batch batch, ###object object)= ACTION {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailable (batch,object) <- TRUE;
            requestedNumeric() <- prevAvailableQuantity(batch, object);
            changeQuantityValue(batch, object);
        } ELSE {
            allAvailable (batch,object) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValue(batch, object);
        }
    }

    EXTEND FORM form
        PROPERTIES SHOWIF showBatch(concrete) AFTER prevAvailableQuantity(b, concrete) allAvailable (b,concrete) ON CHANGE changeAllAvailable(b,concrete)
    ;
END

// ----------- Подбор (товар / несколько складов)---------------//

META extendFormDocumentSkuStockOrderLedgerOver(object, form, concrete, stockProp)

    prevAvailableQuantity 'Доступное к-во' (Sku sku, Stock stock, ###object object) = prevAvailableQuantity(sku, stock, shipmentDateTime(object));

    prevReserveBPurchase 'Резерв закупка' (Sku sku, Stock stock, ###object object) = prevReserveBPurchase(sku, stock, shipmentDateTime(object));
    prevReserveBSale 'Резерв продажа' (Sku sku, Stock stock, ###object object) = prevReserveBSale(sku, stock, shipmentDateTime(object));

    reviewReserve 'Резерв' (Sku sku, Stock stock, ###object object) = ACTION {
        IF shipmentDateTime(object) THEN {
            FORM orderSkuLedger OBJECTS t=shipmentDateTime(object), st=stock, sk = sku NEWSESSION MODAL;
        } ELSE {
            FORM orderSkuLedgerNotDate OBJECTS st=stock, sk = sku NEWSESSION MODAL;
        }        
    }  
    @defineReserveSku(object###Detail, stockProp); 
    EXTEND FORM form
        PROPERTIES BEFORE prevCurrentBalance(ks, st) 
                   prevAvailableQuantity(ks, st, concrete) ON CHANGE reviewReserve(ks,st,concrete)

        PROPERTIES AFTER prevCurrentBalance(ks, st)
                   prevReserveBPurchase(ks, st, concrete) ON CHANGE reviewReserve(ks,st,concrete),
                   prevReserveBSale(ks, st, concrete) ON CHANGE reviewReserve(ks,st,concrete),
                   prevCurrentReservePurchase(ks,st) ON CHANGE reviewReserve(ks,st,concrete),
                   prevCurrentReserveSale(ks,st) ON CHANGE reviewReserve(ks,st,concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(ks, st, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSale(ks, st)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(ks, st)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSale(ks, st, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(ks, st, concrete)) { background = #CCFFCC; }
    }

END
META extendFormDocumentSkuStockOrderLedger(object, form, concrete, stockProp)
    @extendFormDocumentSkuStockOrderLedgerOver(user###object,form, concrete, stockProp);
    @defineReserveSku(object###Detail, stockProp);    
END 

META extendFormDocumentSkuStockOrderLedgerAll(object, form, concrete)

    allAvailable###object 'Доступное кол-во' = DATA LOCAL BOOLEAN (Sku, Stock);
    changeAllAvailable(Sku sku, ###object object, Stock stock)= ACTION {
        REQUEST BOOLEAN INPUT;
        IF requestedL##concrete##gical() THEN {
            requestedNumeric() <- NULL;
            allAvailable###object (sku,stock) <- TRUE;
            requestedNumeric() <- prevAvailableQuantity(sku, stock, object);
            changeQuantityValue(sku, object, stock);
        } ELSE {
            allAvailable###object (sku,stock) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValue(sku, object, stock);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantity(ks, st, concrete) allAvailable###object (ks,st) ON CHANGE changeAllAvailable(ks,concrete,st)
    ;
END

// ----------- Подбор (партия / несколько складов)---------------//

META extendFormDocumentBatchStockOrderLedger(object, form, concrete)

    prevAvailableQuantity 'Доступное к-во' (Batch batch, Stock stock, ###object object) = prevAvailableQuantity(batch, stock, shipmentDateTime(object));

    prevReserveBPurchase 'Резерв закупка' (Batch batch, Stock stock, ###object object) = prevReserveBPurchase(batch, stock, shipmentDateTime(object));
    prevReserveBSale 'Резерв продажа' (Batch batch, Stock stock, ###object object) = prevReserveBSale(batch, stock, shipmentDateTime(object));

    reviewReserve 'Резерв' (Batch batch, Stock stock, ###object object) = ACTION {
        IF shipmentDateTime(object) THEN {
            FORM orderBatchLedger OBJECTS t=shipmentDateTime(object), st=stock, bt = batch MODAL;
        } ELSE {
            FORM orderBatchLedgerNotDate OBJECTS st=stock, bt = batch MODAL;                                                         
        }
    }    

    EXTEND FORM form
        PROPERTIES SHOWIF sh##concrete##wBatch(concrete) BEFORE prevCurrentBalance(b, sto) 
                   prevAvailableQuantity(b, sto, concrete) ON CHANGE reviewReserve(b, sto, concrete)

        PROPERTIES SHOWIF sh##concrete##wBatch(concrete) AFTER prevCurrentBalance(b, sto)
                   prevReserveBPurchase(b, sto, concrete) ON CHANGE reviewReserve(b, sto, concrete),
                   prevReserveBSale(b, sto, concrete) ON CHANGE reviewReserve(b, sto, concrete),
                   prevCurrentReservePurchase(b, sto) ON CHANGE reviewReserve(b, sto, concrete),
                   prevCurrentReserveSale(b, sto) ON CHANGE reviewReserve(b, sto, concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(b, sto, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSale(b, sto)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(b, sto)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSale(b, sto, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(b, sto, concrete)) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchStockOrderLedgerAll(object, form, concrete)

    allAvailable###object 'Доступное кол-во' = DATA LOCAL BOOLEAN (Batch, Stock);
    changeAllAvailable(Batch batch, ###object object, Stock stock) = ACTION {
        REQUEST BOOLEAN INPUT;
        IF requestedL##concrete##gical() THEN {
            requestedNumeric() <- NULL;
            allAvailable###object (batch,stock) <- TRUE;
            requestedNumeric() <- prevAvailableQuantity(batch, stock, object);
            changeQuantityValue(batch, object, stock);
        } ELSE {
            allAvailable###object (batch,stock) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValue(batch, object, stock);
        }
    }

    EXTEND FORM form
        PROPERTIES SHOWIF sh##concrete##wBatch(concrete) AFTER prevAvailableQuantity(b, sto, concrete) allAvailable###object (b, sto) ON CHANGE changeAllAvailable(b, concrete, sto)
    ;
END
