MODULE OrderLedger;

REQUIRE System, SkuLedger, StockSkuDocument;

CLASS ABSTRACT OrderLedger 'Резерв товара';
TABLE orderLedger(OrderLedger);

dateTimeOrderLedger 'Дата/время' (ledger) = ABSTRACT DATETIME (OrderLedger) PERSISTENT INDEXED;
dateOrderLedger 'Дата' (ledger) = toDate(dateTimeOrderLedger(ledger)) PERSISTENT INDEXED;

isPostedOrderLedger 'Проведен' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;
isClosedOrderLedger 'Закрыт' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;

skuOrderLedger (ledger) = ABSTRACT Sku (OrderLedger) PERSISTENT INDEXED;
nameSkuOrderLedger 'SKU' (ledger) = nameSku(skuOrderLedger(ledger));

batchOrderLedger (ledger) = ABSTRACT Batch (OrderLedger) PERSISTENT INDEXED;

stockOrderLedger (ledger) = ABSTRACT Stock (OrderLedger) PERSISTENT INDEXED;
nameStockOrderLedger 'Склад' (ledger) = nameStock(stockOrderLedger(ledger));

descriptionOrderLedger 'Название документа' (ledger) = ABSTRACT VARSTRING[200] (OrderLedger) PERSISTENT;

quantityOrderLedger 'Кол-во (заказано)' (ledger) = ABSTRACT NUMERIC[14,3] (OrderLedger) PERSISTENT;
toShipQuantityOrderLedger 'Кол-во (невыполнено)' (ledger) = ABSTRACT NUMERIC[14,3] (OrderLedger) PERSISTENT;

isPurchaseOrderLedger 'Закупка' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;


contactOrderLedger (ledger) = ABSTRACT LegalEntity (OrderLedger) PERSISTENT INDEXED;
nameContactOrderLedger 'Контрагент' (ledger) = nameLegalEntity(contactOrderLedger(ledger));

inContactSku 'Связь' (legalEntity, sku)= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY contactOrderLedger(ledger), skuOrderLedger(ledger) PERSISTENT;

backgroundOrderLedgerDateTime 'Цвет' (ledger,dateTime) = RGB(212,255,212) IF dateTimeOrderLedger(ledger) > dateTime;

//-------------------------------Продажа----------------------------------//

//по SKU
currentReserveSaleSkuStock 'Резерв продажа (всего)' (sku, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY skuOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReserveSaleSkuStock 'Резерв продажа (всего)' (sku, stock) = PREV(currentReserveSaleSkuStock(sku, stock));

// без учета текущей даты/времени
reserveBSaleSkuStockDate 'Резерв продажи на начало дня' (sku, stock, date) = (currentReserveSaleSkuStock(sku, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// с учетом текущей даты/времени
reserveASaleSkuStockDate 'Резерв продажи на конец дня' (sku, stock, date) = (currentReserveSaleSkuStock(sku, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// без учета текущей даты/времени
reserveBSaleSkuStockDateTime 'Резерв продажи (до)' (sku, stock, dateTime) = (currentReserveSaleSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);
prevReserveBSaleSkuStockDateTime 'Резерв продажи (до)' (sku, stock, dateTime) = PREV(reserveBSaleSkuStockDateTime(sku, stock, dateTime));

// с учетом текущей даты/времени
reserveASaleSkuStockDateTime 'Резерв продажи (после)' (sku, stock, dateTime) = (currentReserveSaleSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);

//по партиям
currentReserveSaleBatchStock 'Резерв продажа (всего)' (batch, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY batchOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReserveSaleBatchStock 'Резерв продажа (всего)' (batch, stock) = PREV(currentReserveSaleBatchStock(batch, stock));

// без учета текущей даты/времени
reserveBSaleBatchStockDate 'Резерв продажи на начало дня' (batch, stock, date) = (currentReserveSaleBatchStock(batch, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// с учетом текущей даты/времени
reserveASaleBatchStockDate 'Резерв продажи на конец дня' (batch, stock, date) = (currentReserveSaleBatchStock(batch, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// без учета текущей даты/времени
reserveBSaleBatchStockDateTime 'Резерв продажи (до)' (batch, stock, dateTime) = (currentReserveSaleBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);
prevReserveBSaleBatchStockDateTime 'Резерв продажи (до)' (batch, stock, dateTime) = PREV(reserveBSaleBatchStockDateTime(batch, stock, dateTime));

// с учетом текущей даты/времени
reserveASaleBatchStockDateTime 'Резерв продажи (после)' (batch, stock, dateTime) = (currentReserveSaleBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);


//-------------------------------Закупка----------------------------------//

//по SKU
currentReservePurchaseSkuStock 'Резерв закупка (всего)' (sku, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY skuOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReservePurchaseSkuStock 'Резерв закупка (всего)' (sku, stock) = PREV(currentReservePurchaseSkuStock(sku, stock));

// без учета текущей даты/времени
reserveBPurchaseSkuStockDate 'Резерв закупки на начало дня' (sku, stock, date) = (currentReservePurchaseSkuStock(sku, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// с учетом текущей даты/времени
reserveAPurchaseSkuStockDate 'Резерв закупки на конец дня' (sku, stock, date) = (currentReservePurchaseSkuStock(sku, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// без учета текущей даты/времени
reserveBPurchaseSkuStockDateTime 'Резерв закупки (до)' (sku, stock, dateTime) = (currentReservePurchaseSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);
prevReserveBPurchaseSkuStockDateTime 'Резерв закупки (до)' (sku, stock, dateTime) = PREV(reserveBPurchaseSkuStockDateTime(sku, stock, dateTime));

// с учетом текущей даты/времени
reserveAPurchaseSkuStockDateTime 'Резерв закупки (после)' (sku, stock, dateTime) = (currentReservePurchaseSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);

//по партиям
currentReservePurchaseBatchStock 'Резерв закупка (всего)'(batch, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY batchOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReservePurchaseBatchStock 'Резерв закупка (всего)'(batch, stock) = PREV(currentReservePurchaseBatchStock(batch, stock));

// без учета текущей даты/времени
reserveBPurchaseBatchStockDate 'Резерв закупки на начало дня' (batch, stock, date) = (currentReservePurchaseBatchStock(batch, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// с учетом текущей даты/времени
reserveAPurchaseBatchStockDate 'Резерв закупки на конец дня' (batch, stock, date) = (currentReservePurchaseBatchStock(batch, stock) IF date IS DATE) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// без учета текущей даты/времени
reserveBPurchaseBatchStockDateTime 'Резерв закупки (до)' (batch, stock, dateTime) = (currentReservePurchaseBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);
prevReserveBPurchaseBatchStockDateTime 'Резерв закупки (до)' (batch, stock, dateTime) = PREV(reserveBPurchaseBatchStockDateTime(batch, stock, dateTime));

// с учетом текущей даты/времени
reserveAPurchaseBatchStockDateTime 'Резерв закупки (после)' (batch, stock, dateTime) = (currentReservePurchaseBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);

//-------------------------------Общий----------------------------------//

//по Sku
currentReserveSkuStock 'Текущий резерв' (sku, stock) = currentReservePurchaseSkuStock (sku, stock) (-) currentReserveSaleSkuStock (sku, stock);

reserveBSkuStockDate 'Резерв на начало дня' (sku, stock, date) = reserveBPurchaseSkuStockDate (sku, stock, date) (-) reserveBSaleSkuStockDate (sku, stock, date);
reserveASkuStockDate 'Резерв на конец дня' (sku, stock, date) = reserveAPurchaseSkuStockDate (sku, stock, date) (-) reserveASaleSkuStockDate (sku, stock, date);

reserveBSkuStockDateTime 'Резерв (до)' (sku, stock, dateTime) = reserveBPurchaseSkuStockDateTime (sku, stock, dateTime) (-) reserveBSaleSkuStockDateTime (sku, stock, dateTime);
reserveASkuStockDateTime 'Резерв (после)' (sku, stock, dateTime) = reserveAPurchaseSkuStockDateTime (sku, stock, dateTime) (-) reserveASaleSkuStockDateTime (sku, stock, dateTime);

prevReserveBSkuStockDateTime 'Резерв (до)' (sku, stock, dateTime) = PREV(reserveBSkuStockDateTime(sku, stock, dateTime));
//по партиям
currentReserveBatchStock 'Текущий резерв' (batch, stock) = currentReservePurchaseBatchStock (batch, stock) (-) currentReserveSaleBatchStock (batch, stock);

reserveBBatchStockDate 'Резерв на начало дня' (batch, stock, date) = reserveBPurchaseBatchStockDate (batch, stock, date) (-) reserveBSaleBatchStockDate (batch, stock, date);
reserveABatchStockDate 'Резерв на конец дня' (batch, stock, date) = reserveAPurchaseBatchStockDate (batch, stock, date) (-) reserveASaleBatchStockDate (batch, stock, date);

reserveBBatchStockDateTime 'Резерв (до)' (batch, stock, dateTime) = reserveBPurchaseBatchStockDateTime (batch, stock, dateTime) (-) reserveBSaleBatchStockDateTime (batch, stock, dateTime);
reserveABatchStockDateTime 'Резерв (после)' (batch, stock, dateTime) = reserveAPurchaseBatchStockDateTime (batch, stock, dateTime) (-) reserveASaleBatchStockDateTime (batch, stock, dateTime);

prevReserveBBatchStockDateTime 'Резерв (до)' (batch, stock, dateTime) = PREV(reserveBBatchStockDateTime(batch, stock, dateTime));

// ----------------------- Доступное количество -------------------------- //

prevAvailableQuantitySkuStockDateTime 'Доступное количество' (sku, stock, dateTime) = (prevCurrentBalanceSkuStock(sku, stock) IF dateTime IS DATETIME) (+) prevReserveBSkuStockDateTime(sku, stock, dateTime);
prevAvailableQuantityBatchStockDateTime 'Доступное количество' (batch, stock, dateTime) = (prevCurrentBalanceBatchStock(batch, stock) IF dateTime IS DATETIME) (+) prevReserveBBatchStockDateTime(batch, stock, dateTime);

//---------------------------------------------- Формы продаж -------------------------------------//
FORM orderSkuLedger 'Резерв по позициям'

    OBJECTS t = DATETIME FIXED PANEL
    PROPERTIES  dVal=OBJVALUE(t)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR nameStock(st)

    OBJECTS sk = Sku FIXED PANEL
    PROPERTIES  SELECTOR nameSku(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundOrderLedgerDateTime(s,t)  dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, descriptionOrderLedger,
                           quantityOrderLedger, toShipQuantityOrderLedger
    FILTERS stockOrderLedger(s)==st,
            skuOrderLedger(s)==sk

    FILTERS isPostedOrderLedger(s) AND NOT isClosedOrderLedger(s)

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' 'F11' isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) всего' 'F10' TRUE AND NOT isPurchaseOrderLedger(s)
        FILTER 'Резерв (закупки) на дату' 'F9' dateTimeOrderLedger(s) < t AND isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) на дату' 'F8' dateTimeOrderLedger(s)< t AND NOT isPurchaseOrderLedger(s)
        FILTER 'На дату' 'F7' dateTimeOrderLedger(s) < t


;

DESIGN orderSkuLedger FROM DEFAULT {
    main {
        childConstraints = TO THE BOTTOM;
        NEW row{
            childConstraints = TO THE RIGHTBOTTOM;
            ADD t.box;
            ADD st.box;
            ADD sk.box;
        }
        ADD s.box;
    }
    ADD functions.box;
}

FORM orderBatchLedger 'Резерв по партиям'

    OBJECTS t = DATETIME FIXED PANEL
    PROPERTIES  dVal=OBJVALUE(t)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR nameStock(st)

    OBJECTS bt = Batch FIXED PANEL
    PROPERTIES SELECTOR nameBatch(bt)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundOrderLedgerDateTime(s,t)  dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, descriptionOrderLedger,
                           quantityOrderLedger, toShipQuantityOrderLedger
    FILTERS stockOrderLedger(s)==st,
            batchOrderLedger(s)==bt

    FILTERS isPostedOrderLedger(s) AND NOT isClosedOrderLedger(s)

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' 'F11' isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) всего' 'F10' TRUE AND NOT isPurchaseOrderLedger(s)
        FILTER 'Резерв (закупки) на дату' 'F9' dateTimeOrderLedger(s) < t AND isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) на дату' 'F8' dateTimeOrderLedger(s)< t AND NOT isPurchaseOrderLedger(s)
        FILTER 'На дату' 'F7' dateTimeOrderLedger(s) < t


;

DESIGN orderBatchLedger FROM DEFAULT {
    main {
        childConstraints = TO THE BOTTOM;
        NEW row{
            childConstraints = TO THE RIGHTBOTTOM;
            ADD t.box;
            ADD st.box;
            ADD bt.box;
        }
        ADD s.box;
    }
    ADD functions.box;
}


//---------------------------------------------- Макросы для имплементаций Продажа-------------------------------------//

META implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTimeOrderLedger (ledger) += dateTimeProp###concrete##Detail(ledger);
    isPostedOrderLedger (ledger) += isPosted###concrete##Detail(ledger);
    isClosedOrderLedger (ledger) += isClosed###concrete##Detail(ledger);
    skuOrderLedger (ledger) += skuProp###concrete##Detail(ledger);
    batchOrderLedger (ledger) += batch###concrete##Detail(ledger);
    stockOrderLedger (ledger) += stockProp###concrete##Detail(ledger);
    descriptionOrderLedger (ledger) += description###concrete##Detail(ledger);
    quantityOrderLedger (ledger) += quantity###concrete##Detail(ledger);
    contactOrderLedger (ledger) += contactProp###concrete##Detail(ledger);
END
META implementSaleOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

//---------------------------------------------- Макросы для имплементаций Покупка-------------------------------------//

META implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTimeOrderLedger (ledger) += dateTimeProp###concrete##Detail(ledger);
    isPostedOrderLedger (ledger) += isPosted###concrete##Detail(ledger);
    isClosedOrderLedger (ledger) += isClosed###concrete##Detail(ledger);
    skuOrderLedger (ledger) += skuProp###concrete##Detail(ledger);
    batchOrderLedger (ledger) += batch###concrete##Detail(ledger);
    stockOrderLedger (ledger) += stockProp###concrete##Detail(ledger);
    descriptionOrderLedger (ledger) += description###concrete##Detail(ledger);
    quantityOrderLedger (ledger) += quantity###concrete##Detail(ledger);
    isPurchaseOrderLedger (ledger) += ledger IS concrete##Detail;
    contactOrderLedger (ledger) += contactProp###concrete##Detail(ledger);
END
META implementPurchaseOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

// ----------------------- Расширение формы подбора товаров (диалоговой) --------------------- //

META defineDialogSkuReserve (form)

    form###SaleReserve 'Резерв (продажи)' (sku) = currentReserveSaleSkuStock(sku, form###stock());
    form###PurchaseReserve 'Резерв (закупки)' (sku) = currentReservePurchaseSkuStock(sku, form###stock());

    EXTEND FORM form
        PROPERTIES(s) READONLY  AFTER form###balance SHOWIF form###stock() form###SaleReserve, form###PurchaseReserve
    ;
END

@defineDialogSkuReserve(dialogSku);

// ----------------------- Расширение формы текущих остатков --------------------- //

EXTEND FORM currentBalanceSkuStock
    PROPERTIES(s, st) currentReserveSkuStock READONLY AFTER currentBalanceSkuStock(s,st)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, descriptionOrderLedger,
                  quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(l)==st,
            skuOrderLedger(l)==s

    FILTERS isPostedOrderLedger(l) AND NOT isClosedOrderLedger(l) AND isPurchaseOrderLedger(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, descriptionOrderLedger,
                   quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(ll)==st,
            skuOrderLedger(ll)==s

    FILTERS isPostedOrderLedger(ll) AND NOT isClosedOrderLedger(ll) AND NOT isPurchaseOrderLedger(ll)

;
EXTEND DESIGN currentBalanceSkuStock {

    ledger.box {
        ADD l.box {caption = 'Резерв (закупки)';}
        ADD ll.box {caption = 'Резерв (продажи)';}
    }
}

// ----------------------- Расширение формы текущих остатков на дату --------------------- //

EXTEND FORM balanceSkuStock
    PROPERTIES(s, st, t) reserveASkuStockDateTime READONLY AFTER balanceASkuStockDateTime(s,st,t)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, descriptionOrderLedger,
                  quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(l)==st,
            skuOrderLedger(l)==s,
            dateTimeOrderLedger(l) <= t

    FILTERS isPostedOrderLedger(l) AND NOT isClosedOrderLedger(l) AND isPurchaseOrderLedger(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, descriptionOrderLedger,
                   quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(ll)==st,
            skuOrderLedger(ll)==s,
            dateTimeOrderLedger(l) <= t

    FILTERS isPostedOrderLedger(ll) AND NOT isClosedOrderLedger(ll) AND NOT isPurchaseOrderLedger(ll)

;
EXTEND DESIGN balanceSkuStock {

    ledger.box {
        ADD l.box {caption = 'Резерв (закупки)';}
        ADD ll.box {caption = 'Резерв (продажи)';}
    }
}

// ----------- Подбор (товар / один склад)---------------//

META extendFormDocumentSkuOrderLedger(object, form, concrete, stockProp)

    prevAvailableQuantitySku###object 'Доступное количество' (sku, object)= prevAvailableQuantitySkuStockDateTime(sku, stockProp###object(object), dateTime###object(object));

    prevReserveBPurchaseSku###object 'Резерв (закупка)' (sku, object) = prevReserveBPurchaseSkuStockDateTime(sku, stockProp###object(object), dateTime###object(object));
    prevCurrentReservePurchaseSku###object 'Резерв закупка (всего)' (sku, object) = prevCurrentReservePurchaseSkuStock(sku, stockProp###object(object));

    prevReserveBSaleSku###object 'Резерв (продажа)' (sku, object) = prevReserveBSaleSkuStockDateTime(sku, stockProp###object(object), dateTime###object(object));
    prevCurrentReserveSaleSku###object 'Резерв продажа (всего)' (sku, object) = prevCurrentReserveSaleSkuStock(sku, stockProp###object(object));

    reviewReserveSaleSku###object 'Резерв' (sku, object) = ACTION FORM orderSkuLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), sk = sku MODAL;
    reviewReservePurchaseSku###object 'Резерв' (sku, object) = ACTION FORM orderSkuLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), sk = sku MODAL;
    reviewReserveBSaleSku###object 'Резерв' (sku, object) = ACTION FORM orderSkuLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), sk = sku MODAL;
    reviewReserveBPurchaseSku###object 'Резерв' (sku, object) = ACTION FORM orderSkuLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), sk = sku MODAL;

    EXTEND FORM form
        PROPERTIES READONLY BEFORE prevCurrentBalanceSku###object(ks, concrete) prevAvailableQuantitySku###object(ks, concrete)

        PROPERTIES AFTER prevCurrentBalanceSku###object(ks, concrete)
                   prevCurrentReserveSaleSku###object(ks,concrete) ON CHANGE reviewReserveSaleSku###object(ks,concrete),
                   prevCurrentReservePurchaseSku###object(ks,concrete) ON CHANGE reviewReservePurchaseSku###object(ks,concrete),
                   prevReserveBSaleSku###object(ks, concrete) ON CHANGE reviewReserveBSaleSku###object(ks,concrete),
                   prevReserveBPurchaseSku###object(ks, concrete) ON CHANGE reviewReserveBPurchaseSku###object(ks,concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantitySku###object) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleSku###object) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseSku###object) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleSku###object) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseSku###object) { background = #CCFFCC; }
    }
END

META extendFormDocumentSkuOrderLedgerAll(object, form, concrete)

    allAvailableSku###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Sku, ###object);
    changeAllAvailableSku###object = ACTION (sku, object) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableSku###object (sku,object) <- TRUE;
            requestedNumeric() <- prevAvailableQuantitySku###object(sku, object);
            changeQuantityValueSku###object(sku, object);
        } ELSE {
            allAvailableSku###object (sku,object) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueSku###object(sku, object);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantitySku###object(ks, concrete) allAvailableSku###object (ks,concrete) ON CHANGE changeAllAvailableSku###object(ks,concrete)
    ;
END

// ----------- Подбор (партия / один склад)---------------//

META extendFormDocumentBatchOrderLedger(object, form, concrete, stockProp)

    prevAvailableQuantityBatch###object 'Доступное количество' (batch, object) = prevAvailableQuantityBatchStockDateTime(batch, stockProp###object(object), dateTime###object(object));

    prevReserveBPurchaseBatch###object 'Резерв (закупка)' (batch, object) = prevReserveBPurchaseBatchStockDateTime(batch, stockProp###object(object), dateTime###object(object));
    prevCurrentReservePurchaseBatch###object 'Резерв закупка (всего)' (batch, object) = prevCurrentReservePurchaseBatchStock(batch, stockProp###object(object));

    prevReserveBSaleBatch###object 'Резерв (продажа)' (batch, object) = prevReserveBSaleBatchStockDateTime(batch, stockProp###object(object), dateTime###object(object));
    prevCurrentReserveSaleBatch###object 'Резерв продажа (всего)' (batch, object) = prevCurrentReserveSaleBatchStock(batch, stockProp###object(object));

    reviewReserveSaleBatch###object 'Резерв' (batch, object) = ACTION FORM orderBatchLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), bt = batch MODAL;
    reviewReservePurchaseBatch###object 'Резерв' (batch, object) = ACTION FORM orderBatchLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), bt = batch MODAL;
    reviewReserveBSaleBatch###object 'Резерв' (batch, object) = ACTION FORM orderBatchLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), bt = batch MODAL;
    reviewReserveBPurchaseBatch###object 'Резерв' (batch, object) = ACTION FORM orderBatchLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), bt = batch MODAL;

    EXTEND FORM form
        PROPERTIES READONLY BEFORE prevCurrentBalanceBatch###object(b, concrete) prevAvailableQuantityBatch###object(b, concrete)

        PROPERTIES AFTER prevCurrentBalanceBatch###object(b, concrete)
                   prevCurrentReserveSaleBatch###object(b,concrete) ON CHANGE reviewReserveSaleBatch###object(b,concrete),
                   prevCurrentReservePurchaseBatch###object(b,concrete) ON CHANGE reviewReservePurchaseBatch###object(b,concrete),
                   prevReserveBSaleBatch###object(b, concrete) ON CHANGE reviewReserveBSaleBatch###object(b,concrete),
                   prevReserveBPurchaseBatch###object(b, concrete) ON CHANGE reviewReserveBPurchaseBatch###object(b,concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantityBatch###object) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleBatch###object) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseBatch###object) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleBatch###object) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseBatch###object) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchOrderLedgerAll(object, form, concrete)

    allAvailableBatch###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Batch, ###object);
    changeAllAvailableBatch###object= ACTION (batch, object) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableBatch###object (batch,object) <- TRUE;
            requestedNumeric() <- prevAvailableQuantityBatch###object(batch, object);
            changeQuantityValueBatch###object(batch, object);
        } ELSE {
            allAvailableBatch###object (batch,object) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueBatch###object(batch, object);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantityBatch###object(b, concrete) allAvailableBatch###object (b,concrete) ON CHANGE changeAllAvailableBatch###object(b,concrete)
    ;
END

// ----------- Подбор (товар / несколько складов)---------------//

META extendFormDocumentSkuStockOrderLedger(object, form, concrete)

    prevAvailableQuantitySkuStock###object 'Доступное количество' (sku, stock, object) = prevAvailableQuantitySkuStockDateTime(sku, stock, shipmentDateTime###object(object));

    prevReserveBPurchaseSkuStock###object 'Резерв (закупка)' (sku, stock, object) = prevReserveBPurchaseSkuStockDateTime(sku, stock, shipmentDateTime###object(object));
    prevReserveBSaleSkuStock###object 'Резерв (продажа)' (sku, stock, object) = prevReserveBSaleSkuStockDateTime(sku, stock, shipmentDateTime###object(object));

    reviewReserveSaleSkuStock###object 'Резерв' (sku,stock, object) = ACTION FORM orderSkuLedger OBJECTS t=shipmentDateTime###object(object), st=stock, sk = sku MODAL;
    reviewReservePurchaseSkuStock###object 'Резерв' (sku,stock, object) = ACTION FORM orderSkuLedger OBJECTS t=shipmentDateTime###object(object), st=stock, sk = sku MODAL;
    reviewReserveBSaleSkuStock###object 'Резерв' (sku,stock, object) = ACTION FORM orderSkuLedger OBJECTS t=shipmentDateTime###object(object), st=stock, sk = sku MODAL;
    reviewReserveBPurchaseSkuStock###object 'Резерв' (sku,stock, object) = ACTION FORM orderSkuLedger OBJECTS t=shipmentDateTime###object(object), st=stock, sk = sku MODAL;

    EXTEND FORM form
        PROPERTIES READONLY BEFORE prevCurrentBalanceSkuStock(ks, st) prevAvailableQuantitySkuStock###object(ks, st, concrete)

        PROPERTIES AFTER prevCurrentBalanceSkuStock(ks, st)
                   prevCurrentReserveSaleSkuStock(ks,st) ON CHANGE reviewReserveSaleSkuStock###object(ks,st,concrete),
                   prevCurrentReservePurchaseSkuStock(ks,st) ON CHANGE reviewReservePurchaseSkuStock###object(ks,st,concrete),
                   prevReserveBSaleSkuStock###object(ks, st, concrete) ON CHANGE reviewReserveBSaleSkuStock###object(ks,st,concrete),
                   prevReserveBPurchaseSkuStock###object(ks, st, concrete) ON CHANGE reviewReserveBPurchaseSkuStock###object(ks,st,concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantitySkuStock###object) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleSkuStock) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseSkuStock) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleSkuStock###object) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseSkuStock###object) { background = #CCFFCC; }
    }

END

META extendFormDocumentSkuStockOrderLedgerAll(object, form, concrete)

    allAvailableSku###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Sku, Stock);
    changeAllAvailableSku###object= ACTION (sku, object, stock) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableSku###object (sku,stock) <- TRUE;
            requestedNumeric() <- prevAvailableQuantitySkuStock###object(sku, stock, object);
            changeQuantityValueSku###object###Stock(sku, object, stock);
        } ELSE {
            allAvailableSku###object (sku,stock) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueSku###object###Stock(sku, object, stock);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantitySkuStock###object(ks, st, concrete) allAvailableSku###object (ks,st) ON CHANGE changeAllAvailableSku###object(ks,concrete,st)
    ;
END

// ----------- Подбор (партия / несколько складов)---------------//

META extendFormDocumentBatchStockOrderLedger(object, form, concrete)

    prevAvailableQuantityBatchStock###object 'Доступное количество' (batch, stock, object) = prevAvailableQuantityBatchStockDateTime(batch, stock, shipmentDateTime###object(object));

    prevReserveBPurchaseBatchStock###object 'Резерв (закупка)' (batch, stock, object) = prevReserveBPurchaseBatchStockDateTime(batch, stock, shipmentDateTime###object(object));
    prevReserveBSaleBatchStock###object 'Резерв (продажа)' (batch, stock, object) = prevReserveBSaleBatchStockDateTime(batch, stock, shipmentDateTime###object(object));

    reviewReserveSaleBatchStock###object 'Резерв' (batch, stock, object) = ACTION FORM orderBatchLedger OBJECTS t=shipmentDateTime###object(object), st=stock, bt = batch MODAL;
    reviewReservePurchaseBatchStock###object 'Резерв' (batch, stock, object) = ACTION FORM orderBatchLedger OBJECTS t=shipmentDateTime###object(object), st=stock, bt = batch MODAL;
    reviewReserveBSaleBatchStock###object 'Резерв' (batch, stock, object) = ACTION FORM orderBatchLedger OBJECTS t=shipmentDateTime###object(object), st=stock, bt = batch MODAL;
    reviewReserveBPurchaseBatchStock###object 'Резерв' (batch, stock, object) = ACTION FORM orderBatchLedger OBJECTS t=shipmentDateTime###object(object), st=stock, bt = batch MODAL;

    EXTEND FORM form
        PROPERTIES READONLY BEFORE prevCurrentBalanceBatchStock(b, sto) prevAvailableQuantityBatchStock###object(b, sto, concrete)

        PROPERTIES AFTER prevCurrentBalanceBatchStock(b, sto)
                   prevCurrentReserveSaleBatchStock(b, sto) ON CHANGE reviewReserveSaleBatchStock###object(b, sto, concrete),
                   prevCurrentReservePurchaseBatchStock(b, sto) ON CHANGE reviewReservePurchaseBatchStock###object(b, sto, concrete),
                   prevReserveBSaleBatchStock###object(b, sto, concrete) ON CHANGE reviewReserveBSaleBatchStock###object(b, sto, concrete),
                   prevReserveBPurchaseBatchStock###object(b, sto, concrete) ON CHANGE reviewReserveBPurchaseBatchStock###object(b, sto, concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantityBatchStock###object) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleBatchStock) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseBatchStock) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleBatchStock###object) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseBatchStock###object) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchStockOrderLedgerAll(object, form, concrete)

    allAvailableBatch###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Batch, Stock);
    changeAllAvailableBatch###object = ACTION (batch, object, stock) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableBatch###object (batch,stock) <- TRUE;
            requestedNumeric() <- prevAvailableQuantityBatchStock###object(batch, stock, object);
            changeQuantityValueBatch###object###Stock(batch, object, stock);
        } ELSE {
            allAvailableBatch###object (batch,stock) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueBatch###object###Stock(batch, object, stock);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantityBatchStock###object(b, sto, concrete) allAvailableBatch###object (b, sto) ON CHANGE changeAllAvailableBatch###object(b, concrete, sto)
    ;
END
