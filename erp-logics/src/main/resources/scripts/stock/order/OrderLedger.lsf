MODULE OrderLedger;

REQUIRE System, SkuLedger, StockSkuDocument;

CLASS ABSTRACT OrderLedger 'Резерв товара';
TABLE orderLedger(OrderLedger);

dateTimeOrderLedger 'Дата/время' (ledger) = ABSTRACT DATETIME (OrderLedger) PERSISTENT INDEXED;
dateOrderLedger 'Дата' (ledger) = toDate(dateTimeOrderLedger(ledger)) PERSISTENT INDEXED;

isPostedOrderLedger 'Проведен' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;
isClosedOrderLedger 'Закрыт' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;

skuOrderLedger (ledger) = ABSTRACT Sku (OrderLedger) PERSISTENT INDEXED;
nameSkuOrderLedger 'SKU' (ledger) = nameSku(skuOrderLedger(ledger));

countOrderLedgerSku = GROUP SUM 1 BY skuOrderLedger(ledger) PERSISTENT;

batchOrderLedger (ledger) = ABSTRACT Batch (OrderLedger) PERSISTENT INDEXED;

stockOrderLedger (ledger) = ABSTRACT Stock (OrderLedger) PERSISTENT INDEXED;
nameStockOrderLedger 'Склад' (ledger) = nameStock(stockOrderLedger(ledger));

descriptionOrderLedger 'Название документа' (ledger) = ABSTRACT VARSTRING[200] (OrderLedger) PERSISTENT;

quantityOrderLedger 'Кол-во (заказано)' (ledger) = ABSTRACT NUMERIC[14,3] (OrderLedger) PERSISTENT;
toShipQuantityOrderLedger 'Кол-во (не выполнено)' (ledger) = ABSTRACT NUMERIC[14,3] (OrderLedger) PERSISTENT;

isPurchaseOrderLedger 'Закупка' (ledger) = ABSTRACT BOOLEAN (OrderLedger) PERSISTENT;
statusReserveOrderLedger 'Статус резерва' (ledger) = IF isPurchaseOrderLedger(ledger) THEN 'Закупка' ELSE 'Продажа' MINCHARWIDTH 8 PREFCHARWIDTH 15;               
backgroundReserveOrderLedger 'Статус резерва' (ledger) = IF isPurchaseOrderLedger(ledger) THEN RGB(204,255,204) ELSE RGB(189,227,255);               


contactOrderLedger (ledger) = ABSTRACT LegalEntity (OrderLedger) PERSISTENT INDEXED;
nameContactOrderLedger 'Контрагент' (ledger) = nameLegalEntity(contactOrderLedger(ledger));

contactStockOrderLedger (ledger) = ABSTRACT Stock (OrderLedger) PERSISTENT INDEXED;
nameContactStockOrderLedger 'Склад контрагента' (ledger) = nameStock(contactStockOrderLedger(ledger));

inContactSku 'Связь' (legalEntity, sku)= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY contactOrderLedger(ledger), skuOrderLedger(ledger) PERSISTENT;

backgroundOrderLedgerDateTime 'Цвет' (ledger,dateTime) = RGB(212,255,212) IF dateTimeOrderLedger(ledger) > dateTime;

//-------------------------------Продажа----------------------------------//

//по SKU
currentReserveSaleSkuStock 'Резерв продажа (всего)' (sku, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY skuOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReserveSaleSkuStock 'Резерв продажа (всего)' (sku, stock) = PREV(currentReserveSaleSkuStock(sku, stock));

// без учета текущей даты/времени
reserveBSaleSkuStockDate 'Резерв продажи на начало дня' (sku, stock, date) = (currentReserveSaleSkuStock(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// с учетом текущей даты/времени
reserveASaleSkuStockDate 'Резерв продажи на конец дня' (sku, stock, date) = (currentReserveSaleSkuStock(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// без учета текущей даты/времени
reserveBSaleSkuStockDateTime 'Резерв продажи (до)' (sku, stock, dateTime) = (currentReserveSaleSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);
prevReserveBSaleSkuStockDateTime 'Резерв продажи (до)' (sku, stock, dateTime) = PREV(reserveBSaleSkuStockDateTime(sku, stock, dateTime));

// с учетом текущей даты/времени
reserveASaleSkuStockDateTime 'Резерв продажи (после)' (sku, stock, dateTime) = (currentReserveSaleSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);

//по партиям
currentReserveSaleBatchStock 'Резерв продажа (всего)' (batch, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY batchOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReserveSaleBatchStock 'Резерв продажа (всего)' (batch, stock) = PREV(currentReserveSaleBatchStock(batch, stock));

// без учета текущей даты/времени
reserveBSaleBatchStockDate 'Резерв продажи на начало дня' (batch, stock, date) = (currentReserveSaleBatchStock(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// с учетом текущей даты/времени
reserveASaleBatchStockDate 'Резерв продажи на конец дня' (batch, stock, date) = (currentReserveSaleBatchStock(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// без учета текущей даты/времени
reserveBSaleBatchStockDateTime 'Резерв продажи (до)' (batch, stock, dateTime) = (currentReserveSaleBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);
prevReserveBSaleBatchStockDateTime 'Резерв продажи (до)' (batch, stock, dateTime) = PREV(reserveBSaleBatchStockDateTime(batch, stock, dateTime));

// с учетом текущей даты/времени
reserveASaleBatchStockDateTime 'Резерв продажи (после)' (batch, stock, dateTime) = (currentReserveSaleBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND NOT isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);


//-------------------------------Закупка----------------------------------//

//по SKU
currentReservePurchaseSkuStock 'Резерв закупка (всего)' (sku, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY skuOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReservePurchaseSkuStock 'Резерв закупка (всего)' (sku, stock) = PREV(currentReservePurchaseSkuStock(sku, stock));

// без учета текущей даты/времени
reserveBPurchaseSkuStockDate 'Резерв закупки на начало дня' (sku, stock, date) = (currentReservePurchaseSkuStock(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// с учетом текущей даты/времени
reserveAPurchaseSkuStockDate 'Резерв закупки на конец дня' (sku, stock, date) = (currentReservePurchaseSkuStock(sku, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), date](sku, stock, date);

// без учета текущей даты/времени
reserveBPurchaseSkuStockDateTime 'Резерв закупки (до)' (sku, stock, dateTime) = (currentReservePurchaseSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);
prevReserveBPurchaseSkuStockDateTime 'Резерв закупки (до)' (sku, stock, dateTime) = PREV(reserveBPurchaseSkuStockDateTime(sku, stock, dateTime));

// с учетом текущей даты/времени
reserveAPurchaseSkuStockDateTime 'Резерв закупки (после)' (sku, stock, dateTime) = (currentReservePurchaseSkuStock(sku, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY skuOrderLedger(ledger), stockOrderLedger(ledger), dateTime](sku, stock, dateTime);

//по партиям
currentReservePurchaseBatchStock 'Резерв закупка (всего)'(batch, stock) = GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger)
    BY batchOrderLedger(ledger), stockOrderLedger(ledger) PERSISTENT;
prevCurrentReservePurchaseBatchStock 'Резерв закупка (всего)'(batch, stock) = PREV(currentReservePurchaseBatchStock(batch, stock));

// без учета текущей даты/времени
reserveBPurchaseBatchStockDate 'Резерв закупки на начало дня' (batch, stock, date) = (currentReservePurchaseBatchStock(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) >= date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// с учетом текущей даты/времени
reserveAPurchaseBatchStockDate 'Резерв закупки на конец дня' (batch, stock, date) = (currentReservePurchaseBatchStock(batch, stock) IF date IS DATE) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateOrderLedger(ledger) > date
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), date](batch, stock, date);

// без учета текущей даты/времени
reserveBPurchaseBatchStockDateTime 'Резерв закупки (до)' (batch, stock, dateTime) = (currentReservePurchaseBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) >= dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);
prevReserveBPurchaseBatchStockDateTime 'Резерв закупки (до)' (batch, stock, dateTime) = PREV(reserveBPurchaseBatchStockDateTime(batch, stock, dateTime));

// с учетом текущей даты/времени
reserveAPurchaseBatchStockDateTime 'Резерв закупки (после)' (batch, stock, dateTime) = (currentReservePurchaseBatchStock(batch, stock) IF dateTime IS DATETIME) (-)
    [= GROUP SUM toShipQuantityOrderLedger(ledger) IF isPostedOrderLedger(ledger) AND isPurchaseOrderLedger(ledger) AND NOT isClosedOrderLedger(ledger) AND dateTimeOrderLedger(ledger) > dateTime
        BY batchOrderLedger(ledger), stockOrderLedger(ledger), dateTime](batch, stock, dateTime);

//-------------------------------Общий----------------------------------//

//по Sku
currentReserveSkuStock 'Текущий резерв' (sku, stock) = currentReservePurchaseSkuStock (sku, stock) (-) currentReserveSaleSkuStock (sku, stock);
prevCurrentReserveSkuStock 'Текущий резерв' (sku, stock) = prevCurrentReservePurchaseSkuStock (sku, stock) (-) prevCurrentReserveSaleSkuStock (sku, stock);

reserveBSkuStockDate 'Резерв на начало дня' (sku, stock, date) = reserveBPurchaseSkuStockDate (sku, stock, date) (-) reserveBSaleSkuStockDate (sku, stock, date);
reserveASkuStockDate 'Резерв на конец дня' (sku, stock, date) = reserveAPurchaseSkuStockDate (sku, stock, date) (-) reserveASaleSkuStockDate (sku, stock, date);

reserveBSkuStockDateTime 'Резерв (до)' (sku, stock, dateTime) = reserveBPurchaseSkuStockDateTime (sku, stock, dateTime) (-) reserveBSaleSkuStockDateTime (sku, stock, dateTime);
reserveASkuStockDateTime 'Резерв (после)' (sku, stock, dateTime) = reserveAPurchaseSkuStockDateTime (sku, stock, dateTime) (-) reserveASaleSkuStockDateTime (sku, stock, dateTime);

prevReserveBSkuStockDateTime 'Резерв (до)' (sku, stock, dateTime) = PREV(reserveBSkuStockDateTime(sku, stock, dateTime));
//по партиям
currentReserveBatchStock 'Текущий резерв' (batch, stock) = currentReservePurchaseBatchStock (batch, stock) (-) currentReserveSaleBatchStock (batch, stock);
prevCurrentReserveBatchStock 'Текущий резерв' (batch, stock) = prevCurrentReservePurchaseBatchStock (batch, stock) (-) prevCurrentReserveSaleBatchStock (batch, stock);

reserveBBatchStockDate 'Резерв на начало дня' (batch, stock, date) = reserveBPurchaseBatchStockDate (batch, stock, date) (-) reserveBSaleBatchStockDate (batch, stock, date);
reserveABatchStockDate 'Резерв на конец дня' (batch, stock, date) = reserveAPurchaseBatchStockDate (batch, stock, date) (-) reserveASaleBatchStockDate (batch, stock, date);

reserveBBatchStockDateTime 'Резерв (до)' (batch, stock, dateTime) = reserveBPurchaseBatchStockDateTime (batch, stock, dateTime) (-) reserveBSaleBatchStockDateTime (batch, stock, dateTime);
reserveABatchStockDateTime 'Резерв (после)' (batch, stock, dateTime) = reserveAPurchaseBatchStockDateTime (batch, stock, dateTime) (-) reserveASaleBatchStockDateTime (batch, stock, dateTime);

prevReserveBBatchStockDateTime 'Резерв (до)' (batch, stock, dateTime) = PREV(reserveBBatchStockDateTime(batch, stock, dateTime));

// ----------------------- Доступное к-во -------------------------- //
availableQuantitySkuStock 'Доступное к-во (всего)' (sku, stock) = currentBalanceSkuStock(sku, stock) (+) currentReserveSkuStock(sku, stock);
availableQuantityBatchStock 'Доступное к-во (всего)' (batch, stock) = currentBalanceBatchStock(batch, stock) (+) currentReserveBatchStock(batch, stock);

prevAvailableQuantitySkuStock 'Доступное к-во (всего)' (sku, stock) = prevCurrentBalanceSkuStock(sku, stock) (+) prevCurrentReserveSkuStock(sku, stock);
prevAvailableQuantityBatchStock 'Доступное к-во (всего)' (batch, stock) = prevCurrentBalanceBatchStock(batch, stock) (+) prevCurrentReserveBatchStock(batch, stock);

prevAvailableQuantitySkuStockDateTime 'Доступное к-во' (sku, stock, dateTime) = (prevCurrentBalanceSkuStock(sku, stock) IF dateTime IS DATETIME) (+) prevReserveBSkuStockDateTime(sku, stock, dateTime);
prevAvailableQuantityBatchStockDateTime 'Доступное к-во' (batch, stock, dateTime) = (prevCurrentBalanceBatchStock(batch, stock) IF dateTime IS DATETIME) (+) prevReserveBBatchStockDateTime(batch, stock, dateTime);

//---------------------------------------------- Формы продаж -------------------------------------//
FORM orderSkuLedger 'Резерв по позициям'

    OBJECTS t = DATETIME FIXED PANEL
    PROPERTIES  dVal=OBJVALUE(t)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR nameStock(st)

    OBJECTS sk = Sku FIXED PANEL
    PROPERTIES  SELECTOR nameSku(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserveOrderLedger(s) statusReserveOrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundOrderLedgerDateTime(s,t) dateOrderLedger, 
                  dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                  toShipQuantityOrderLedger, quantityOrderLedger
                  
    ORDER BY statusReserveOrderLedger(s)
    FILTERS stockOrderLedger(s)==st,
            skuOrderLedger(s)==sk

    FILTERS isPostedOrderLedger(s) AND NOT isClosedOrderLedger(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' 'F7' toShipQuantityOrderLedger(s) DEFAULT

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' 'F11' isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) всего' 'F10' TRUE AND NOT isPurchaseOrderLedger(s)
        FILTER 'Резерв (закупки) на дату' 'F9' dateTimeOrderLedger(s) < t AND isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) на дату' 'F8' dateTimeOrderLedger(s)< t AND NOT isPurchaseOrderLedger(s)
        FILTER 'На дату' 'F7' dateTimeOrderLedger(s) < t


;

DESIGN orderSkuLedger FROM DEFAULT {
    main {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;
            ADD t.box;
            ADD st.box;
            ADD sk.box;
        }
        ADD s.box;
    }
    ADD functions.box;
}

FORM orderBatchLedger 'Резерв по партиям'

    OBJECTS t = DATETIME FIXED PANEL
    PROPERTIES  dVal=OBJVALUE(t)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES  SELECTOR nameStock(st)

    OBJECTS bt = Batch FIXED PANEL
    PROPERTIES SELECTOR nameBatch(bt)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserveOrderLedger(s) statusReserveOrderLedger     
    PROPERTIES(s) READONLY BACKGROUND backgroundOrderLedgerDateTime(s,t) dateOrderLedger, 
                  dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                  toShipQuantityOrderLedger, quantityOrderLedger
    ORDER BY statusReserveOrderLedger(s)
    FILTERS stockOrderLedger(s)==st,
            batchOrderLedger(s)==bt

    FILTERS isPostedOrderLedger(s) AND NOT isClosedOrderLedger(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' 'F7' toShipQuantityOrderLedger(s) DEFAULT
        
    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' 'F11' isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) всего' 'F10' TRUE AND NOT isPurchaseOrderLedger(s)
        FILTER 'Резерв (закупки) на дату' 'F9' dateTimeOrderLedger(s) < t AND isPurchaseOrderLedger(s)
        FILTER 'Резерв (продажи) на дату' 'F8' dateTimeOrderLedger(s)< t AND NOT isPurchaseOrderLedger(s)
        FILTER 'На дату' 'F7' dateTimeOrderLedger(s) < t


;

DESIGN orderBatchLedger FROM DEFAULT {
    main {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;
            ADD t.box;
            ADD st.box;
            ADD bt.box;
        }
        ADD s.box;
    }
    ADD functions.box;
}

//-- Запрет на расходование товаров по партиям больше чем есть в остатке

banNegativeBatch 'Запретить расходовать больше чем в остатке по партии' = DATA BOOLEAN ();

EXTEND FORM options 
    PROPERTIES() banNegativeBatch 
;

EXTEND DESIGN options {
    commons {
        ADD PROPERTY(banNegativeBatch());
    }
}

allowedNegativeBatchStock 'Разрешить расходовать больше чем в остатке' = DATA BOOLEAN (Batch, Stock);

EXTEND FORM currentBalanceBatchStock 
    PROPERTIES (bt,st) allowedNegativeBatchStock BEFORE nameSkuBatch(bt)  SHOWIF banNegativeBatch()
;

CONSTRAINT (currentBalanceBatchStock(bt,st) (+) currentReserveBatchStock(bt,st))< 0.0 AND NOT  ((allowedNegativeBatchStock(bt,st) AND banNegativeBatch()) OR (bt IS Batch AND st IS Stock AND NOT banNegativeBatch()))
    MESSAGE 'Расходуется больше чем доступно';

//---------------------------------------------- Макросы для имплементаций Продажа-------------------------------------//

META implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTimeOrderLedger (ledger) += dateTimeProp###concrete##Detail(ledger);
    isPostedOrderLedger (ledger) += isPosted###concrete##Detail(ledger);
    isClosedOrderLedger (ledger) += isClosed###concrete##Detail(ledger);
    skuOrderLedger (ledger) += skuProp###concrete##Detail(ledger);
    batchOrderLedger (ledger) += batch###concrete##Detail(ledger);
    stockOrderLedger (ledger) += stockProp###concrete##Detail(ledger);
    descriptionOrderLedger (ledger) += description###concrete##Detail(ledger);
    quantityOrderLedger (ledger) += quantity###concrete##Detail(ledger);
    contactOrderLedger (ledger) += contactProp###concrete##Detail(ledger);
    contactStockOrderLedger (ledger) += contactProp###stock###concrete##Detail(ledger);    
END
META implementSaleOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

//---------------------------------------------- Макросы для имплементаций Покупка-------------------------------------//

META implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTimeOrderLedger (ledger) += dateTimeProp###concrete##Detail(ledger);
    isPostedOrderLedger (ledger) += isPosted###concrete##Detail(ledger);
    isClosedOrderLedger (ledger) += isClosed###concrete##Detail(ledger);
    skuOrderLedger (ledger) += skuProp###concrete##Detail(ledger);
    batchOrderLedger (ledger) += batch###concrete##Detail(ledger);
    stockOrderLedger (ledger) += stockProp###concrete##Detail(ledger);
    descriptionOrderLedger (ledger) += description###concrete##Detail(ledger);
    quantityOrderLedger (ledger) += quantity###concrete##Detail(ledger);
    isPurchaseOrderLedger (ledger) += ledger IS concrete##Detail;
    contactOrderLedger (ledger) += contactProp###concrete##Detail(ledger);
    contactStockOrderLedger (ledger) += contactProp###stock###concrete##Detail(ledger);
END
META implementPurchaseOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

// ----------------------- Расширение формы подбора товаров (диалоговой) --------------------- //

META defineDialogSkuReserve (form)

    form###SaleReserve 'Резерв (продажи)' (sku) = currentReserveSaleSkuStock(sku, form###stock());
    form###PurchaseReserve 'Резерв (закупки)' (sku) = currentReservePurchaseSkuStock(sku, form###stock());

    EXTEND FORM form
        PROPERTIES(s) READONLY  AFTER form###balance(s) SHOWIF form###stock() form###PurchaseReserve, form###SaleReserve
    ;
END

@defineDialogSkuReserve(dialogSku);

// ----------------------- Расширение формы текущих остатков --------------------- //

//--Sku
EXTEND FORM currentBalanceSkuStock
    PROPERTIES(s, st) currentReserveSkuStock READONLY AFTER currentBalanceSkuStock(s,st)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                  quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(l)==st,
            skuOrderLedger(l)==s

    FILTERS isPostedOrderLedger(l) AND NOT isClosedOrderLedger(l) AND isPurchaseOrderLedger(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                   quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(ll)==st,
            skuOrderLedger(ll)==s

    FILTERS isPostedOrderLedger(ll) AND NOT isClosedOrderLedger(ll) AND NOT isPurchaseOrderLedger(ll)

;
EXTEND DESIGN currentBalanceSkuStock {

    ledger.box {
        ADD l.box {caption = 'Резерв (закупки)';}
        ADD ll.box {caption = 'Резерв (продажи)';}
    }
}

//--Batch
EXTEND FORM currentBalanceBatchStock
    PROPERTIES(bt, st) currentReserveBatchStock READONLY AFTER currentBalanceBatchStock(bt,st)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                  quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(l)==st,
            batchOrderLedger(l)==bt

    FILTERS isPostedOrderLedger(l) AND NOT isClosedOrderLedger(l) AND isPurchaseOrderLedger(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                   quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(ll)==st,
            batchOrderLedger(ll)==bt

    FILTERS isPostedOrderLedger(ll) AND NOT isClosedOrderLedger(ll) AND NOT isPurchaseOrderLedger(ll)

;
EXTEND DESIGN currentBalanceBatchStock {

    ledger.box {
        ADD l.box {caption = 'Резерв (закупки)';}
        ADD ll.box {caption = 'Резерв (продажи)';}
    }
}




// ----------------------- Расширение формы текущих остатков на дату --------------------- //

//-- Sku
EXTEND FORM balanceSkuStock
    PROPERTIES(s, st, t) reserveASkuStockDateTime READONLY AFTER balanceASkuStockDateTime(s,st,t)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                  quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(l)==st,
            skuOrderLedger(l)==s,
            dateTimeOrderLedger(l) <= t

    FILTERS isPostedOrderLedger(l) AND NOT isClosedOrderLedger(l) AND isPurchaseOrderLedger(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                   quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(ll)==st,
            skuOrderLedger(ll)==s,
            dateTimeOrderLedger(l) <= t

    FILTERS isPostedOrderLedger(ll) AND NOT isClosedOrderLedger(ll) AND NOT isPurchaseOrderLedger(ll)

;
EXTEND DESIGN balanceSkuStock {

    ledger.box {
        ADD l.box {caption = 'Резерв (закупки)';}
        ADD ll.box {caption = 'Резерв (продажи)';}
    }
}

//-- Batch
EXTEND FORM balanceBatchStock
    PROPERTIES(bt, st, t) reserveABatchStockDateTime READONLY AFTER balanceBBatchStockDateTime(bt,st,t)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                  quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(l)==st,
            batchOrderLedger(l)==bt,
            dateTimeOrderLedger(l) <= t

    FILTERS isPostedOrderLedger(l) AND NOT isClosedOrderLedger(l) AND isPurchaseOrderLedger(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY dateOrderLedger, dateTimeOrderLedger, nameContactOrderLedger, nameContactStockOrderLedger, descriptionOrderLedger,
                   quantityOrderLedger, toShipQuantityOrderLedger

    FILTERS stockOrderLedger(ll)==st,
            batchOrderLedger(ll)==bt,
            dateTimeOrderLedger(l) <= t

    FILTERS isPostedOrderLedger(ll) AND NOT isClosedOrderLedger(ll) AND NOT isPurchaseOrderLedger(ll)

;
EXTEND DESIGN balanceBatchStock {

    ledger.box {
        ADD l.box {caption = 'Резерв (закупки)';}
        ADD ll.box {caption = 'Резерв (продажи)';}
    }
}

// ----------- Подбор (товар / один склад)---------------//

META extendFormDocumentSkuOrderLedger(object, form, concrete, stockProp)

    prevAvailableQuantitySku###object 'Доступное к-во' (sku, object)= prevAvailableQuantitySkuStockDateTime(sku, stockProp###object(object), dateTime###object(object));

    prevReserveBPurchaseSku###object 'Резерв закупка' (sku, object) = prevReserveBPurchaseSkuStockDateTime(sku, stockProp###object(object), dateTime###object(object));
    prevCurrentReservePurchaseSku###object 'Резерв закупка (всего)' (sku, object) = prevCurrentReservePurchaseSkuStock(sku, stockProp###object(object));

    prevReserveBSaleSku###object 'Резерв продажа' (sku, object) = prevReserveBSaleSkuStockDateTime(sku, stockProp###object(object), dateTime###object(object));
    prevCurrentReserveSaleSku###object 'Резерв продажа (всего)' (sku, object) = prevCurrentReserveSaleSkuStock(sku, stockProp###object(object));

    reviewReserveSku###object 'Резерв' (sku, object) = ACTION FORM orderSkuLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), sk = sku MODAL;

    EXTEND FORM form
        PROPERTIES BEFORE prevCurrentBalanceSku###object(ks, concrete) 
                   prevAvailableQuantitySku###object(ks, concrete) ON CHANGE reviewReserveSku###object(ks,concrete)

        PROPERTIES AFTER prevCurrentBalanceSku###object(ks, concrete)
                   prevReserveBPurchaseSku###object(ks, concrete) ON CHANGE reviewReserveSku###object(ks,concrete),
                   prevReserveBSaleSku###object(ks, concrete) ON CHANGE reviewReserveSku###object(ks,concrete),
                   prevCurrentReservePurchaseSku###object(ks,concrete) ON CHANGE reviewReserveSku###object(ks,concrete),
                   prevCurrentReserveSaleSku###object(ks,concrete) ON CHANGE reviewReserveSku###object(ks,concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantitySku###object(ks, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleSku###object(ks, concrete)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseSku###object(ks, concrete)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleSku###object(ks, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseSku###object(ks, concrete)) { background = #CCFFCC; }
    }
END

META extendFormDocumentSkuOrderLedgerAll(object, form, concrete)

    allAvailableSku###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Sku, ###object);
    changeAllAvailableSku###object = ACTION (sku, object) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableSku###object (sku,object) <- TRUE;
            requestedNumeric() <- prevAvailableQuantitySku###object(sku, object);
            changeQuantityValueSku###object(sku, object);
        } ELSE {
            allAvailableSku###object (sku,object) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueSku###object(sku, object);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantitySku###object(ks, concrete) allAvailableSku###object (ks,concrete) ON CHANGE changeAllAvailableSku###object(ks,concrete)
    ;
END

// ----------- Подбор (партия / один склад)---------------//

META extendFormDocumentBatchOrderLedger(object, form, concrete, stockProp)

    prevAvailableQuantityBatch###object 'Доступное к-во' (batch, object) = prevAvailableQuantityBatchStockDateTime(batch, stockProp###object(object), dateTime###object(object));

    prevReserveBPurchaseBatch###object 'Резерв закупка' (batch, object) = prevReserveBPurchaseBatchStockDateTime(batch, stockProp###object(object), dateTime###object(object));
    prevCurrentReservePurchaseBatch###object 'Резерв закупка (всего)' (batch, object) = prevCurrentReservePurchaseBatchStock(batch, stockProp###object(object));

    prevReserveBSaleBatch###object 'Резерв продажа' (batch, object) = prevReserveBSaleBatchStockDateTime(batch, stockProp###object(object), dateTime###object(object));
    prevCurrentReserveSaleBatch###object 'Резерв продажа (всего)' (batch, object) = prevCurrentReserveSaleBatchStock(batch, stockProp###object(object));

    reviewReserveBatch###object 'Резерв' (batch, object) = ACTION FORM orderBatchLedger OBJECTS t=dateTime###object(object), st=stockProp###object(object), bt = batch MODAL;

    EXTEND FORM form
        PROPERTIES BEFORE prevCurrentBalanceBatch###object(b, concrete) 
                   prevAvailableQuantityBatch###object(b, concrete) ON CHANGE reviewReserveBatch###object(b,concrete)

        PROPERTIES AFTER prevCurrentBalanceBatch###object(b, concrete)
                   prevReserveBPurchaseBatch###object(b, concrete) ON CHANGE reviewReserveBatch###object(b,concrete),
                   prevReserveBSaleBatch###object(b, concrete) ON CHANGE reviewReserveBatch###object(b,concrete),
                   prevCurrentReservePurchaseBatch###object(b,concrete) ON CHANGE reviewReserveBatch###object(b,concrete),
                   prevCurrentReserveSaleBatch###object(b,concrete) ON CHANGE reviewReserveBatch###object(b,concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantityBatch###object(b, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleBatch###object(b, concrete)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseBatch###object(b, concrete)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleBatch###object(b, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseBatch###object(b, concrete)) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchOrderLedgerAll(object, form, concrete)

    allAvailableBatch###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Batch, ###object);
    changeAllAvailableBatch###object= ACTION (batch, object) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableBatch###object (batch,object) <- TRUE;
            requestedNumeric() <- prevAvailableQuantityBatch###object(batch, object);
            changeQuantityValueBatch###object(batch, object);
        } ELSE {
            allAvailableBatch###object (batch,object) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueBatch###object(batch, object);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantityBatch###object(b, concrete) allAvailableBatch###object (b,concrete) ON CHANGE changeAllAvailableBatch###object(b,concrete)
    ;
END

// ----------- Подбор (товар / несколько складов)---------------//

META extendFormDocumentSkuStockOrderLedger(object, form, concrete)

    prevAvailableQuantitySkuStock###object 'Доступное к-во' (sku, stock, object) = prevAvailableQuantitySkuStockDateTime(sku, stock, shipmentDateTime###object(object));

    prevReserveBPurchaseSkuStock###object 'Резерв закупка' (sku, stock, object) = prevReserveBPurchaseSkuStockDateTime(sku, stock, shipmentDateTime###object(object));
    prevReserveBSaleSkuStock###object 'Резерв продажа' (sku, stock, object) = prevReserveBSaleSkuStockDateTime(sku, stock, shipmentDateTime###object(object));

    reviewReserveSkuStock###object 'Резерв' (sku,stock, object) = ACTION FORM orderSkuLedger OBJECTS t=shipmentDateTime###object(object), st=stock, sk = sku MODAL;

    EXTEND FORM form
        PROPERTIES BEFORE prevCurrentBalanceSkuStock(ks, st) 
                   prevAvailableQuantitySkuStock###object(ks, st, concrete) ON CHANGE reviewReserveSkuStock###object(ks,st,concrete)

        PROPERTIES AFTER prevCurrentBalanceSkuStock(ks, st)
                   prevReserveBPurchaseSkuStock###object(ks, st, concrete) ON CHANGE reviewReserveSkuStock###object(ks,st,concrete),
                   prevReserveBSaleSkuStock###object(ks, st, concrete) ON CHANGE reviewReserveSkuStock###object(ks,st,concrete),
                   prevCurrentReservePurchaseSkuStock(ks,st) ON CHANGE reviewReserveSkuStock###object(ks,st,concrete),
                   prevCurrentReserveSaleSkuStock(ks,st) ON CHANGE reviewReserveSkuStock###object(ks,st,concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantitySkuStock###object(ks, st, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleSkuStock(ks, st)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseSkuStock(ks, st)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleSkuStock###object(ks, st, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseSkuStock###object(ks, st, concrete)) { background = #CCFFCC; }
    }

END

META extendFormDocumentSkuStockOrderLedgerAll(object, form, concrete)

    allAvailableSku###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Sku, Stock);
    changeAllAvailableSku###object= ACTION (sku, object, stock) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableSku###object (sku,stock) <- TRUE;
            requestedNumeric() <- prevAvailableQuantitySkuStock###object(sku, stock, object);
            changeQuantityValueSku###object###Stock(sku, object, stock);
        } ELSE {
            allAvailableSku###object (sku,stock) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueSku###object###Stock(sku, object, stock);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantitySkuStock###object(ks, st, concrete) allAvailableSku###object (ks,st) ON CHANGE changeAllAvailableSku###object(ks,concrete,st)
    ;
END

// ----------- Подбор (партия / несколько складов)---------------//

META extendFormDocumentBatchStockOrderLedger(object, form, concrete)

    prevAvailableQuantityBatchStock###object 'Доступное к-во' (batch, stock, object) = prevAvailableQuantityBatchStockDateTime(batch, stock, shipmentDateTime###object(object));

    prevReserveBPurchaseBatchStock###object 'Резерв закупка' (batch, stock, object) = prevReserveBPurchaseBatchStockDateTime(batch, stock, shipmentDateTime###object(object));
    prevReserveBSaleBatchStock###object 'Резерв продажа' (batch, stock, object) = prevReserveBSaleBatchStockDateTime(batch, stock, shipmentDateTime###object(object));

    reviewReserveBatchStock###object 'Резерв' (batch, stock, object) = ACTION FORM orderBatchLedger OBJECTS t=shipmentDateTime###object(object), st=stock, bt = batch MODAL;

    EXTEND FORM form
        PROPERTIES BEFORE prevCurrentBalanceBatchStock(b, sto) 
                   prevAvailableQuantityBatchStock###object(b, sto, concrete) ON CHANGE reviewReserveBatchStock###object(b, sto, concrete)

        PROPERTIES AFTER prevCurrentBalanceBatchStock(b, sto)
                   prevReserveBPurchaseBatchStock###object(b, sto, concrete) ON CHANGE reviewReserveBatchStock###object(b, sto, concrete),
                   prevReserveBSaleBatchStock###object(b, sto, concrete) ON CHANGE reviewReserveBatchStock###object(b, sto, concrete),
                   prevCurrentReservePurchaseBatchStock(b, sto) ON CHANGE reviewReserveBatchStock###object(b, sto, concrete),
                   prevCurrentReserveSaleBatchStock(b, sto) ON CHANGE reviewReserveBatchStock###object(b, sto, concrete)
    ;
    EXTEND DESIGN form {
        PROPERTY(prevAvailableQuantityBatchStock###object(b, sto, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSaleBatchStock(b, sto)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchaseBatchStock(b, sto)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSaleBatchStock###object(b, sto, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchaseBatchStock###object(b, sto, concrete)) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchStockOrderLedgerAll(object, form, concrete)

    allAvailableBatch###object 'Доступное кол-во' = DATA SESSION BOOLEAN (Batch, Stock);
    changeAllAvailableBatch###object = ACTION (batch, object, stock) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            requestedNumeric() <- NULL;
            allAvailableBatch###object (batch,stock) <- TRUE;
            requestedNumeric() <- prevAvailableQuantityBatchStock###object(batch, stock, object);
            changeQuantityValueBatch###object###Stock(batch, object, stock);
        } ELSE {
            allAvailableBatch###object (batch,stock) <- NULL;
            requestedNumeric() <- NULL;
            changeQuantityValueBatch###object###Stock(batch, object, stock);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantityBatchStock###object(b, sto, concrete) allAvailableBatch###object (b, sto) ON CHANGE changeAllAvailableBatch###object(b, concrete, sto)
    ;
END
