MODULE ScheduleOrderPriceList;

REQUIRE ScheduleOrder, PriceList;

NAMESPACE  ScheduleOrder;

//--
META addScheduleOrder(filter, cap, filterStock) 
    countPriceLists 'Поставщики, у которых есть действующие прайсы' (filter, stock, date) = GROUP SUM 1 
        IF is###filter(filterStock(PriceList priceList)) AND isPosted(priceList) AND fromDate(priceList) <= (DATE date AS DATE) 
        AND NOT (toDate(priceList) < (date AS DATE)) AND in(priceList, Stock stock)
            BY filterStock(priceList), stock, date;
        
    countScheduleOrders 'Поставщики, у которых есть действующие и будующие графики заказов' (filter, stock, date) = GROUP SUM 1 IF 
        startDate(ScheduleOrder order) AND NOT (endDate(order) < (DATE date AS DATE)) AND in(order, Stock stock)
         BY filter(order), stock, date;  
          
    filterLegalEntity 'Поставщики, у которых есть прайсы и нет графика заказов' (LegalEntity filter, Stock stock, DATE date) = countPriceLists  (filter, stock, date) IF NOT countScheduleOrders (filter, stock, date);
    filterLegalEntity 'Поставщики, у которых есть прайсы и нет графика заказов' (filter, date)= GROUP SUM 1 IF filterLegalEntity(LegalEntity filter, Stock stock, DATE date) BY filter, date;
    
    addScheduleOrder###filter 'Добавить'(LegalEntity filter, Stock stock) = ACTION  {
        FOR ADDOBJ o = ScheduleOrder DO {
            filter(o) <- filter;
            filter##Stock(o) <- default###filter##Stock(currentUser(), filter(o))
                WHERE countAccess###filter##Stock (currentUser(), filter(o)) == 1;
                                
            customer(o) <- legalEntity(stock);
//            customerStockScheduleOrder(o) <- stock;   
            dataIn(o,stock) <- TRUE;                    
            
            FORM scheduleOrder OBJECTS s=o MANAGESESSION DOCKEDMODAL;
            IF NOT formResult() == FormResult.ok THEN {
                DELETE o;
            }
        };
    } TOOLBAR IMAGE 'add.png';
    
    EXTEND FORM scheduleOrderDashboard
        
        OBJECTS l=LegalEntity
        PROPERTIES(l) READONLY name
        FILTERS is###filter(l)
        FILTERS filterLegalEntity(l,d)
        
        OBJECTS st=Stock
        PROPERTIES(st) READONLY name               
        PROPERTIES(l,st) addScheduleOrder###filter
        
        FILTERS filterLegalEntity(l,st,d)
    ;
    
    DESIGN scheduleOrderDashboard {
    
        NEW tabContainer AFTER header {
            fill = 1;
            type = TABBED;
            MOVE s.box;
            NEW legalEntity {
                caption = cap###', для которых есть прайс, но нет графика';
                fill = 1;
                type = CONTAINERH;
                MOVE l.box { caption = cap;}
                MOVE st.box;
            }
        }
    }
    @extendFormFilterLegalEntityAccess(l, scheduleOrderDashboard, filter);
    @extendFormFilterStockAccess(st, scheduleOrderDashboard, filterStock);
END
