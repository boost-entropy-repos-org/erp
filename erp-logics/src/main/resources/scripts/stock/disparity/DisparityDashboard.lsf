MODULE DisparityDashboard;

REQUIRE DisparityOperation, Dashboard, TaxItem;

NAMESPACE Disparity;

//АРМ уценки
disparityQuantity 'Кол-во' = DATA LOCAL NUMERIC[14,3] (Item, Stock);
disparityPrice 'Цена' = DATA LOCAL NUMERIC[18,4] (Item, Stock);

backgroundDisparityQuantity (Item item, Stock stock) = RGB(212,255,212) IF item IS Item AND stock IS Stock;

disparityQuantity = GROUP SUM disparityQuantity(Item item, Stock stock) BY stock;

overCreateItemStock = ABSTRACT LIST (Item, Stock, DisparityDetail);

createDisparity 'Создать уценку'(Stock stock, Operation operation) = {
    NEWSESSION NESTED (disparityQuantity[Item,Stock], disparityPrice[Item,Stock]) {
        NEW d = Disparity {
            operation(d) <- operation;
            stock(d) <- stock;
            date(d) <- currentDate();
            time(d) <- currentTime();
            
            FOR disparityQuantity(Item item, stock) NEW dd = DisparityDetail DO {
                disparity(dd) <- d;
                sku(dd) <- item;
                batch(dd) <- defaultBatch(item, stock);
                quantity(dd) <- disparityQuantity(item, stock); 
                NEW i = Item {
                    copyDisparityData(item, i);
                    inputSku(dd) <- i;
                }  
                inputPrice(dd) <- disparityPrice(item, stock);
                overCreateItemStock (item, stock, dd);
            }
            
            SHOW disparity OBJECTS dis=d MANAGESESSION DOCKED NOCANCEL;
        }     
    }
} TOOLBAR;

FORM disparityItemItemDashboard 'Уценки'
    OBJECTS dt = DATE PANEL
    PROPERTIES (dt) VALUE 
    
    OBJECTS s = Stock PANEL
    PROPERTIES(s) name SELECTOR
    FILTERS isCompany(s)
    
    OBJECTS o = Operation PANEL
    PROPERTIES (o) name SELECTOR
   
    OBJECTS i=Item
    PROPERTIES (i) READONLY idBarcode, name
    PROPERTIES(i, s) READONLY currentBalance, averagePrice, currentSum, 
                     averageCostPriceBatch
    PROPERTIES (i) valueVAT                
    PROPERTIES(i, s) disparityQuantity BACKGROUND backgroundDisparityQuantity(i, s),
                     disparityPrice BACKGROUND backgroundDisparityQuantity(i, s)
    ORDER BY name(i)
    FILTERS currentBalance(i, s) AND NOT disparityItem(i)
    FILTERGROUP baseFilter
        FILTER 'Позиции с уценкой'countItemDisparity(i) 'F9' 
    
    PROPERTIES (s, o) createDisparity TODRAW i SHOWIF disparityQuantity(s)
        
    OBJECTS di=Item
    PROPERTIES (di) READONLY idBarcode, name
    PROPERTIES (di, s) READONLY currentBalance, averageCostPriceBatch, averagePrice, currentSum  
    FILTERS disparityItem(di)==i, currentBalance(di, s)  
       
    OBJECTS dis = Disparity
    PROPERTIES (dis) READONLY isClosed, isPosted, number, series, date, time, nameStock
    PROPERTIES(dis)  READONLY countDisparityDetail, quantityDisparityDetail, sumDisparityDetail,
                              inputQuantityDisparityDetail, inputSumDisparityDetail, note

    PROPERTIES (dis) NEWSESSION NEW, EDIT SHOWIF isOpened(dis)
    PROPERTIES(dis)  close SHOWIF isOpened(dis), open SHOWIF isClosed(dis)     
    
    PROPERTIES (dis) NEWSESSION deleted=DELETE SHOWIF isOpened(dis)
    FILTERGROUP bdisparityFilter
        FILTER 'Уценки на дату' date(dis)==dt 'F8' DEFAULT
;

DESIGN disparityItemItemDashboard {
    main{
        NEW top {
            type = CONTAINERH;
            MOVE BOX(dt);
            MOVE BOX(s);
            MOVE BOX(o);
        }    
        NEW balanceContainer {
            type = CONTAINERV;
            fill = 1;
            caption = 'Товары';
            MOVE BOX(i);
        }
        NEW disparityContainer {
            fill = 1;
            type = TABBED;
            NEW disparityItemContainer {
                type = CONTAINERV;
                fill = 1;
                caption = 'Уцененные товары';
                MOVE BOX(di);
            }
            NEW disparityDocContainer {
                type = CONTAINERV;
                fill = 1;
                caption = 'Документы уценки';
                MOVE BOX(dis);      
            }
        }
        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    dashboardNavigator {
        NEW disparityDashboard 'Уценка' {
            ADD disparityItemItemDashboard;
        }    
    }
}