MODULE DisparityOperation;

REQUIRE Operation, Disparity;

NAMESPACE Disparity;

@defineOperation('(изменение сортности)');
@defineOperationRole();
@extendFormFilterRole(o, dialogOperations);
//@extendFormFilterRole(o, operations);     //-- пока не нужен

DESIGN operation {
    tabContainer{
        NEW createContainer {
            caption = 'Производные документы';
        }
        NEW showContainer {
            caption = 'Отображение свойств';
        }
    }
}

NAVIGATOR {
    disparityNavigator {
        ADD operations;
    }
}

//------------------------------------------ Опеределение операции для disparity ------------------------------------//

operation = DATA Operation (Disparity) MATERIALIZED;
nameOperation 'Операция' = name(operation(Disparity disparity));

operation 'Операция' (DisparityDetail disparityDetail) = operation(disparity(disparityDetail));

EXTEND FORM disparity
    PROPERTIES(dis) nameOperation
;

DESIGN disparity{
    GROUP(dis,documentPrm){
        MOVE PROPERTY(nameOperation(dis)) BEFORE PROPERTY(note(dis));
    }
}
EXTEND FORM disparities
    PROPERTIES(dis) READONLY nameOperation AFTER nameStock(dis)
;

useDisparityItemDisparity 'Частичная уценка' = DATA BOOLEAN (Operation);

CONSTRAINT useDisparityItemDisparity(operation(DisparityDetail detail))  
    AND inputSku(detail) AND sku(detail) 
    AND NOT (disparityItem(inputSku(detail))==sku(detail))
    CHECKED BY inputSku[DisparityDetail] MESSAGE 'Выбран не уцененный товар';   
    
EXTEND FORM operation
    PROPERTIES (o) useDisparityItemDisparity 
;

DESIGN operation {
    propertyContainer {
        MOVE PROPERTY(useDisparityItemDisparity(o));
    }
}

@defineDocumentOperationConstraint(disparity, 'изменения сорткноси', Disparity);
@extendFormFilterRoleAccess(disparity, dis, disparities);

operation[StockDocumentLedger] (Disparity ledger) += operation(ledger);
