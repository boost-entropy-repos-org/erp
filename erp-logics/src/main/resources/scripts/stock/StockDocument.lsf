MODULE StockDocument;

REQUIRE System, EmployeeStock, Document, Utils, Operation;

CLASS ABSTRACT StockDocumentLedger 'Учетный документ';
TABLE stockDocumentLedger (StockDocumentLedger) FULL;

CLASS ABSTRACT IncStockDocumentLedger 'Учетный документ (приход)' : StockDocumentLedger;
CLASS ABSTRACT OutStockDocumentLedger 'Учетный документ (расход)' : StockDocumentLedger;

type 'Тип процесса' (ledger) = ABSTRACT VARSTRING[50] (StockDocumentLedger) PERSISTENT;

overOrder  (ledger) = ABSTRACT INTEGER (StockDocumentLedger);
order 'Порядок' = OVERRIDE 1000000 IF StockDocumentLedger l IS StockDocumentLedger, overOrder(l);

edit 'Редактировать' = ACTION ABSTRACT LIST (StockDocumentLedger) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;
close 'Закрыть' = ACTION ABSTRACT LIST (StockDocumentLedger) TOOLBAR;

dateTime 'Дата/время' (ledger) = ABSTRACT DATETIME (StockDocumentLedger) PERSISTENT INDEXED;
date 'Дата' (StockDocumentLedger ledger) = toDate(dateTime(ledger)) PERSISTENT INDEXED;

isPosted 'Проведен' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
isClosed 'Закрыт' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
isOpened 'Не закрыт' (StockDocumentLedger ledger) = ledger IS StockDocumentLedger AND NOT isClosed(ledger);

stock (ledger) = ABSTRACT Stock (StockDocumentLedger) PERSISTENT INDEXED;
nameStock 'Склад' (StockDocumentLedger ledger) = name(stock(ledger));

number 'Номер документа' (ledger) = ABSTRACT VARSTRING[28] (StockDocumentLedger) PERSISTENT;
series 'Серия документа' (ledger) = ABSTRACT STRING[2] (StockDocumentLedger) PERSISTENT;
seriesNumber 'Серия/номер документа' (StockDocumentLedger ledger) = CONCAT '', series(ledger), number(ledger) MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20; 

legalEntity 'Контрагент' (ledger) = ABSTRACT LegalEntity (StockDocumentLedger) PERSISTENT;
nameLegalEntity 'Контрагент' (StockDocumentLedger ledger) = name(legalEntity(ledger));

legalEntityStock 'Склад контрагента' (ledger) = ABSTRACT Stock (StockDocumentLedger) PERSISTENT;
nameLegalEntityStock 'Склад контрагента' = name(legalEntityStock(StockDocumentLedger ledger));

operation 'Операция' (ledger) = ABSTRACT Operation(StockDocumentLedger) PERSISTENT;
isReturn 'Возврат' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;

captionStockDocument 'Название операции в товарном отчете (закупка)' = ABSTRACT VARISTRING[100] (Operation);
returnCaptionStockDocument 'Название операции в товарном отчете (возврат)' = ABSTRACT VARISTRING[100] (Operation);

nameOperation 'Операция' (StockDocumentLedger ledger) = IF isReturn(ledger) 
    THEN OVERRIDE overName(operation(ledger)), returnCaptionStockDocument(operation(ledger))
    ELSE OVERRIDE name(operation(ledger)), captionStockDocument(operation(ledger));

description 'Название документа' (ledger) = ABSTRACT VARSTRING[200] (StockDocumentLedger) PERSISTENT;

skip 'Не проводить' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
active (StockDocumentLedger ledger) = isPosted(ledger) AND NOT skip(ledger);

GROUP ledgerItem 'Суммы по товару' : public;
sumItem 'Сумма прихода, товар' (ledger) = ABSTRACT NUMERIC[18,4] (IncStockDocumentLedger) PERSISTENT IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;
sumItem 'Сумма расхода, товар' (ledger) = ABSTRACT NUMERIC[18,4] (OutStockDocumentLedger) PERSISTENT IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;
sumItem 'Сумма, товар' (StockDocumentLedger ledger) = MULTI sumItem[IncStockDocumentLedger](ledger), -sumItem[OutStockDocumentLedger](ledger) PERSISTENT;

GROUP ledgerContainer 'Суммы по таре' : public;
sumContainer 'Сумма прихода, тара' (ledger) = ABSTRACT NUMERIC[18,4] (IncStockDocumentLedger) PERSISTENT IN ledgerContainer;
sumContainer 'Сумма расхода, тара' (ledger) = ABSTRACT NUMERIC[18,4] (OutStockDocumentLedger) PERSISTENT IN ledgerContainer;
sumContainer 'Сумма, тара' (StockDocumentLedger ledger) = MULTI sumContainer[IncStockDocumentLedger](ledger), -sumContainer[OutStockDocumentLedger](ledger) PERSISTENT;

GROUP ledger 'Суммы (всего)' : public;
sum 'Сумма прихода' (IncStockDocumentLedger ledger) = sumItem(ledger)(+) sumContainer(ledger) PERSISTENT IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;
sum 'Сумма расхода' (OutStockDocumentLedger ledger) = sumItem(ledger)(+) sumContainer(ledger) PERSISTENT IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;
sum 'Сумма' (StockDocumentLedger ledger) = MULTI sum[IncStockDocumentLedger](ledger), -sum[OutStockDocumentLedger](ledger) PERSISTENT;

allowedEdit (StockDocumentLedger ledger) = NOT isClosed(ledger) OR allowedEditClosedDocuments(currentUser());

// -------------------------------------- Агрегированные суммы за интервал --------------------------------------------- //

countIncStockDocumentInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF IncStockDocumentLedger incStockDocumentLedger IS IncStockDocumentLedger AND active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
            BY stock(incStockDocumentLedger), dtFrom, dtTo IN ledger;

countOutStockDocumentInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF OutStockDocumentLedger outStockDocumentLedger IS OutStockDocumentLedger AND active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
            BY stock(outStockDocumentLedger), dtFrom, dtTo IN ledger;


sumItemIncStockDocumentInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItem(IncStockDocumentLedger incStockDocumentLedger) IF active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
            BY stock(incStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemOutStockDocumentInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItem(OutStockDocumentLedger outStockDocumentLedger) IF active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
            BY stock(outStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;


sumContainerIncStockDocumentInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainer(IncStockDocumentLedger incStockDocumentLedger) IF active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
            BY stock(incStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

sumContainerOutStockDocumentInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainer(OutStockDocumentLedger outStockDocumentLedger) IF active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
            BY stock(outStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

// -------------------------------------- Суммы по операциям за интервал --------------------------------------------- //

countIncStockDocumentInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo, operation)=
    GROUP SUM 1 IF IncStockDocumentLedger incStockDocumentLedger IS IncStockDocumentLedger AND active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
            BY stock(incStockDocumentLedger), dtFrom, dtTo, operation(incStockDocumentLedger) IN ledger;

countOutStockDocumentInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo, operation)=
    GROUP SUM 1 IF OutStockDocumentLedger outStockDocumentLedger IS OutStockDocumentLedger AND active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
            BY stock(outStockDocumentLedger), dtFrom, dtTo, operation(outStockDocumentLedger) IN ledger;


sumItemIncStockDocumentInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumItem(IncStockDocumentLedger incStockDocumentLedger) IF active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
            BY stock(incStockDocumentLedger), dtFrom, dtTo, operation(incStockDocumentLedger) IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemOutStockDocumentInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumItem(OutStockDocumentLedger outStockDocumentLedger) IF active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
            BY stock(outStockDocumentLedger), dtFrom, dtTo, operation(outStockDocumentLedger) IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;


sumContainerIncStockDocumentInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumContainer(IncStockDocumentLedger incStockDocumentLedger) IF active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
            BY stock(incStockDocumentLedger), dtFrom, dtTo, operation(incStockDocumentLedger) IN ledgerContainer;

sumContainerOutStockDocumentInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumContainer(OutStockDocumentLedger outStockDocumentLedger) IF active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
            BY stock(outStockDocumentLedger), dtFrom, dtTo, operation(outStockDocumentLedger) IN ledgerContainer;
            
//-- Без операции            
countNotOperationIncStockDocumentInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF IncStockDocumentLedger incStockDocumentLedger IS IncStockDocumentLedger AND active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
        AND NOT operation(incStockDocumentLedger)
            BY stock(incStockDocumentLedger), dtFrom, dtTo  IN ledger;

countNotOperationOutStockDocumentInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF OutStockDocumentLedger outStockDocumentLedger IS OutStockDocumentLedger AND active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
        AND NOT operation(outStockDocumentLedger)
            BY stock(outStockDocumentLedger), dtFrom, dtTo IN ledger;


sumItemNotOperationIncStockDocumentInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItem(IncStockDocumentLedger incStockDocumentLedger) IF active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
        AND NOT operation(incStockDocumentLedger)        
            BY stock(incStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemNotOperationOutStockDocumentInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItem(OutStockDocumentLedger outStockDocumentLedger) IF active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
        AND NOT operation(outStockDocumentLedger)
            BY stock(outStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;


sumContainerNotOperationIncStockDocumentInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainer(IncStockDocumentLedger incStockDocumentLedger) IF active(incStockDocumentLedger)
        AND date(incStockDocumentLedger) >= DATE dtFrom AND date(incStockDocumentLedger) <= DATE dtTo
        AND NOT operation(incStockDocumentLedger)        
            BY stock(incStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

sumContainerNotOperationOutStockDocumentInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainer(OutStockDocumentLedger outStockDocumentLedger) IF active(outStockDocumentLedger)
        AND date(outStockDocumentLedger) >= DATE dtFrom AND date(outStockDocumentLedger) <= DATE dtTo
        AND NOT operation(outStockDocumentLedger)
            BY stock(outStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;
// -------------------------------------- Остатки по суммам --------------------------------------------- //

currentSumDocumentLedger 'Текущий остаток по документам' (stock) = GROUP SUM sum (StockDocumentLedger ledger) IF active(ledger)
                                                                                           BY stock(ledger);

sumAccountBDocumentLedger 'Остаток на начало' (Stock stock, DATETIME dateTime) = (currentSumDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                          [= GROUP SUM sum (StockDocumentLedger ledger) IF dateTime(ledger) >= DATETIME dateTime AND active(ledger)
                                                                                 BY stock(ledger), dateTime](stock, dateTime);

sumAccountADocumentLedger 'Остаток на конец' (Stock stock, DATETIME dateTime) = (currentSumDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                         [= GROUP SUM sum (StockDocumentLedger ledger) IF dateTime(ledger) > DATETIME dateTime AND active(ledger)
                                                                                BY stock(ledger), dateTime](stock, dateTime);

sumAccountBDocumentLedger 'Остаток на начало' (Stock stock, DATE date) = (currentSumDocumentLedger(stock) IF date IS DATE) (-)
                                                                  [= GROUP SUM sum (StockDocumentLedger ledger) IF date(ledger) >= DATE date AND active(ledger)
                                                                         BY stock(ledger), date](stock, date) IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumAccountADocumentLedger 'Остаток на конец' (Stock stock, DATE date) = (currentSumDocumentLedger(stock) IF date IS DATE) (-)
                                                                 [= GROUP SUM sum (StockDocumentLedger ledger) IF date(ledger) > DATE date AND active(ledger)
                                                                        BY stock(ledger), date](stock, date) IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;

// -------------------------------------- Остатки по суммам (товар) --------------------------------------------- //

currentSumItemDocumentLedger 'Текущий остаток по документам, товар' (stock) = GROUP SUM sumItem (StockDocumentLedger ledger) IF active(ledger)
                                                                                           BY stock(ledger);

sumItemAccountBDocumentLedger 'Остаток на начало, товар' (Stock stock, DATETIME dateTime) = (currentSumItemDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                     [= GROUP SUM sumItem (StockDocumentLedger ledger) IF dateTime(ledger) >= DATETIME dateTime AND active(ledger)
                                                                                            BY stock(ledger), dateTime](stock, dateTime);

sumItemAccountADocumentLedger 'Остаток на конец, товар' (Stock stock, DATETIME dateTime) = (currentSumItemDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                    [= GROUP SUM sumItem (StockDocumentLedger ledger) IF dateTime(ledger) > DATETIME dateTime AND active(ledger)
                                                                                           BY stock(ledger), dateTime](stock, dateTime);

sumItemAccountBDocumentLedger 'Остаток на начало, товар' (Stock stock, DATE date) = (currentSumItemDocumentLedger(stock) IF date IS DATE) (-)
                                                                             [= GROUP SUM sumItem (StockDocumentLedger ledger) IF date(ledger) >= DATE date AND active(ledger)
                                                                                    BY stock(ledger), date](stock, date) IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemAccountADocumentLedger 'Остаток на конец, товар' (Stock stock, DATE date) = (currentSumItemDocumentLedger(stock) IF date IS DATE) (-)
                                                                            [= GROUP SUM sumItem (StockDocumentLedger ledger) IF date(ledger) > DATE date AND active(ledger)
                                                                                   BY stock(ledger), date](stock, date) IN ledgerItem  MINCHARWIDTH 15 PREFCHARWIDTH 15;

prevSumItemAccountBDocumentLedger 'Остаток на начало, товар' (Stock stock, DATETIME dateTime) = PREV(sumItemAccountBDocumentLedger(stock, dateTime));

// -------------------------------------- Остатки по суммам (тара) --------------------------------------------- //

currentSumContainerDocumentLedger 'Текущий остаток по документам, тара' (stock) = GROUP SUM sumContainer (StockDocumentLedger ledger) IF active(ledger)
                                                                                           BY stock(ledger);
sumContainerAccountBDocumentLedger 'Остаток на начало, тара' (Stock stock, DATETIME dateTime) = (currentSumContainerDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                         [= GROUP SUM sumContainer (StockDocumentLedger ledger) IF dateTime(ledger) >= DATETIME dateTime AND active(ledger)
                                                                                                BY stock(ledger), dateTime](stock, dateTime);

sumContainerAccountADocumentLedger 'Остаток на конец, тара' (Stock stock, DATETIME dateTime) = (currentSumContainerDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                        [= GROUP SUM sumContainer (StockDocumentLedger ledger) IF dateTime(ledger) > DATETIME dateTime AND active(ledger)
                                                                                               BY stock(ledger), dateTime](stock, dateTime);

sumContainerAccountBDocumentLedger 'Остаток на начало, тара' (Stock stock, DATE date) = (currentSumContainerDocumentLedger(stock) IF date IS DATE) (-)
                                                                                 [= GROUP SUM sumContainer (StockDocumentLedger ledger) IF date(ledger) >= DATE date AND active(ledger)
                                                                                        BY stock(ledger), date](stock, date) IN ledgerContainer;

sumContainerAccountADocumentLedger 'Остаток на конец, тара' (Stock stock, DATE date) = (currentSumContainerDocumentLedger(stock) IF date IS DATE) (-)
                                                                                [= GROUP SUM sumContainer (StockDocumentLedger ledger) IF date(ledger) > DATE date AND active(ledger)
                                                                                       BY stock(ledger), date](stock, date) IN ledgerContainer;

prevSumContainerAccountBDocumentLedger (Stock stock, DATETIME dateTime) = PREV(sumContainerAccountBDocumentLedger(stock, dateTime));

// -------------------------------------- Подитоги --------------------------------------------- //

subtotalItemIncStockDocumentInterval 'Итого с остатком, товар' (Stock stock, DATE dtFrom, DATE dtTo) =
    sumItemAccountBDocumentLedger(stock, dtFrom) (+)
     sumItemIncStockDocumentInterval(stock, dtFrom, dtTo) IN ledgerItem  MINCHARWIDTH 15 PREFCHARWIDTH 15;

subtotalContainerIncStockDocumentInterval 'Итого с остатком, тара' (Stock stock, DATE dtFrom, DATE dtTo) =
    sumContainerAccountBDocumentLedger(stock, dtFrom) (+)
     sumContainerIncStockDocumentInterval(stock, dtFrom, dtTo) IN ledgerContainer MINCHARWIDTH 15 PREFCHARWIDTH 15;


// ------------------------------------------- Ответственные лица --------------------------------------------- //

@defineHistorizableCustom(responsiblePerson, 'Материально ответственное лицо', Employee, name, customUser, stock, nameStock, responsibility );
isResponsiblePerson 'Материально ответственное лицо' = DATA BOOLEAN (Stock, Employee);
isOverResponsiblePerson 'Материально ответственное лицо' = isResponsiblePerson(Stock st,Employee e) OR responsiblePerson(st) == e;
orderResponsiblePerson 'Порядок отображения в печатной форме' = DATA INTEGER (Stock, Employee);

namePositionResponsiblies 'МОЛ(ы)' (Stock stock) = CONCAT ', ', positionName(responsiblePerson(stock)),
     [ = GROUP CONCAT positionName(Employee employee) IF isResponsiblePerson(Stock stock, employee), ', '
     BY stock
     ORDER employee](stock)
     MINCHARWIDTH 50 PREFCHARWIDTH 50;

shortNamePositionResponsiblies 'МОЛ(ы)' (Stock stock) = CONCAT ', ', positionShortName(responsiblePerson(stock)),
    [ = GROUP CONCAT positionShortName(Employee employee) IF isResponsiblePerson(Stock stock, employee), ', '
    BY stock
    ORDER employee](stock)
    MINCHARWIDTH 50 PREFCHARWIDTH 50;

nameResponsiblies 'МОЛ(ы)' (Stock stock) = CONCAT ', ', name[Contact](responsiblePerson(stock)),
     [ = GROUP CONCAT name[Contact](Employee employee) IF isResponsiblePerson(Stock stock, employee), ', '
     BY stock
     ORDER employee](stock)
     MINCHARWIDTH 50 PREFCHARWIDTH 50;
     
shortNameResponsiblies 'МОЛ(ы)' (Stock stock) = CONCAT ', ', shortName(responsiblePerson(stock)),
     [ = GROUP CONCAT shortName(Employee employee) IF isResponsiblePerson(Stock stock, employee), ', '
     BY stock
     ORDER employee](stock)
     MINCHARWIDTH 50 PREFCHARWIDTH 50;  

// Должность ФИО
positionNameResponsiblePerson 'Материально ответственное лицо' (Stock stock) = positionName(responsiblePerson(stock)) IN responsibility; 
namePositionResponsiblePerson 'Материально ответственное лицо (должность)'= namePosition(responsiblePerson(Stock stock));
CONSTRAINT dataResponsiblePerson(Stock stock, DATE date) AND NOT in(stock, dataResponsiblePerson(stock, date))
    CHECKED BY dataResponsiblePerson[Stock,DATE] MESSAGE 'МОЛ не сотрудник отдела';

@defineHistorizableCustom(booker, 'Бухгалтер, принимающий товарный отчет', Employee, name, customUser, stock, nameStock, responsibility );
// Должность ФИО
positionNameBooker 'Бухгалтер, принимающий товарный отчет' (Stock stock) = positionName(booker(stock)) IN responsibility; 
namePositionBooker 'Бухгалтер, принимающий товарный отчет (должность)'= namePosition(booker(Stock stock));
CONSTRAINT dataBooker(Stock stock, DATE date) AND NOT in(stock, dataBooker(stock, date))
    CHECKED BY dataBooker[Stock,DATE] MESSAGE 'Бухгалтер не сотрудник отдела';

@defineHistorizableCustom(controller, 'Кто проверяет товарный отчет', Employee, name, customUser, stock, nameStock, responsibility );

CONSTRAINT dataController(Stock stock, DATE date) AND NOT in(stock, dataController(stock, date))
    CHECKED BY dataController[Stock,DATE] MESSAGE 'Проверяющий не сотрудник отдела';
// Должность ФИО
positionNameController 'Кто проверяет товарный отчет' (Stock stock) = positionName(controller(stock)) IN responsibility; 
namePositionController 'Кто проверяет товарный отчет (должность)'= namePosition(booker(Stock stock));

@defineHistorizableCustom(headPerson, 'Заведующий', Employee, name, customUser, stock, nameStock, responsibility );
// Должность ФИО
positionNameHeader 'Заведующий' (Stock stock) = positionName(headPerson(stock)) IN responsibility; 
namePositionHeader 'Заведующий'= namePosition(headPerson(Stock stock));
CONSTRAINT dataHeadPerson(Stock stock, DATE date) AND NOT in(stock, dataHeadPerson(stock, date))
    CHECKED BY dataHeadPerson[Stock,DATE] MESSAGE 'Заведующий не сотрудник отдела';
    
countStockDocumentInterval 'Количество документов' (Stock ds, DATE dtFrom, DATE dtTo)=  countIncStockDocumentInterval(ds, dtFrom, dtTo) (+) 
                                                                                            countOutStockDocumentInterval(ds, dtFrom, dtTo);

// -------------------------------------- Формы --------------------------------------------- //

FORM sumStockDocumentLedger 'Товарный отчет'
    OBJECTS params = (dtFrom = DATE, dtTo = DATE) PANEL,
            ds = Stock PANEL
    PROPERTIES objFrom = OBJVALUE(dtFrom), objTo = OBJVALUE(dtTo)
    PROPERTIES(ds) SELECTOR name, nameLegalEntity

    PROPERTIES sumAccountBDocumentLedger(ds, dtFrom), sumItemAccountBDocumentLedger(ds, dtFrom), sumContainerAccountBDocumentLedger(ds, dtFrom),
               sumItemAccountADocumentLedger(ds, dtTo), sumContainerAccountADocumentLedger(ds, dtTo), sumAccountADocumentLedger(ds, dtTo)
    PROPERTIES(ds, dtFrom, dtTo) countIncStockDocumentInterval, countOutStockDocumentInterval,
               sumItemIncStockDocumentInterval, sumContainerIncStockDocumentInterval,
               subtotalItemIncStockDocumentInterval, subtotalContainerIncStockDocumentInterval,
               sumItemOutStockDocumentInterval, sumContainerOutStockDocumentInterval

    OBJECTS il = IncStockDocumentLedger
    PROPERTIES(il) READONLY isClosed, isPosted, date,  
                   iObjName = objectClassName, iDescription = description,
                   nameOperation, nameLegalEntity, nameLegalEntityStock, 
                   sumItem, sumContainer, sum
    PROPERTIES(il) edit SHOWIF allowedEdit(il), close SHOWIF isOpened(il)             
    FILTERS active(il),
            stock(il) == ds,
            date(il) >= dtFrom,
            date(il) <= dtTo,
            isCompany(ds)
    ORDER BY date(il)

    OBJECTS ol = OutStockDocumentLedger
    PROPERTIES(ol) READONLY isClosed, isPosted, date, 
                   oObjName = objectClassName, oDescription = description,
                   nameOperation, nameLegalEntity, nameLegalEntityStock, 
                   sumItem, sumContainer, sum
    PROPERTIES(ol) edit SHOWIF allowedEdit(ol), close SHOWIF isOpened(ol)               
    FILTERS active(ol),
            stock(ol) == ds,
            date(ol) >= dtFrom,
            date(ol) <= dtTo
    ORDER BY date(ol)
;
@extendFormFilterStockAccess(ds, sumStockDocumentLedger);


DESIGN sumStockDocumentLedger {

    NEW header {
        type = CONTAINERH;
        NEW dates {
            type = CONTAINERH;
            caption = 'Даты';
            MOVE PROPERTY(objFrom) {
                caption = 'Дата (с)';
            }
            MOVE PROPERTY(objTo) {
                caption = 'Дата (по)';
            }
        }
        NEW department {
            caption = 'Отдел';
            MOVE PROPERTY (name(ds)) {
                caption = 'Название';
            }
        }
        NEW legalEntity {
            caption = 'Организация';
            MOVE PROPERTY (nameLegalEntity(ds)) {
                caption = 'Название';
            }
        }
    }
    NEW print {
        type = CONTAINERH;
        caption = 'Печать';
    }

    NEW sums {
        caption = 'Суммы';
        type = CONTAINERV;
        MOVE ds.ledgerItem;
        MOVE ds.ledgerContainer;
        MOVE ds.ledger;
    }

    NEW topContainer{
        fill = 1;

        type = SPLITV;
        type = CONTAINERV;

        MOVE il.box;
        MOVE ol.box;
    }

    MOVE functions.box;
}

NAVIGATOR {
    stockReports {
        ADD sumStockDocumentLedger;
    }
}
// ------------------------------------------ Макросы ----------------------------------------------------- //
META implementStockDocumentLedger (concrete, stockProp)
    series[StockDocumentLedger] (concrete ledger) += series(ledger);
    number[StockDocumentLedger] (concrete ledger) += number(ledger);
    dateTime[StockDocumentLedger] (concrete ledger) += dateTime(ledger);
    isPosted[StockDocumentLedger] (concrete ledger) += isPosted(ledger);
    isClosed[StockDocumentLedger] (concrete ledger) += isClosed(ledger);
    stock[StockDocumentLedger] (concrete ledger) += stockProp(ledger);
    description[StockDocumentLedger] (concrete ledger) += description(ledger);
END

META implementStockDocumentLedgerInc (concrete, stockProp)
    EXTEND CLASS concrete : IncStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp);
END

META implementStockDocumentLedgerOut (concrete, stockProp)
    EXTEND CLASS concrete : OutStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp);
END

META implementStockDocumentLedgerOver (concrete, stockProp, objClass)

    number###stockProp##DocumentLedger = ABSTRACT VARSTRING[28] (objClass) PERSISTENT;
    series###stockProp##DocumentLedger = ABSTRACT STRING[2] (objClass) PERSISTENT;

    series[###stockProp##DocumentLedger] (objClass ledger) += OVERRIDE series(ledger), series###stockProp##DocumentLedger(ledger);
    number[###stockProp##DocumentLedger] (objClass ledger) += OVERRIDE number(ledger), number###stockProp##DocumentLedger(ledger);
    dateTime (objClass ledger) += dateTime(ledger);
    isPosted[###stockProp##DocumentLedger] (objClass ledger) += isPosted(ledger);
    isClosed[###stockProp##DocumentLedger] (objClass ledger) += isClosed(ledger);
    stockProp[###stockProp##DocumentLedger] (objClass ledger) += stockProp(ledger);
    description[###stockProp##DocumentLedger] (objClass ledger) += description(ledger);
END

META implementStockDocumentLedgerIncOver (concrete, stockProp)
    EXTEND CLASS concrete : IncStockDocumentLedger;
    @implementStockDocumentLedgerOver (concrete, stockProp, concrete);
END

META implementStockDocumentLedgerOutOver (concrete, stockProp)
    EXTEND CLASS concrete : OutStockDocumentLedger;
    @implementStockDocumentLedgerOver (concrete, stockProp, concrete);
END

META extendStockFormStockDocumentLedger(form, object)
    EXTEND FORM form
        PROPERTIES(object) SHOWIF isCompany(object) nameCustomUserResponsiblePerson, nameCustomUserBooker, nameCustomUserController
    ;
END
// -------------------------------- NameSpace ---------------------------------- //
META implementStockDocumentLedger (concrete, stockProp, NS)
    series[StockDocumentLedger] (NS.##concrete ledger) += series(ledger);
    number[StockDocumentLedger] (NS.##concrete ledger) += number(ledger);
    dateTime[StockDocumentLedger] (NS.##concrete ledger) += dateTime(ledger);
    isPosted[StockDocumentLedger] (NS.##concrete ledger) += isPosted(ledger);
    isClosed[StockDocumentLedger] (NS.##concrete ledger) += isClosed(ledger);
    stock[StockDocumentLedger] (NS.##concrete ledger) += stockProp(ledger);
    description[StockDocumentLedger] (NS.##concrete ledger) += description(ledger);
END
META implementStockDocumentLedgerInc (concrete, stockProp, NS)
    EXTEND CLASS NS.concrete : IncStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp, NS);
END
META implementStockDocumentLedgerOut (concrete, stockProp, NS)
    EXTEND CLASS NS.concrete : OutStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp, NS);
END
documentsClosedDate 'Дата закрытия документов' = DATA DATE(Stock);

allowChangeStockDocumentClosed 'Разрешить корректировать документы до даты закрытия' = DATA BOOLEAN (CustomUser);
EXTEND FORM customUser
    PROPERTIES(u) allowChangeStockDocumentClosed
;

CONSTRAINT ((CHANGED(date(StockDocumentLedger d)) OR CHANGED(sum(d)) AND active(d)) OR CHANGED(active(d))) 
            AND documentsClosedDate(stock(d)) AND NOT date(d) >= documentsClosedDate(stock(d)) 
            AND NOT allowChangeStockDocumentClosed(currentUser())
    MESSAGE 'Запрещено создавать документы для склада до даты закрытия';

CONSTRAINT (DROPPED(StockDocumentLedger d IS StockDocumentLedger)) 
            AND documentsClosedDate(PREV(stock(d))) AND NOT PREV(date(d)) >= documentsClosedDate(PREV(stock(d))) AND PREV(active(d)) 
            AND NOT allowChangeStockDocumentClosed(currentUser())
    MESSAGE 'Запрещено удалять документы для склада до даты закрытия';
    
checkClosedDate 'Проверять ограничение "Запрещено изменять дату документам для склада до даты закрытия"' = DATA BOOLEAN ();

EXTEND FORM options

    PROPERTIES checkClosedDate()
;

DESIGN options {
    stock1 {
        MOVE PROPERTY (checkClosedDate());
    }
} 
CONSTRAINT  CHANGED(date(StockDocumentLedger d)) AND PREV(active(d))
            AND (PREV(date(d)) < documentsClosedDate(stock(d))) 
            AND NOT allowChangeStockDocumentClosed(currentUser())
            AND checkClosedDate()
    MESSAGE 'Запрещено изменять дату документам для склада до даты закрытия';
    

closeDocumentsStocks 'Закрыть документы до Дата (по)'(DATE date, Stock stock) = ACTION {
    documentsClosedDate(stock) <- sum(date,1);
    FOR stock(StockDocumentLedger ledger) == stock AND date(ledger) <= date AND isOpened(ledger) DO {
        close(ledger);
    }
    apply();   
}


EXTEND FORM sumStockDocumentLedger
    PROPERTIES closeDocumentsStocks(dtTo, ds), documentsClosedDate(ds) READONLY 
;
DESIGN sumStockDocumentLedger {
    header {
        NEW actionContainer {
            caption = 'Действия';
            type = CONTAINERH;
            MOVE PROPERTY (closeDocumentsStocks(dtTo, ds));
            MOVE PROPERTY (documentsClosedDate(ds));
        }
    }
} 

excludeComission 'Исключать договора комиссии из товарного отчета' = DATA BOOLEAN ();

EXTEND FORM options
    PROPERTIES documentsClosedDate(s)
    PROPERTIES excludeComission()
;

DESIGN options {
    stock1 {
        MOVE PROPERTY (excludeComission());
    }
}

//Учетный документ проводимый только по товарному отчету

CLASS UserStockDocument 'Учетный документ (польз.)';
CLASS UserStockDocumentDetail 'Строка учетного документа (польз.)';

@defineDocumentTables(userStockDocument);
@defineDocumentHeaderTimePrefix(UserStockDocument, , ' документа');
@deriveDocumentHeaderTimePrefix(UserStockDocument, );
@defineDocumentHeaderNumber(UserStockDocument);
@defineDocumentHeaderStock (userStockDocument, stock, 'Склад', );
@defineDocumentDialogStocks(UserStockDocument, stock, company, , );
@defineDocumentHeaderDescription(UserStockDocument, 'Учетный документ');

@defineDocumentRelation(userStockDocument, UserStockDocumentDetail, );
@defineDocumentDetailIndex(userStockDocument, UserStockDocumentDetail);
@defineDocumentDetailNumber(userStockDocument, UserStockDocumentDetail);
@defineDocumentDetailTimePrefix(userStockDocument, UserStockDocumentDetail, , ' документа');
@defineDocumentDetailDataStockInner (userStockDocument, UserStockDocumentDetail, stock, Stock, stock, 'Склад');
@defineDocumentDetailDescription(userStockDocument, UserStockDocumentDetail);

@defineDocumentHeaderNote(UserStockDocument);
note 'Примечание' = DATA VARSTRING[100] (UserStockDocumentDetail) MINCHARWIDTH 30 PREFCHARWIDTH 50 IN documentPrm;

@defineNumeratedDefault(UserStockDocument, 'Учетный документ', 'УД');

@defineDocumentHeaderCreated(UserStockDocument);
@defineDocumentPosted(userStockDocument);
@defineDocumentClosed(userStockDocument);
id = DATA VARSTRING[100] (UserStockDocumentDetail);
userStockDocumentDetail (id, UserStockDocument) = GROUP AGGR UserStockDocumentDetail detail BY id(detail), userStockDocument(detail) WHERE detail IS UserStockDocumentDetail;

sumContainer 'Сумма (+/-), тара' = DATA NUMERIC[18,4] (UserStockDocumentDetail); 
sumContainer 'Сумма, тара' = 
    GROUP SUM sumContainer(UserStockDocumentDetail detail) BY userStockDocument(detail) IN documentSum;

sumItem 'Сумма (+/-), товар' = DATA NUMERIC[18,4] (UserStockDocumentDetail); 
sumItem 'Сумма, товар' = 
    GROUP SUM sumItem(UserStockDocumentDetail detail) BY userStockDocument(detail) IN documentSum;

sum 'Суммы (всего)' = DATA NUMERIC[18,4] (UserStockDocumentDetail); 
sum 'Суммы (всего)' = 
    GROUP SUM sum(UserStockDocumentDetail detail) BY userStockDocument(detail) IN documentSum;
 
FORM userStockDocument 'Учетный документ'
    OBJECTS i = UserStockDocument PANEL
    PROPERTIES (i) isPosted, nameNumerator, nameStock ON CHANGE changeStockCompany(i),
                   number, series, date, time,
                   sumContainer, sumItem,
                   sum, note,
                   countUserStockDocumentDetail

    OBJECTS d = UserStockDocumentDetail
    PROPERTIES (d) index, sumContainer, sumItem,
                   sum, note, NEW, DELETE GRID
    FILTERS userStockDocument(d) == i

    EDIT UserStockDocument OBJECT i
    
    EVENTS
        ON OK prePost(i)    
;

DESIGN userStockDocument {
    main {
        preferredSize = (1024, 768);
        NEW header.box {
            type = CONTAINERH;
            NEW headerRow1 {
                fill = 1;
                type = CONTAINERV;
                MOVE i.documentHeader {
                    type = CONTAINERV;
                    NEW row1 {
                        type = CONTAINERH;
                        MOVE PROPERTY(isPosted(i));
                        MOVE PROPERTY(nameStock(i));                        
                    }
                    NEW row2 {
                        type = CONTAINERH;
                        MOVE PROPERTY(nameNumerator(i));
                        MOVE PROPERTY(number(i));
                        MOVE PROPERTY(series(i));
                        MOVE PROPERTY(date(i));
                        MOVE PROPERTY(time(i));                        
                    }                    
                }
                MOVE i.documentPrm {
                    columns = 2;
                }
            }
            MOVE i.documentSum {
                columns = 1;
            }
        }
        NEW specification.box {
            fill = 1;
            type = TABBED;
            MOVE d.box {
                caption = 'Спецификация';
            }
        }
        MOVE functions.box;
        PROPERTY (note(i)) { caption = 'Номер справки';}
        PROPERTY(formOk()) {
            caption = 'Провести';
        }
    }
}

overPreventClose = ABSTRACT BOOLEAN (UserStockDocument);
overPreventOpen = ABSTRACT BOOLEAN (UserStockDocument);
showClose (UserStockDocument i) = isOpened(i) AND NOT overPreventClose(i);   
showOpen (UserStockDocument i) = isClosed(i) AND NOT overPreventOpen(i);   

FORM stockDocuments 'Учетный документ'
    OBJECTS i = UserStockDocument
    PROPERTIES (i) READONLYIF isReadonly() isClosed, isPosted, number, series, date, time,
                            nameStock
    PROPERTIES (i) READONLY countUserStockDocumentDetail, sumContainer, sumItem, sum 
    PROPERTIES (i) READONLYIF isReadonly() note
    PROPERTIES (i) NEWSESSION NEW, EDIT, DELETE
    
    PROPERTIES (i) READONLY PANEL createdNameUser, createdTime, createdHostnameComputer, 
                                        postedNameUser, postedTime, postedHostnameComputer 

    PROPERTIES (i) close SHOWIF showClose(i), open SHOWIF showOpen(i)

    OBJECTS d = UserStockDocumentDetail
    PROPERTIES (d) READONLY index, sumContainer, sumItem, sum,
                    note

    FILTERS userStockDocument(d) == i

    LIST UserStockDocument OBJECT i
    
    
;
@extendFormFilterAccessStock(UserStockDocument, i, stockDocuments, stock, company);
@defineFilterIsOpened (userStockDocument, stockDocuments, i);

DESIGN stockDocuments {
    main {
        preferredSize = (1024, 768);
        NEW documentContainer BEFORE functions.box {
            fill = 1;
            type = SPLITV;
            MOVE i.box { fill = 2; }
            NEW documentDetail {
                fill = 1;
                type = TABBED;
                MOVE d.box {
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';
                    type = CONTAINERV;
                    fill = 1;

                    MOVE i.created;
                    MOVE i.posted;
                }
            }
        }
        PROPERTY (note(i)) { caption = 'Номер справки';}
    }
}
@extendFormEditable(stockDocuments);

NAVIGATOR {
    stockNavigator {
        NEW stockDocumentNavigator 'Изменение товарного отчета'  BEFORE stockReports { 
            ADD stockDocuments;
        }
    }
}

WHEN SESSION FORMS userStockDocument
    CHANGED(sumContainer(UserStockDocumentDetail detail)) OR CHANGED(sumItem(detail)) DO {
        sum(detail) <- sumItem(detail) (+) sumContainer(detail);    
}   

//проводим по товарному отчету

CLASS OutUserStockDocumentDetail 'Учетный документ (польз.) расход' : OutStockDocumentLedger;
CLASS InUserStockDocumentDetail 'Учетный документ (польз.) приход' : IncStockDocumentLedger;

CONSTRAINT isPosted(UserStockDocumentDetail d) AND sumItem(d) AND sumContainer(d) AND ((sumItem(d) * sumContainer(d)) <0)
    MESSAGE 'Суммы по строке учетного документа (польз.) должны быть одновременно либо положительные, либо отрицательные.';
needToOutLedger = sumItem(UserStockDocumentDetail d) < 0 OR sumContainer(d) <0;

@defineAggregation(userStockDocumentDetail, OutUserStockDocumentDetail, needToOutLedger);
isPosted (OutUserStockDocumentDetail ledger) += isPosted(userStockDocumentDetail(ledger));  
isClosed (OutUserStockDocumentDetail ledger) += isClosed(userStockDocumentDetail(ledger));                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
series (OutUserStockDocumentDetail ledger) += series(userStockDocumentDetail(ledger));
number (OutUserStockDocumentDetail ledger) += number(userStockDocumentDetail(ledger));
dateTime (OutUserStockDocumentDetail ledger) += dateTime(userStockDocumentDetail(ledger));
stock (OutUserStockDocumentDetail ledger) += stock(userStockDocumentDetail(ledger));
description (OutUserStockDocumentDetail ledger) += description(userStockDocumentDetail(ledger));                                                                                                                                                                                                                                   
sumContainer(OutUserStockDocumentDetail ledger) += -sumContainer(userStockDocumentDetail(ledger));
sumItem(OutUserStockDocumentDetail ledger) += -sumItem(userStockDocumentDetail(ledger));
edit(OutUserStockDocumentDetail ledger) += ACTION NEWSESSION {SHOW userStockDocument OBJECTS i = userStockDocument(userStockDocumentDetail(ledger)), d = userStockDocumentDetail(ledger) MANAGESESSION DOCKED;}
close(OutUserStockDocumentDetail ledger) += ACTION isClosed(UserStockDocument s) <- TRUE WHERE s == userStockDocument(userStockDocumentDetail(ledger));
type(OutUserStockDocumentDetail l) += 'Учетный документ (польз.) расход' IF l IS OutUserStockDocumentDetail;

needToInLedger = sumItem(UserStockDocumentDetail d) > 0 OR sumContainer(d) > 0;
@defineAggregation(userStockDocumentDetail, InUserStockDocumentDetail, needToInLedger);
                                                                          
isPosted (InUserStockDocumentDetail ledger) += isPosted(userStockDocumentDetail(ledger));  
isClosed (InUserStockDocumentDetail ledger) += isClosed(userStockDocumentDetail(ledger));                                                                                                                                                                                                                                                                                                                                                                                                                                                             
series (InUserStockDocumentDetail ledger) += series(userStockDocumentDetail(ledger));
number (InUserStockDocumentDetail ledger) += number(userStockDocumentDetail(ledger));
dateTime (InUserStockDocumentDetail ledger) += dateTime(userStockDocumentDetail(ledger));
stock (InUserStockDocumentDetail ledger) += stock(userStockDocumentDetail(ledger));
description (InUserStockDocumentDetail ledger) += description(userStockDocumentDetail(ledger));                                                                                                                                                                                                                                   
sumContainer(InUserStockDocumentDetail ledger) += sumContainer(userStockDocumentDetail(ledger));
sumItem(InUserStockDocumentDetail ledger) += sumItem(userStockDocumentDetail(ledger));
edit(InUserStockDocumentDetail ledger) += ACTION NEWSESSION {SHOW userStockDocument OBJECTS i = userStockDocument(userStockDocumentDetail(ledger)), d = userStockDocumentDetail(ledger) MANAGESESSION DOCKED;}
close(InUserStockDocumentDetail ledger) += ACTION isClosed(UserStockDocument s) <- TRUE WHERE s == userStockDocument(userStockDocumentDetail(ledger));
type(InUserStockDocumentDetail l) += 'Учетный документ (польз.) приход' IF l IS InUserStockDocumentDetail;

//EXTEND CLASS UserStockDocumentDetail : IncStockDocumentLedger;
//                                                                          
//isPostedStockDocumentLedger (ledger) += TRUE IF ledger IS UserStockDocumentDetail;  
//isClosedStockDocumentLedger (ledger) += TRUE IF ledger IS UserStockDocumentDetail;                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
//seriesStockDocumentLedger (ledger) += seriesUserStockDocumentDetail(ledger);
//numberStockDocumentLedger (ledger) += numberUserStockDocumentDetail(ledger);
//dateTimeStockDocumentLedger (ledger) += dateTimeUserStockDocumentDetail(ledger);
//stockStockDocumentLedger (ledger) += stockUserStockDocumentDetail(ledger);
//descriptionStockDocumentLedger (ledger) += descriptionUserStockDocumentDetail(ledger);                                                                                                                                                                                                                                   
//sumContainerIncStockDocumentLedger(ledger) += sumContainerUserStockDocumentDetail(ledger);
//sumItemIncStockDocumentLedger(ledger) += sumItemUserStockDocumentDetail(ledger);
//editStockDocumentLedger(ledger) += ACTION (ledger) NEWSESSION {FORM userStockDocument OBJECTS i = userStockDocumentUserStockDocumentDetail(ledger), d = ledger MANAGESESSION DOCKEDMODAL;}
//closeStockDocumentLedger(ledger) += ACTION closeUserStockDocumentDetail(ledger);
//typeStockDocumentLedger(l) += 'Учетный документ' IF l IS UserStockDocumentDetail;
