MODULE StockDocument;

REQUIRE System, EmployeeStock, Document, Utils, Operation;

CLASS ABSTRACT StockDocumentLedger 'Учетный документ';
TABLE stockDocumentLedger (StockDocumentLedger) FULL;

CLASS ABSTRACT IncStockDocumentLedger 'Учетный документ (приход)' : StockDocumentLedger;
CLASS ABSTRACT OutStockDocumentLedger 'Учетный документ (расход)' : StockDocumentLedger;

typeStockDocumentLedger 'Тип процесса' (ledger) = ABSTRACT VARSTRING[50] (StockDocumentLedger) PERSISTENT;

overOrderStockDocumentLedger  (ledger) = ABSTRACT INTEGER (StockDocumentLedger);
orderStockDocumentLedger 'Порядок' = OVERRIDE 1000000 IF l IS StockDocumentLedger, overOrderStockDocumentLedger(l);

editStockDocumentLedger 'Редактировать' = ABSTRACT ACTION LIST (StockDocumentLedger) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;
closeStockDocumentLedger 'Закрыть' = ABSTRACT ACTION LIST (StockDocumentLedger) TOOLBAR;

dateTimeStockDocumentLedger 'Дата/время' (ledger) = ABSTRACT DATETIME (StockDocumentLedger) PERSISTENT INDEXED;
dateStockDocumentLedger 'Дата' (ledger) = toDate(dateTimeStockDocumentLedger(ledger)) PERSISTENT INDEXED;

isPostedStockDocumentLedger 'Проведен' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
isClosedStockDocumentLedger 'Закрыт' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
isOpenedStockDocumentLedger 'Не закрыт' (ledger) = ledger IS StockDocumentLedger AND NOT isClosedStockDocumentLedger(ledger);

stockStockDocumentLedger (ledger) = ABSTRACT Stock (StockDocumentLedger) PERSISTENT INDEXED;
nameStockStockDocumentLedger 'Отдел' (ledger) = nameStock(stockStockDocumentLedger(ledger));

numberStockDocumentLedger 'Номер документа' (ledger) = ABSTRACT STRING[18] (StockDocumentLedger) PERSISTENT;
seriesStockDocumentLedger 'Серия документа' (ledger) = ABSTRACT STRING[2] (StockDocumentLedger) PERSISTENT;
seriesNumberStockDocumentLedger 'Серия/номер документа' (ledger) = CONCAT '', seriesStockDocumentLedger(ledger), numberStockDocumentLedger(ledger) MINCHARWIDTH 7 PREFCHARWIDTH 10 MAXCHARWIDTH 20; 

legalEntityStockDocumentLedger 'Контрагент' (ledger) = ABSTRACT LegalEntity (StockDocumentLedger) PERSISTENT;
nameLegalEntityStockDocumentLedger 'Контрагент' (ledger) = nameLegalEntity(legalEntityStockDocumentLedger(ledger));

legalEntityStockStockDocumentLedger 'Склад контрагента' (ledger) = ABSTRACT Stock (StockDocumentLedger) PERSISTENT;
nameLegalEntityStockStockDocumentLedger 'Склад контрагента' = nameStock(legalEntityStockStockDocumentLedger(ledger));

operationStockDocumentLedger 'Операция' (ledger) = ABSTRACT Operation(StockDocumentLedger) PERSISTENT;
isReturnStockDocumentLedger 'Возврат' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
nameOperationStockDocumentLedger 'Операция' (ledger) = IF isReturnStockDocumentLedger(ledger) 
    THEN overNameOperation(operationStockDocumentLedger(ledger))
    ELSE nameOperation(operationStockDocumentLedger(ledger));

descriptionStockDocumentLedger 'Название документа' (ledger) = ABSTRACT VARSTRING[200] (StockDocumentLedger) PERSISTENT;

skipStockDocumentLedger 'Не проводить' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
activeStockDocumentLedger (ledger) = isPostedStockDocumentLedger(ledger) AND NOT skipStockDocumentLedger(ledger);

GROUP ledgerItem 'Суммы по товару' : public;
sumItemIncStockDocumentLedger 'Сумма прихода, товар' (ledger) = ABSTRACT NUMERIC[16,2] (IncStockDocumentLedger) PERSISTENT IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;
sumItemOutStockDocumentLedger 'Сумма расхода, товар' (ledger) = ABSTRACT NUMERIC[16,2] (OutStockDocumentLedger) PERSISTENT IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;
sumItemStockDocumentLedger 'Сумма, товар' (ledger) = MULTI sumItemIncStockDocumentLedger(ledger), -sumItemOutStockDocumentLedger(ledger) PERSISTENT;

GROUP ledgerContainer 'Суммы по таре' : public;
sumContainerIncStockDocumentLedger 'Сумма прихода, тара' (ledger) = ABSTRACT NUMERIC[16,2] (IncStockDocumentLedger) PERSISTENT IN ledgerContainer;
sumContainerOutStockDocumentLedger 'Сумма расхода, тара' (ledger) = ABSTRACT NUMERIC[16,2] (OutStockDocumentLedger) PERSISTENT IN ledgerContainer;
sumContainerStockDocumentLedger 'Сумма, тара' (ledger) = MULTI sumContainerIncStockDocumentLedger(ledger), -sumContainerOutStockDocumentLedger(ledger) PERSISTENT;

GROUP ledger 'Суммы (всего)' : public;
sumIncStockDocumentLedger 'Сумма прихода' (ledger) = sumItemIncStockDocumentLedger(ledger)(+) sumContainerIncStockDocumentLedger(ledger) PERSISTENT IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;
sumOutStockDocumentLedger 'Сумма расхода' (ledger) = sumItemOutStockDocumentLedger(ledger)(+) sumContainerOutStockDocumentLedger(ledger) PERSISTENT IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;
sumStockDocumentLedger 'Сумма' (ledger) = MULTI sumIncStockDocumentLedger(ledger), -sumOutStockDocumentLedger(ledger) PERSISTENT;

allowedEditStockDocumentLedger (ledger) = NOT isClosedStockDocumentLedger(ledger) OR allowedEditClosedDocumentsCustomUser(currentUser());

// -------------------------------------- Агрегированные суммы за интервал --------------------------------------------- //

countIncStockDocumentStockDateInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF incStockDocumentLedger IS IncStockDocumentLedger AND activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledger;

countOutStockDocumentStockDateInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF outStockDocumentLedger IS OutStockDocumentLedger AND activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledger;


sumItemIncStockDocumentStockDateInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemOutStockDocumentStockDateInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;


sumContainerIncStockDocumentStockDateInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

sumContainerOutStockDocumentStockDateInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

// -------------------------------------- Суммы по операциям за интервал --------------------------------------------- //

countIncStockDocumentStockDateIntervalOperation 'Количество приходных док-ов' (stock, dtFrom, dtTo, operation)=
    GROUP SUM 1 IF incStockDocumentLedger IS IncStockDocumentLedger AND activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(incStockDocumentLedger) IN ledger;

countOutStockDocumentStockDateIntervalOperation 'Количество расходных док-ов' (stock, dtFrom, dtTo, operation)=
    GROUP SUM 1 IF outStockDocumentLedger IS OutStockDocumentLedger AND activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(outStockDocumentLedger) IN ledger;


sumItemIncStockDocumentStockDateIntervalOperation 'Сумма прихода, товар' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumItemIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(incStockDocumentLedger) IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemOutStockDocumentStockDateIntervalOperation 'Сумма расхода, товар' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumItemOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(outStockDocumentLedger) IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;


sumContainerIncStockDocumentStockDateIntervalOperation 'Сумма прихода, тара' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumContainerIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(incStockDocumentLedger) IN ledgerContainer;

sumContainerOutStockDocumentStockDateIntervalOperation 'Сумма расхода, тара' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumContainerOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(outStockDocumentLedger) IN ledgerContainer;
            
//-- Без операции            
countNotOperationIncStockDocumentStockDateInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF incStockDocumentLedger IS IncStockDocumentLedger AND activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(incStockDocumentLedger)
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo  IN ledger;

countNotOperationOutStockDocumentStockDateInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF outStockDocumentLedger IS OutStockDocumentLedger AND activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(outStockDocumentLedger)
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledger;


sumItemNotOperationIncStockDocumentStockDateInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(incStockDocumentLedger)        
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemNotOperationOutStockDocumentStockDateInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(outStockDocumentLedger)
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;


sumContainerNotOperationIncStockDocumentStockDateInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(incStockDocumentLedger)        
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

sumContainerNotOperationOutStockDocumentStockDateInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(outStockDocumentLedger)
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;
// -------------------------------------- Остатки по суммам --------------------------------------------- //

currentSumStockDocumentLedger 'Текущий остаток по документам' (stock) = GROUP SUM sumStockDocumentLedger (ledger) IF activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger);

sumAccountBDocumentLedgerDateTime 'Остаток на начало' (stock, dateTime) = (currentSumStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                          [= GROUP SUM sumStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) >= dateTime AND activeStockDocumentLedger(ledger)
                                                                                 BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumAccountADocumentLedgerDateTime 'Остаток на конец' (stock, dateTime) = (currentSumStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                         [= GROUP SUM sumStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) > dateTime AND activeStockDocumentLedger(ledger)
                                                                                BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumAccountBDocumentLedgerDate 'Остаток на начало' (stock, date) = (currentSumStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                  [= GROUP SUM sumStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) >= date AND activeStockDocumentLedger(ledger)
                                                                         BY stockStockDocumentLedger(ledger), date](stock, date) IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumAccountADocumentLedgerDate 'Остаток на конец' (stock, date) = (currentSumStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                 [= GROUP SUM sumStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) > date AND activeStockDocumentLedger(ledger)
                                                                        BY stockStockDocumentLedger(ledger), date](stock, date) IN ledger MINCHARWIDTH 15 PREFCHARWIDTH 15;

// -------------------------------------- Остатки по суммам (товар) --------------------------------------------- //

currentSumItemStockDocumentLedger 'Текущий остаток по документам, товар' (stock) = GROUP SUM sumItemStockDocumentLedger (ledger) IF activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger);

sumItemAccountBDocumentLedgerDateTime 'Остаток на начало, товар' (stock, dateTime) = (currentSumItemStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                     [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) >= dateTime AND activeStockDocumentLedger(ledger)
                                                                                            BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumItemAccountADocumentLedgerDateTime 'Остаток на конец, товар' (stock, dateTime) = (currentSumItemStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                    [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) > dateTime AND activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumItemAccountBDocumentLedgerDate 'Остаток на начало, товар' (stock, date) = (currentSumItemStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                             [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) >= date AND activeStockDocumentLedger(ledger)
                                                                                    BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerItem MINCHARWIDTH 15 PREFCHARWIDTH 15;

sumItemAccountADocumentLedgerDate 'Остаток на конец, товар' (stock, date) = (currentSumItemStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                            [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) > date AND activeStockDocumentLedger(ledger)
                                                                                   BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerItem  MINCHARWIDTH 15 PREFCHARWIDTH 15;

// -------------------------------------- Остатки по суммам (тара) --------------------------------------------- //

currentSumContainerStockDocumentLedger 'Текущий остаток по документам, тара' (stock) = GROUP SUM sumContainerStockDocumentLedger (ledger) IF activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger);
sumContainerAccountBDocumentLedgerDateTime 'Остаток на начало, тара' (stock, dateTime) = (currentSumContainerStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                         [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) >= dateTime AND activeStockDocumentLedger(ledger)
                                                                                                BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumContainerAccountADocumentLedgerDateTime 'Остаток на конец, тара' (stock, dateTime) = (currentSumContainerStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                        [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) > dateTime AND activeStockDocumentLedger(ledger)
                                                                                               BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumContainerAccountBDocumentLedgerDate 'Остаток на начало, тара' (stock, date) = (currentSumContainerStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                                 [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) >= date AND activeStockDocumentLedger(ledger)
                                                                                        BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerContainer;

sumContainerAccountADocumentLedgerDate 'Остаток на конец, тара' (stock, date) = (currentSumContainerStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                                [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) > date AND activeStockDocumentLedger(ledger)
                                                                                       BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerContainer;

// -------------------------------------- Подитоги --------------------------------------------- //

subtotalItemIncStockDocumentStockDateInterval 'Итого с остатком, товар' (stock, dtFrom, dtTo) =
    sumItemAccountBDocumentLedgerDate(stock, dtFrom) (+)
     sumItemIncStockDocumentStockDateInterval(stock, dtFrom, dtTo) IN ledgerItem  MINCHARWIDTH 15 PREFCHARWIDTH 15;

subtotalContainerIncStockDocumentStockDateInterval 'Итого с остатком, тара' (stock, dtFrom, dtTo) =
    sumContainerAccountBDocumentLedgerDate(stock, dtFrom) (+)
     sumContainerIncStockDocumentStockDateInterval(stock, dtFrom, dtTo) IN ledgerContainer MINCHARWIDTH 15 PREFCHARWIDTH 15;


// ------------------------------------------- Ответственные лица --------------------------------------------- //

@defineHistorizableCustom(responsiblePerson, 'Материально ответственное лицо', Employee, name, customUser, stock, nameStock, responsibility );
isResponsiblePersonStockEmployee 'Материально ответственное лицо' = DATA BOOLEAN (Stock, Employee);
isOverResponsiblePersonStockEmployee 'Материально ответственное лицо' = isResponsiblePersonStockEmployee(st,e) OR responsiblePersonStock(st) == e;

namePositionResponsibliesStock 'МОЛ(ы)' (stock) = CONCAT ', ', positionNameEmployee(responsiblePersonStock(stock)),
     [ = GROUP CONCAT positionNameEmployee(employee) IF isResponsiblePersonStockEmployee(stock, employee), ', '
     BY stock
     ORDER employee](stock)
     MINCHARWIDTH 50 PREFCHARWIDTH 50;

shortNamePositionResponsibliesStock 'МОЛ(ы)' (stock) = CONCAT ', ', positionShortNameEmployee(responsiblePersonStock(stock)),
    [ = GROUP CONCAT positionShortNameEmployee(employee) IF isResponsiblePersonStockEmployee(stock, employee), ', '
    BY stock
    ORDER employee](stock)
    MINCHARWIDTH 50 PREFCHARWIDTH 50;

nameResponsibliesStock 'МОЛ(ы)' (stock) = CONCAT ', ', nameContact(responsiblePersonStock(stock)),
     [ = GROUP CONCAT nameContact(employee) IF isResponsiblePersonStockEmployee(stock, employee), ', '
     BY stock
     ORDER employee](stock)
     MINCHARWIDTH 50 PREFCHARWIDTH 50;
     
shortNameResponsibliesStock 'МОЛ(ы)' (stock) = CONCAT ', ', shortNameContact(responsiblePersonStock(stock)),
     [ = GROUP CONCAT shortNameContact(employee) IF isResponsiblePersonStockEmployee(stock, employee), ', '
     BY stock
     ORDER employee](stock)
     MINCHARWIDTH 50 PREFCHARWIDTH 50;  

// Должность ФИО
positionNameResponsiblePersonStock 'Материально ответственное лицо' (stock) = positionNameEmployee(responsiblePersonStock(stock)) IN responsibility; 
namePositionResponsiblePersonStock 'Материально ответственное лицо (должность)'= namePositionEmployee(responsiblePersonStock(stock));
CONSTRAINT dataResponsiblePersonStockDate(stock, date) AND NOT inStockEmployee(stock, dataResponsiblePersonStockDate(stock, date))
    CHECKED BY dataResponsiblePersonStockDate MESSAGE 'МОЛ не сотрудник отдела';

@defineHistorizableCustom(booker, 'Бухгалтер, принимающий товарный отчет', Employee, name, customUser, stock, nameStock, responsibility );
// Должность ФИО
positionNameBookerStock 'Бухгалтер, принимающий товарный отчет' (stock) = positionNameEmployee(bookerStock(stock)) IN responsibility; 
namePositionBookerStock 'Бухгалтер, принимающий товарный отчет (должность)'= namePositionEmployee(bookerStock(stock));
CONSTRAINT dataBookerStockDate(stock, date) AND NOT inStockEmployee(stock, dataBookerStockDate(stock, date))
    CHECKED BY dataBookerStockDate MESSAGE 'Бухгалтер не сотрудник отдела';

@defineHistorizableCustom(controller, 'Кто проверяет товарный отчет', Employee, name, customUser, stock, nameStock, responsibility );

CONSTRAINT dataControllerStockDate(stock, date) AND NOT inStockEmployee(stock, dataControllerStockDate(stock, date))
    CHECKED BY dataControllerStockDate MESSAGE 'Проверяющий не сотрудник отдела';
// Должность ФИО
positionNameControllerStock 'Кто проверяет товарный отчет' (stock) = positionNameEmployee(controllerStock(stock)) IN responsibility; 
namePositionControllerStock 'Кто проверяет товарный отчет (должность)'= namePositionEmployee(bookerStock(stock));

@defineHistorizableCustom(headPerson, 'Заведующий', Employee, name, customUser, stock, nameStock, responsibility );
// Должность ФИО
positionNameHeaderStock 'Заведующий' (stock) = positionNameEmployee(headPersonStock(stock)) IN responsibility; 
namePositionHeaderStock 'Заведующий'= namePositionEmployee(headPersonStock(stock));
CONSTRAINT dataHeadPersonStockDate(stock, date) AND NOT inStockEmployee(stock, dataHeadPersonStockDate(stock, date))
    CHECKED BY dataHeadPersonStockDate MESSAGE 'Заведующий не сотрудник отдела';
    
countStockDocumentStockDateInterval 'Количество документов' (ds, dtFrom, dtTo)=  countIncStockDocumentStockDateInterval(ds, dtFrom, dtTo) (+) 
                                                                                            countOutStockDocumentStockDateInterval(ds, dtFrom, dtTo);

// -------------------------------------- Формы --------------------------------------------- //

FORM sumStockDocumentLedger 'Товарный отчет'
    OBJECTS params = (dtFrom = DATE, dtTo = DATE) FIXED PANEL,
            ds = Stock FIXED PANEL
    PROPERTIES objFrom = OBJVALUE(dtFrom), objTo = OBJVALUE(dtTo)
    PROPERTIES(ds) SELECTOR nameStock, nameLegalEntityStock

    PROPERTIES sumAccountBDocumentLedgerDate(ds, dtFrom), sumItemAccountBDocumentLedgerDate(ds, dtFrom), sumContainerAccountBDocumentLedgerDate(ds, dtFrom),
               sumItemAccountADocumentLedgerDate(ds, dtTo), sumContainerAccountADocumentLedgerDate(ds, dtTo), sumAccountADocumentLedgerDate(ds, dtTo)
    PROPERTIES(ds, dtFrom, dtTo) countIncStockDocumentStockDateInterval, countOutStockDocumentStockDateInterval,
               sumItemIncStockDocumentStockDateInterval, sumContainerIncStockDocumentStockDateInterval,
               subtotalItemIncStockDocumentStockDateInterval, subtotalContainerIncStockDocumentStockDateInterval,
               sumItemOutStockDocumentStockDateInterval, sumContainerOutStockDocumentStockDateInterval

    OBJECTS il = IncStockDocumentLedger
    PROPERTIES(il) READONLY isClosedStockDocumentLedger, isPostedStockDocumentLedger, dateStockDocumentLedger,  
                   iObjName = objectClassName, iDescription = descriptionStockDocumentLedger,
                   nameOperationStockDocumentLedger, nameLegalEntityStockDocumentLedger, nameLegalEntityStockStockDocumentLedger, 
                   sumItemIncStockDocumentLedger, sumContainerIncStockDocumentLedger, sumIncStockDocumentLedger
    PROPERTIES(il) editStockDocumentLedger SHOWIF allowedEditStockDocumentLedger(il), closeStockDocumentLedger SHOWIF isOpenedStockDocumentLedger(il)             
    FILTERS activeStockDocumentLedger(il),
            stockStockDocumentLedger(il) == ds,
            dateStockDocumentLedger(il) >= dtFrom,
            dateStockDocumentLedger(il) <= dtTo,
            isCompanyStock(ds)
    ORDER BY dateStockDocumentLedger(il)

    OBJECTS ol = OutStockDocumentLedger
    PROPERTIES(ol) READONLY isClosedStockDocumentLedger, isPostedStockDocumentLedger, dateStockDocumentLedger, 
                   oObjName = objectClassName, oDescription = descriptionStockDocumentLedger,
                   nameOperationStockDocumentLedger, nameLegalEntityStockDocumentLedger, nameLegalEntityStockStockDocumentLedger, 
                   sumItemOutStockDocumentLedger, sumContainerOutStockDocumentLedger, sumOutStockDocumentLedger
    PROPERTIES(ol) editStockDocumentLedger SHOWIF allowedEditStockDocumentLedger(ol), closeStockDocumentLedger SHOWIF isOpenedStockDocumentLedger(ol)               
    FILTERS activeStockDocumentLedger(ol),
            stockStockDocumentLedger(ol) == ds,
            dateStockDocumentLedger(ol) >= dtFrom,
            dateStockDocumentLedger(ol) <= dtTo
    ORDER BY dateStockDocumentLedger(ol)
;
@extendFormFilterStockAccess(ds, sumStockDocumentLedger);


DESIGN sumStockDocumentLedger {

    NEW header {
        type = CONTAINERH;
        NEW dates {
            type = CONTAINERH;
            caption = 'Даты';
            MOVE PROPERTY(objFrom) {
                caption = 'Дата (с)';
            }
            MOVE PROPERTY(objTo) {
                caption = 'Дата (по)';
            }
        }
        NEW department {
            caption = 'Отдел';
            MOVE PROPERTY (nameStock(ds)) {
                caption = 'Название';
            }
        }
        NEW legalEntity {
            caption = 'Организация';
            MOVE PROPERTY (nameLegalEntityStock(ds)) {
                caption = 'Название';
            }
        }
        NEW print {
            caption = 'Печать';
        }
    }

    NEW sums {
        caption = 'Суммы';
        type = CONTAINERV;
        MOVE ds.ledgerItem;
        MOVE ds.ledgerContainer;
        MOVE ds.ledger;
    }

    NEW topContainer{
        fill = 1;

        type = SPLITV;
        type = CONTAINERV;

        MOVE il.box;
        MOVE ol.box;
    }

    MOVE functions.box;
}

NAVIGATOR {
    stockReports {
        ADD sumStockDocumentLedger;
    }
}
// ------------------------------------------ Макросы ----------------------------------------------------- //
META implementStockDocumentLedger (concrete, stockProp)
    seriesStockDocumentLedger (ledger) += series###concrete(ledger);
    numberStockDocumentLedger (ledger) += number###concrete(ledger);
    dateTimeStockDocumentLedger (ledger) += dateTime###concrete(ledger);
    isPostedStockDocumentLedger (ledger) += isPosted###concrete(ledger);
    isClosedStockDocumentLedger (ledger) += isClosed###concrete(ledger);
    stockStockDocumentLedger (ledger) += stockProp###concrete(ledger);
    descriptionStockDocumentLedger (ledger) += description###concrete(ledger);
END

META implementStockDocumentLedgerInc (concrete, stockProp)
    EXTEND CLASS concrete : IncStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp);
END

META implementStockDocumentLedgerOut (concrete, stockProp)
    EXTEND CLASS concrete : OutStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp);
END

META implementStockDocumentLedgerOver (concrete, stockProp, objClass)

    numberStockDocumentLedger##objClass = ABSTRACT STRING[18] (objClass) PERSISTENT;
    seriesStockDocumentLedger##objClass = ABSTRACT STRING[2] (objClass) PERSISTENT;

    seriesStockDocumentLedger (ledger) += OVERRIDE series###concrete(ledger), seriesStockDocumentLedger##objClass(ledger);
    numberStockDocumentLedger (ledger) += OVERRIDE number###concrete(ledger), numberStockDocumentLedger##objClass(ledger);
    dateTimeStockDocumentLedger (ledger) += dateTime###concrete(ledger);
    isPostedStockDocumentLedger (ledger) += isPosted###concrete(ledger);
    isClosedStockDocumentLedger (ledger) += isClosed###concrete(ledger);
    stockStockDocumentLedger (ledger) += stockProp###concrete(ledger);
    descriptionStockDocumentLedger (ledger) += description###concrete(ledger);
END

META implementStockDocumentLedgerIncOver (concrete, stockProp)
    EXTEND CLASS concrete : IncStockDocumentLedger;
    @implementStockDocumentLedgerOver (concrete, stockProp, concrete);
END

META implementStockDocumentLedgerOutOver (concrete, stockProp)
    EXTEND CLASS concrete : OutStockDocumentLedger;
    @implementStockDocumentLedgerOver (concrete, stockProp, concrete);
END

META extendStockFormStockDocumentLedger(form, object)
    EXTEND FORM form
        PROPERTIES(object) SHOWIF isCompanyStock(object) nameCustomUserResponsiblePersonStock, nameCustomUserBookerStock, nameCustomUserControllerStock
    ;
END
// -------------------------------- NameSpace ---------------------------------- //
META implementStockDocumentLedger (concrete, stockProp, NS)
    seriesStockDocumentLedger (ledger) += NS.series###concrete(ledger);
    numberStockDocumentLedger (ledger) += NS.number###concrete(ledger);
    dateTimeStockDocumentLedger (ledger) += NS.dateTime###concrete(ledger);
    isPostedStockDocumentLedger (ledger) += NS.isPosted###concrete(ledger);
    isClosedStockDocumentLedger (ledger) += NS.isClosed###concrete(ledger);
    stockStockDocumentLedger (ledger) += NS.stockProp###concrete(ledger);
    descriptionStockDocumentLedger (ledger) += NS.description###concrete(ledger);
END
META implementStockDocumentLedgerInc (concrete, stockProp, NS)
    EXTEND CLASS NS.concrete : IncStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp, NS);
END
META implementStockDocumentLedgerOut (concrete, stockProp, NS)
    EXTEND CLASS NS.concrete : OutStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp, NS);
END
documentsClosedDateStock 'Дата закрытия документов' = DATA DATE(Stock);

CONSTRAINT CHANGED(dateStockDocumentLedger(d)) AND dateStockDocumentLedger(d) < documentsClosedDateStock(stockStockDocumentLedger(d))
    MESSAGE 'Запрещено создавать документы для склада до даты закрытия';
 
closeDocumentsDateStocks 'Закрыть документы до Дата (по)' = ACTION (date, stock) {
    documentsClosedDateStock(stock) <- sumDate(date,1);
    FOR stockStockDocumentLedger(ledger) == stock AND dateStockDocumentLedger(ledger) <= date AND isOpenedStockDocumentLedger(ledger) DO {
        closeStockDocumentLedger(ledger);
    }
    apply();   
}


EXTEND FORM sumStockDocumentLedger
    PROPERTIES closeDocumentsDateStocks(dtTo, ds), documentsClosedDateStock(ds) READONLY 
;
DESIGN sumStockDocumentLedger {
    header {
        NEW actionContainer {
            caption = 'Действия';
            type = CONTAINERV;
            MOVE PROPERTY (closeDocumentsDateStocks(dtTo, ds));
            MOVE PROPERTY (documentsClosedDateStock(ds));
        }
    }
} 

EXTEND FORM options
    PROPERTIES documentsClosedDateStock(s)
;

//Учетный документ проводимый только по товарному отчету

CLASS UserStockDocument 'Учетный документ (польз.)';
CLASS UserStockDocumentDetail 'Строка учетного документа (польз.)';

@defineDocumentTables(userStockDocument);
@defineDocumentHeaderTimePrefix(UserStockDocument, , ' документа');
@deriveDocumentHeaderTimePrefix(UserStockDocument, );
@defineDocumentHeaderNumber(UserStockDocument);
@defineDocumentHeaderStock (userStockDocument, stock, 'Склад', );
@defineDocumentDialogStocks(UserStockDocument, stock, company, , );
@defineDocumentHeaderDescription(UserStockDocument, 'Учетный документ');

@defineDocumentRelation(userStockDocument, UserStockDocumentDetail, );
@defineDocumentDetailIndex(userStockDocument, UserStockDocumentDetail);
@defineDocumentDetailNumber(userStockDocument, UserStockDocumentDetail);
@defineDocumentDetailTimePrefix(userStockDocument, UserStockDocumentDetail, , ' документа');
@defineDocumentDetailDataStockInner (userStockDocument, UserStockDocumentDetail, stock, Stock, stock, 'Склад');
@defineDocumentDetailDescription(userStockDocument, UserStockDocumentDetail);

@defineDocumentHeaderNote(UserStockDocument);
noteUserStockDocumentDetail 'Примечание' = DATA VARSTRING[100] (UserStockDocumentDetail) MINCHARWIDTH 30 PREFCHARWIDTH 50 IN documentPrm;

@defineNumeratedDefault(UserStockDocument, 'Учетный документ', 'УД');

@defineDocumentHeaderCreated(UserStockDocument);
@defineDocumentPosted(userStockDocument);
@defineDocumentClosed(userStockDocument);
idUserStockDocumentDetail = DATA VARSTRING[100] (UserStockDocumentDetail);
userStockDocumentDetailIdUserStockDocument (id, UserStockDocument) = GROUP AGGR detail BY idUserStockDocumentDetail(detail), userStockDocumentUserStockDocumentDetail(detail) WHERE detail IS UserStockDocumentDetail;

sumContainerUserStockDocumentDetail 'Сумма (+/-), тара' = DATA NUMERIC[16,2] (UserStockDocumentDetail); 
sumContainerUserStockDocument 'Сумма, тара' = 
    GROUP SUM sumContainerUserStockDocumentDetail(detail) BY userStockDocumentUserStockDocumentDetail(detail) IN documentSum;

sumItemUserStockDocumentDetail 'Сумма (+/-), товар' = DATA NUMERIC[16,2] (UserStockDocumentDetail); 
sumItemUserStockDocument 'Сумма, товар' = 
    GROUP SUM sumItemUserStockDocumentDetail(detail) BY userStockDocumentUserStockDocumentDetail(detail) IN documentSum;

sumUserStockDocumentDetail 'Суммы (всего)' = DATA NUMERIC[16,2] (UserStockDocumentDetail); 
sumUserStockDocument 'Суммы (всего)' = 
    GROUP SUM sumUserStockDocumentDetail(detail) BY userStockDocumentUserStockDocumentDetail(detail) IN documentSum;
 
FORM userStockDocument 'Учетный документ'
    OBJECTS i = UserStockDocument FIXED PANEL
    PROPERTIES (i) isPostedUserStockDocument, nameNumeratorUserStockDocument, nameStockUserStockDocument ON CHANGE changeStockCompanyUserStockDocument(i),
                   numberUserStockDocument, seriesUserStockDocument, dateUserStockDocument, timeUserStockDocument,
                   sumContainerUserStockDocument, sumItemUserStockDocument,
                   sumUserStockDocument, noteUserStockDocument,
                   countUserStockDocumentDetailUserStockDocument

    OBJECTS d = UserStockDocumentDetail
    PROPERTIES (d) indexUserStockDocumentDetail, sumContainerUserStockDocumentDetail, sumItemUserStockDocumentDetail,
                   sumUserStockDocumentDetail, noteUserStockDocumentDetail, ADDOBJ, DELETESESSION
    FILTERS userStockDocumentUserStockDocumentDetail(d) == i

    EDIT UserStockDocument OBJECT i
    
    EVENTS
        ON OK prePostUserStockDocument(i)    
;

DESIGN userStockDocument {
    main {
        preferredSize = (1024, 768);
        NEW header.box {
            type = CONTAINERH;
            NEW headerRow1 {
                fill = 1;
                type = CONTAINERV;
                MOVE i.documentHeader {
                    type = CONTAINERV;
                    NEW row1 {
                        type = CONTAINERH;
                        MOVE PROPERTY(isPostedUserStockDocument(i));
                        MOVE PROPERTY(nameStockUserStockDocument(i));                        
                    }
                    NEW row2 {
                        type = CONTAINERH;
                        MOVE PROPERTY(nameNumeratorUserStockDocument(i));
                        MOVE PROPERTY(numberUserStockDocument(i));
                        MOVE PROPERTY(seriesUserStockDocument(i));
                        MOVE PROPERTY(dateUserStockDocument(i));
                        MOVE PROPERTY(timeUserStockDocument(i));                        
                    }                    
                }
                MOVE i.documentPrm {
                    columns = 2;
                }
            }
            MOVE i.documentSum {
                columns = 1;
            }
        }
        NEW specification.box {
            fill = 1;
            type = TABBED;
            MOVE d.box {
                caption = 'Спецификация';
            }
        }
        MOVE functions.box;
        PROPERTY (noteUserStockDocument(i)) { caption = 'Номер справки';}
        PROPERTY(formOk()) {
            caption = 'Провести';
        }
    }
}

overPreventCloseUserStockDocument = ABSTRACT BOOLEAN (UserStockDocument);
overPreventOpenUserStockDocument = ABSTRACT BOOLEAN (UserStockDocument);
showCloseUserStockDocument (i) = isOpenedUserStockDocument(i) AND NOT overPreventCloseUserStockDocument(i);   
showOpenUserStockDocument (i) = isClosedUserStockDocument(i) AND NOT overPreventOpenUserStockDocument(i);   

FORM stockDocuments 'Учетный документ'
    OBJECTS i = UserStockDocument
    PROPERTIES (i) READONLYIF isReadonly() isClosedUserStockDocument, isPostedUserStockDocument, numberUserStockDocument, seriesUserStockDocument, dateUserStockDocument, timeUserStockDocument,
                            nameStockUserStockDocument
    PROPERTIES (i) READONLY countUserStockDocumentDetailUserStockDocument, sumContainerUserStockDocument, sumItemUserStockDocument, sumUserStockDocument 
    PROPERTIES (i) READONLYIF isReadonly() noteUserStockDocument
    PROPERTIES (i) FORCE PANEL TOOLBAR ADDFORM, EDITFORM, DELETESESSION
    
    PROPERTIES (i) READONLY FORCE PANEL createdNameUserUserStockDocument, createdTimeUserStockDocument, createdHostnameComputerUserStockDocument, 
                                        postedNameUserUserStockDocument, postedTimeUserStockDocument, postedHostnameComputerUserStockDocument 

    PROPERTIES (i) closeUserStockDocument SHOWIF showCloseUserStockDocument(i), openUserStockDocument SHOWIF showOpenUserStockDocument(i)

    OBJECTS d = UserStockDocumentDetail
    PROPERTIES (d) READONLY indexUserStockDocumentDetail, sumContainerUserStockDocumentDetail, sumItemUserStockDocumentDetail, sumUserStockDocumentDetail,
                    noteUserStockDocumentDetail

    FILTERS userStockDocumentUserStockDocumentDetail(d) == i

    DIALOG UserStockDocument OBJECT i
    
    
;
@extendFormFilterAccessStock(UserStockDocument, i, stockDocuments, stock, company);
@defineFilterIsOpened (userStockDocument, stockDocuments, i);

DESIGN stockDocuments {
    main {
        preferredSize = (1024, 768);
        NEW documentContainer BEFORE functions.box {
            fill = 1;
            type = SPLITV;
            MOVE i.box { fill = 2; }
            NEW documentDetail {
                fill = 1;
                type = TABBED;
                MOVE d.box {
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';
                    type = CONTAINERV;
                    fill = 1;

                    MOVE i.created;
                    MOVE i.posted;
                }
            }
        }
        PROPERTY (noteUserStockDocument(i)) { caption = 'Номер справки';}
    }
}
@extendFormEditable(stockDocuments);

NAVIGATOR {
    stockNavigator {
        NEW stockDocumentNavigator 'Изменение товарного отчета'  BEFORE stockReports { 
            ADD stockDocuments;
        }
    }
}

WHEN SESSION FORMS userStockDocument
    CHANGED(sumContainerUserStockDocumentDetail(detail)) OR CHANGED(sumItemUserStockDocumentDetail(detail)) DO {
        sumUserStockDocumentDetail(detail) <- sumItemUserStockDocumentDetail(detail) (+) sumContainerUserStockDocumentDetail(detail);    
}   

//проводим по товарному отчету

CLASS OutUserStockDocumentDetail 'Учетный документ (польз.) расход' : OutStockDocumentLedger;
CLASS InUserStockDocumentDetail 'Учетный документ (польз.) приход' : IncStockDocumentLedger;

CONSTRAINT isPostedUserStockDocumentDetail(d) AND sumItemUserStockDocumentDetail(d) AND sumContainerUserStockDocumentDetail(d) AND ((sumItemUserStockDocumentDetail(d) * sumContainerUserStockDocumentDetail(d)) <0)
    MESSAGE 'Суммы по строке учетного документа (польз.) должны быть одновременно либо положительные, либо отрицательные.';
needToOutLedgerUserStockDocumentDetail = sumItemUserStockDocumentDetail(d) < 0 OR sumContainerUserStockDocumentDetail(d) <0;

@defineAggregation(userStockDocumentDetail, OutUserStockDocumentDetail, needToOutLedger);
isPostedStockDocumentLedger (ledger) += isPostedUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));  
isClosedStockDocumentLedger (ledger) += isClosedUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
seriesStockDocumentLedger (ledger) += seriesUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));
numberStockDocumentLedger (ledger) += numberUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));
dateTimeStockDocumentLedger (ledger) += dateTimeUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));
stockStockDocumentLedger (ledger) += stockUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));
descriptionStockDocumentLedger (ledger) += descriptionUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));                                                                                                                                                                                                                                   
sumContainerOutStockDocumentLedger(ledger) += -sumContainerUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));
sumItemOutStockDocumentLedger(ledger) += -sumItemUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger));
editStockDocumentLedger(ledger) += ACTION NEWSESSION {FORM userStockDocument OBJECTS i = userStockDocumentUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger)), d = userStockDocumentDetailOutUserStockDocumentDetail(ledger) MANAGESESSION DOCKEDMODAL;}
closeStockDocumentLedger(ledger) += ACTION closeUserStockDocument(userStockDocumentUserStockDocumentDetail(userStockDocumentDetailOutUserStockDocumentDetail(ledger)));
typeStockDocumentLedger(l) += 'Учетный документ (польз.) расход' IF l IS OutUserStockDocumentDetail;


needToInLedgerUserStockDocumentDetail = sumItemUserStockDocumentDetail(d) > 0 OR sumContainerUserStockDocumentDetail(d) > 0;
@defineAggregation(userStockDocumentDetail, InUserStockDocumentDetail, needToInLedger);
                                                                          
isPostedStockDocumentLedger (ledger) += isPostedUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));  
isClosedStockDocumentLedger (ledger) += isClosedUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));                                                                                                                                                                                                                                                                                                                                                                                                                                                             
seriesStockDocumentLedger (ledger) += seriesUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));
numberStockDocumentLedger (ledger) += numberUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));
dateTimeStockDocumentLedger (ledger) += dateTimeUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));
stockStockDocumentLedger (ledger) += stockUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));
descriptionStockDocumentLedger (ledger) += descriptionUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));                                                                                                                                                                                                                                   
sumContainerIncStockDocumentLedger(ledger) += sumContainerUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));
sumItemIncStockDocumentLedger(ledger) += sumItemUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger));
editStockDocumentLedger(ledger) += ACTION NEWSESSION {FORM userStockDocument OBJECTS i = userStockDocumentUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger)), d = userStockDocumentDetailInUserStockDocumentDetail(ledger) MANAGESESSION DOCKEDMODAL;}
closeStockDocumentLedger(ledger) += ACTION closeUserStockDocument(userStockDocumentUserStockDocumentDetail(userStockDocumentDetailInUserStockDocumentDetail(ledger)));
typeStockDocumentLedger(l) += 'Учетный документ (польз.) приход' IF l IS InUserStockDocumentDetail;

//EXTEND CLASS UserStockDocumentDetail : IncStockDocumentLedger;
//                                                                          
//isPostedStockDocumentLedger (ledger) += TRUE IF ledger IS UserStockDocumentDetail;  
//isClosedStockDocumentLedger (ledger) += TRUE IF ledger IS UserStockDocumentDetail;                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
//seriesStockDocumentLedger (ledger) += seriesUserStockDocumentDetail(ledger);
//numberStockDocumentLedger (ledger) += numberUserStockDocumentDetail(ledger);
//dateTimeStockDocumentLedger (ledger) += dateTimeUserStockDocumentDetail(ledger);
//stockStockDocumentLedger (ledger) += stockUserStockDocumentDetail(ledger);
//descriptionStockDocumentLedger (ledger) += descriptionUserStockDocumentDetail(ledger);                                                                                                                                                                                                                                   
//sumContainerIncStockDocumentLedger(ledger) += sumContainerUserStockDocumentDetail(ledger);
//sumItemIncStockDocumentLedger(ledger) += sumItemUserStockDocumentDetail(ledger);
//editStockDocumentLedger(ledger) += ACTION (ledger) NEWSESSION {FORM userStockDocument OBJECTS i = userStockDocumentUserStockDocumentDetail(ledger), d = ledger MANAGESESSION DOCKEDMODAL;}
//closeStockDocumentLedger(ledger) += ACTION closeUserStockDocumentDetail(ledger);
//typeStockDocumentLedger(l) += 'Учетный документ' IF l IS UserStockDocumentDetail;
