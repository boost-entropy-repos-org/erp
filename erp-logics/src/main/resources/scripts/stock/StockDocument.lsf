MODULE StockDocument;

REQUIRE System, EmployeeStock, Utils, Operation;

CLASS ABSTRACT StockDocumentLedger 'Учетный документ';
TABLE stockDocumentLedger (StockDocumentLedger);

CLASS ABSTRACT IncStockDocumentLedger 'Учетный документ (приход)' : StockDocumentLedger;
CLASS ABSTRACT OutStockDocumentLedger 'Учетный документ (расход)' : StockDocumentLedger;

typeStockDocumentLedger 'Тип процесса' (ledger) = ABSTRACT VARSTRING[50] (StockDocumentLedger) PERSISTENT;

editStockDocumentLedger 'Редактировать' = ABSTRACT ACTION LIST (StockDocumentLedger) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

dateTimeStockDocumentLedger 'Дата/время' (ledger) = ABSTRACT DATETIME (StockDocumentLedger) PERSISTENT INDEXED;
dateStockDocumentLedger 'Дата' (ledger) = toDate(dateTimeStockDocumentLedger(ledger)) PERSISTENT;

isPostedStockDocumentLedger 'Проведен' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;

stockStockDocumentLedger (ledger) = ABSTRACT Stock (StockDocumentLedger) PERSISTENT;
nameStockStockDocumentLedger 'Отдел' (ledger) = nameStock(stockStockDocumentLedger(ledger));

numberStockDocumentLedger 'Номер документа' (ledger) = ABSTRACT STRING[18] (StockDocumentLedger) PERSISTENT;
seriesStockDocumentLedger 'Серия документа' (ledger) = ABSTRACT STRING[2] (StockDocumentLedger) PERSISTENT;

legalEntityStockDocumentLedger 'Контрагент' (ledger) = ABSTRACT LegalEntity (StockDocumentLedger) PERSISTENT;
nameLegalEntityStockDocumentLedger 'Контрагент' (ledger) = nameLegalEntity(legalEntityStockDocumentLedger(ledger));

legalEntityStockStockDocumentLedger 'Склад контрагента' (ledger) = ABSTRACT Stock (StockDocumentLedger) PERSISTENT;
nameLegalEntityStockStockDocumentLedger 'Склад контрагента' = nameStock(legalEntityStockStockDocumentLedger(ledger));

operationStockDocumentLedger 'Операция' (ledger) = ABSTRACT Operation(StockDocumentLedger) PERSISTENT;
nameOperationStockDocumentLedger 'Операция' (ledger) = nameOperation(operationStockDocumentLedger(ledger));

descriptionStockDocumentLedger 'Название документа' (ledger) = ABSTRACT VARSTRING[200] (StockDocumentLedger) PERSISTENT;

skipStockDocumentLedger 'Не проводить' (ledger) = ABSTRACT BOOLEAN (StockDocumentLedger) PERSISTENT;
activeStockDocumentLedger (ledger) = isPostedStockDocumentLedger(ledger) AND NOT skipStockDocumentLedger(ledger);

GROUP ledger 'Суммы (всего)' : public;
sumIncStockDocumentLedger 'Сумма прихода' (ledger) = ABSTRACT NUMERIC[16,2] (IncStockDocumentLedger) PERSISTENT IN ledger;
sumOutStockDocumentLedger 'Сумма расхода' (ledger) = ABSTRACT NUMERIC[16,2] (OutStockDocumentLedger) PERSISTENT IN ledger;
sumStockDocumentLedger 'Сумма' (ledger) = MULTI sumIncStockDocumentLedger(ledger), -sumOutStockDocumentLedger(ledger) PERSISTENT;

GROUP ledgerItem 'Суммы по товару' : public;
sumItemIncStockDocumentLedger 'Сумма прихода, товар' (ledger) = ABSTRACT NUMERIC[16,2] (IncStockDocumentLedger) PERSISTENT IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;
sumItemOutStockDocumentLedger 'Сумма расхода, товар' (ledger) = ABSTRACT NUMERIC[16,2] (OutStockDocumentLedger) PERSISTENT IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;
sumItemStockDocumentLedger 'Сумма, товар' (ledger) = MULTI sumItemIncStockDocumentLedger(ledger), -sumItemOutStockDocumentLedger(ledger) PERSISTENT;

GROUP ledgerContainer 'Суммы по таре' : public;
sumContainerIncStockDocumentLedger 'Сумма прихода, тара' (ledger) = ABSTRACT NUMERIC[16,2] (IncStockDocumentLedger) PERSISTENT IN ledgerContainer;
sumContainerOutStockDocumentLedger 'Сумма расхода, тара' (ledger) = ABSTRACT NUMERIC[16,2] (OutStockDocumentLedger) PERSISTENT IN ledgerContainer;
sumContainerStockDocumentLedger 'Сумма, тара' (ledger) = MULTI sumContainerIncStockDocumentLedger(ledger), -sumContainerOutStockDocumentLedger(ledger) PERSISTENT;

// -------------------------------------- Агрегированные суммы за интервал --------------------------------------------- //

countIncStockDocumentStockDateInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF incStockDocumentLedger IS IncStockDocumentLedger AND activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledger;

countOutStockDocumentStockDateInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF outStockDocumentLedger IS OutStockDocumentLedger AND activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledger;


sumItemIncStockDocumentStockDateInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;

sumItemOutStockDocumentStockDateInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;


sumContainerIncStockDocumentStockDateInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

sumContainerOutStockDocumentStockDateInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

// -------------------------------------- Суммы по операциям за интервал --------------------------------------------- //

countIncStockDocumentStockDateIntervalOperation 'Количество приходных док-ов' (stock, dtFrom, dtTo, operation)=
    GROUP SUM 1 IF incStockDocumentLedger IS IncStockDocumentLedger AND activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(incStockDocumentLedger) IN ledger;

countOutStockDocumentStockDateIntervalOperation 'Количество расходных док-ов' (stock, dtFrom, dtTo, operation)=
    GROUP SUM 1 IF outStockDocumentLedger IS OutStockDocumentLedger AND activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(outStockDocumentLedger) IN ledger;


sumItemIncStockDocumentStockDateIntervalOperation 'Сумма прихода, товар' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumItemIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(incStockDocumentLedger) IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;

sumItemOutStockDocumentStockDateIntervalOperation 'Сумма расхода, товар' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumItemOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(outStockDocumentLedger) IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;


sumContainerIncStockDocumentStockDateIntervalOperation 'Сумма прихода, тара' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumContainerIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(incStockDocumentLedger) IN ledgerContainer;

sumContainerOutStockDocumentStockDateIntervalOperation 'Сумма расхода, тара' (stock, dtFrom, dtTo, operation)=
    GROUP SUM sumContainerOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo, operationStockDocumentLedger(outStockDocumentLedger) IN ledgerContainer;
            
//-- Без операции            
countNotOperationIncStockDocumentStockDateInterval 'Количество приходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF incStockDocumentLedger IS IncStockDocumentLedger AND activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(incStockDocumentLedger)
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo  IN ledger;

countNotOperationOutStockDocumentStockDateInterval 'Количество расходных док-ов' (stock, dtFrom, dtTo)=
    GROUP SUM 1 IF outStockDocumentLedger IS OutStockDocumentLedger AND activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(outStockDocumentLedger)
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledger;


sumItemNotOperationIncStockDocumentStockDateInterval 'Сумма прихода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(incStockDocumentLedger)        
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;

sumItemNotOperationOutStockDocumentStockDateInterval 'Сумма расхода, товар' (stock, dtFrom, dtTo)=
    GROUP SUM sumItemOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(outStockDocumentLedger)
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;


sumContainerNotOperationIncStockDocumentStockDateInterval 'Сумма прихода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerIncStockDocumentLedger(incStockDocumentLedger) IF activeStockDocumentLedger(incStockDocumentLedger)
        AND dateStockDocumentLedger(incStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(incStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(incStockDocumentLedger)        
            BY stockStockDocumentLedger(incStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;

sumContainerNotOperationOutStockDocumentStockDateInterval 'Сумма расхода, тара' (stock, dtFrom, dtTo)=
    GROUP SUM sumContainerOutStockDocumentLedger(outStockDocumentLedger) IF activeStockDocumentLedger(outStockDocumentLedger)
        AND dateStockDocumentLedger(outStockDocumentLedger) >= dtFrom AND dateStockDocumentLedger(outStockDocumentLedger) <= dtTo
        AND NOT operationStockDocumentLedger(outStockDocumentLedger)
            BY stockStockDocumentLedger(outStockDocumentLedger), dtFrom, dtTo IN ledgerContainer;
// -------------------------------------- Остатки по суммам --------------------------------------------- //

currentSumStockDocumentLedger 'Текущий остаток по документам' (stock) = GROUP SUM sumStockDocumentLedger (ledger) IF activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger) PERSISTENT;

sumAccountBDocumentLedgerDateTime 'Остаток на начало' (stock, dateTime) = (currentSumStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                          [= GROUP SUM sumStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) >= dateTime AND activeStockDocumentLedger(ledger)
                                                                                 BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumAccountADocumentLedgerDateTime 'Остаток на конец' (stock, dateTime) = (currentSumStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                         [= GROUP SUM sumStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) > dateTime AND activeStockDocumentLedger(ledger)
                                                                                BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumAccountBDocumentLedgerDate 'Остаток на начало' (stock, date) = (currentSumStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                  [= GROUP SUM sumStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) >= date AND activeStockDocumentLedger(ledger)
                                                                         BY stockStockDocumentLedger(ledger), date](stock, date) IN ledger MINCHARWIDTH 12 PREFCHARWIDTH 12;

sumAccountADocumentLedgerDate 'Остаток на конец' (stock, date) = (currentSumStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                 [= GROUP SUM sumStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) > date AND activeStockDocumentLedger(ledger)
                                                                        BY stockStockDocumentLedger(ledger), date](stock, date) IN ledger MINCHARWIDTH 12 PREFCHARWIDTH 12;

// -------------------------------------- Остатки по суммам (товар) --------------------------------------------- //

currentSumItemStockDocumentLedger 'Текущий остаток по документам, товар' (stock) = GROUP SUM sumItemStockDocumentLedger (ledger) IF activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger) PERSISTENT;

sumItemAccountBDocumentLedgerDateTime 'Остаток на начало, товар' (stock, dateTime) = (currentSumItemStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                     [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) >= dateTime AND activeStockDocumentLedger(ledger)
                                                                                            BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumItemAccountADocumentLedgerDateTime 'Остаток на конец, товар' (stock, dateTime) = (currentSumItemStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                    [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) > dateTime AND activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumItemAccountBDocumentLedgerDate 'Остаток на начало, товар' (stock, date) = (currentSumItemStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                             [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) >= date AND activeStockDocumentLedger(ledger)
                                                                                    BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerItem MINCHARWIDTH 12 PREFCHARWIDTH 12;

sumItemAccountADocumentLedgerDate 'Остаток на конец, товар' (stock, date) = (currentSumItemStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                            [= GROUP SUM sumItemStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) > date AND activeStockDocumentLedger(ledger)
                                                                                   BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerItem  MINCHARWIDTH 12 PREFCHARWIDTH 12;

// -------------------------------------- Остатки по суммам (тара) --------------------------------------------- //

currentSumContainerStockDocumentLedger 'Текущий остаток по документам, тара' (stock) = GROUP SUM sumContainerStockDocumentLedger (ledger) IF activeStockDocumentLedger(ledger)
                                                                                           BY stockStockDocumentLedger(ledger) PERSISTENT;
sumContainerAccountBDocumentLedgerDateTime 'Остаток на начало, тара' (stock, dateTime) = (currentSumContainerStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                         [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) >= dateTime AND activeStockDocumentLedger(ledger)
                                                                                                BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumContainerAccountADocumentLedgerDateTime 'Остаток на конец, тара' (stock, dateTime) = (currentSumContainerStockDocumentLedger(stock) IF dateTime IS DATETIME) (-)
                                                                                        [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateTimeStockDocumentLedger(ledger) > dateTime AND activeStockDocumentLedger(ledger)
                                                                                               BY stockStockDocumentLedger(ledger), dateTime](stock, dateTime);

sumContainerAccountBDocumentLedgerDate 'Остаток на начало, тара' (stock, date) = (currentSumContainerStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                                 [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) >= date AND activeStockDocumentLedger(ledger)
                                                                                        BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerContainer;

sumContainerAccountADocumentLedgerDate 'Остаток на конец, тара' (stock, date) = (currentSumContainerStockDocumentLedger(stock) IF date IS DATE) (-)
                                                                                [= GROUP SUM sumContainerStockDocumentLedger (ledger) IF dateStockDocumentLedger(ledger) > date AND activeStockDocumentLedger(ledger)
                                                                                       BY stockStockDocumentLedger(ledger), date](stock, date) IN ledgerContainer;

// -------------------------------------- Подитоги --------------------------------------------- //

subtotalItemIncStockDocumentStockDateInterval 'Итого с остатком, товар' (stock, dtFrom, dtTo) =
    sumItemAccountBDocumentLedgerDate(stock, dtFrom) (+)
     sumItemIncStockDocumentStockDateInterval(stock, dtFrom, dtTo) IN ledgerItem  MINCHARWIDTH 12 PREFCHARWIDTH 12;

subtotalContainerIncStockDocumentStockDateInterval 'Итого с остатком, тара' (stock, dtFrom, dtTo) =
    sumContainerAccountBDocumentLedgerDate(stock, dtFrom) (+)
     sumContainerIncStockDocumentStockDateInterval(stock, dtFrom, dtTo) IN ledgerContainer MINCHARWIDTH 12 PREFCHARWIDTH 12;


// ------------------------------------------- Ответственные лица --------------------------------------------- //

@defineHistorizableCustom(responsiblePerson, 'Материально ответственное лицо', Employee, name, customUser, stock, nameStock, responsibility );
// Должность ФИО
positionNameResponsiblePersonStock 'Материально ответственное лицо' (stock) = positionNameEmployee(responsiblePersonStock(stock)) IN responsibility; 
namePositionResponsiblePersonStock 'Материально ответственное лицо (должность)'= namePositionEmployee(responsiblePersonStock(stock));
CONSTRAINT dataResponsiblePersonStockDate(stock, date) AND NOT inStockEmployee(stock, dataResponsiblePersonStockDate(stock, date))
    CHECKED BY dataResponsiblePersonStockDate MESSAGE 'МОЛ не сотрудник отдела';

@defineHistorizableCustom(booker, 'Бухгалтер, принимающий товарный отчет', Employee, name, customUser, stock, nameStock, responsibility );
// Должность ФИО
positionNameBookerStock 'Бухгалтер, принимающий товарный отчет' (stock) = positionNameEmployee(bookerStock(stock)) IN responsibility; 
namePositionBookerStock 'Бухгалтер, принимающий товарный отчет (должность)'= namePositionEmployee(bookerStock(stock));
CONSTRAINT dataBookerStockDate(stock, date) AND NOT inStockEmployee(stock, dataBookerStockDate(stock, date))
    CHECKED BY dataBookerStockDate MESSAGE 'Бухгалтер не сотрудник отдела';

@defineHistorizableCustom(controller, 'Кто проверяет товарный отчет', Employee, name, customUser, stock, nameStock, responsibility );

CONSTRAINT dataControllerStockDate(stock, date) AND NOT inStockEmployee(stock, dataControllerStockDate(stock, date))
    CHECKED BY dataControllerStockDate MESSAGE 'Проверяющий не сотрудник отдела';
// Должность ФИО
positionNameControllerStock 'Кто проверяет товарный отчет' (stock) = positionNameEmployee(controllerStock(stock)) IN responsibility; 
namePositionControllerStock 'Кто проверяет товарный отчет (должность)'= namePositionEmployee(bookerStock(stock));


// -------------------------------------- Формы --------------------------------------------- //

FORM sumStockDocumentLedger 'Товарный отчет'
    OBJECTS params = (dtFrom = DATE, dtTo = DATE) FIXED PANEL,
            ds = Stock FIXED PANEL
    PROPERTIES objFrom = OBJVALUE(dtFrom), objTo = OBJVALUE(dtTo)
    PROPERTIES(ds) SELECTOR nameStock, nameLegalEntityStock

    PROPERTIES sumAccountBDocumentLedgerDate(ds, dtFrom), sumItemAccountBDocumentLedgerDate(ds, dtFrom), sumContainerAccountBDocumentLedgerDate(ds, dtFrom),
               sumItemAccountADocumentLedgerDate(ds, dtTo), sumContainerAccountADocumentLedgerDate(ds, dtTo), sumAccountADocumentLedgerDate(ds, dtTo)
    PROPERTIES(ds, dtFrom, dtTo) countIncStockDocumentStockDateInterval, countOutStockDocumentStockDateInterval,
               sumItemIncStockDocumentStockDateInterval, sumContainerIncStockDocumentStockDateInterval,
               subtotalItemIncStockDocumentStockDateInterval, subtotalContainerIncStockDocumentStockDateInterval,
               sumItemOutStockDocumentStockDateInterval, sumContainerOutStockDocumentStockDateInterval

    OBJECTS il = IncStockDocumentLedger
    PROPERTIES(il) SELECTOR iDateTime = dateTimeStockDocumentLedger, iObjName = objectClassName, iDescription = descriptionStockDocumentLedger,
                   nameOperationStockDocumentLedger, nameLegalEntityStockDocumentLedger, nameLegalEntityStockStockDocumentLedger, 
                   sumItemIncStockDocumentLedger, sumContainerIncStockDocumentLedger, sumIncStockDocumentLedger
    PROPERTIES(il) editStockDocumentLedger               
    FILTERS activeStockDocumentLedger(il),
            stockStockDocumentLedger(il) == ds,
            dateStockDocumentLedger(il) >= dtFrom,
            dateStockDocumentLedger(il) <= dtTo,
            isCompanyStock(ds)
    ORDER BY iDateTime

    OBJECTS ol = OutStockDocumentLedger
    PROPERTIES(ol) SELECTOR oDateTime = dateTimeStockDocumentLedger, oObjName = objectClassName, oDescription = descriptionStockDocumentLedger,
                   nameOperationStockDocumentLedger, nameLegalEntityStockDocumentLedger, nameLegalEntityStockStockDocumentLedger, 
                   sumItemOutStockDocumentLedger, sumContainerOutStockDocumentLedger, sumOutStockDocumentLedger
    PROPERTIES(ol) editStockDocumentLedger                
    FILTERS activeStockDocumentLedger(ol),
            stockStockDocumentLedger(ol) == ds,
            dateStockDocumentLedger(ol) >= dtFrom,
            dateStockDocumentLedger(ol) <= dtTo
    ORDER BY oDateTime
;
@extendFormFilterStockAccess(ds, sumStockDocumentLedger);


DESIGN sumStockDocumentLedger {

    NEW header {
        type = CONTAINERH;
        NEW dates {
            type = CONTAINERH;
            caption = 'Даты';
            ADD PROPERTY(objFrom) {
                caption = 'Дата (с)';
            }
            ADD PROPERTY(objTo) {
                caption = 'Дата (по)';
            }
        }
        NEW department {
            caption = 'Отдел';
            ADD PROPERTY (nameStock(ds)) {
                caption = 'Название';
            }
        }
        NEW legalEntity {
            caption = 'Организация';
            ADD PROPERTY (nameLegalEntityStock(ds)) {
                caption = 'Название';
            }
        }
        NEW print {
            caption = 'Печать';
        }
    }

    NEW sums {
        caption = 'Суммы';
        type = CONTAINERV;
        ADD ds.ledgerItem;
        ADD ds.ledgerContainer;
        ADD ds.ledger;
    }

    NEW topContainer{
        fill = 1;

        type = SPLITV;
        type = CONTAINERV;

        ADD il.box;
        ADD ol.box;
    }

    ADD functions.box;
}

NAVIGATOR {
    stockReports {
        ADD sumStockDocumentLedger;
    }
}
// ------------------------------------------ Макросы ----------------------------------------------------- //
META implementStockDocumentLedger (concrete, stockProp)
    seriesStockDocumentLedger (ledger) += series###concrete(ledger);
    numberStockDocumentLedger (ledger) += number###concrete(ledger);
    dateTimeStockDocumentLedger (ledger) += dateTime###concrete(ledger);
    isPostedStockDocumentLedger (ledger) += isPosted###concrete(ledger);
    stockStockDocumentLedger (ledger) += stockProp###concrete(ledger);
    descriptionStockDocumentLedger (ledger) += description###concrete(ledger);
END

META implementStockDocumentLedgerInc (concrete, stockProp)
    EXTEND CLASS concrete : IncStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp);
END

META implementStockDocumentLedgerOut (concrete, stockProp)
    EXTEND CLASS concrete : OutStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp);
END

META extendStockFormStockDocumentLedger(form, object)
    EXTEND FORM form
        PROPERTIES(object) SHOWIF isCompanyStock(object) nameCustomUserResponsiblePersonStock, nameCustomUserBookerStock, nameCustomUserControllerStock
    ;
END
// -------------------------------- NameSpace ---------------------------------- //
META implementStockDocumentLedger (concrete, stockProp, NS)
    seriesStockDocumentLedger (ledger) += NS.series###concrete(ledger);
    numberStockDocumentLedger (ledger) += NS.number###concrete(ledger);
    dateTimeStockDocumentLedger (ledger) += NS.dateTime###concrete(ledger);
    isPostedStockDocumentLedger (ledger) += NS.isPosted###concrete(ledger);
    stockStockDocumentLedger (ledger) += NS.stockProp###concrete(ledger);
    descriptionStockDocumentLedger (ledger) += NS.description###concrete(ledger);
END
META implementStockDocumentLedgerInc (concrete, stockProp, NS)
    EXTEND CLASS NS.concrete : IncStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp, NS);
END
META implementStockDocumentLedgerOut (concrete, stockProp, NS)
    EXTEND CLASS NS.concrete : OutStockDocumentLedger;
    @implementStockDocumentLedger (concrete, stockProp, NS);
END