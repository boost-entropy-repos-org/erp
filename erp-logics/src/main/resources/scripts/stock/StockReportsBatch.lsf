MODULE StockReportsBatch;

REQUIRE StockReports, PriceListLedgerAccount;

NAMESPACE StockReports;

accountSumB 'Сумма учетная' (Batch batch, DATETIME dateTime) =
    NUMERIC[32,9]([ = GROUP BY Batch bt, DATETIME dt SUM accountSumB(bt, Stock st, dt) IF inBackSheet(st)](batch, dateTime));

//остатки по партиям
FORM printListBalanceBatchesStock 'Остатки по партиям'
    OBJECTS d = DATETIME PANEL
    PROPERTIES(d) dateTime = VALUE

    PROPERTIES inBackSheetStocks()

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumB(gt)

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY date, name, idBarcodeSku, nameSku, shortNameUOM//, shippedQuantityBatch
    FILTERS inSession(group(gt, sku(bt)))
    ORDER          date(bt), name(bt), nameSku(bt)

    PROPERTIES(bt) READONLY balanceB
    PROPERTIES(bt, d) READONLY accountSumB
    FILTERS balanceB(bt)
;

printListBalanceBatches 'Списком' (DATETIME dateTime, GroupType gtype) =
    { PRINT printListBalanceBatchesStock OBJECTS d = dateTime, gt = gtype; }  IMAGE 'print.png' IN print;

accountSumBSkuBatch 'Учетная сумма на начало дня(по партиям)' (Group group, DATETIME dateTime) =
    NUMERIC[32,9]([ = GROUP BY Group group, DATETIME dt SUM accountSumBSkuBatch(group, Stock st, dt) IF inBackSheet(st)](group, dateTime));

FORM printBalanceBatchesStock 'Остатки по партиям'
    OBJECTS d = DATETIME PANEL
    PROPERTIES(d) dateTime = VALUE

    PROPERTIES inBackSheetStocks()

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumB(gt)

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalName(sk)
    ORDER canonicalName(sk)
    FILTERS inSession(sk) AND countSku(sk, gt)
    FILTERS groupType(sk) == gt
    PROPERTIES(sk, d) READONLY accountSumBSkuBatch
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY date, name, idBarcodeSku, nameSku, shortNameUOM//, shippedQuantityBatch
    FILTERS           group(gt, sku(bt)) == sk
    ORDER          date(bt), name(bt), nameSku(bt)

    PROPERTIES(bt) READONLY balanceB
    PROPERTIES(bt, d) READONLY accountSumB
    FILTERS balanceB(bt)
;

printBalanceBatches 'По группам' (DATETIME dateTime, GroupType gtype) =
    { PRINT printBalanceBatchesStock OBJECTS d = dateTime, gt = gtype; }  IMAGE 'print.png' IN print;

showAccountSumBatch 'Показывать учетные суммы по партиям в отчете по остаткам' = DATA BOOLEAN ();
EXTEND FORM options
    PROPERTIES() showAccountSumBatch
;
DESIGN options {
    stock1 {
        MOVE PROPERTY(showAccountSumBatch());
    }
}

accountSumRecBSkuBatch 'Учетная сумма (по партиям)' (Group group, DATETIME dateTime) =
    NUMERIC[32,9]([ = GROUP BY Group group, DATETIME dt SUM accountSumRecBSkuBatch(group, Stock st, dt) IF inBackSheet(st)](group, dateTime));
accountSumBatchB 'Сумма учетная по партиям' (Sku sku, DATETIME dateTime) =
    NUMERIC[32,9]([ = GROUP BY Sku sk, DATETIME dt SUM accountSumBatchB(sk, Stock st, dt) IF inBackSheet(st)](sku, dateTime));

EXTEND FORM reportBalanceStock
    PROPERTIES(sk, d) READONLY accountSumRecBSkuBatch SHOWIF showAccountSumBatch()

    PROPERTIES(s, d) READONLY accountSumBatchB SHOWIF showAccountSumBatch()

    FILTERGROUP incorrectSum FILTER 'Неправильная сумма по партиям' abs(sumB(s) (-) accountSumBatchB(s, d)) > 1 'F9'   

    PROPERTIES(bt, d) READONLY accountSumB
    PROPERTIES(d, gt) printListBalanceBatches, printBalanceBatches
;

DESIGN reportBalanceStock {
    print1 {
        MOVE PROPERTY(printListBalanceBatches(d,gt));
        MOVE PROPERTY(printBalanceBatches(d,gt));
    }
}