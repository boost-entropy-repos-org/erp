MODULE SupplierStockReports;

REQUIRE StockReports, SaleLedger, PurchaseLedger, PurchaseShipment;

NAMESPACE StockReports;

inReport 'Вкл.' = DATA LOCAL BOOLEAN (Stock);

//-- закупка
quantityPurchaseSupplierFromTo 'Закуплено за интервал (кол-во)' = GROUP SUM quantityPurchaseSupplier (Sku sku, Stock stock, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inReport(stock)
    BY sku, supplierStock, dateFrom, dateTo;
sumPurchaseSupplierFromTo 'Закуплено за интервал (сумма с НДС)' = GROUP SUM sumPurchaseSupplier (Sku sku, Stock stock, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inReport(stock)
    BY sku, supplierStock, dateFrom, dateTo;    
supplierSumPurchaseSupplierFromTo 'Закуплено за интервал (сумма без НДС)' = GROUP SUM 
    (sumPurchaseSupplier (Sku sku, Stock stock, Stock supplierStock, DATE dateFrom, DATE dateTo) (-)
    sumVATPurchaseSupplier (sku, stock, supplierStock, dateFrom, dateTo)) IF inReport(stock)
        BY sku, supplierStock, dateFrom, dateTo;       
averagePricePurchaseSupplier 'Средняя цена закупки с НДС' =  sumPurchaseSupplierFromTo(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) /
    quantityPurchaseSupplierFromTo(sku, supplierStock, dateFrom, dateTo);         

quantityPurchaseSupplierFromTo 'Закуплено за интервал (кол-во)' = GROUP SUM quantityPurchaseSupplierFromTo(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom, dateTo;
sumPurchaseSupplierFromTo 'Закуплено за интервал (сумма с НДС)' = GROUP SUM sumPurchaseSupplierFromTo(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom, dateTo;
supplierSumPurchaseSupplierFromTo 'Закуплено за интервал (сумма без НДС)' = GROUP SUM supplierSumPurchaseSupplierFromTo(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom, dateTo;

//-- реализация         
quantitySoldSupplier 'Реализация (кол-во)' (sku, supplierStock, dateFrom, dateTo)= GROUP SUM 
    quantitySold(Batch batch, Stock stock, DATE dateFrom, DATE dateTo) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom, dateTo; 
sumSoldSupplier 'Реализация (сумма)' (sku, supplierStock, dateFrom, dateTo)= GROUP SUM 
    sumSold(Batch batch, Stock stock, DATE dateFrom, DATE dateTo) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom, dateTo;  
averagePriceSupplier 'Средняя цена реализации' =  sumSoldSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) /
    (quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) IF quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) !=0);

quantitySoldSupplierFromTo 'Реализация (кол-во)' = GROUP SUM quantitySoldSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom, dateTo;
sumSoldSupplierFromTo 'Реализация (сумма)' = GROUP SUM sumSoldSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom, dateTo;

//-- р-ия в ценах поставщика  
sumSaleSupplier 'Продано за интервал (сумма с НДС)' (batch, stock, dateFrom, dateTo)= GROUP SUM 
    quantitySold(Batch batch, Stock stock, DATE date)* invoicePriceInvoiceDetail(batch)
    IF date >= DATE dateFrom AND date <= DATE dateTo AND inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom, dateTo;   
supplierSumSaleSupplier 'Продано за интервал (сумма без НДС)' (batch, stock, dateFrom, dateTo)= GROUP SUM 
    quantitySold(Batch batch, Stock stock, DATE date)* priceInvoiceDetail(batch)
    IF date >= DATE dateFrom AND date <= DATE dateTo AND inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom, dateTo;    
averageSalePriceSupplier 'Средняя цена реализации с НДС' =  sumSaleSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) /
    (quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) IF quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) !=0);        

sumSaleSupplierFromTo 'Продано за интервал (сумма с НДС)' = GROUP SUM sumSaleSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom, dateTo;
supplierSumSaleSupplierFromTo 'Продано за интервал (сумма без НДС)' = GROUP SUM supplierSumSaleSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom, dateTo;

// остаток на начало
balanceBSupplierFrom 'Остаток на начало'  =  GROUP SUM balanceB(Batch batch, Stock stock, DATE dateFrom) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom;           
sumBSupplierFrom 'Сумма с НДС начало'  =  GROUP SUM balanceB(Batch batch, Stock stock, DATE dateFrom)*invoicePriceInvoiceDetail(batch) IF inReport(stock)    
        BY sku(batch), supplierStock(batch), dateFrom;   
supplierSumBSupplierFrom 'Сумма без НДС начало'  =  GROUP SUM balanceB(Batch batch, Stock stock, DATE dateFrom)*priceInvoiceDetail(batch) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom;    
                       
balanceBSupplierFrom 'Остаток на начало' = GROUP SUM balanceBSupplierFrom(Sku sku, Stock supplierStock, DATE dateFrom) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom;
sumBSupplierFrom 'Сумма с НДС начало' = GROUP SUM sumBSupplierFrom(Sku sku, Stock supplierStock, DATE dateFrom) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom;                       
supplierSumBSupplierFrom 'Сумма без НДС начало' = GROUP SUM supplierSumBSupplierFrom(Sku sku, Stock supplierStock, DATE dateFrom) IF inSession(skuGroup(sku))
    BY supplierStock, dateFrom;   

// остаток на конец
balanceASupplierTo'Остаток на конец'  =  GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateTo;           
sumASupplierTo 'Сумма с НДС конец'  =  GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo)*invoicePriceInvoiceDetail(batch) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateTo;   
supplierSumASupplierTo 'Сумма без НДС конец'  =  GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo)*priceInvoiceDetail(batch) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateTo; 

balanceASupplierTo 'Остаток на конец' = GROUP SUM balanceASupplierTo(Sku sku, Stock supplierStock, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateTo;
sumASupplierTo 'Сумма с НДС конец' = GROUP SUM sumASupplierTo(Sku sku, Stock supplierStock, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateTo;                       
supplierSumASupplierTo 'Сумма без НДС конец' = GROUP SUM supplierSumASupplierTo(Sku sku, Stock supplierStock, DATE dateTo) IF inSession(skuGroup(sku))
    BY supplierStock, dateTo;   
       
stocksReport 'Склады' () = GROUP CONCAT name(Stock stock) IF inReport(stock) , ', '                                                 
                                                 ORDER stock MINCHARWIDTH 30 PREFCHARWIDTH 50 PERSISTENT;

quantityPurchaseSupplierFromToLocal 'Закуплено за интервал (кол-во)' = DATA LOCAL NUMERIC[16,5](Sku);
quantitySoldSupplierLocal 'Реализация (кол-во)' = DATA LOCAL NUMERIC[16,5](Sku);
balanceASupplierToLocal'Остаток на конец'  =  DATA LOCAL NUMERIC[16,5](Sku);       
sumPurchaseSupplierFromToLocal 'Закуплено за интервал (сумма с НДС)' =  DATA LOCAL NUMERIC[18,4](Sku);     
sumSoldSupplierLocal 'Реализация (сумма)' = DATA LOCAL NUMERIC[18,4](Sku); 
sumSaleSupplierLocal 'Продано за интервал (сумма с НДС)' = DATA LOCAL NUMERIC[50,20](Sku); 
averagePricePurchaseSupplierLocal 'Средняя цена закупки с НДС' = DATA LOCAL NUMERIC[34,15](Sku);     
averagePriceSupplierLocal 'Средняя цена реализации' = DATA LOCAL NUMERIC[34,15](Sku);     
averageSalePriceSupplierLocal 'Средняя цена реализации с НДС' = DATA LOCAL NUMERIC[66,31](Sku);  
         
FORM supplierStockReportPrint 'По поставщикам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)    
    
    OBJECTS st = Stock FIXED PANEL
    PROPERTIES (st) SELECTOR name, fullName, nameLegalEntity, fullNameLegalEntity
    FILTERS isSupplier(st)
    PROPERTIES  TODRAW st stocksReport(), currentDate(), sessionConcatSkuGroups()
    
    OBJECTS sk = Sku  
    PROPERTIES(sk) id, idBarcode, name, shortNameUOM
    PROPERTIES (sk) quantityPurchaseSupplierFromToLocal, quantitySoldSupplierLocal, balanceASupplierToLocal
    PROPERTIES (sk) sumPurchaseSupplierFromToLocal, sumSoldSupplierLocal, sumSaleSupplierLocal 
    PROPERTIES (sk) averagePricePurchaseSupplierLocal, averagePriceSupplierLocal, averageSalePriceSupplierLocal

    PROPERTIES (sk,st,dFrom,dTo)  supplierSumPurchaseSupplierFromTo, supplierSumSaleSupplier 
    PROPERTIES (sk,st,dFrom) balanceBSupplierFrom, sumBSupplierFrom, supplierSumBSupplierFrom 
    PROPERTIES (sk,st,dTo) sumASupplierTo, supplierSumASupplierTo          
    ORDER BY name(sk)
    
//Итоги считаются в отчёте 

    FILTERS quantityPurchaseSupplierFromToLocal(sk) OR 
            quantitySoldSupplierLocal(sk) OR 
            balanceASupplierToLocal(sk)
    FILTERS inSession(skuGroup(sk)) 
;

supplierReportPrintXLS 'Отчет по поставщику (xls)' (Stock st,DATE dFrom,DATE dTo) = ACTION {
    quantityPurchaseSupplierFromToLocal (Sku sku) <- [= GROUP SUM quantityPurchaseSupplier (Sku sku, Stock stock, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inReport(stock)
                                                 BY sku, supplierStock, dateFrom, dateTo](sku, st, dFrom, dTo);
    sumPurchaseSupplierFromToLocal (Sku sku) <- [= GROUP SUM sumPurchaseSupplier (Sku sku, Stock stock, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inReport(stock)
        BY sku, supplierStock, dateFrom, dateTo](sku, st, dFrom, dTo);   
    averagePricePurchaseSupplierLocal (Sku sku) <- [= sumPurchaseSupplierFromToLocal(Sku sku) / quantityPurchaseSupplierFromToLocal(sku)](sku);         

    quantitySoldSupplierLocal (Sku sku) <- [= GROUP SUM quantitySold(Batch batch, Stock stock, DATE dateFrom, DATE dateTo) IF inReport(stock)
            BY sku(batch), supplierStock(batch), dateFrom, dateTo](sku, st, dFrom, dTo); 
    sumSoldSupplierLocal (Sku sku) <- [= GROUP SUM sumSold(Batch batch, Stock stock, DATE dateFrom, DATE dateTo) IF inReport(stock)
            BY sku(batch), supplierStock(batch), dateFrom, dateTo](sku, st, dFrom, dTo);    
    averagePriceSupplierLocal (Sku sku) <- [=  sumSoldSupplierLocal(Sku sku) / (quantitySoldSupplierLocal(sku) IF quantitySoldSupplierLocal(sku) !=0)](sku);

    sumSaleSupplierLocal (Sku sku) <- [= GROUP SUM quantitySold(Batch batch, Stock stock, DATE date)* invoicePriceInvoiceDetail(batch)
        IF date >= DATE dateFrom AND date <= DATE dateTo AND inReport(stock) BY sku(batch), supplierStock(batch), dateFrom, dateTo](sku, st, dFrom, dTo);   
    averageSalePriceSupplierLocal (Sku sku) <- [=  sumSaleSupplierLocal(Sku sku) / (quantitySoldSupplierLocal(sku) IF quantitySoldSupplierLocal(sku) !=0)](sku);     

    balanceASupplierToLocal(Sku sku)  <- [= GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo) IF inReport(stock)
            BY sku(batch), supplierStock(batch), dateTo](sku, st, dTo);    

    PRINT supplierStockReportPrint OBJECTS st=st, dFrom = dFrom, dTo=dTo XLS;
}IMAGE 'print.png' IN print;    

supplierReportPrintXLSX 'Отчет по поставщику (xlsx)' (Stock st,DATE dFrom,DATE dTo) = ACTION {
    quantityPurchaseSupplierFromToLocal (Sku sku) <- [= GROUP SUM quantityPurchaseSupplier (Sku sku, Stock stock, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inReport(stock)
                                                 BY sku, supplierStock, dateFrom, dateTo](sku, st, dFrom, dTo);
    sumPurchaseSupplierFromToLocal (Sku sku) <- [= GROUP SUM sumPurchaseSupplier (Sku sku, Stock stock, Stock supplierStock, DATE dateFrom, DATE dateTo) IF inReport(stock)
        BY sku, supplierStock, dateFrom, dateTo](sku, st, dFrom, dTo);   
    averagePricePurchaseSupplierLocal (Sku sku) <- [= sumPurchaseSupplierFromToLocal(Sku sku) / quantityPurchaseSupplierFromToLocal(sku)](sku);         

    quantitySoldSupplierLocal (Sku sku) <- [= GROUP SUM quantitySold(Batch batch, Stock stock, DATE dateFrom, DATE dateTo) IF inReport(stock)
            BY sku(batch), supplierStock(batch), dateFrom, dateTo](sku, st, dFrom, dTo); 
    sumSoldSupplierLocal (Sku sku) <- [= GROUP SUM sumSold(Batch batch, Stock stock, DATE dateFrom, DATE dateTo) IF inReport(stock)
            BY sku(batch), supplierStock(batch), dateFrom, dateTo](sku, st, dFrom, dTo);    
    averagePriceSupplierLocal (Sku sku) <- [=  sumSoldSupplierLocal(Sku sku) / (quantitySoldSupplierLocal(sku) IF quantitySoldSupplierLocal(sku) !=0)](sku);

    sumSaleSupplierLocal (Sku sku) <- [= GROUP SUM quantitySold(Batch batch, Stock stock, DATE date)* invoicePriceInvoiceDetail(batch)
        IF date >= DATE dateFrom AND date <= DATE dateTo AND inReport(stock) BY sku(batch), supplierStock(batch), dateFrom, dateTo](sku, st, dFrom, dTo);   
    averageSalePriceSupplierLocal (Sku sku) <- [=  sumSaleSupplierLocal(Sku sku) / (quantitySoldSupplierLocal(sku) IF quantitySoldSupplierLocal(sku) !=0)](sku);     

    balanceASupplierToLocal(Sku sku)  <- [= GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo) IF inReport(stock)
            BY sku(batch), supplierStock(batch), dateTo](sku, st, dTo);    

    PRINT supplierStockReportPrint OBJECTS st=st, dFrom = dFrom, dTo=dTo XLSX;
}IMAGE 'print.png' IN print;    

// склад поставщика 
inSupplierStockReport 'Вкл.' = DATA LOCAL BOOLEAN (Stock);
countInSupplierStockReport = GROUP SUM 1 IF inSupplierStockReport(Stock st) ;    
nameInSupplierStockReport 'Склады' () =
    GROUP CONCAT name(Stock st) IF inSupplierStockReport(st) ,', ' PREFCHARWIDTH 30;    

FORM dialogSupplierStocks 'Выбор складов поставщика'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL    
    OBJECTS gt = GroupType FIXED PANEL
        
    TREE stockTree a = STRING[3], sg = StockGroup PARENT parent
    PROPERTIES READONLY OBJVALUE(a), name(sg)
    ORDER BY name(sg)
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY id, name
    PROPERTIES (s) inSupplierStockReport
    ORDER BY name(s)
    FILTERS isParent(sg, s) OR (s IS Stock AND NOT sg),
            isSeller(s),
            countCompanyStock(sg) OR countSupplierStock(sg)

    FILTERGROUP inactiveStock FILTER 'Активный' active(s) 'ctrl F10' DEFAULT    
    FILTERGROUP select FILTER 'Отм.' inSupplierStockReport(s) 'F9' 
    FILTERGROUP sold FILTER 'С продажей' quantitySoldSupplierFromTo(s,dFrom,dTo) 'F8'
;

DESIGN dialogSupplierStocks {
    main{
        preferredSize = (1024, 768);        
        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(name(s)){
                    minimumCharWidth = 35;
                    preferredCharWidth = 35;
                }
            }
        }

        MOVE functions.box;
    }
}
    

FORM supplierStockReportPrintAll 'По поставщикам'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)    
    
    OBJECTS st = Stock 
    PROPERTIES (st) SELECTOR name, fullName, nameLegalEntity, fullNameLegalEntity
    FILTERS inSupplierStockReport(st)
    PROPERTIES  TODRAW st stocksReport(), currentDate(), sessionConcatSkuGroups(), nameInSupplierStockReport()
             
    PROPERTIES(st,dFrom,dTo) quantityPurchaseSupplierFromTo,sumPurchaseSupplierFromTo, supplierSumPurchaseSupplierFromTo,
                quantitySoldSupplierFromTo,sumSoldSupplierFromTo,
                sumSaleSupplierFromTo, supplierSumSaleSupplierFromTo
    PROPERTIES(st,dFrom) balanceBSupplierFrom,  sumBSupplierFrom,  supplierSumBSupplierFrom        
    PROPERTIES(st,dTo) balanceASupplierTo,  sumASupplierTo,  supplierSumASupplierTo                              
;

supplierReportPrintAll 'Отчет по поставщику (xls)' (Stock st,DATE dFrom,DATE dTo) = ACTION {
    inSupplierStockReport(Stock stock) <- NULL;
    inSupplierStockReport(st) <- TRUE;
    PRINT supplierStockReportPrintAll OBJECTS dFrom = dFrom, dTo=dTo XLS;
    inSupplierStockReport(Stock stock) <- NULL;
}IMAGE 'print.png' IN print;

supplierReportPrintAllSelect 'Отчет по поставщикам (xls)' (DATE dFrom,DATE dTo) = ACTION {
    inSupplierStockReport(Stock st) <- NULL;
    FORM dialogSupplierStocks OBJECTS dFrom = dFrom, dTo=dTo ;
    PRINT supplierStockReportPrintAll OBJECTS dFrom = dFrom, dTo=dTo XLS;
    inSupplierStockReport(Stock st) <- NULL;
}IMAGE 'print.png' IN print; 

FORM supplierStockReport 'По поставщикам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)    
    
    OBJECTS sup=Stock FIXED PANEL // склад поставщика
    PROPERTIES (sup) SELECTOR name
    FILTERS isSupplier(sup)
    
    TREE stockGroupTree b=STRING[3], sg = StockGroup PARENT parent
    PROPERTIES READONLY OBJVALUE(b), name(sg)
    ORDER BY name(sg)
    FILTERS stringEqualsAll(b)
    
    OBJECTS st = Stock FIXED GRID
    PROPERTIES (st) READONLY name, id SHOWIF showIDs()
    PROPERTIES (st) inReport
    ORDER BY name(st)
    FILTERS isParent(stockGroup(st), sg) OR
            st IS Stock AND NOT sg IS StockGroup OR
            st IS Stock AND sg IS StockGroup AND NOT stockGroup(st)   
    FILTERS isCompany(st)
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'F10' DEFAULT
    
    TREE treeGroup g=SkuGroup PARENT parent
    PROPERTIES inSession(g) ON SHORTCUT resetSelectedGroups()       
    PROPERTIES READONLY order(g), id(g) SHOWIF showIDs(), name(g) 

    ORDER BY order(g), name(g)
    FILTERGROUP inactive FILTER 'Активные' active(g) 'F5' DEFAULT        
    PROPERTIES resetSelectedGroups() TOOLBAR FORCE PANEL TODRAW g        

    PROPERTIES(sup,dFrom,dTo) supplierReportPrintXLS, supplierReportPrintXLSX
    PROPERTIES  supplierReportPrintAll(sup,dFrom,dTo), supplierReportPrintAllSelect(dFrom,dTo) TODRAW sup
;
DESIGN supplierStockReport {
    NEW top {
        type = CONTAINERH;
        MOVE dates.box;
        MOVE sup.box {caption = 'Поставщик';}
        MOVE sup.print;
    }
    NEW header {
        fill = 1;
        type = SPLITH;
        NEW leftContainer {
            type = TABBED;
            fill = 1;            
            NEW header1{
                type = SPLITV;
                fill = 1;
                caption = 'Склады компании';
                MOVE stockGroupTree.tree.box;
                MOVE st.box;            
            }        
        }
        MOVE treeGroup.tree.box { 
            fill = 2;
            caption = 'Группы товаров';
        }            
    }
    MOVE functions.box;
}
NAVIGATOR {
    stockReports{
        ADD supplierStockReport;
    }
}