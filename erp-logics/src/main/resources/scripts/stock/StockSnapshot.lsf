MODULE StockSnapshot;

REQUIRE SkuLedger, Document, PriceListLedger, StockTax;

NAMESPACE Stock;

////////////////////// Тип отчета ////////////////////////////
CLASS SnapshotType 'Тип аналитического отчета';
TABLE snapshotType (SnapshotType);

nameSnapshotType 'Наименование' = DATA STRING[100] (SnapshotType) IN documentHeader;
@defineExternalizable(snapshotType, VARSTRING[100]);
isBatchSnapshotType 'По партиям' = DATA BOOLEAN (SnapshotType);

isQuantitySnapshotType 'Количество' = DATA BOOLEAN (SnapshotType);
isSumSnapshotType 'Сумма ' = DATA BOOLEAN (SnapshotType);

isBalanceBSnapshotType 'Остаток начало' = DATA BOOLEAN (SnapshotType);
isInSnapshotType 'Приход' = DATA BOOLEAN (SnapshotType);
isOutSnapshotType 'Расход' = DATA BOOLEAN (SnapshotType);
isBalanceASnapshotType 'Остаток конец' = DATA BOOLEAN (SnapshotType);

isCostSnapshotType 'Себестоимость' = DATA BOOLEAN (SnapshotType);
isVATSupplierSnapshotType 'НДС поставщика' = DATA BOOLEAN (SnapshotType);
isCostVATSupplierSnapshotType 'Себестоимость с НДС' = DATA BOOLEAN (SnapshotType);
isNetWeightSnapshotType 'Вес, кг' = DATA BOOLEAN (SnapshotType);
isDateSnapshotType 'На дату' = DATA BOOLEAN (SnapshotType);


//-- Выбор складов
TABLE snapshotTypeStockGroup (SnapshotType, StockGroup); 
TABLE snapshotTypeStock (SnapshotType, Stock);

allStockIncludeSnapshotType 'Вкл' = DATA BOOLEAN (SnapshotType);
dataIncludeSnapshotTypeStockGroup 'Вкл' = DATA BOOLEAN (SnapshotType, StockGroup);
dataIncludeSnapshotTypeStock 'Вкл' = DATA BOOLEAN (SnapshotType, Stock);

levelParentIncludeSnapshotTypeStockGroup (snapshotType, stockGroup) = GROUP MIN levelStockGroupStockGroup(stockGroup, parent) IF dataIncludeSnapshotTypeStockGroup(snapshotType, parent)
                                                              BY snapshotType, stockGroup PERSISTENT;    
nearestParentIncludeSnapshotTypeStockGroup (snapshotType, stockGroup) = stockGroupStockGroupLevel(stockGroup, levelParentIncludeSnapshotTypeStockGroup(snapshotType, stockGroup));
nearestIncludeSnapshotTypeStockGroup (snapshotType, stockGroup) = dataIncludeSnapshotTypeStockGroup(snapshotType, nearestParentIncludeSnapshotTypeStockGroup (snapshotType, stockGroup));

includeSnapshotTypeStockGroup 'Вкл' (snapshotType, stockGroup) =
    OVERRIDE allStockIncludeSnapshotType(snapshotType) IF stockGroup IS StockGroup,
             nearestIncludeSnapshotTypeStockGroup (snapshotType, stockGroup), 
             dataIncludeSnapshotTypeStockGroup(snapshotType, stockGroup) PERSISTENT;

includeSnapshotTypeStock 'Вкл' (snapshotType, stock) =
    (OVERRIDE includeSnapshotTypeStockGroup(snapshotType, stockGroupStock(stock)),
             dataIncludeSnapshotTypeStock(snapshotType, stock)) IF isCompanyStock(stock) PERSISTENT;
             
countIncludeStockSnapshotType  (snapshotType) = GROUP SUM 1 IF includeSnapshotTypeStock(snapshotType, stock) BY snapshotType;      


nameIncludeStockGroupsSnapshotType 'Группы складов (все)' (document)= 
    GROUP CONCAT nameStockGroup(stockGroup) IF dataIncludeSnapshotTypeStockGroup(document, stockGroup), ', ' 
    BY document 
    ORDER stockGroup
    MINCHARWIDTH 20 PREFCHARWIDTH 40;

nameIncludeStocksSnapshotType 'Склады (все)' (document)= 
    GROUP CONCAT nameStock(stock) IF dataIncludeSnapshotTypeStock(document, stock), ', ' 
    BY document 
    ORDER stock
    MINCHARWIDTH 20 PREFCHARWIDTH 40;
    
nameIncludeStockGroupsStockSnapshotType 'Группы складов, склады (все)' (document) = CONCAT '; ', nameIncludeStockGroupsSnapshotType(document), 
                                                                                             nameIncludeStocksSnapshotType(document) MINCHARWIDTH 20 PREFCHARWIDTH 40;   
        
//-- Выбор групп товара  
TABLE snapshotTypeSkuGroup (SnapshotType, SkuGroup);  
     
dataIncludeSnapshotTypeSkuGroup 'Вкл' = DATA BOOLEAN (SnapshotType, SkuGroup);

levelParentIncludeSnapshotTypeSkuGroup (snapshotType, skuGroup) = GROUP MIN levelSkuGroupSkuGroup(skuGroup, parent) IF dataIncludeSnapshotTypeSkuGroup(snapshotType, parent)
                                                              BY snapshotType, skuGroup PERSISTENT;    
nearestParentIncludeSnapshotTypeSkuGroup (snapshotType, skuGroup) = skuGroupSkuGroupLevel(skuGroup, levelParentIncludeSnapshotTypeSkuGroup(snapshotType, skuGroup));
nearestIncludeSnapshotTypeSkuGroup (snapshotType, skuGroup) = dataIncludeSnapshotTypeSkuGroup(snapshotType, nearestParentIncludeSnapshotTypeSkuGroup (snapshotType, skuGroup));

includeSnapshotTypeSkuGroup 'Вкл' (snapshotType, skuGroup) =
    OVERRIDE nearestIncludeSnapshotTypeSkuGroup (snapshotType, skuGroup), 
             dataIncludeSnapshotTypeSkuGroup(snapshotType, skuGroup) PERSISTENT;    
                      
includeSnapshotTypeSku 'Вкл' (snapshotType, sku) = includeSnapshotTypeSkuGroup(snapshotType, skuGroupSku(sku));  
                    
countIncludeSkuSnapshotType 'Вкл' (snapshotType) = GROUP SUM 1 IF includeSnapshotTypeSku(snapshotType, sku) BY snapshotType;                    

nameIncludeSkuGroupsSnapshotType 'Группы товаров (все)' (document)= 
    GROUP CONCAT nameSkuGroup(skuGroup) IF dataIncludeSnapshotTypeSkuGroup(document, skuGroup), ', ' 
    BY document 
    ORDER skuGroup
    MINCHARWIDTH 20 PREFCHARWIDTH 40;

FORM snapshotType 'Тип аналитического отчета'
    OBJECTS t = SnapshotType FIXED PANEL
    PROPERTIES(t) idSnapshotType SHOWIF showIDs(), nameSnapshotType, isBatchSnapshotType, isQuantitySnapshotType, isSumSnapshotType, isBalanceBSnapshotType,
                  isInSnapshotType, isOutSnapshotType, isBalanceASnapshotType, isCostSnapshotType, isVATSupplierSnapshotType,
                  isCostVATSupplierSnapshotType, isNetWeightSnapshotType, isDateSnapshotType  
                     
//-- выбор складов                  
    TREE stockTree2 a2 = STRING[3], sg2 = StockGroup PARENT parentStockGroup, ts2 = Stock
    PROPERTIES OBJVALUE(a2) READONLY, allStockIncludeSnapshotType(t) TODRAW a2, 
               nameStockGroup(sg2) READONLY, includeSnapshotTypeStockGroup(t,sg2),
               nameStock(ts2) READONLY, includeSnapshotTypeStock(t,ts2)
    ORDER BY nameStockGroup(sg2)
    FILTERS stringEqualsAll(a2),
            stockGroupStock(ts2) == sg2,
            isCompanyStock(ts2)
    FILTERGROUP inactiveStock2 FILTER 'Активный' 'ctrl F10' activeStock(ts2) DEFAULT                                                                                  
          
//-- выбор групп товара     
    TREE skuTree2 sk2 = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY nameSkuGroup(sk2)
    PROPERTIES includeSnapshotTypeSkuGroup(t,sk2)
    ORDER BY nameSkuGroup(sk2)
    FILTERGROUP inactive2 FILTER 'Активные' 'F5' activeSkuGroup(sk2) DEFAULT                                                                  
                     
    EDIT SnapshotType OBJECT t
;
DESIGN snapshotType FROM DEFAULT {
    main{
        preferredSize = (1024, 768);
        NEW topContainer {
            caption = 'Шапка документа';
            type = CONTAINERH;
            ADD PROPERTY(idSnapshotType(t));
            ADD PROPERTY(nameSnapshotType(t));
        }
        NEW paramContainer {
            caption = 'Параметры';
            type = CONTAINERH;                      
            NEW row1 {
                type = CONTAINERV; 
                caption = 'Основные';    
                ADD PROPERTY(isBatchSnapshotType(t));
                ADD PROPERTY(isDateSnapshotType(t));
            }
            NEW row2 {
                caption = 'Остатки';                 
                ADD PROPERTY(isBalanceBSnapshotType(t));
                ADD PROPERTY(isBalanceASnapshotType(t));   
                                                                                     
            }                    
            NEW row3 {
                type = CONTAINERV;
                caption = 'Колонки';
                type = COLUMNS;
                columns = 4;
                ADD PROPERTY(isQuantitySnapshotType(t));
                ADD PROPERTY(isSumSnapshotType(t)); 
                ADD PROPERTY(isCostSnapshotType(t)); 
                ADD PROPERTY(isVATSupplierSnapshotType(t));   
                ADD PROPERTY(isCostVATSupplierSnapshotType(t));     
                ADD PROPERTY(isNetWeightSnapshotType(t));                   
            }                      
            NEW row5 {
                type = CONTAINERV;
                caption = 'Движение';
                ADD PROPERTY(isInSnapshotType(t));  
                ADD PROPERTY(isOutSnapshotType(t));                     
            }                                                                          
            NEW row6 {
                type = CONTAINERV;
                caption = 'Оборот';  
                type = COLUMNS;
                columns = 2;   
                                       
            }                                                         
        }
        NEW select{
            fill = 1;
            type = SPLITH;
            ADD stockTree2.tree.box { fill = 1; caption = 'Выбор складов'; }   
            ADD skuTree2.tree.box { fill = 1; caption = 'Выбор групп'; }   
        }
        ADD functions.box;
    }            
}
FORM snapshotTypes 'Типы аналитических отчетов'
    OBJECTS t = SnapshotType
    PROPERTIES(t) READONLY idSnapshotType SHOWIF showIDs(), nameSnapshotType, isBatchSnapshotType, isQuantitySnapshotType, isSumSnapshotType, isBalanceBSnapshotType,
                  isInSnapshotType, isOutSnapshotType, isBalanceASnapshotType, isCostSnapshotType, isVATSupplierSnapshotType,
                  isCostVATSupplierSnapshotType, isNetWeightSnapshotType   
    PROPERTIES(t) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG SnapshotType OBJECT t
;
META deriveDocumentSnapshotProperty(property)
    property##Snapshot (o) <- property##SnapshotType(snapshotTypeSnapshot(o))
        WHEN CHANGED(snapshotTypeSnapshot(o));
END

//////////////////////Отчет ////////////////////////////

CLASS Snapshot 'Аналитический отчет';
TABLE snapshot (Snapshot);

hintBalanceBBackground 'Лавандовый' = RGB(255,238,238) IF TRUE;     
hintPurchaseBackground 'Розовато-лавандовый'  = RGB(224, 224, 255) IF TRUE;         
hintSaleBackground 'Зеленого чая'  = RGB(204,255,204) IF TRUE;  
hintBalanceABackground 'Небесный'  = RGB(127,199,255) IF TRUE;                                                                                     
hintInBackground 'Лимонный' = RGB(255, 250, 205) IF TRUE;                                                                                   
hintOutBackground 'Бороды Абдель-Керима' = RGB(213, 213, 213) IF TRUE;     // серый

snapshotTypeSnapshot= DATA SnapshotType (Snapshot);
nameSnapshotTypeSnapshot 'Тип отчета' = nameSnapshotType(snapshotTypeSnapshot(s)) IN documentHeader MINCHARWIDTH 15  PREFCHARWIDTH 20;

@defineDocumentHeaderTime(Snapshot);
@defineDocumentHeaderNote(Snapshot);
@defineDocumentHeaderCreated(Snapshot);
@deriveDocumentHeaderTimePrefix(Snapshot, );
@defineDocumentHeaderNumber(Snapshot);
@defineNumeratedDefault(Snapshot, 'Аналитический отчет', 'ОО');
@defineDocumentHeaderDescription (Snapshot, 'Аналитический отчет');

fromDateSnapshot 'Дата с' = DATA DATE (Snapshot) IN documentHeader;
toDateSnapshot 'Дата по' = DATA DATE (Snapshot) IN documentHeader;

startTimeSnapshot 'Время начала формирования' = DATA DATETIME (Snapshot) IN created;
finishTimeSnapshot 'Время окончания формирования' = DATA DATETIME (Snapshot) IN created;

WHEN SESSION SET(o IS Snapshot) DO {
    IF o IS Snapshot AND NOT fromDateSnapshot(o) THEN fromDateSnapshot(o) <- currentDate();
    IF o IS Snapshot AND NOT toDateSnapshot(o) THEN toDateSnapshot(o) <- currentDate();
};

//-- Параметры отчета
GROUP evidence 'Признаки' : base;

isBatchSnapshot 'По партиям' = DATA BOOLEAN (Snapshot) IN evidence;

isQuantitySnapshot 'Количество' = DATA BOOLEAN (Snapshot) IN evidence;
isSumSnapshot 'Сумма ' = DATA BOOLEAN (Snapshot) IN evidence;

isBalanceBSnapshot 'Остаток начало' = DATA BOOLEAN (Snapshot) IN evidence;
isInSnapshot 'Приход' = DATA BOOLEAN (Snapshot) IN evidence;
isOutSnapshot 'Расход' = DATA BOOLEAN (Snapshot) IN evidence;
isBalanceASnapshot 'Остаток конец' = DATA BOOLEAN (Snapshot) IN evidence;

isCostSnapshot 'Себестоимость' = DATA BOOLEAN (Snapshot) IN evidence;
isVATSupplierSnapshot 'НДС поставщика' = DATA BOOLEAN (Snapshot) IN evidence;
isCostVATSupplierSnapshot 'Себестоимость с НДС' = DATA BOOLEAN (Snapshot) IN evidence;
isNetWeightSnapshot 'Вес, кг' = DATA BOOLEAN (Snapshot) IN evidence;

@deriveDocumentSnapshotProperty(isBatch);
@deriveDocumentSnapshotProperty(isQuantity);
@deriveDocumentSnapshotProperty(isBalanceB);
@deriveDocumentSnapshotProperty(isIn);
@deriveDocumentSnapshotProperty(isOut);
@deriveDocumentSnapshotProperty(isBalanceA);
@deriveDocumentSnapshotProperty(isCost);
@deriveDocumentSnapshotProperty(isVATSupplier);
@deriveDocumentSnapshotProperty(isCostVATSupplier);
@deriveDocumentSnapshotProperty(isNetWeight);
//-- Sku на дату

TABLE skuStockSnapshotDate (Sku, Stock, Snapshot, DATE);  

isDateSnapshot 'На дату' = DATA BOOLEAN (Snapshot) IN evidence;
@deriveDocumentSnapshotProperty(isDate);

balanceBSkuStockSnapshotDate 'Кол-во начало' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
netWeightBSkuStockSnapshotDate 'Вес начало' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
sumBSkuStockSnapshotDate 'Сумма начало' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
costBSkuStockSnapshotDate 'Себестоимость начало' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
VATSupplierBSkuStockSnapshotDate 'НДС поставщика начало' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
costVATSupplierBSkuStockSnapshotDate 'С/С с НДС начало' = VATSupplierBSkuStockSnapshotDate(sku, stock, snapshot, date) (+) 
                                                                costBSkuStockSnapshotDate(sku, stock, snapshot, date);

inQuantitySkuStockSnapshotDate 'Кол-во приход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
inNetWeightSkuStockSnapshotDate 'Вес приход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
inSumSkuStockSnapshotDate 'Сумма приход' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);

outQuantitySkuStockSnapshotDate 'Кол-во расход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
outNetWeightSkuStockSnapshotDate 'Вес расход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
outSumSkuStockSnapshotDate 'Сумма расход' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);

balanceASkuStockSnapshotDate 'Кол-во конец' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
netWeightASkuStockSnapshotDate 'Вес конец' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
sumASkuStockSnapshotDate 'Сумма конец' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
costASkuStockSnapshotDate 'Себестоимость конец' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
VATSupplierASkuStockSnapshotDate 'НДС поставщика конец' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
costVATSupplierASkuStockSnapshotDate 'С/С с НДС конец' = VATSupplierASkuStockSnapshotDate(sku, stock, snapshot, date) (+) 
                                                               costASkuStockSnapshotDate(sku, stock, snapshot, date);
//------------------------------ Sku -------------------------------//

TABLE skuStockSnapshot (Sku, Stock, Snapshot);  
balanceBSkuStockSnapshot 'Кол-во начало' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
netWeightBSkuStockSnapshot 'Вес начало' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
sumBSkuStockSnapshot 'Сумма начало' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
costBSkuStockSnapshot 'Себестоимость начало' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
VATSupplierBSkuStockSnapshot 'НДС поставщика начало' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
costVATSupplierBSkuStockSnapshot 'С/С с НДС начало' = VATSupplierBSkuStockSnapshot(sku, stock, snapshot) (+) 
                                                            costBSkuStockSnapshot(sku, stock, snapshot);
inQuantitySkuStockSnapshot 'Кол-во приход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
inNetWeightSkuStockSnapshot 'Вес приход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
inSumSkuStockSnapshot 'Сумма приход' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);

outQuantitySkuStockSnapshot 'Кол-во расход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
outNetWeightSkuStockSnapshot 'Вес расход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
outSumSkuStockSnapshot 'Сумма расход' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);

balanceASkuStockSnapshot 'Кол-во конец' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
netWeightASkuStockSnapshot 'Вес конец' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
sumASkuStockSnapshot 'Сумма конец' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
costASkuStockSnapshot 'Себестоимость конец' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
VATSupplierASkuStockSnapshot 'НДС поставщика конец' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
costVATSupplierASkuStockSnapshot 'С/С с НДС конец' = VATSupplierASkuStockSnapshot(sku, stock, snapshot) (+) 
                                                           costASkuStockSnapshot(sku, stock, snapshot);                                 
//--По группе рекурсивно
TABLE skuGroupStockSnapshot (SkuGroup, Stock, Snapshot);   
  
//-- группа/склад       
balanceBSkuGroupStockSnapshot 'Кол-во начало' (group, stock, snapshot) =
    GROUP SUM balanceBSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
netWeightBSkuGroupStockSnapshot 'Вес начало' (group, stock, snapshot) =
    GROUP SUM netWeightBSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;               
sumBSkuGroupStockSnapshot 'Сумма начало' (group, stock, snapshot) =
    GROUP SUM sumBSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;    
costBSkuGroupStockSnapshot 'Себестоимость начало' (group, stock, snapshot) =
    GROUP SUM costBSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;   
VATSupplierBSkuGroupStockSnapshot 'НДС поставщика начало' (group, stock, snapshot) =
    GROUP SUM VATSupplierBSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;   
costVATSupplierBSkuGroupStockSnapshot 'С/С с НДС начало' = VATSupplierBSkuGroupStockSnapshot(group, stock, snapshot) (+) 
                                                                 costBSkuGroupStockSnapshot(group, stock, snapshot);                                           
    
inQuantitySkuGroupStockSnapshot 'Кол-во приход' (group, stock, snapshot) =
    GROUP SUM inQuantitySkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
inNetWeightSkuGroupStockSnapshot 'Вес приход' (group, stock, snapshot) =
    GROUP SUM inNetWeightSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;        
inSumSkuGroupStockSnapshot 'Сумма приход' (group, stock, snapshot) =
    GROUP SUM inSumSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;  
           
outQuantitySkuGroupStockSnapshot 'Кол-во расход' (group, stock, snapshot) =
    GROUP SUM outQuantitySkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
outNetWeightSkuGroupStockSnapshot 'Вес расход' (group, stock, snapshot) =
    GROUP SUM outNetWeightSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;        
outSumSkuGroupStockSnapshot 'Сумма расход' (group, stock, snapshot) =
    GROUP SUM outSumSkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;             
    
balanceASkuGroupStockSnapshot 'Кол-во конец' (group, stock, snapshot) =
    GROUP SUM balanceASkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
netWeightASkuGroupStockSnapshot 'Вес конец' (group, stock, snapshot) =
    GROUP SUM netWeightASkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;              
sumASkuGroupStockSnapshot 'Сумма конец' (group, stock, snapshot) =
    GROUP SUM sumASkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;  
costASkuGroupStockSnapshot 'Себестоимость конец' (group, stock, snapshot) =
    GROUP SUM costASkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;   
VATSupplierASkuGroupStockSnapshot 'НДС поставщика конец' (group, stock, snapshot) =
    GROUP SUM VATSupplierASkuStockSnapshot (sku, stock, snapshot) IF isParentSkuGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;    
costVATSupplierASkuGroupStockSnapshot 'С/С с НДС конец' = VATSupplierASkuGroupStockSnapshot(group, stock, snapshot) (+) 
                                                                costASkuGroupStockSnapshot(group, stock, snapshot);                   
                   
//-- группа          
balanceBSkuGroupSnapshot 'Кол-во начало' (group, snapshot) =
    GROUP SUM balanceBSkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
netWeightBSkuGroupSnapshot 'Вес начало' (group, snapshot) =
    GROUP SUM netWeightBSkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot;         
sumBSkuGroupSnapshot 'Сумма начало' (group, snapshot) =
    GROUP SUM sumBSkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;   
costBSkuGroupSnapshot 'Себестоимость начало' (group, snapshot) =
    GROUP SUM costBSkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;            
VATSupplierBSkuGroupSnapshot 'НДС поставщика начало' (group, snapshot) =
    GROUP SUM VATSupplierBSkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;            
costVATSupplierBSkuGroupSnapshot 'С/С с НДС начало' = VATSupplierBSkuGroupSnapshot(group, snapshot) (+) 
                                                            costBSkuGroupSnapshot(group, snapshot);     
inQuantitySkuGroupSnapshot 'Кол-во приход' (group, snapshot) =
    GROUP SUM inQuantitySkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
inNetWeightSkuGroupSnapshot 'Вес приход' (group, snapshot) =
    GROUP SUM inNetWeightSkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot;         
inSumSkuGroupSnapshot 'Сумма приход' (group, snapshot) =
    GROUP SUM inSumSkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;      
 
outQuantitySkuGroupSnapshot 'Кол-во расход' (group, snapshot) =
    GROUP SUM outQuantitySkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
outNetWeightSkuGroupSnapshot 'Вес расход' (group, snapshot) =
    GROUP SUM outNetWeightSkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot;        
outSumSkuGroupSnapshot 'Сумма расход' (group, snapshot) =
    GROUP SUM outSumSkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;      
    
balanceASkuGroupSnapshot 'Кол-во конец' (group, snapshot) =
    GROUP SUM balanceASkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
netWeightASkuGroupSnapshot 'Вес конец' (group, snapshot) =
    GROUP SUM netWeightASkuGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot;         
sumASkuGroupSnapshot 'Сумма конец' (group, snapshot) =
    GROUP SUM sumASkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot; 
costASkuGroupSnapshot 'Себестоимость конец' (group, snapshot) =
    GROUP SUM costASkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;                                   
VATSupplierASkuGroupSnapshot 'НДС поставщика конец' (group, snapshot) =
    GROUP SUM VATSupplierASkuGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;                                    
costVATSupplierASkuGroupSnapshot 'С/С с НДС конец' = VATSupplierASkuGroupSnapshot(group, snapshot) (+) 
                                                           costASkuGroupSnapshot(group, snapshot); 
//--По складам
balanceBStockSnapshot 'Кол-во начало' (stock, snapshot) =
    GROUP SUM balanceBSkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
netWeightBStockSnapshot 'Вес начало' (stock, snapshot) =
    GROUP SUM netWeightBSkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot;        
sumBStockSnapshot 'Сумма начало' (stock, snapshot) =
    GROUP SUM sumBSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;        
costBStockSnapshot 'Себестоимость начало' (stock, snapshot) =
    GROUP SUM costBSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot; 
VATSupplierBStockSnapshot 'НДС поставщика начало' (stock, snapshot) =
    GROUP SUM VATSupplierBSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot; 
costVATSupplierBStockSnapshot 'С/С с НДС начало' = VATSupplierBStockSnapshot(stock, snapshot) (+) 
                                                         costBStockSnapshot(stock, snapshot);         
            
inQuantityStockSnapshot 'Кол-во приход' (stock, snapshot) =
    GROUP SUM inQuantitySkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
inNetWeightStockSnapshot 'Вес приход' (stock, snapshot) =
    GROUP SUM inNetWeightSkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot;     
inSumStockSnapshot 'Сумма приход' (stock, snapshot) =
    GROUP SUM inSumSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;      
 
outQuantityStockSnapshot 'Кол-во расход' (stock, snapshot) =
    GROUP SUM outQuantitySkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
outNetWeightStockSnapshot 'Вес расход' (stock, snapshot) =
    GROUP SUM outNetWeightSkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot;         
outSumStockSnapshot 'Сумма расход' (stock, snapshot) =
    GROUP SUM outSumSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;      
    
balanceAStockSnapshot 'Кол-во конец' (stock, snapshot) =
    GROUP SUM balanceASkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
netWeightAStockSnapshot 'Вес конец' (stock, snapshot) =
    GROUP SUM netWeightASkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot;        
sumAStockSnapshot 'Сумма конец' (stock, snapshot) =
    GROUP SUM sumASkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;   
costAStockSnapshot 'Себестоимость конец' (stock, snapshot) =
    GROUP SUM costASkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;    
VATSupplierAStockSnapshot 'НДС поставщика конец' (stock, snapshot) =
    GROUP SUM VATSupplierASkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;    
costVATSupplierAStockSnapshot 'С/С с НДС конец' = VATSupplierAStockSnapshot(stock, snapshot) (+) 
                                                        costAStockSnapshot(stock, snapshot);         
//--По складам на дату        
balanceBStockSnapshotDate 'Кол-во начало' (stock, snapshot, date) =
    GROUP SUM balanceBSkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date; 
netWeightBStockSnapshotDate 'Вес начало' (stock, snapshot, date) =
    GROUP SUM netWeightBSkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date;             
sumBStockSnapshotDate 'Сумма начало' (stock, snapshot, date) =
    GROUP SUM sumBSkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;       
costBStockSnapshotDate 'Себестоимость начало' (stock, snapshot, date) =
    GROUP SUM costBSkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;    
VATSupplierBStockSnapshotDate 'НДС поставщика начало' (stock, snapshot, date) =
    GROUP SUM VATSupplierBSkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;     
costVATSupplierBStockSnapshotDate 'С/С с НДС начало' = VATSupplierBStockSnapshotDate(stock, snapshot, date) (+) 
                                                             costBStockSnapshotDate(stock, snapshot, date);         
    
inQuantityStockSnapshotDate 'Кол-во приход' (stock, snapshot, date) =
    GROUP SUM inQuantitySkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date; 
inNetWeightStockSnapshotDate 'Вес приход' (stock, snapshot, date) =
    GROUP SUM inNetWeightSkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date;     
inSumStockSnapshotDate 'Сумма приход' (stock, snapshot, date) =
    GROUP SUM inSumSkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;      
 
outQuantityStockSnapshotDate 'Кол-во расход' (stock, snapshot, date) =
    GROUP SUM outQuantitySkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date; 
outNetWeightStockSnapshotDate 'Вес расход' (stock, snapshot, date) =
    GROUP SUM outNetWeightSkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date;         
outSumStockSnapshotDate 'Сумма расход' (stock, snapshot, date) =
    GROUP SUM outSumSkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;      
    
balanceAStockSnapshotDate 'Кол-во конец' (stock, snapshot, date) =
    GROUP SUM balanceASkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date; 
netWeightAStockSnapshotDate 'Вес конец' (stock, snapshot, date) =
    GROUP SUM netWeightASkuStockSnapshotDate (sku, stock, snapshot, date)  BY stock, snapshot, date;        
sumAStockSnapshotDate 'Сумма конец' (stock, snapshot, date) =
    GROUP SUM sumASkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;  
costAStockSnapshotDate 'Себестоимость конец' (stock, snapshot, date) =
    GROUP SUM costASkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;    
VATSupplierAStockSnapshotDate 'НДС поставщика конец' (stock, snapshot, date) =
    GROUP SUM VATSupplierASkuStockSnapshotDate (sku, stock, snapshot, date) BY stock, snapshot, date;     
costVATSupplierAStockSnapshotDate 'С/С с НДС конец' = VATSupplierAStockSnapshotDate(stock, snapshot, date) (+) 
                                                             costAStockSnapshotDate(stock, snapshot, date);   
                                                                   
nameBalanceBStock (st) = CONCAT ' ', nameStock(st), ' (кол-во начало)';
nameNetWeightBStock (st) = CONCAT ' ', nameStock(st), ' (вес начало)';
nameSumBStock (st) = CONCAT ' ', nameStock(st), ' (сумма начало)';
nameCostBStock (st) = CONCAT ' ', nameStock(st), ' (себестоимость начало)';
nameCostVATSupplierBStock (st) = CONCAT ' ', nameStock(st), ' (с/с с НДС начало)';
nameVATSupplierBStock (st) = CONCAT ' ', nameStock(st), ' (НДС поставщика начало)';
nameInQuantityStock (st) = CONCAT ' ', nameStock(st), ' (кол-во приход)';
nameInNetWeightStock (st) = CONCAT ' ', nameStock(st), ' (вес приход)';
nameInSumStock(st) = CONCAT ' ', nameStock(st), ' (сумма приход)';        
nameOutQuantityStock (st) = CONCAT ' ', nameStock(st), ' (кол-во расход)';
nameOutNetWeightStock (st) = CONCAT ' ', nameStock(st), ' (вес расход)';
nameOutSumStock (st) = CONCAT ' ', nameStock(st), ' (сумма расход)';
nameBalanceAStock (st) = CONCAT ' ', nameStock(st), ' (кол-во конец)';
nameNetWeightAStock (st) = CONCAT ' ', nameStock(st), ' (вес конец)';
nameSumAStock (st) = CONCAT ' ', nameStock(st), ' (сумма конец)';
nameCostAStock (st) = CONCAT ' ', nameStock(st), ' (себестоимость конец)';   
nameCostVATSupplierAStock (st) = CONCAT ' ', nameStock(st), ' (с/с с НДС конец)'; 
nameVATSupplierAStock (st) = CONCAT ' ', nameStock(st), ' (НДС поставщика конец)';
    
//------------------------------ Batch -------------------------------//

TABLE batchStockSnapshot (Batch, Stock, Snapshot);  
balanceBBatchStockSnapshot 'Кол-во начало' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
netWeightBBatchStockSnapshot 'Вес начало' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
sumBBatchStockSnapshot 'Себестоимость начало' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
VATSupplierBBatchStockSnapshot 'НДС поставщика начало' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
sumVATSupplierBBatchStockSnapshot 'С/С с НДС начало' = VATSupplierBBatchStockSnapshot(batch, stock, snapshot) (+)
                                                             sumBBatchStockSnapshot(batch, stock, snapshot);

inQuantityBatchStockSnapshot 'Кол-во приход' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
inNetWeightBatchStockSnapshot 'Вес приход' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
inSumBatchStockSnapshot 'Себестоимость приход' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);

outQuantityBatchStockSnapshot 'Кол-во расход' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
outNetWeightBatchStockSnapshot 'Вес расход' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
outSumBatchStockSnapshot 'Себестоимость расход' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);

balanceABatchStockSnapshot 'Кол-во конец' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
netWeightABatchStockSnapshot 'Вес конец' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
sumABatchStockSnapshot 'Себестоимость конец' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
VATSupplierABatchStockSnapshot 'НДС поставщика конец' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
sumVATSupplierABatchStockSnapshot 'С/С с НДС конец' = VATSupplierABatchStockSnapshot(batch, stock, snapshot) (+)
                                                             sumABatchStockSnapshot(batch, stock, snapshot);

//-- По поставщикам
balanceBBatchSupplierSnapshot 'Кол-во начало' (supplier, snapshot) =
    GROUP SUM balanceBBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
netWeightBBatchSupplierSnapshot 'Вес начало' (supplier, snapshot) =
    GROUP SUM netWeightBBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;        
sumBBatchSupplierSnapshot 'Себестоимость начало' (supplier, snapshot) =
    GROUP SUM sumBBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot; 
VATSupplierBBatchSupplierSnapshot 'НДС поставщика начало' (supplier, snapshot) =
    GROUP SUM VATSupplierBBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;     
sumVATSupplierBBatchSupplierSnapshot 'С/С с НДС начало' = VATSupplierBBatchSupplierSnapshot(supplier, snapshot) (+)
                                                                sumBBatchSupplierSnapshot(supplier, snapshot);   
                                                                 
inQuantityBatchSupplierSnapshot 'Кол-во приход' (supplier, snapshot) =
    GROUP SUM inQuantityBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
inNetWeightBatchSupplierSnapshot 'Вес приход' (supplier, snapshot) =
    GROUP SUM inNetWeightBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;        
inSumBatchSupplierSnapshot 'Себестоимость приход' (supplier, snapshot) =
    GROUP SUM inSumBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;     
 
outQuantityBatchSupplierSnapshot 'Кол-во расход' (supplier, snapshot) =
    GROUP SUM outQuantityBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
outNetWeightBatchSupplierSnapshot 'Вес расход' (supplier, snapshot) =
    GROUP SUM outNetWeightBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;      
outSumBatchSupplierSnapshot 'Себестоимость расход' (supplier, snapshot) =
    GROUP SUM outSumBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;     
    
balanceABatchSupplierSnapshot 'Кол-во конец' (supplier, snapshot) =
    GROUP SUM balanceABatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
netWeightABatchSupplierSnapshot 'Вес конец' (supplier, snapshot) =
    GROUP SUM netWeightABatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;        
sumABatchSupplierSnapshot 'Себестоимость конец' (supplier, snapshot) =
    GROUP SUM sumABatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;   
VATSupplierABatchSupplierSnapshot 'НДС поставщика конец' (supplier, snapshot) =
    GROUP SUM VATSupplierABatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
sumVATSupplierABatchSupplierSnapshot 'С/С с НДС конец' = VATSupplierABatchSupplierSnapshot(supplier, snapshot) (+)
                                                               sumABatchSupplierSnapshot(supplier, snapshot);           
    
//-- Выбор складов
TABLE snapshotStockGroup (Snapshot, StockGroup); 
TABLE snapshotStock (Snapshot, Stock);

allStockIncludeSnapshot 'Вкл' = DATA BOOLEAN (Snapshot);
dataIncludeSnapshotStockGroup 'Вкл' = DATA BOOLEAN (Snapshot, StockGroup);
dataIncludeSnapshotStock 'Вкл' = DATA BOOLEAN (Snapshot, Stock);

levelParentIncludeSnapshotStockGroup (snapshot, stockGroup) = GROUP MIN levelStockGroupStockGroup(stockGroup, parent) IF dataIncludeSnapshotStockGroup(snapshot, parent)
                                                              BY snapshot, stockGroup PERSISTENT;    
nearestParentIncludeSnapshotStockGroup (snapshot, stockGroup) = stockGroupStockGroupLevel(stockGroup, levelParentIncludeSnapshotStockGroup(snapshot, stockGroup));
nearestIncludeSnapshotStockGroup (snapshot, stockGroup) = dataIncludeSnapshotStockGroup(snapshot, nearestParentIncludeSnapshotStockGroup (snapshot, stockGroup));

includeSnapshotStockGroup 'Вкл' (snapshot, stockGroup) =
    OVERRIDE allStockIncludeSnapshot(snapshot) IF stockGroup IS StockGroup,
             nearestIncludeSnapshotStockGroup (snapshot, stockGroup), 
             dataIncludeSnapshotStockGroup(snapshot, stockGroup) PERSISTENT;

includeSnapshotStock 'Вкл' (snapshot, stock) =
    (OVERRIDE includeSnapshotStockGroup(snapshot, stockGroupStock(stock)),
             dataIncludeSnapshotStock(snapshot, stock)) IF isCompanyStock(stock) PERSISTENT;
             
countIncludeStockSnapshot  (snapshot) = GROUP SUM 1 IF includeSnapshotStock(snapshot, stock) BY snapshot;      


nameIncludeStockGroupsSnapshot 'Группы складов (все)' (document)= 
    GROUP CONCAT nameStockGroup(stockGroup) IF dataIncludeSnapshotStockGroup(document, stockGroup), ', ' 
    BY document 
    ORDER stockGroup
    MINCHARWIDTH 20 PREFCHARWIDTH 40;

nameIncludeStocksSnapshot 'Склады (все)' (document)= 
    GROUP CONCAT nameStock(stock) IF dataIncludeSnapshotStock(document, stock), ', ' 
    BY document 
    ORDER stock
    MINCHARWIDTH 20 PREFCHARWIDTH 40;
    
nameIncludeStockGroupsStockSnapshot 'Группы складов, склады (все)' (document) = CONCAT '; ', nameIncludeStockGroupsSnapshot(document), 
                                                                                             nameIncludeStocksSnapshot(document) MINCHARWIDTH 20 PREFCHARWIDTH 40;   
    
allStockIncludeSnapshot (o) <- allStockIncludeSnapshotType(snapshotTypeSnapshot(o))
    WHEN CHANGED(snapshotTypeSnapshot(o));  
dataIncludeSnapshotStockGroup (o,g) <- dataIncludeSnapshotTypeStockGroup(snapshotTypeSnapshot(o),g) IF g IS StockGroup
    WHEN CHANGED(snapshotTypeSnapshot(o));           
dataIncludeSnapshotStock (o,g) <- dataIncludeSnapshotTypeStock(snapshotTypeSnapshot(o),g) IF g IS Stock
    WHEN CHANGED(snapshotTypeSnapshot(o));    
            
//-- Выбор групп товара  
TABLE snapshotSkuGroup (Snapshot, SkuGroup);  
     
dataIncludeSnapshotSkuGroup 'Вкл' = DATA BOOLEAN (Snapshot, SkuGroup);

levelParentIncludeSnapshotSkuGroup (snapshot, skuGroup) = GROUP MIN levelSkuGroupSkuGroup(skuGroup, parent) IF dataIncludeSnapshotSkuGroup(snapshot, parent)
                                                              BY snapshot, skuGroup PERSISTENT;    
nearestParentIncludeSnapshotSkuGroup (snapshot, skuGroup) = skuGroupSkuGroupLevel(skuGroup, levelParentIncludeSnapshotSkuGroup(snapshot, skuGroup));
nearestIncludeSnapshotSkuGroup (snapshot, skuGroup) = dataIncludeSnapshotSkuGroup(snapshot, nearestParentIncludeSnapshotSkuGroup (snapshot, skuGroup));

includeSnapshotSkuGroup 'Вкл' (snapshot, skuGroup) =
    OVERRIDE nearestIncludeSnapshotSkuGroup (snapshot, skuGroup), 
             dataIncludeSnapshotSkuGroup(snapshot, skuGroup) PERSISTENT;    
                      
includeSnapshotSku 'Вкл' (snapshot, sku) = includeSnapshotSkuGroup(snapshot, skuGroupSku(sku));  
                    
countIncludeSkuSnapshot 'Вкл' (snapshot) = GROUP SUM 1 IF includeSnapshotSku(snapshot, sku) BY snapshot;                    

nameIncludeSkuGroupsSnapshot 'Группы товаров (все)' (document)= 
    GROUP CONCAT nameSkuGroup(skuGroup) IF dataIncludeSnapshotSkuGroup(document, skuGroup), ', ' 
    BY document 
    ORDER skuGroup
    MINCHARWIDTH 20 PREFCHARWIDTH 40;
    
dataIncludeSnapshotSkuGroup (o,g) <- dataIncludeSnapshotTypeSkuGroup(snapshotTypeSnapshot(o),g) IF g IS SkuGroup
    WHEN CHANGED(snapshotTypeSnapshot(o));  
    
//------------------------------- ACTION -------------------------------//   
overTakeSnapshotDateFromTo= ABSTRACT ACTION LIST (Snapshot, DATE, DATE); 
overTakeSkuSnapshotDateFromTo= ABSTRACT ACTION LIST (Snapshot, DATE, DATE);
overTakeBatchSnapshotDateFromTo= ABSTRACT ACTION LIST (Snapshot, DATE, DATE);

statusSnapshot 'Статус отчета' (snapshot) = CASE
                                          WHEN finishTimeSnapshot(snapshot) THEN 'Сформирован'
                                          WHEN snapshot IS Snapshot THEN 'Не сформирован'
                                          MINCHARWIDTH 10 PREFCHARWIDTH 15
                                      ;
backgroundStatusSnapshot 'Цвет' (snapshot) =  CASE                                             
                                          WHEN finishTimeSnapshot(snapshot) THEN RGB(212,255,212)
                                          WHEN snapshot IS Snapshot THEN RGB(255,200,216)
                                      ;
//overNetWeightSkuBatch (batch)= OVERRIDE overNetWeightSku(skuBatch(batch)), (sumNetWeightInvoiceDetail(invoiceDetailBatch(batch))/(quantityInvoiceDetail(invoiceDetailBatch(batch)) IF quantityInvoiceDetail(invoiceDetailBatch(batch))!=0));
takeSnapshotDateFromTo  = ACTION (snapshot, dateFrom, dateTo) {
    apply();  
    startTimeSnapshot(snapshot) <- currentDateTime();   
    IF countIncludeSkuSnapshot(snapshot) AND countIncludeStockSnapshot(snapshot) THEN {      
        IF isQuantitySnapshot(snapshot) THEN {         
            
            IF isBalanceASnapshot(snapshot) THEN
                balanceASkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](balanceASkuStockDate(sku, stock, dateTo)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);
                    
            IF isInSnapshot(snapshot) THEN            
                inQuantitySkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](quantitySumInSkuStockDateDate(sku, stock, dateFrom, dateTo)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);

            IF isOutSnapshot(snapshot) THEN 
                outQuantitySkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](quantitySumOutSkuStockDateDate(sku, stock, dateFrom, dateTo)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);     
            
            IF isBalanceBSnapshot(snapshot) THEN {
                IF isBalanceASnapshot(snapshot) AND isInSnapshot(snapshot) AND isOutSnapshot(snapshot) THEN
                    balanceBSkuStockSnapshot(sku, stock, snapshot) <- (balanceASkuStockSnapshot(sku, stock, snapshot) (-) inQuantitySkuStockSnapshot(sku, stock, snapshot) (+) outQuantitySkuStockSnapshot(sku, stock, snapshot))
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku)
                ELSE 
                    balanceBSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](balanceBSkuStockDate(sku, stock, dateFrom)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);
            }
        }
        IF isSumSnapshot(snapshot) THEN {         

            IF isBalanceASnapshot(snapshot) THEN
                sumASkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumASkuStockDate(sku, stock, dateTo)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);   

            IF isInSnapshot(snapshot) THEN 
                inSumSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumInSkuStockDateDate(sku, stock, dateFrom, dateTo)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);         

            IF isOutSnapshot(snapshot) THEN
                outSumSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumOutSkuStockDateDate(sku, stock, dateFrom, dateTo)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);        
            
            IF isBalanceBSnapshot(snapshot) THEN
                IF isBalanceASnapshot(snapshot) AND isInSnapshot(snapshot) AND isOutSnapshot(snapshot) THEN
                    sumBSkuStockSnapshot(sku, stock, snapshot) <- (sumASkuStockSnapshot(sku, stock, snapshot) (-) inSumSkuStockSnapshot(sku, stock, snapshot) (+) outSumSkuStockSnapshot(sku, stock, snapshot))
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku)
                ELSE
                    sumBSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumBSkuStockDate(sku, stock, dateFrom)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);  
                        
        }   
        IF isCostSnapshot(snapshot) THEN {
            costASkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](costSumASkuStockDate(sku, stock, dateTo)) 
                WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND  isBalanceASnapshot(snapshot);               
            costBSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](costSumBSkuStockDate(sku, stock, dateFrom)) 
                WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND isBalanceBSnapshot(snapshot);        
        }      
        IF isVATSupplierSnapshot(snapshot) THEN {
            VATSupplierASkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](costSumASkuStockDate(sku, stock, dateTo)*valueVATSkuCountryDate(sku,countryStock(stock),dateTo)/100) 
                WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND  isBalanceASnapshot(snapshot);               
            VATSupplierBSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](costSumBSkuStockDate(sku, stock, dateFrom)*valueVATSkuCountryDate(sku,countryStock(stock),dateTo)/100) 
                WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND isBalanceBSnapshot(snapshot);        
        } 
        IF isNetWeightSnapshot(snapshot) THEN {         
            
            IF isBalanceASnapshot(snapshot) THEN
                netWeightASkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](balanceASkuStockDate(sku, stock, dateTo)*overNetWeightSku(sku)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);
                    
            IF isInSnapshot(snapshot) THEN            
                inNetWeightSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](quantitySumInSkuStockDateDate(sku, stock, dateFrom, dateTo)*overNetWeightSku(sku)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);

            IF isOutSnapshot(snapshot) THEN 
                outNetWeightSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](quantitySumOutSkuStockDateDate(sku, stock, dateFrom, dateTo)*overNetWeightSku(sku)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);     
            
            IF isBalanceBSnapshot(snapshot) THEN {
                netWeightBSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](balanceBSkuStockDate(sku, stock, dateFrom)*overNetWeightSku(sku)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku);
            }
        }                     
                     
              
        IF isDateSnapshot(snapshot) THEN {  
            IF isQuantitySnapshot(snapshot) THEN { 
                inQuantitySkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](quantityInSkuStockDate(sku, stock, date)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND quantityInSkuStockDate(sku, stock, date) AND isInSnapshot(snapshot);
        
                outQuantitySkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](quantityOutSkuStockDate(sku, stock, date)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND quantityOutSkuStockDate(sku, stock, date) AND isOutSnapshot(snapshot);
            }               
            IF isSumSnapshot(snapshot) THEN { 
                inSumSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](sumInSkuStockDate(sku, stock, date)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND sumInSkuStockDate(sku, stock, date) AND isOutSnapshot(snapshot);
        
                outSumSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](sumOutSkuStockDate(sku, stock, date)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND sumOutSkuStockDate(sku, stock, date) AND isOutSnapshot(snapshot);              
            }               
            IF isNetWeightSnapshot(snapshot) THEN { 
                inNetWeightSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](quantityInSkuStockDate(sku, stock, date)*overNetWeightSku(sku)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND quantityInSkuStockDate(sku, stock, date) AND isInSnapshot(snapshot);
        
                outNetWeightSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](quantityOutSkuStockDate(sku, stock, date)*overNetWeightSku(sku)) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND quantityOutSkuStockDate(sku, stock, date) AND isOutSnapshot(snapshot);
            }        
            
            LOCAL dateCur = DATE();           
            dateCur() <- dateFrom;           
            WHILE dateCur() <= dateTo DO { // сделано так, иначе происходит зацикливание

                balanceBSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](balanceBSkuStockDate(sku, stock, dateCur())) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() 
                        AND isQuantitySnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
                sumBSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](sumBSkuStockDate(sku, stock, dateCur())) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() 
                        AND isSumSnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
           
                balanceASkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](balanceASkuStockDate(sku, stock, dateCur())) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() 
                        AND isQuantitySnapshot(snapshot) AND isBalanceASnapshot(snapshot);
                sumASkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](sumASkuStockDate(sku, stock, dateCur())) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() 
                        AND isSumSnapshot(snapshot) AND isBalanceASnapshot(snapshot);   
                IF isNetWeightSnapshot(snapshot) THEN {
                    netWeightBSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](balanceBSkuStockDate(sku, stock, dateCur())*overNetWeightSku(sku)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() AND isBalanceBSnapshot(snapshot);
                    netWeightASkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[14,3](balanceASkuStockDate(sku, stock, dateCur())*overNetWeightSku(sku)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() AND isBalanceASnapshot(snapshot);                            
                            
                }          
                                
                IF isCostSnapshot(snapshot) THEN {
                    costBSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](costSumBSkuStockDate(sku, stock, dateCur())) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() AND costSumBSkuStockDate(sku, stock, date)
                            AND isBalanceBSnapshot(snapshot);   
                    costASkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](costSumASkuStockDate(sku, stock, dateCur())) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() AND costSumASkuStockDate(sku, stock, date)
                            AND isBalanceASnapshot(snapshot);                                             
                
                } 
                IF isVATSupplierSnapshot(snapshot) THEN {
                    VATSupplierBSkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](costSumBSkuStockDate(sku, stock, dateCur())*valueVATSkuCountryDate(sku,countryStock(stock),dateCur())/100) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() AND costSumBSkuStockDate(sku, stock, date)
                            AND isBalanceBSnapshot(snapshot);   
                    VATSupplierASkuStockSnapshotDate(sku, stock, snapshot, date) <- NUMERIC[16,2](costSumASkuStockDate(sku, stock, dateCur())*valueVATSkuCountryDate(sku,countryStock(stock),dateCur())/100) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, sku) AND date == dateCur() AND costSumASkuStockDate(sku, stock, date)
                            AND isBalanceASnapshot(snapshot);                                             
                
                }                                                                                           

                dateCur() <- sumDate(dateCur(), 1);
            }                    
        }               
                
        overTakeSkuSnapshotDateFromTo(snapshot, dateFrom, dateTo);      
                     
        IF isBatchSnapshot(snapshot) THEN {   
            IF isQuantitySnapshot(snapshot) THEN {
                IF isBalanceASnapshot(snapshot) THEN
                    balanceABatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](balanceABatchStockDate(batch, stock, dateTo)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));
                
                IF isInSnapshot(snapshot) THEN
                    inQuantityBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](costInBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));
        
                IF isOutSnapshot(snapshot) THEN
                    outQuantityBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](costOutBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));

                IF isBalanceBSnapshot(snapshot) THEN
                    IF isBalanceASnapshot(snapshot) AND isInSnapshot(snapshot) AND isOutSnapshot(snapshot) THEN
                        balanceBBatchStockSnapshot(batch, stock, snapshot) <- (balanceABatchStockSnapshot(batch, stock, snapshot) (-) inQuantityBatchStockSnapshot(batch, stock, snapshot) (+) outQuantityBatchStockSnapshot(batch, stock, snapshot))
                            WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch))
                    ELSE
                        balanceBBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](balanceBBatchStockDate(batch, stock, dateFrom)) 
                            WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));
            }
            IF isSumSnapshot(snapshot) THEN {  
                IF isInSnapshot(snapshot) THEN
                    inSumBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](costSumInBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));
        
                IF isOutSnapshot(snapshot) THEN
                    outSumBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](costSumOutBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));               
            
                IF isBalanceASnapshot(snapshot) THEN
                    sumABatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](balanceABatchStockDate(batch, stock, dateTo)*costBatch(batch)) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));                  
                IF isBalanceBSnapshot(snapshot) THEN
                    IF isBalanceASnapshot(snapshot) AND isInSnapshot(snapshot) AND isOutSnapshot(snapshot) THEN
                        sumBBatchStockSnapshot(batch, stock, snapshot) <- (sumABatchStockSnapshot(batch, stock, snapshot) (-) inSumBatchStockSnapshot(batch, stock, snapshot) (+) outSumBatchStockSnapshot(batch, stock, snapshot))
                            WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch))
                    ELSE
                        sumBBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](balanceBBatchStockDate(batch, stock, dateFrom)*costBatch(batch)) 
                            WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));             
            }  
            IF isVATSupplierSnapshot(snapshot) THEN {
                VATSupplierABatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](balanceABatchStockDate(batch, stock, dateTo)*costBatch(batch)*valueVATSkuCountryDate(skuBatch(batch),countryStock(stock),dateTo)/100) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch)) AND isBalanceASnapshot(snapshot); 
                VATSupplierBBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](balanceBBatchStockDate(batch, stock, dateFrom)*costBatch(batch)*valueVATSkuCountryDate(skuBatch(batch),countryStock(stock),dateTo)/100) 
                    WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch)) AND isBalanceBSnapshot(snapshot);                                   
            }
            //-- todo: может надо брать вес от инвойса для партии 
            IF isNetWeightSnapshot(snapshot) THEN {
                IF isBalanceASnapshot(snapshot) THEN
                    netWeightABatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](balanceABatchStockDate(batch, stock, dateTo)*overNetWeightSku(skuBatch(batch))) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));
                
                IF isInSnapshot(snapshot) THEN
                    inNetWeightBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](costInBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)*overNetWeightSku(skuBatch(batch))) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));
        
                IF isOutSnapshot(snapshot) THEN
                    outNetWeightBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](costOutBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)*overNetWeightSku(skuBatch(batch))) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));

                IF isBalanceBSnapshot(snapshot) THEN
                    netWeightBBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](balanceBBatchStockDate(batch, stock, dateFrom)*overNetWeightSku(skuBatch(batch))) 
                        WHERE includeSnapshotStock(snapshot, stock) AND includeSnapshotSku(snapshot, skuBatch(batch));
            }                                 
                                 
            overTakeBatchSnapshotDateFromTo(snapshot, dateFrom, dateTo);     
        }         
        overTakeSnapshotDateFromTo(snapshot, dateFrom, dateTo);
        
        finishTimeSnapshot(snapshot) <- currentDateTime();      
        apply(); 
    } ELSE {
        MESSAGE 'Не выбраны группы товаров или склады для отчета';
    }           
};

takeDataSnapshot 'Сформировать отчет' (snapshot) = ACTION (snapshot) { 
    IF finishTimeSnapshot(snapshot) THEN {
        CONFIRM 'Вы действительно хотите выполнить действие "Сформировать отчет?"';
        IF (confirmed()) THEN {            
            takeSnapshotDateFromTo(snapshot, fromDateSnapshot(snapshot), toDateSnapshot(snapshot));
        }
    } ELSE {
        takeSnapshotDateFromTo(snapshot, fromDateSnapshot(snapshot), toDateSnapshot(snapshot));    
    }    
}

filterMoveSkuStockSnapshot (s, st, r) = balanceBSkuStockSnapshot(s,st,r) OR balanceASkuStockSnapshot(s,st,r) OR 
                                        inQuantitySkuStockSnapshot(s,st,r) OR outQuantitySkuStockSnapshot(s,st,r) PERSISTENT;
                                        
filterMoveSkuStockSnapshotDate (s, st, r, d) = balanceBSkuStockSnapshotDate(s,st,r,d) OR balanceASkuStockSnapshotDate(s,st,r,d) OR 
                                        inQuantitySkuStockSnapshotDate(s,st,r,d) OR outQuantitySkuStockSnapshotDate(s,st,r,d) PERSISTENT;  
                                        
filterMoveSnapshotDate (r, d) = GROUP SUM 1 IF filterMoveSkuStockSnapshotDate (s, st, r, d) BY r, d;                                        
filterMoveStockSnapshotDate (st, r, d) = GROUP SUM 1 IF filterMoveSkuStockSnapshotDate (s, st, r, d) BY st, r, d;                                       
                                                                              
filterMoveBatchStockSnapshot (bt,ss,r)= balanceBBatchStockSnapshot(bt,ss,r) OR balanceABatchStockSnapshot(bt,ss,r) OR 
                                        inQuantityBatchStockSnapshot(bt,ss,r) OR outQuantityBatchStockSnapshot(bt,ss,r) PERSISTENT;

//-- SHOWIF
isQuantityBalanceBSnapshot = isQuantitySnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
isQuantityInSnapshot = isQuantitySnapshot(snapshot) AND isInSnapshot(snapshot);
isQuantityOutSnapshot = isQuantitySnapshot(snapshot) AND isOutSnapshot(snapshot);
isQuantityBalanceASnapshot = isQuantitySnapshot(snapshot) AND isBalanceASnapshot(snapshot);

isSumBalanceBSnapshot = isSumSnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
isNetWeightBalanceBSnapshot = isNetWeightSnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
isSumInSnapshot = isSumSnapshot(snapshot) AND isInSnapshot(snapshot);
isNetWeightInSnapshot = isNetWeightSnapshot(snapshot) AND isInSnapshot(snapshot);
isSumOutSnapshot = isSumSnapshot(snapshot) AND isOutSnapshot(snapshot);
isNetWeightOutSnapshot = isNetWeightSnapshot(snapshot) AND isOutSnapshot(snapshot);
isSumBalanceASnapshot = isSumSnapshot(snapshot) AND isBalanceASnapshot(snapshot);
isNetWeightBalanceASnapshot = isNetWeightSnapshot(snapshot) AND isBalanceASnapshot(snapshot);

isCostBalanceBSnapshot =  isCostSnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
isCostVATSupplierBalanceBSnapshot =  isCostVATSupplierSnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
isCostBalanceASnapshot = isCostSnapshot(snapshot) AND isBalanceASnapshot(snapshot);
isCostVATSupplierBalanceASnapshot = isCostVATSupplierSnapshot(snapshot) AND isBalanceASnapshot(snapshot);

isVATSupplierBalanceBSnapshot = isVATSupplierSnapshot(snapshot) AND isBalanceBSnapshot(snapshot);
isVATSupplierBalanceASnapshot = isVATSupplierSnapshot(snapshot) AND isBalanceASnapshot(snapshot);

//--
isQuantityBalanceBBatchSnapshot = isQuantitySnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isQuantityInBatchSnapshot = isQuantitySnapshot(snapshot) AND isInSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isQuantityOutBatchSnapshot = isQuantitySnapshot(snapshot) AND isOutSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isQuantityBalanceABatchSnapshot = isQuantitySnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isBatchSnapshot(snapshot);

isSumBalanceBBatchSnapshot = isSumSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isCostVATSupplierBalanceBBatchSnapshot = isCostVATSupplierSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isBatchSnapshot(snapshot);

isCostBalanceBBatchSnapshot = isCostSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isNetWeightBalanceBBatchSnapshot = isNetWeightSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isSumInBatchSnapshot = isSumSnapshot(snapshot) AND isInSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isCostInBatchSnapshot = isCostSnapshot(snapshot) AND isInSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isNetWeightInBatchSnapshot = isNetWeightSnapshot(snapshot) AND isInSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isSumOutBatchSnapshot = isSumSnapshot(snapshot) AND isOutSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isCostOutBatchSnapshot = isCostSnapshot(snapshot) AND isOutSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isNetWeightOutBatchSnapshot = isNetWeightSnapshot(snapshot) AND isOutSnapshot(snapshot) AND isBatchSnapshot(snapshot);
isSumBalanceABatchSnapshot = isSumSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isBatchSnapshot(snapshot);
isCostVATSupplierBalanceABatchSnapshot = isCostVATSupplierSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isBatchSnapshot(snapshot);

isCostBalanceABatchSnapshot = isCostSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isBatchSnapshot(snapshot);
isNetWeightBalanceABatchSnapshot = isNetWeightSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isBatchSnapshot(snapshot);

isBalanceBBatchVATSupplierSnapshot = isBalanceBSnapshot(snapshot) AND isBatchSnapshot(snapshot) AND isVATSupplierSnapshot(snapshot);
isBalanceABatchVATSupplierSnapshot = isBalanceASnapshot(snapshot) AND isBatchSnapshot(snapshot) AND isVATSupplierSnapshot(snapshot);
//--
isQuantityBalanceBDateSnapshot = isQuantitySnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isDateSnapshot(snapshot);
isQuantityInDateSnapshot = isQuantitySnapshot(snapshot) AND isInSnapshot(snapshot) AND isDateSnapshot(snapshot);
isQuantityOutDateSnapshot = isQuantitySnapshot(snapshot) AND isOutSnapshot(snapshot) AND isDateSnapshot(snapshot);
isQuantityBalanceADateSnapshot = isQuantitySnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isDateSnapshot(snapshot);

isSumBalanceBDateSnapshot = isSumSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isDateSnapshot(snapshot);
isNetWeightBalanceBDateSnapshot = isNetWeightSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isDateSnapshot(snapshot);
isSumInDateSnapshot = isSumSnapshot(snapshot) AND isInSnapshot(snapshot) AND isDateSnapshot(snapshot);
isNetWeightInDateSnapshot = isNetWeightSnapshot(snapshot) AND isInSnapshot(snapshot) AND isDateSnapshot(snapshot);
isSumOutDateSnapshot = isSumSnapshot(snapshot) AND isOutSnapshot(snapshot) AND isDateSnapshot(snapshot);
isNetWeightOutDateSnapshot = isNetWeightSnapshot(snapshot) AND isOutSnapshot(snapshot) AND isDateSnapshot(snapshot);
isSumBalanceADateSnapshot = isSumSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isDateSnapshot(snapshot);
isNetWeightBalanceADateSnapshot= isNetWeightSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isDateSnapshot(snapshot);

isCostBalanceBDateSnapshot = isCostSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isDateSnapshot(snapshot) ;
isCostBalanceADateSnapshot = isCostSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isDateSnapshot(snapshot);

isCostVATSupplierBalanceBDateSnapshot = isCostVATSupplierSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isDateSnapshot(snapshot) ;
isCostVATSupplierBalanceADateSnapshot = isCostVATSupplierSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isDateSnapshot(snapshot);

isVATSupplierBalanceBDateSnapshot = isVATSupplierSnapshot(snapshot) AND isBalanceBSnapshot(snapshot) AND isDateSnapshot(snapshot);
isVATSupplierBalanceADateSnapshot = isVATSupplierSnapshot(snapshot) AND isBalanceASnapshot(snapshot) AND isDateSnapshot(snapshot);

FORM snapshot 'Аналитический отчет'                                   
    OBJECTS r = Snapshot FIXED PANEL
    PROPERTIES (r) nameNumeratorSnapshot, 
                   numberSnapshot, seriesSnapshot, nameSnapshotTypeSnapshot, dateSnapshot, timeSnapshot,
                   noteSnapshot, fromDateSnapshot, toDateSnapshot,  
                   isQuantitySnapshot, isSumSnapshot, isBalanceBSnapshot BACKGROUND hintBalanceBBackground(), 
                   isInSnapshot BACKGROUND hintInBackground(), isOutSnapshot BACKGROUND hintOutBackground(), 
                   isBalanceASnapshot BACKGROUND hintBalanceABackground(),
                   isBatchSnapshot, isDateSnapshot, isCostSnapshot, isVATSupplierSnapshot, isCostVATSupplierSnapshot,
                   isNetWeightSnapshot 
//-- выбор складов                  
    TREE stockTree2 a2 = STRING[3], sg2 = StockGroup PARENT parentStockGroup, ts2 = Stock
    PROPERTIES OBJVALUE(a2) READONLY, allStockIncludeSnapshot(r) TODRAW a2, 
               nameStockGroup(sg2) READONLY, includeSnapshotStockGroup(r,sg2),
               nameStock(ts2) READONLY, includeSnapshotStock(r,ts2)
    ORDER BY nameStockGroup(sg2)
    FILTERS stringEqualsAll(a2),
            stockGroupStock(ts2) == sg2,
            isCompanyStock(ts2)
    FILTERGROUP inactiveStock2 FILTER 'Активный' 'ctrl F10' activeStock(ts2) DEFAULT                                                                                  
          
//-- выбор групп товара     
    TREE skuTree2 sk2 = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY nameSkuGroup(sk2)
    PROPERTIES includeSnapshotSkuGroup(r,sk2)
    ORDER BY nameSkuGroup(sk2)
    FILTERGROUP inactive2 FILTER 'Активные' 'F5' activeSkuGroup(sk2) DEFAULT            
            
//--sku    
    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup, ts = Stock
    PROPERTIES READONLY OBJVALUE(a), nameStockGroup(sg), nameStock(ts)
    ORDER BY nameStockGroup(sg)
    FILTERS stringEqualsAll(a),
            stockGroupStock(ts) == sg,
            isCompanyStock(ts)
    FILTERGROUP inactiveStockts FILTER 'Активный' 'ctrl F10' activeStock(ts) DEFAULT    
    
    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY nameSkuGroup(sk)
    ORDER BY nameSkuGroup(sk)
    FILTERGROUP inactivesk FILTER 'Активные' 'F5' activeSkuGroup(sk) DEFAULT
    
    OBJECTS           sts=(st=Stock, s=Sku)
    PROPERTIES        READONLY nameSku(s), idBarcodeSku(s), nameStock(st)
    FILTERGROUP inactiveStockst FILTER 'Активный' 'ctrl F10' activeStock(st) DEFAULT         
        
    FILTERS           isParentSkuGroupSku(sk, s),
                      st == ts AND sg IS StockGroup OR isParentStockGroupStock(sg, st) AND NOT ts OR st IS Stock AND NOT sg AND NOT ts,
                      isCompanyStock(st),
                      includeSnapshotStock(r,st)

    PROPERTIES(s, st, r) BACKGROUND hintBalanceBBackground() balanceBSkuStockSnapshot SHOWIF isQuantityBalanceBSnapshot(r), 
                         sumBSkuStockSnapshot SHOWIF isSumBalanceBSnapshot(r),                         
                         costBSkuStockSnapshot SHOWIF isCostBalanceBSnapshot(r),                         
                         VATSupplierBSkuStockSnapshot SHOWIF isVATSupplierBalanceBSnapshot(r), 
                         costVATSupplierBSkuStockSnapshot SHOWIF isCostVATSupplierBalanceBSnapshot(r),
                         netWeightBSkuStockSnapshot SHOWIF isNetWeightBalanceBSnapshot(r)
    PROPERTIES(s, st, r) BACKGROUND hintInBackground() inQuantitySkuStockSnapshot SHOWIF isQuantityInSnapshot(r), 
                         inSumSkuStockSnapshot SHOWIF isSumInSnapshot(r),
                         inNetWeightSkuStockSnapshot SHOWIF isNetWeightInSnapshot(r)
    PROPERTIES(s, st, r) BACKGROUND hintOutBackground() outQuantitySkuStockSnapshot SHOWIF isQuantityOutSnapshot(r), 
                         outSumSkuStockSnapshot SHOWIF isSumOutSnapshot(r),
                         outNetWeightSkuStockSnapshot SHOWIF isNetWeightOutSnapshot(r)
    PROPERTIES(s, st, r) BACKGROUND hintBalanceABackground() balanceASkuStockSnapshot SHOWIF isQuantityBalanceASnapshot(r), 
                         sumASkuStockSnapshot SHOWIF isSumBalanceASnapshot(r),                         
                         costASkuStockSnapshot SHOWIF isCostBalanceASnapshot(r),
                         VATSupplierASkuStockSnapshot SHOWIF isVATSupplierBalanceASnapshot(r),
                         costVATSupplierASkuStockSnapshot SHOWIF isCostVATSupplierBalanceASnapshot(r),                                                                         
                         netWeightASkuStockSnapshot SHOWIF isNetWeightBalanceASnapshot(r)                                                                                                               
    PROPERTIES        READONLY nameSkuGroup1Sku(s), nameSkuGroup2Sku(s),nameSkuGroup3Sku(s), nameSkuGroup4Sku(s), nameSkuGroup5Sku(s)   
                                                                                
    FILTERGROUP filtersSold
        FILTER 'С движением' 'F11' filterMoveSkuStockSnapshot(s,st,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBSkuStockSnapshot(s,st,r) OR balanceASkuStockSnapshot(s,st,r)  
        FILTER 'С приходом' 'F9' inQuantitySkuStockSnapshot(s,st,r)   
        FILTER 'С продажей' 'F8' outQuantitySkuStockSnapshot(s,st,r) 
                                                                                                                                                                                      
//--batch
    OBJECTS           stb=(ss=Stock, bt=Batch) FIXED GRID
    PROPERTIES        READONLY SHOWIF isBatchSnapshot(r) nameSkuBatch(bt), idBarcodeSkuBatch(bt), nameStock(ss), nameBatch(bt)
    FILTERS           isParentSkuGroupBatch(sk, bt),
                      ss == ts AND sg IS StockGroup OR isParentStockGroupStock(sg, ss) AND NOT ts OR ss IS Stock AND NOT sg AND NOT ts,
                      isCompanyStock(ss),
                      includeSnapshotStock(r,ss)
    FILTERGROUP inactiveStock FILTER 'Активный' 'ctrl F10' activeStock(ss) DEFAULT

    PROPERTIES(bt, ss, r) BACKGROUND hintBalanceBBackground() balanceBBatchStockSnapshot SHOWIF isQuantityBalanceBBatchSnapshot(r), 
                          sumBBatchStockSnapshot SHOWIF isSumBalanceBBatchSnapshot(r),                          
                          VATSupplierBBatchStockSnapshot SHOWIF isBalanceBBatchVATSupplierSnapshot(r),
                          sumVATSupplierBBatchStockSnapshot SHOWIF isCostVATSupplierBalanceBBatchSnapshot(r),                                                    
                          netWeightBBatchStockSnapshot SHOWIF isNetWeightBalanceBBatchSnapshot(r) 
    PROPERTIES(bt, ss, r) BACKGROUND hintInBackground() inQuantityBatchStockSnapshot SHOWIF isQuantityInBatchSnapshot(r), 
                          inSumBatchStockSnapshot SHOWIF isSumInBatchSnapshot(r),
                          inNetWeightBatchStockSnapshot SHOWIF isNetWeightInBatchSnapshot(r)
    PROPERTIES(bt, ss, r) BACKGROUND hintOutBackground() outQuantityBatchStockSnapshot SHOWIF isQuantityOutBatchSnapshot(r), 
                          outSumBatchStockSnapshot SHOWIF isSumOutBatchSnapshot(r),
                          outNetWeightBatchStockSnapshot SHOWIF isNetWeightOutBatchSnapshot(r)                             
    PROPERTIES(bt, ss, r) BACKGROUND hintBalanceABackground() balanceABatchStockSnapshot SHOWIF isQuantityBalanceABatchSnapshot(r), 
                          sumABatchStockSnapshot SHOWIF isSumBalanceABatchSnapshot(r),
                          VATSupplierABatchStockSnapshot SHOWIF isBalanceABatchVATSupplierSnapshot(r),
                          sumVATSupplierABatchStockSnapshot SHOWIF isCostVATSupplierBalanceABatchSnapshot(r),   
                          netWeightABatchStockSnapshot SHOWIF isNetWeightBalanceABatchSnapshot(r) 
    PROPERTIES        READONLY SHOWIF isBatchSnapshot(r) dateBatch(bt), nameSkuGroup1Batch(bt), nameSkuGroup2Batch(bt), 
                      nameSkuGroup3Batch(bt), nameSkuGroup4Batch(bt), nameSkuGroup5Batch(bt)
    ORDER BY          dateBatch(bt)            
        
    FILTERGROUP filtersSoldBatch
        FILTER 'С движением' 'F11' filterMoveBatchStockSnapshot(bt,ss,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBBatchStockSnapshot(bt,ss,r) OR balanceABatchStockSnapshot(bt,ss,r)  
        FILTER 'С приходом' 'F9' inQuantityBatchStockSnapshot(bt,ss,r)   
        FILTER 'С продажей' 'F8' outQuantityBatchStockSnapshot(bt,ss,r)     
    
    PROPERTIES(r)  takeDataSnapshot FORCE PANEL 
//-- По группам    
    TREE skuTree1 sk1 = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY nameSkuGroup(sk1)
    ORDER BY nameSkuGroup(sk1)
    FILTERGROUP inactive FILTER 'Активные' 'F5' activeSkuGroup(sk1) DEFAULT    
    PROPERTIES(sk1,r) READONLY BACKGROUND hintBalanceBBackground() balanceBSkuGroupSnapshot SHOWIF isQuantityBalanceBSnapshot(r), 
                      sumBSkuGroupSnapshot SHOWIF isSumBalanceBSnapshot(r),                      
                      costBSkuGroupSnapshot SHOWIF isCostBalanceBSnapshot(r),
                      VATSupplierBSkuGroupSnapshot SHOWIF isVATSupplierBalanceBSnapshot(r),
                      costVATSupplierBSkuGroupSnapshot SHOWIF isCostVATSupplierBalanceBSnapshot(r),
                      netWeightBSkuGroupSnapshot SHOWIF isNetWeightBalanceBSnapshot(r)
    PROPERTIES(sk1,r) READONLY BACKGROUND hintBalanceABackground() balanceASkuGroupSnapshot SHOWIF isQuantityBalanceASnapshot(r), 
                      sumASkuGroupSnapshot SHOWIF isSumBalanceASnapshot(r),
                      costASkuGroupSnapshot SHOWIF isCostBalanceASnapshot(r),
                      VATSupplierASkuGroupSnapshot SHOWIF isVATSupplierBalanceASnapshot(r),
                      costVATSupplierASkuGroupSnapshot SHOWIF isCostVATSupplierBalanceASnapshot(r),
                      netWeightASkuGroupSnapshot SHOWIF isNetWeightBalanceASnapshot(r)               
       
//-- По складам           
    TREE stockTree1 a1 = STRING[3], sg1 = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a1), nameStockGroup(sg1)
    ORDER BY nameStockGroup(sg1)    
        
    OBJECTS ts1 = Stock
    PROPERTIES READONLY nameStock(ts1)   
    ORDER BY nameStock(ts1) 
    
    FILTERS stringEqualsAll(a1),
            ts1 IS Stock AND NOT sg1 IS StockGroup OR isParentStockGroupStock(sg1, ts1),
            isCompanyStock(ts1),
            includeSnapshotStock(r,ts1)     
    FILTERGROUP inactiveStock1 FILTER 'Активный' 'ctrl F10' activeStock(ts1) DEFAULT               

    PROPERTIES(ts1,r) READONLY BACKGROUND hintBalanceBBackground() balanceBStockSnapshot SHOWIF isQuantityBalanceBSnapshot(r), 
                      sumBStockSnapshot SHOWIF isSumBalanceBSnapshot(r),
                      costBStockSnapshot SHOWIF isCostBalanceBSnapshot(r),
                      VATSupplierBStockSnapshot SHOWIF isVATSupplierBalanceBSnapshot(r),
                      costVATSupplierBStockSnapshot SHOWIF isCostVATSupplierBalanceBSnapshot(r),                      
                      netWeightBStockSnapshot SHOWIF isNetWeightBalanceBSnapshot(r)   
    PROPERTIES(ts1,r) READONLY BACKGROUND hintInBackground() inQuantityStockSnapshot SHOWIF isQuantityInSnapshot(r), 
                      inSumStockSnapshot SHOWIF isSumInSnapshot(r),
                      inNetWeightStockSnapshot SHOWIF isNetWeightInSnapshot(r)  
    PROPERTIES(ts1,r) READONLY BACKGROUND hintOutBackground() outQuantityStockSnapshot SHOWIF isQuantityOutSnapshot(r), 
                      outSumStockSnapshot SHOWIF isSumOutSnapshot(r),
                      outNetWeightStockSnapshot SHOWIF isNetWeightOutSnapshot(r)  
    PROPERTIES(ts1,r) READONLY BACKGROUND hintBalanceABackground() balanceAStockSnapshot SHOWIF isQuantityBalanceASnapshot(r), 
                      sumAStockSnapshot SHOWIF isSumBalanceASnapshot(r),
                      costAStockSnapshot SHOWIF isCostBalanceASnapshot(r),
                      VATSupplierAStockSnapshot SHOWIF isVATSupplierBalanceASnapshot(r),
                      costVATSupplierAStockSnapshot SHOWIF isCostVATSupplierBalanceASnapshot(r),
                      netWeightAStockSnapshot SHOWIF isNetWeightBalanceASnapshot(r)    
                                  
    FILTERGROUP filtersSoldStock
        FILTER 'С движением' 'F11' balanceBStockSnapshot(ts1,r) OR balanceAStockSnapshot(ts1,r) OR 
                                   inQuantityStockSnapshot(ts1,r) OR outQuantityStockSnapshot(ts1,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBStockSnapshot(ts1,r) OR balanceAStockSnapshot(ts1,r)  
        FILTER 'С приходом' 'F9' inQuantityStockSnapshot(ts1,r)   
        FILTER 'С продажей' 'F8' outQuantityStockSnapshot(ts1,r)   
                                          
//-- По поставщикам                                                
    
    OBJECTS l=LegalEntity FIXED GRID
    PROPERTIES READONLY SHOWIF isBatchSnapshot(r) nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' 'shift F10' activeLegalEntity(l) DEFAULT
    FILTERS isSupplierLegalEntity(l)                                              
                                              
    PROPERTIES(l,r) READONLY BACKGROUND hintBalanceBBackground() balanceBBatchSupplierSnapshot SHOWIF isQuantityBalanceBBatchSnapshot(r), 
                    sumBBatchSupplierSnapshot  SHOWIF isSumBalanceBBatchSnapshot(r),
                    VATSupplierBBatchSupplierSnapshot SHOWIF isBalanceBBatchVATSupplierSnapshot(r),
                    sumVATSupplierBBatchSupplierSnapshot SHOWIF isCostVATSupplierBalanceBBatchSnapshot(r),
                    netWeightBBatchSupplierSnapshot  SHOWIF isNetWeightBalanceBBatchSnapshot(r)
    PROPERTIES(l,r) READONLY BACKGROUND hintInBackground() inQuantityBatchSupplierSnapshot SHOWIF isQuantityInBatchSnapshot(r), 
                    inSumBatchSupplierSnapshot  SHOWIF isSumInBatchSnapshot(r),
                    inNetWeightBatchSupplierSnapshot  SHOWIF isNetWeightInBatchSnapshot(r)
    PROPERTIES(l,r) READONLY BACKGROUND hintOutBackground() outQuantityBatchSupplierSnapshot SHOWIF isQuantityOutBatchSnapshot(r), 
                    outSumBatchSupplierSnapshot  SHOWIF isSumOutBatchSnapshot(r),
                    outNetWeightBatchSupplierSnapshot  SHOWIF isNetWeightOutBatchSnapshot(r)
    PROPERTIES(l,r) READONLY BACKGROUND hintBalanceABackground() balanceABatchSupplierSnapshot SHOWIF isQuantityBalanceABatchSnapshot(r), 
                    sumABatchSupplierSnapshot  SHOWIF isSumBalanceABatchSnapshot(r), 
                    VATSupplierABatchSupplierSnapshot SHOWIF isBalanceABatchVATSupplierSnapshot(r),
                    sumVATSupplierABatchSupplierSnapshot SHOWIF isCostVATSupplierBalanceABatchSnapshot(r),
                    netWeightABatchSupplierSnapshot  SHOWIF isNetWeightBalanceABatchSnapshot(r)                                                                                                                                                          
 
    FILTERGROUP filtersSoldSupplier
        FILTER 'С движением' 'F11' balanceBBatchSupplierSnapshot(l,r) OR balanceABatchSupplierSnapshot(l,r) OR 
                                   inQuantityBatchSupplierSnapshot(l,r) OR outQuantityBatchSupplierSnapshot(l,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBBatchSupplierSnapshot(l,r) OR balanceABatchSupplierSnapshot(l,r)  
        FILTER 'С приходом' 'F9' inQuantityBatchSupplierSnapshot(l,r)   
        FILTER 'С продажей' 'F8' outQuantityBatchSupplierSnapshot(l,r)    
        
//-- По SKU на дату         
           
    OBJECTS           sts3=(st3=Stock, s3=Sku, d3=DATE) FIXED GRID 
    PROPERTIES        READONLY SHOWIF isDateSnapshot(r) valD3 =OBJVALUE(d3), nameSku(s3), idBarcodeSku(s3), nameStock(st3) 
    
    ORDER BY          valD3     
    FILTERS           filterMoveSnapshotDate(r,d3)
    
    FILTERGROUP inactiveStock3 FILTER 'Активный' 'ctrl F10' activeStock(st3) DEFAULT         
        
    FILTERS           isParentSkuGroupSku(sk, s3),
                      st3 == ts AND sg IS StockGroup OR isParentStockGroupStock(sg, st3) AND NOT ts OR st3 IS Stock AND NOT sg AND NOT ts,
                      isCompanyStock(st3),
                      includeSnapshotStock(r,st3)

    PROPERTIES(s3,st3,r,d3) BACKGROUND hintBalanceBBackground() balanceBSkuStockSnapshotDate SHOWIF isQuantityBalanceBDateSnapshot(r), 
                            sumBSkuStockSnapshotDate SHOWIF isSumBalanceBDateSnapshot(r),
                            costBSkuStockSnapshotDate SHOWIF isCostBalanceBDateSnapshot(r),
                            VATSupplierBSkuStockSnapshotDate SHOWIF isVATSupplierBalanceBDateSnapshot(r),
                            costVATSupplierBSkuStockSnapshotDate SHOWIF isCostVATSupplierBalanceBDateSnapshot(r),
                            netWeightBSkuStockSnapshotDate SHOWIF isNetWeightBalanceBDateSnapshot(r)                             
    PROPERTIES(s3,st3,r,d3) BACKGROUND hintInBackground() inQuantitySkuStockSnapshotDate SHOWIF isQuantityInDateSnapshot(r), 
                            inSumSkuStockSnapshotDate SHOWIF isSumInDateSnapshot(r),
                            inNetWeightSkuStockSnapshotDate SHOWIF isNetWeightInDateSnapshot(r) 
    PROPERTIES(s3,st3,r,d3) BACKGROUND hintOutBackground() outQuantitySkuStockSnapshotDate SHOWIF isQuantityOutDateSnapshot(r), 
                            outSumSkuStockSnapshotDate SHOWIF isSumOutDateSnapshot(r),
                            outNetWeightSkuStockSnapshotDate SHOWIF isNetWeightOutDateSnapshot(r) 
    PROPERTIES(s3,st3,r,d3) BACKGROUND hintBalanceABackground() balanceASkuStockSnapshotDate SHOWIF isQuantityBalanceADateSnapshot(r), 
                            sumASkuStockSnapshotDate SHOWIF isSumBalanceADateSnapshot(r),
                            costASkuStockSnapshotDate SHOWIF isCostBalanceADateSnapshot(r),
                            VATSupplierASkuStockSnapshotDate SHOWIF isVATSupplierBalanceBDateSnapshot(r),
                            costVATSupplierASkuStockSnapshotDate SHOWIF isCostVATSupplierBalanceBDateSnapshot(r),
                            netWeightASkuStockSnapshotDate SHOWIF isNetWeightBalanceADateSnapshot(r)
                                                                                                                                                                             
    PROPERTIES        READONLY SHOWIF isDateSnapshot(r) nameSkuGroup1Sku(s3), nameSkuGroup2Sku(s3), nameSkuGroup3Sku(s3), 
                      nameSkuGroup4Sku(s3), nameSkuGroup5Sku(s3)
                                                             
    FILTERGROUP filtersSold1
        FILTER 'С движением' 'F11' filterMoveSkuStockSnapshotDate(s3,st3,r,d3) DEFAULT
        FILTER 'С остатком' 'F10' balanceBSkuStockSnapshotDate(s3,st3,r,d3) OR balanceASkuStockSnapshotDate(s3,st3,r,d3)  
        FILTER 'С приходом' 'F9' inQuantitySkuStockSnapshotDate(s3,st3,r,d3)   
        FILTER 'С продажей' 'F8' outQuantitySkuStockSnapshotDate(s3,st3,r,d3)         

    OBJECTS st4=Stock
    FILTERS           st4 == ts AND sg IS StockGroup OR isParentStockGroupStock(sg, st4) AND NOT ts OR st4 IS Stock AND NOT sg AND NOT ts,
                      isCompanyStock(st4),
                      includeSnapshotStock(r,st4)
    
    OBJECTS d4=DATE FIXED GRID  
    PROPERTIES READONLY  SHOWIF isDateSnapshot(r) valD4 =OBJVALUE(d4)  
    FILTERS           filterMoveSnapshotDate (r, d4)
        
    PROPERTIES(st4,r,d4) BACKGROUND hintBalanceBBackground() balanceBStockSnapshotDate COLUMNS 'g' (st4) HEADER nameBalanceBStock(st4) SHOWIF isQuantityBalanceBDateSnapshot(r), 
                         sumBStockSnapshotDate COLUMNS 'g' (st4) HEADER nameSumBStock(st4) SHOWIF isSumBalanceBDateSnapshot(r),
                         costBStockSnapshotDate COLUMNS 'g' (st4) HEADER nameCostBStock(st4) SHOWIF isCostBalanceBDateSnapshot(r),
                         VATSupplierBStockSnapshotDate COLUMNS 'g' (st4) HEADER nameCostBStock(st4) SHOWIF isVATSupplierBalanceBDateSnapshot(r),
                         costVATSupplierBStockSnapshotDate COLUMNS 'g' (st4) HEADER nameCostVATSupplierBStock(st4) SHOWIF isCostVATSupplierBalanceBDateSnapshot(r),  
                         netWeightBStockSnapshotDate COLUMNS 'g' (st4) HEADER nameNetWeightBStock(st4) SHOWIF isNetWeightBalanceBDateSnapshot(r)
    PROPERTIES(st4,r,d4) BACKGROUND hintInBackground() inQuantityStockSnapshotDate COLUMNS 'g' (st4) HEADER nameInQuantityStock(st4) SHOWIF isQuantityInDateSnapshot(r), 
                         inSumStockSnapshotDate COLUMNS 'g' (st4) HEADER nameInSumStock(st4) SHOWIF isSumInDateSnapshot(r),
                         inNetWeightStockSnapshotDate COLUMNS 'g' (st4) HEADER nameInNetWeightStock(st4) SHOWIF isNetWeightInDateSnapshot(r)
    PROPERTIES(st4,r,d4) BACKGROUND hintOutBackground() outQuantityStockSnapshotDate COLUMNS 'g' (st4) HEADER nameOutQuantityStock(st4) SHOWIF isQuantityOutDateSnapshot(r), 
                         outSumStockSnapshotDate COLUMNS 'g' (st4) HEADER nameOutSumStock(st4) SHOWIF isSumOutDateSnapshot(r),
                         outNetWeightStockSnapshotDate COLUMNS 'g' (st4) HEADER nameOutNetWeightStock(st4) SHOWIF isNetWeightOutDateSnapshot(r)
    PROPERTIES(st4,r,d4) BACKGROUND hintBalanceABackground() balanceAStockSnapshotDate COLUMNS 'g' (st4) HEADER nameBalanceAStock(st4) SHOWIF isQuantityBalanceADateSnapshot(r), 
                         sumAStockSnapshotDate COLUMNS 'g' (st4) HEADER nameSumAStock(st4) SHOWIF isSumBalanceADateSnapshot(r),
                         costAStockSnapshotDate COLUMNS 'g' (st4) HEADER nameCostAStock(st4) SHOWIF isCostBalanceADateSnapshot(r),
                         VATSupplierAStockSnapshotDate COLUMNS 'g' (st4) HEADER nameCostAStock(st4) SHOWIF isVATSupplierBalanceADateSnapshot(r),
                         costVATSupplierAStockSnapshotDate COLUMNS 'g' (st4) HEADER nameCostVATSupplierAStock(st4) SHOWIF isCostVATSupplierBalanceADateSnapshot(r),
                         netWeightAStockSnapshotDate COLUMNS 'g' (st4) HEADER nameNetWeightAStock(st4) SHOWIF isNetWeightBalanceADateSnapshot(r)                                      
   
    EDIT Snapshot OBJECT r
;
DESIGN snapshot FROM DEFAULT {
    main{
        preferredSize = (1024, 768);
        ADD r.box {
            type = CONTAINERH;
            ADD r.documentHeader;
            ADD r.numbered; 
            NEW date {
                caption = 'Период';
                type = CONTAINERH;
                ADD PROPERTY (fromDateSnapshot(r));
                ADD PROPERTY (toDateSnapshot(r));
            }                                  
        };
        NEW top {                     
            fill = 1;
            type = TABBED;
            NEW paramContainer {
                fill = 1;
                caption = 'Параметры';
                ADD r.evidence {
                    type = CONTAINERH;                      
                    NEW row1 {
                        type = CONTAINERV; 
                        caption = 'Основные';    
                        ADD PROPERTY(isBatchSnapshot(r));
                        ADD PROPERTY(isDateSnapshot(r));
                    }
                    NEW row2 {
                        caption = 'Остатки';                 
                        ADD PROPERTY(isBalanceBSnapshot(r));
                        ADD PROPERTY(isBalanceASnapshot(r));   
                                                                                             
                    }                    
                    NEW row3 {
                        type = CONTAINERV;
                        caption = 'Колонки';
                        type = COLUMNS;
                        columns = 4;
                        ADD PROPERTY(isQuantitySnapshot(r));
                        ADD PROPERTY(isSumSnapshot(r)); 
                        ADD PROPERTY(isCostSnapshot(r)); 
                        ADD PROPERTY(isVATSupplierSnapshot(r));   
                        ADD PROPERTY(isCostVATSupplierSnapshot(r));     
                        ADD PROPERTY(isNetWeightSnapshot(r));                   
                    }                      
                    NEW row5 {
                        type = CONTAINERV;
                        caption = 'Движение';
                        ADD PROPERTY(isInSnapshot(r));  
                        ADD PROPERTY(isOutSnapshot(r));                     
                    }                                                                          
                    NEW row6 {
                        type = CONTAINERV;
                        caption = 'Оборот';  
                        type = COLUMNS;
                        columns = 2;   
                                               
                    }                                                         
                }                                   
                ADD r.documentPrm;
                NEW select{
                    fill = 1;
                    type = SPLITH;
                    ADD stockTree2.tree.box { fill = 1; caption = 'Выбор складов'; }   
                    ADD skuTree2.tree.box { fill = 1; caption = 'Выбор групп'; }   
                }   
            }
            
            NEW resultContainer {
                caption = 'Результат';
                ADD PROPERTY (takeDataSnapshot(r)) { alignment = STRETCH; focusable = FALSE; font = 'bold 36';  }
                NEW resultContainer2 {
                    fill = 7;
                    type = TABBED;
                    NEW tabb1 {
                        caption = 'Таблица';
                        type = SPLITH;          
                        NEW firstCase {
                            fill = 1;
                            type = SPLITV;
                            ADD stockTree.tree.box { caption = 'Склады'; }
                            ADD skuTree.tree.box { caption = 'Группы'; }
                        }
                        NEW secondCase {
                            fill = 3;
                            type = TABBED;
                            NEW skuContainer{
                                fill = 1;
                                caption = 'Товары'; 
                                type = TABBED;
                                ADD sts.box {caption = 'Итоги';}
                                ADD sts3.box {caption = 'Динамика';}
                            }    
                            ADD stb.box {caption = 'Партии'; 
                                PROPERTY(dateBatch(bt)) { caption = 'Дата прихода'; }
                            }                                                  
                        }   
                    }
                    NEW tabb2 {
                        caption = 'По складам';
                        type = SPLITH; 
                        fill = 1;
                        ADD stockTree1.tree.box;                                                                                 
                        NEW tabb21 { 
                            fill = 3;   
                            type = TABBED;
                            ADD ts1.box { caption = 'Итоги';}    
                            ADD d4.box {caption = 'Динамика';}   
                        }      
                    }
                    ADD skuTree1.tree.box { caption = 'По группам'; }                        
                    ADD l.box { caption = 'По поставщикам'; }   
                }                 
            }
        } 
        REMOVE st4.box;
        ADD functions.box;
    }
}

@extendFormFilterStockGroupAccess(StockGroup, sg, snapshot);
@extendFormFilterStockGroupAccess(StockGroup, sg1, snapshot);

@extendFormFilterStockAccess(Stock, ts, snapshot);
@extendFormFilterStockAccess(Stock, st, snapshot);
@extendFormFilterStockAccess(Stock, ss, snapshot);
@extendFormFilterStockAccess(Stock, ts1, snapshot);

@extendFormFilterLegalEntityAccess(LegalEntity, l, snapshot, supplier);

FORM snapshots 'Аналитические отчеты'

    OBJECTS r = Snapshot
    PROPERTIES (r) READONLY numberSnapshot, seriesSnapshot, dateSnapshot, timeSnapshot,
                   fromDateSnapshot, toDateSnapshot, nameSnapshotTypeSnapshot, statusSnapshot BACKGROUND backgroundStatusSnapshot(r), 
                   startTimeSnapshot, finishTimeSnapshot, noteSnapshot, nameIncludeStockGroupsStockSnapshot, nameIncludeSkuGroupsSnapshot,
                   isBatchSnapshot, isDateSnapshot, isQuantitySnapshot, isNetWeightSnapshot, isSumSnapshot, isCostSnapshot, isVATSupplierSnapshot, 
                   isCostVATSupplierSnapshot, isBalanceBSnapshot BACKGROUND hintBalanceBBackground(), 
                   isInSnapshot BACKGROUND hintInBackground(),
                   isOutSnapshot BACKGROUND hintOutBackground(), isBalanceASnapshot BACKGROUND hintBalanceABackground()                  
                   
    PROPERTIES (r) ADDFORM, EDITFORM, deleter=DELETE FORCE PANEL TOOLBAR  
    PROPERTIES (r) READONLY FORCE PANEL createdNameUserSnapshot, createdTimeSnapshot, createdHostnameComputerSnapshot   
                         
    DIALOG Snapshot OBJECT r
;
DESIGN snapshots FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        ADD r.box;
        ADD r.created; 
        ADD functions.box;
    }    
}

NAVIGATOR {
    stockNavigator {
        NEW reports 'Аналитика' {
            ADD snapshotTypes;
            ADD snapshots;
        }
    }
}

