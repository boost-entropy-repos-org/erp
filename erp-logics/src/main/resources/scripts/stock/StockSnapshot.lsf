MODULE StockSnapshot;

REQUIRE SkuLedger, Document, PriceListLedger;

NAMESPACE Stock;

//////////////////////Отчет комиссионера////////////////////////////

CLASS Snapshot 'Отчет';

TABLE snapshot (Snapshot);


@defineDocumentHeaderTime(Snapshot);
@defineDocumentHeaderNote(Snapshot);
@defineDocumentHeaderCreated(Snapshot);
@deriveDocumentHeaderTimePrefix(Snapshot, );
@defineDocumentHeaderNumber(Snapshot);
@defineNumeratedDefault(Snapshot, 'Отчет', 'ОО');
@defineDocumentHeaderDescription (Snapshot, 'Отчет');

fromDateSnapshot 'Дата с' = DATA DATE (Snapshot) IN documentHeader;
toDateSnapshot 'Дата по' = DATA DATE (Snapshot) IN documentHeader;

WHEN SESSION SET(o IS Snapshot) DO {
    IF o IS Snapshot AND NOT fromDateSnapshot(o) THEN fromDateSnapshot(o) <- currentDate();
    IF o IS Snapshot AND NOT toDateSnapshot(o) THEN toDateSnapshot(o) <- currentDate();
};

isBatchSnapshot 'По партиям' = DATA BOOLEAN (Snapshot) IN documentHeader;
isSkuSnapshot 'По товарам' (s) = s IS Snapshot AND NOT isBatchSnapshot(s) IN documentHeader;
//------------------------------ Sku -------------------------------//

balanceBSkuStockSnapshot 'Кол-во начало' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
sumBSkuStockSnapshot 'Сумма начало' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);

purchaseQuantitySkuStockSnapshot 'Кол-во приход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
purchaseSumSkuStockSnapshot 'Сумма приход' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);

saleQuantitySkuStockSnapshot 'Кол-во расход' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
saleSumSkuStockSnapshot 'Сумма расход' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);

balanceASkuStockSnapshot 'Кол-во конец' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
sumASkuStockSnapshot 'Сумма конец' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);

//--По группе рекурсивно
TABLE groupStockSnapshot (Group, Stock, Snapshot);       
//-- группа/склад       
balanceBSkuRecGroupStockSnapshot 'Кол-во начало (рек.)' (group, stock, snapshot) =
    GROUP SUM balanceBSkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
sumBSkuRecGroupStockSnapshot 'Сумма начало (рек.)' (group, stock, snapshot) =
    GROUP SUM sumBSkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;        
    
purchaseQuantitySkuRecGroupStockSnapshot 'Кол-во приход (рек.)' (group, stock, snapshot) =
    GROUP SUM purchaseQuantitySkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
purchaseSumSkuRecGroupStockSnapshot 'Сумма приход (рек.)' (group, stock, snapshot) =
    GROUP SUM purchaseSumSkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;  
           
saleQuantitySkuRecGroupStockSnapshot 'Кол-во расход (рек.)' (group, stock, snapshot) =
    GROUP SUM saleQuantitySkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
saleSumSkuRecGroupStockSnapshot 'Сумма расход (рек.)' (group, stock, snapshot) =
    GROUP SUM saleSumSkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;             
    
balanceASkuRecGroupStockSnapshot 'Кол-во конец (рек.)' (group, stock, snapshot) =
    GROUP SUM balanceASkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;
sumASkuRecGroupStockSnapshot 'Сумма конец (рек.)' (group, stock, snapshot) =
    GROUP SUM sumASkuStockSnapshot (sku, stock, snapshot) IF isParentGroupSku(group, sku)
        BY group, stock, snapshot PERSISTENT;  
//-- группа          
balanceBSkuRecGroupSnapshot 'Кол-во начало (рек.)' (group, snapshot) =
    GROUP SUM balanceBSkuRecGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
sumBSkuRecGroupSnapshot 'Сумма начало (рек.)' (group, snapshot) =
    GROUP SUM sumBSkuRecGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;        
    
purchaseQuantitySkuRecGroupSnapshot 'Кол-во приход (рек.)' (group, snapshot) =
    GROUP SUM purchaseQuantitySkuRecGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
purchaseSumSkuRecGroupSnapshot 'Сумма приход (рек.)' (group, snapshot) =
    GROUP SUM purchaseSumSkuRecGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;      
 
saleQuantitySkuRecGroupSnapshot 'Кол-во расход (рек.)' (group, snapshot) =
    GROUP SUM saleQuantitySkuRecGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
saleSumSkuRecGroupSnapshot 'Сумма расход (рек.)' (group, snapshot) =
    GROUP SUM saleSumSkuRecGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;      
    
balanceASkuRecGroupSnapshot 'Кол-во конец (рек.)' (group, snapshot) =
    GROUP SUM balanceASkuRecGroupStockSnapshot (group, stock, snapshot)  BY group, snapshot; 
sumASkuRecGroupSnapshot 'Сумма конец (рек.)' (group, snapshot) =
    GROUP SUM sumASkuRecGroupStockSnapshot (group, stock, snapshot) BY group, snapshot;            

//--По складам
balanceBStockSnapshot 'Кол-во начало (рек.)' (stock, snapshot) =
    GROUP SUM balanceBSkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
sumBStockSnapshot 'Сумма начало (рек.)' (stock, snapshot) =
    GROUP SUM sumBSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;        
    
purchaseQuantityStockSnapshot 'Кол-во приход (рек.)' (stock, snapshot) =
    GROUP SUM purchaseQuantitySkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
purchaseSumStockSnapshot 'Сумма приход (рек.)' (stock, snapshot) =
    GROUP SUM purchaseSumSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;      
 
saleQuantityStockSnapshot 'Кол-во расход (рек.)' (stock, snapshot) =
    GROUP SUM saleQuantitySkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
saleSumStockSnapshot 'Сумма расход (рек.)' (stock, snapshot) =
    GROUP SUM saleSumSkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;      
    
balanceAStockSnapshot 'Кол-во конец (рек.)' (stock, snapshot) =
    GROUP SUM balanceASkuStockSnapshot (sku, stock, snapshot)  BY stock, snapshot; 
sumAStockSnapshot 'Сумма конец (рек.)' (stock, snapshot) =
    GROUP SUM sumASkuStockSnapshot (sku, stock, snapshot) BY stock, snapshot;   
        
//------------------------------ Batch -------------------------------//

balanceBBatchStockSnapshot 'Кол-во начало' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
sumBBatchStockSnapshot 'Сумма начало' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);

purchaseQuantityBatchStockSnapshot 'Кол-во приход' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
purchaseSumBatchStockSnapshot 'Сумма приход' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);

saleQuantityBatchStockSnapshot 'Кол-во расход' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
saleSumBatchStockSnapshot 'Сумма расход' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);

balanceABatchStockSnapshot 'Кол-во конец' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
sumABatchStockSnapshot 'Сумма конец' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);

//-- По поставщикам

balanceBBatchSupplierSnapshot 'Кол-во начало' (supplier, snapshot) =
    GROUP SUM balanceBBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
sumBBatchSupplierSnapshot 'Сумма начало' (supplier, snapshot) =
    GROUP SUM sumBBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot; 
    
purchaseQuantityBatchSupplierSnapshot 'Кол-во приход' (supplier, snapshot) =
    GROUP SUM purchaseQuantityBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
purchaseSumBatchSupplierSnapshot 'Сумма приход' (supplier, snapshot) =
    GROUP SUM purchaseSumBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;     
 
saleQuantityBatchSupplierSnapshot 'Кол-во расход' (supplier, snapshot) =
    GROUP SUM saleQuantityBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
saleSumBatchSupplierSnapshot 'Сумма расход' (supplier, snapshot) =
    GROUP SUM saleSumBatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;     
    
balanceABatchSupplierSnapshot 'Кол-во конец' (supplier, snapshot) =
    GROUP SUM balanceABatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;
sumABatchSupplierSnapshot 'Сумма конец' (supplier, snapshot) =
    GROUP SUM sumABatchStockSnapshot (batch, stock, snapshot) BY supplierBatch(batch), snapshot;     
    
//------------------------------- ACTION -------------------------------//    

takeSnapshotDateFromTo  = ACTION (snapshot, dateFrom, dateTo) {
     
        balanceBSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](balanceBSkuStockDate(sku, stock, dateFrom)) WHERE isCompanyStock(stock);
        sumBSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumBSkuStockDate(sku, stock, dateFrom)) WHERE isCompanyStock(stock);
        
        purchaseQuantitySkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](quantitySumInSkuStockDateDate(sku, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);
        purchaseSumSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumInSkuStockDateDate(sku, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);

        saleQuantitySkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](quantitySumOutSkuStockDateDate(sku, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);
        saleSumSkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumOutSkuStockDateDate(sku, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);        
        
        balanceASkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[14,3](balanceASkuStockDate(sku, stock, dateTo)) WHERE isCompanyStock(stock);
        sumASkuStockSnapshot(sku, stock, snapshot) <- NUMERIC[16,2](sumASkuStockDate(sku, stock, dateTo)) WHERE isCompanyStock(stock);   
                     
    IF isBatchSnapshot(snapshot) THEN {   

        balanceBBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](balanceBBatchStockDate(batch, stock, dateFrom)) WHERE isCompanyStock(stock);
        sumBBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](balanceBBatchStockDate(batch, stock, dateFrom)*costBatch(batch)) WHERE isCompanyStock(stock);
        
        purchaseQuantityBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](costInBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);
        purchaseSumBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](costSumInBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);

        saleQuantityBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](costOutBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);
        saleSumBatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](costSumOutBalanceBatchStockDateFromTo(batch, stock, dateFrom, dateTo)) WHERE isCompanyStock(stock);           
        
        balanceABatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[14,3](balanceABatchStockDate(batch, stock, dateTo)) WHERE isCompanyStock(stock);
        sumABatchStockSnapshot(batch, stock, snapshot) <- NUMERIC[16,2](balanceABatchStockDate(batch, stock, dateTo)*costBatch(batch)) WHERE isCompanyStock(stock);        
    }
};

takeDataSnapshot 'Заполнить данные' (snapshot) = takeSnapshotDateFromTo(snapshot, fromDateSnapshot(snapshot), toDateSnapshot(snapshot));

FORM snapshot 'Отчет'

    OBJECTS r = Snapshot FIXED PANEL
    PROPERTIES (r) nameNumeratorSnapshot, 
                   numberSnapshot, seriesSnapshot, dateSnapshot, timeSnapshot,
                   noteSnapshot, fromDateSnapshot, toDateSnapshot, isBatchSnapshot 

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup, ts = Stock
    PROPERTIES READONLY OBJVALUE(a), nameStockGroup(sg), nameStock(ts)
    ORDER BY nameStockGroup(sg)
    FILTERS stringEqualsAll(a),
            stockGroupStock(ts) == sg,
            isCompanyStock(ts)
    FILTERGROUP inactiveStock FILTER 'Активный склад' 'ctrl F10' activeStock(ts) DEFAULT              
            
//--sku      
    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY nameSkuGroup(sk)
    ORDER BY nameSkuGroup(sk)
    FILTERGROUP inactive FILTER 'Активные' 'F5' activeSkuGroup(sk) DEFAULT
    
    OBJECTS           sts=(st=Stock, s=Sku)
    PROPERTIES        READONLY nameSku(s), idBarcodeSku(s), nameStock(st)
    FILTERGROUP inactiveStock FILTER 'Активный склад' 'ctrl F10' activeStock(st) DEFAULT         
        
    FILTERS           isParentSkuGroupSku(sk, s),
                      st == ts AND sg IS StockGroup OR isParentStockGroupStock(sg, st) AND NOT ts OR st IS Stock AND NOT sg AND NOT ts,
                      isCompanyStock(st)

    PROPERTIES(s, st, r) balanceBSkuStockSnapshot, sumBSkuStockSnapshot, 
                         purchaseQuantitySkuStockSnapshot, purchaseSumSkuStockSnapshot,
                         saleQuantitySkuStockSnapshot, saleSumSkuStockSnapshot,
                         balanceASkuStockSnapshot, sumASkuStockSnapshot 
                                                             
    FILTERGROUP filtersSold
        FILTER 'С движением' 'F11' balanceBSkuStockSnapshot(s,st,r) OR balanceASkuStockSnapshot(s,st,r) OR 
                                   purchaseQuantitySkuStockSnapshot(s,st,r) OR saleQuantitySkuStockSnapshot(s,st,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBSkuStockSnapshot(s,st,r) OR balanceASkuStockSnapshot(s,st,r)  
        FILTER 'С приходом' 'F9' purchaseQuantitySkuStockSnapshot(s,st,r)   
        FILTER 'С продажей' 'F8' saleQuantitySkuStockSnapshot(s,st,r) 
                                                                                                                                                                                      
//--batch
    OBJECTS           stb=(ss=Stock, bt=Batch) FIXED GRID
    PROPERTIES        READONLY SHOWIF isBatchSnapshot(r) nameSkuBatch(bt), idBarcodeSkuBatch(bt), nameStock(ss), nameBatch(bt), dateTimeBatch(bt) 

//    PROPERTIES(bt)    READONLY numberBatch, seriesBatch, dateTimeBatch, nameSupplierBatch, nameBatch, idBatch, shippedQuantityBatch, costBatch, expiryDateBatch
    FILTERS           isParentSkuGroupBatch(sk, bt),
                      ss == ts AND sg IS StockGroup OR isParentStockGroupStock(sg, ss) AND NOT ts OR ss IS Stock AND NOT sg AND NOT ts,
                      isCompanyStock(ss)
    FILTERGROUP inactiveStock FILTER 'Активный склад' 'ctrl F10' activeStock(ss) DEFAULT
    ORDER BY          dateTimeBatch(bt)

    PROPERTIES(bt, ss, r) SHOWIF isBatchSnapshot(r) balanceBBatchStockSnapshot, sumBBatchStockSnapshot, 
                          purchaseQuantityBatchStockSnapshot, purchaseSumBatchStockSnapshot,
                          saleQuantityBatchStockSnapshot, saleSumBatchStockSnapshot,                              
                          balanceABatchStockSnapshot, sumABatchStockSnapshot
    
    FILTERGROUP filtersSoldBatch
        FILTER 'С движением' 'F11' balanceBBatchStockSnapshot(bt,ss,r) OR balanceABatchStockSnapshot(bt,ss,r) OR 
                                   purchaseQuantityBatchStockSnapshot(bt,ss,r) OR saleQuantityBatchStockSnapshot(bt,ss,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBBatchStockSnapshot(bt,ss,r) OR balanceABatchStockSnapshot(bt,ss,r)  
        FILTER 'С приходом' 'F9' purchaseQuantityBatchStockSnapshot(bt,ss,r)   
        FILTER 'С продажей' 'F8' saleQuantityBatchStockSnapshot(bt,ss,r)     
    
    PROPERTIES(r)  takeDataSnapshot FORCE PANEL 
//-- По группам    
    TREE skuTree1 sk1 = SkuGroup PARENT parentSkuGroup
    PROPERTIES READONLY nameSkuGroup(sk1)
    ORDER BY nameSkuGroup(sk1)
    FILTERGROUP inactive FILTER 'Активные' 'F5' activeSkuGroup(sk1) DEFAULT    
    PROPERTIES(sk1,r) READONLY  balanceBSkuRecGroupSnapshot, sumBSkuRecGroupSnapshot, 
                                purchaseQuantitySkuRecGroupSnapshot, purchaseSumSkuRecGroupSnapshot,
                                saleQuantitySkuRecGroupSnapshot, saleSumSkuRecGroupSnapshot,
                                balanceASkuRecGroupSnapshot, sumASkuRecGroupSnapshot                
       
//-- По складам           
    TREE stockTree1 a1 = STRING[3], sg1 = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a1), nameStockGroup(sg1)
    ORDER BY nameStockGroup(sg1)    
        
    OBJECTS ts1 = Stock
    PROPERTIES READONLY nameStock(ts1)   
    ORDER BY nameStock(ts1) 
    
    FILTERS stringEqualsAll(a1),
            ts1 IS Stock AND NOT sg1 IS StockGroup OR isParentStockGroupStock(sg1, ts1),
            isCompanyStock(ts1)     
    FILTERGROUP inactiveStock FILTER 'Активный склад' 'ctrl F10' activeStock(ts1) DEFAULT               

    PROPERTIES(ts1,r) READONLY  balanceBStockSnapshot, sumBStockSnapshot, 
                                purchaseQuantityStockSnapshot, purchaseSumStockSnapshot,
                                saleQuantityStockSnapshot, saleSumStockSnapshot,
                                balanceAStockSnapshot, sumAStockSnapshot  
                                  
    FILTERGROUP filtersSoldStock
        FILTER 'С движением' 'F11' balanceBStockSnapshot(ts1,r) OR balanceAStockSnapshot(ts1,r) OR 
                                   purchaseQuantityStockSnapshot(ts1,r) OR saleQuantityStockSnapshot(ts1,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBStockSnapshot(ts1,r) OR balanceAStockSnapshot(ts1,r)  
        FILTER 'С приходом' 'F9' purchaseQuantityStockSnapshot(ts1,r)   
        FILTER 'С продажей' 'F8' saleQuantityStockSnapshot(ts1,r)   
                                          
//-- По поставщикам                                                
    
    OBJECTS l=LegalEntity FIXED GRID
    PROPERTIES READONLY SHOWIF isBatchSnapshot(r) nameLegalEntity(l)
    ORDER BY nameLegalEntity(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная орг-ия' 'shift F10' activeLegalEntity(l) DEFAULT
    FILTERS isSupplierLegalEntity(l)                                              
                                              
    PROPERTIES(l,r) READONLY SHOWIF isBatchSnapshot(r)  balanceBBatchSupplierSnapshot, sumBBatchSupplierSnapshot, 
                                purchaseQuantityBatchSupplierSnapshot, purchaseSumBatchSupplierSnapshot,
                                saleQuantityBatchSupplierSnapshot, saleSumBatchSupplierSnapshot,
                                balanceABatchSupplierSnapshot, sumABatchSupplierSnapshot                                                                                                                                                              
 
    FILTERGROUP filtersSoldSupplier
        FILTER 'С движением' 'F11' balanceBBatchSupplierSnapshot(l,r) OR balanceABatchSupplierSnapshot(l,r) OR 
                                   purchaseQuantityBatchSupplierSnapshot(l,r) OR saleQuantityBatchSupplierSnapshot(l,r) DEFAULT
        FILTER 'С остатком' 'F10' balanceBBatchSupplierSnapshot(l,r) OR balanceABatchSupplierSnapshot(l,r)  
        FILTER 'С приходом' 'F9' purchaseQuantityBatchSupplierSnapshot(l,r)   
        FILTER 'С продажей' 'F8' saleQuantityBatchSupplierSnapshot(l,r)    
   
    EDIT Snapshot OBJECT r
;
DESIGN snapshot FROM DEFAULT {
    main{
        preferredSize = (1024, 768);
        ADD r.box {
            type = CONTAINERH;
            ADD r.numbered; 
            NEW date {
                caption = 'Период';
                type = CONTAINERH;
                ADD PROPERTY (fromDateSnapshot(r));
                ADD PROPERTY (toDateSnapshot(r));
            }
        };
        NEW top {                     
            fill = 1;
            type = TABBED;
            NEW paramContainer {
                fill = 1;
                caption = 'Параметры';
                ADD r.documentHeader;                   
                ADD r.documentPrm;
                NEW action {
                    caption = 'Действия';
                    ADD PROPERTY (takeDataSnapshot(r));
                }
            }
            
            NEW resultContainer {
                caption = 'Результат';
                fill = 1;
                type = TABBED;
                NEW tabb1 {
                    caption = 'Таблица';
                    type = SPLITH;          
                    NEW firstCase {
                        fill = 1;
                        type = SPLITV;
                        ADD stockTree.tree.box { caption = 'Склады'; }
                        ADD skuTree.tree.box { caption = 'Группы'; }
                    }
                    NEW secondCase {
                        fill = 3;
                        type = TABBED;
                        ADD sts.box {caption = 'Товары';}
                        ADD stb.box {caption = 'Партии';}
        
        
                    }   
                }
                NEW tabb2 {
                    caption = 'По складам';
                    type = SPLITH; 
                    fill = 1;
                    ADD stockTree1.tree.box { fill = 1;}     
                    ADD ts1.box { fill = 3;}                
                }
                ADD skuTree1.tree.box { caption = 'По группам'; }                        
                ADD l.box { caption = 'По поставщикам'; }                
            }
        }    
        ADD functions.box;
    }
}

@extendFormFilterStockGroupAccess(StockGroup, sg, snapshot);
@extendFormFilterStockGroupAccess(StockGroup, sg1, snapshot);

@extendFormFilterStockAccess(Stock, ts, snapshot);
@extendFormFilterStockAccess(Stock, st, snapshot);
@extendFormFilterStockAccess(Stock, ss, snapshot);
@extendFormFilterStockAccess(Stock, ts1, snapshot);

@extendFormFilterLegalEntityAccess(LegalEntity, l, snapshot, supplier);

FORM snapshots 'Отчеты'

    OBJECTS r = Snapshot
    PROPERTIES (r) READONLY numberSnapshot, seriesSnapshot, dateSnapshot, timeSnapshot,
                   fromDateSnapshot, toDateSnapshot, isBatchSnapshot, noteSnapshot 
    PROPERTIES (r) ADDFORM, EDITFORM, deleter=DELETE FORCE PANEL TOOLBAR  
                        
    DIALOG Snapshot OBJECT r
;

NAVIGATOR {
    stockReports {
        ADD snapshots;
    }
}