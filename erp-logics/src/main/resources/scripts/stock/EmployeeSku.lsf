MODULE EmployeeSku;

REQUIRE Employee, Sku;

NAMESPACE Sku;

TABLE skuGroupEmployee(SkuGroup, Employee);

//--  Компания
dataAccess 'Доступ разрешен' = DATA BOOLEAN (SkuGroup, Employee);

overCopy(Employee e,Employee employee) += {    
    dataAccess(SkuGroup l,e) <- dataAccess(l,employee) WHERE dataAccess(l,employee);
};

levelParent (employee, skuGroup) = GROUP
                                                               BY Employee employee, SkuGroup skuGroup MIN level(skuGroup, SkuGroup parent) IF dataAccess(parent, employee) MATERIALIZED;
nearestParent (Employee employee, SkuGroup skuGroup) = skuGroup(skuGroup, levelParent(employee, skuGroup));
nearestIn (Employee employee, SkuGroup skuGroup) =
    dataAccess(nearestParent (employee, skuGroup), employee);

access 'Доступ разрешен' (Employee employee, SkuGroup skuGroup) = OVERRIDE
    dataAccess(skuGroup, employee),
    nearestIn(employee, skuGroup),
    employee IS Employee AND skuGroup IS SkuGroup AND NOT limitAccess(employee); // MATERIALIZED;

countAccess 'Кол-во доступных групп' (employee, skuGroup) =
    GROUP
          BY Employee employee, SkuGroup parent SUM 1 IF access(employee, SkuGroup child)
                AND isParent(child, parent) MATERIALIZED;

EXTEND FORM employee
    TREE skuTree skg = SkuGroup PARENT parent
    PROPERTIES READONLY SHOWIF  limitAccess(e) order(skg), skgTreeName = name(skg)
    ORDER order(skg), skgTreeName
    PROPERTIES(e,skg) SHOWIF limitAccess(e) access
;
DESIGN employee {
    pane {
        MOVE BOX(TREE skuTree) {
            caption = 'Группы SKU';
        }
    }
}

// ----------------------------------------- Метакод по добавлению фильтров на форму ----------------------- //

META extendFormFilterSkuGroupAccess(form, concrete)
    EXTEND FORM form FILTERS (concrete IS SkuGroup AND NOT limitAccess(currentUser())) OR countAccess(currentUser(), concrete) OR NOT concrete IS SkuGroup;
END
