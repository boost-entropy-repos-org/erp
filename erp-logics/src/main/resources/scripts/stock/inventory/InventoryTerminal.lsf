MODULE InventoryTerminal;

REQUIRE Inventory, Terminal;

NAMESPACE Terminal;

detailCountInventory 'Количество строк на страницу'  = DATA INTEGER (Inventory) IN documentPrm;

EXTEND FORM inventory
    PROPERTIES detailCountInventory(in);

detailCountOperation 'Количество строк на страницу' = DATA INTEGER (Inventory.Operation);

EXTEND FORM Inventory.operation
     PROPERTIES(o) detailCountOperation
 ;
DESIGN Inventory.operation {
    showContainer {
        MOVE PROPERTY(detailCountOperation(o));
    }
}

@deriveDocumentOperationProperty(Inventory, detailCount);

addInventoryDetailsTerminalDocumentListInventory = ACTION (td,li){

    LOCAL page = PageInventory ();
    LOCAL detailCount = INTEGER();
    detailCount() <- 0;

    LOCAL countDetail = INTEGER();
    countDetail() <- (OVERRIDE 20, detailCountInventory(inventoryListInventory(li)));
    
    LOCAL countPages = INTEGER();
    countPages() <- (countTerminalDocumentDetailTerminalDocument(td) + countDetail() - 1) / countDetail();
    
    FOR iterate(i, 1, countPages()) ADDOBJ p = PageInventory DO {
        listInventoryPageInventory(p) <- li;
    }
    
    FOR terminalDocumentTerminalDocumentDetail(tdd) == td INLINE ADDOBJ pid = PageInventoryDetail DO {
        pageInventoryPageInventoryDetail(pid) <- pageInventoryListInventoryIndex(li, ((indexTerminalDocumentDetail(tdd) - 1)/countDetail()) + 1);
        skuPageInventoryDetail(pid) <- OVERRIDE skuId(barcodeTerminalDocumentDetail(tdd)), skuBarcodeIdDate(barcodeTerminalDocumentDetail(tdd), dateListInventory(li));
        quantityPageInventoryDetail(pid) <- quantityTerminalDocumentDetail(tdd);
    }

}

addDetailDialogTerminalListInventory 'Заполнить из документа ТСД' (listInventory) = ACTION (listInventory) {
    FORM terminalDocuments MODAL;
    IF formResult() == FormResult.ok THEN {
        LOCAL document = TerminalDocument ();
        document() <- chosenObject('td');
        usedTerminalDocument(terminalDocument) <- TRUE WHERE terminalDocument == document();

        addInventoryDetailsTerminalDocumentListInventory(document(),listInventory);
    }
} TOOLBAR;

includeTerminalDocument 'Отм.' = DATA LOCAL BOOLEAN (TerminalDocument);
EXTEND FORM terminalDocuments PROPERTIES (td) includeTerminalDocument BEFORE idTerminalDocument(td);
 
addListInventoryDialogTerminalStockInventory 'Заполнить из документов ТСД' (stock, inventory) = ACTION (stock, inventory) {
    FORM terminalDocuments MODAL;
    IF formResult() == FormResult.ok THEN {
        FOR  includeTerminalDocument(td) ADDOBJ  li = ListInventory DO {
            usedTerminalDocument(td) <- TRUE;
            stockListInventory(li) <- stock;
            inventoryListInventory(li) <- inventory;
            includeTerminalDocument(td) <- NULL;
            
            addInventoryDetailsTerminalDocumentListInventory(td,li);
        }
    }
} TOOLBAR;

EXTEND FORM listInventory
    PROPERTIES SHOWIF isSkuListInventory(li) addDetailDialogTerminalListInventory(li) TODRAW dp
;

EXTEND FORM inventory
    PROPERTIES(ds, in) addListInventoryDialogTerminalStockInventory
;