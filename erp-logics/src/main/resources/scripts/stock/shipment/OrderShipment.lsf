MODULE OrderShipment;

REQUIRE Order, Shipment;

NAMESPACE Shipment;

META defineOrderShipment(sign, stockProp)

    orderShipmentDetail = ABSTRACT Order (ShipmentDetail) PERSISTENT;
    orderUserShipmentDetail = DATA Order (UserShipmentDetail);
    orderShipmentDetail(shipmentDetail) += orderUserShipmentDetail(shipmentDetail);
    
    overCopyShipmentDetail(d, detail) += ACTION (d, detail) {      
        orderUserShipmentDetail(d) <- orderUserShipmentDetail(detail);             
    } 

    CONSTRAINT supplierShipmentDetail(shipmentDetail) != supplierOrder(orderUserShipmentDetail(shipmentDetail)) OR
               customerUserShipment(shipmentDetail) != customerOrder(orderUserShipmentDetail(shipmentDetail))
        CHECKED BY orderUserShipmentDetail
            MESSAGE 'Поставщик и покупатель в заказе и поставке должны соответствовать друг другу';

    descriptionOrderShipmentDetail 'Заказ' (shipmentDetail) = descriptionOrder(orderShipmentDetail(shipmentDetail)) IN orderGroup;
    descriptionOrderUserShipmentDetail 'Заказ' (userShipmentDetail) = descriptionOrder(orderUserShipmentDetail(userShipmentDetail)) IN orderGroup;

    quantityShipmentDetailOrderShipment (order, shipment) = GROUP SUM quantityShipmentDetail(shipmentDetail) BY orderShipmentDetail(shipmentDetail), shipmentShipmentDetail(shipmentDetail);
    Shipment.quantityShipmentDetailOrderShipment (order, shipment) += quantityShipmentDetailOrderShipment (order, shipment);

    ordersShipment 'Заказы' (shipment) = GROUP CONCAT VARSTRING[255](descriptionOrder(order)) IF quantityShipmentDetailOrderShipment(order, shipment) , ', '
                                               BY shipment
                                               ORDER order IN orderGroup MINCHARWIDTH 30 PREFCHARWIDTH 50 PERSISTENT;

//-- Подсчет поставленного к-ва по заказу

    shippedShipmentDetailOrderSku 'Кол-во (поставлено)' (order, sku) = GROUP SUM quantityShipmentDetail(shipmentDetail) IF isPostedShipmentDetail(shipmentDetail)
                                                      BY orderShipmentDetail(shipmentDetail), skuShipmentDetail(shipmentDetail);
    shippedOrderDetail 'Кол-во (поставлено)' (orderDetail) = PARTITION UNGROUP shippedShipmentDetailOrderSku
                                                              LIMIT STRICT quantityOrderDetail (orderDetail) IF isPostedOrderDetail(orderDetail)
                                                              BY orderOrderDetail(orderDetail), skuOrderDetail(orderDetail)
                                                              ORDER orderDetail PERSISTENT;

    toShipOrderDetail 'Не поставлено' (orderDetail) = quantityOrderDetail (orderDetail) (-) shippedOrderDetail(orderDetail);

    toShipOrderDetailStockOrder 'Не поставлено по складу' (stock, order) = GROUP SUM toShipOrderDetail(orderDetail) IF toShipOrderDetail(orderDetail) > 0
                                                                                     BY stockProp###orderDetail(orderDetail), orderOrderDetail(orderDetail);

    shippedOrderDetailOrder 'Кол-во (поставлено)' (order) = GROUP SUM shippedOrderDetail(orderDetail) BY orderOrderDetail(orderDetail) IN documentSumGroup PERSISTENT;

    // Создание поставки на основе заказа //
    FORM shipmentOrders 'Заказы'###sign
        OBJECTS s = LegalEntity FIXED PANEL
        PROPERTIES (s) READONLY nameLegalEntity
        OBJECTS ss = Stock FIXED PANEL
        PROPERTIES (ss) READONLY nameStock

        OBJECTS c = LegalEntity FIXED PANEL
        PROPERTIES (c) READONLY nameLegalEntity
        OBJECTS cs = Stock FIXED PANEL
        PROPERTIES (cs) READONLY nameStock

        OBJECTS o = Order
        PROPERTIES (o) READONLY isPostedOrder, numberOrder, seriesOrder, dateOrder, timeOrder, nameSupplierOrder, nameSupplierStockOrder,
                                nameCustomerOrder, nameCustomerStockOrder, nameCurrencyOrder, countOrderDetailOrder, quantityOrderDetailOrder,
                                shippedOrderDetailOrder, sumOrderDetailOrder, noteOrder, objectClassName
        FILTERS isPostedOrder(o),
                inOrderSupplier(o, s),
                customerOrder(o) == c,
                customerStockOrder(o) == cs
//        FILTERGROUP order
//            FILTER 'Заказы с непоставленными товарами со склада' 'F10' toShipOrderDetailStockOrder(s, o) DEFAULT
//            FILTER 'Заказы со склада' 'F9' countOrderDetailStockOrder(s, o)

        OBJECTS d = OrderDetail
        PROPERTIES (d) READONLY indexOrderDetail, idBarcodeSkuOrderDetail, nameSkuOrderDetail, shortNameUOMSkuOrderDetail
        PROPERTIES (d) READONLY quantityOrderDetail, shippedOrderDetail, priceOrderDetail, sumOrderDetail, name###stockProp###orderDetail,
                       toShipOrderDetail
        FILTERS orderOrderDetail(d) == o
//        FILTERGROUP orderDetail
//            FILTER 'Строки с непоставленными товарами со склада' 'F10' stockOrderDetail(d) == s AND toShipOrderDetail(d) > 0 DEFAULT
//            FILTER 'Строки со склада' 'F9' stockOrderDetail(d) == s
    ;

    DESIGN shipmentOrders FROM DEFAULT {
        main {
            preferredSize = (1024, 768);
            NEW header {
                type = CONTAINERH;
                ADD s.box;
                ADD ss.box;
                ADD c.box;
                ADD cs.box;
            }
            ADD o.box;
            ADD d.box;
            ADD functions.box;
            PROPERTY(toShipOrderDetail) { background = #FFFFCC; }
        }
    }

    inOrderDetailUserShipment (orderDetail, userShipment) = IF differentStocksInDetailsStock(customerStockOrderDetail(orderDetail))
        THEN orderDetail IS OrderDetail AND userShipment IS UserShipment
        ELSE supplierStockOrderDetail(orderDetail) == supplierStockUserShipment(userShipment);

    overFillOrderUserShipmentDetailOrderDetail = ABSTRACT ACTION LIST (UserShipmentDetail, OrderDetail);

    fillOrderUserShipment 'Заполнить на основе заказа' =  ACTION (userShipment) {
        FORM shipmentOrders OBJECTS s = supplierUserShipment(userShipment), ss = supplierStockUserShipment(userShipment),
                                    c = customerUserShipment(userShipment), cs = customerStockUserShipment(userShipment) MODAL;
        IF formResult() == FormResult.ok THEN {
            LOCAL saleOrder = Order();
            ASSIGN saleOrder() <- chosenObject('o');

            FOR orderOrderDetail(orderDetail) == saleOrder() AND
//                stockProp###OrderDetail(orderDetail) == stockProp###UserShipment(userShipment) AND
                toShipOrderDetail(orderDetail) > 0
                AND inOrderDetailUserShipment(orderDetail, userShipment)
                ADDOBJ d = UserShipmentDetail DO {
                    ASSIGN userShipmentUserShipmentDetail(d) <- userShipment;
                    ASSIGN orderUserShipmentDetail(d) <- saleOrder();
                    ASSIGN skuUserShipmentDetail(d) <- skuOrderDetail(orderDetail);
                    ASSIGN quantityUserShipmentDetail (d) <- toShipOrderDetail(orderDetail);

                    EXEC overFillOrderUserShipmentDetailOrderDetail(d, orderDetail);
            }
        }
    } IN orderGroup;

    EXTEND FORM userOrder
        PROPERTIES(o) READONLY shippedOrderDetailOrder
        PROPERTIES(d) READONLY shippedOrderDetail AFTER invoicedOrderDetail
    ;

    EXTEND FORM orders
        PROPERTIES(o) READONLY shippedOrderDetailOrder AFTER quantityOrderDetailOrder
        PROPERTIES(d) READONLY shippedOrderDetail AFTER invoicedOrderDetail
    ;

    EXTEND FORM userShipment
        PROPERTIES(s) fillOrderUserShipment, ordersShipment READONLY
        PROPERTIES(d) descriptionOrderUserShipmentDetail BEFORE deletesd
    ;
    EXTEND DESIGN userShipment { headerCreateDetail { ADD s.orderGroup { type = CONTAINERV; }}}


    EXTEND FORM shipments
        PROPERTIES(s) READONLY ordersShipment
        PROPERTIES(d) READONLY descriptionOrderShipmentDetail
    ;

//--  Резервирование
    toShipQuantityOrderLedger (ledger) += toShipOrderDetail(ledger);

    // цены в подборе
    @extendFormDocumentPriceSku(userOrder, accountPriceListType, stockProp, ' учетная', userOrder, o, isUserOrder);
    @extendFormDocumentPriceBatch(userOrder, accountPriceListType, stockProp, ' учетная', userOrder, o, isUserOrder);
END

META defineOrderShipmentPack(showPackage)
    EXTEND FORM shipmentOrders
        PROPERTIES (d) READONLY SHOWIF showPack###order(o) BEFORE quantityOrderDetail
                       idBarcodePackOrderDetail, shortNameUOMPackOrderDetail,
                       amountPackOrderDetail, packQuantityOrderDetail
    ;

    overFillOrderUserShipmentDetailOrderDetail(s, o) += ACTION (s, o) {
        ASSIGN barcodePackUserShipmentDetail(s) <- barcodePackOrderDetail(o);
        ASSIGN amountPackUserShipmentDetail(s) <- amountPackOrderDetail(o);
        ASSIGN packQuantityUserShipmentDetail (s) <- toShipOrderDetail(o)/amountPackOrderDetail(o);
    }
END