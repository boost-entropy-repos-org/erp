MODULE OrderShipment;

REQUIRE Order, Shipment;

NAMESPACE Shipment;

quantityShipmentDetail = ABSTRACT NUMERIC[16,5] (Order, Shipment);

shipped 'Кол-во (поставлено)' (orderDetail) = ABSTRACT NUMERIC[16,5] (OrderDetail);

backgroundShipped 'Цвет' (Order order) = RGB(255, 224, 255) IF order IS Order;

META defineOrderShipment(sign, stockProp)

    orderDetail = ABSTRACT OrderDetail (ShipmentDetail) MATERIALIZED INDEXED;
    orderDetail = DATA OrderDetail (UserShipmentDetail);
    orderDetail(UserShipmentDetail shipmentDetail) += orderDetail(shipmentDetail);
    
    order(ShipmentDetail d) = order(orderDetail(d));
    
    overCopy[UserShipmentDetail,UserShipmentDetail](UserShipmentDetail d, UserShipmentDetail detail) += {      
        orderDetail(d) <- orderDetail(detail);             
    } 

    CONSTRAINT supplier(UserShipmentDetail shipmentDetail) != supplier(orderDetail(shipmentDetail)) OR
               customer(shipmentDetail) != customer(orderDetail(shipmentDetail))
        CHECKED BY orderDetail[UserShipmentDetail]
            MESSAGE 'Поставщик и покупатель в заказе и поставке должны соответствовать друг другу';

    descriptionOrder 'Заказ' (ShipmentDetail shipmentDetail) = description(orderDetail(shipmentDetail)) IN order;
    descriptionOrder 'Заказ' (UserShipmentDetail userShipmentDetail) = description(orderDetail(userShipmentDetail)) IN order;

    quantityShipmentDetail (order, shipment) = GROUP SUM quantity(ShipmentDetail shipmentDetail) BY order(shipmentDetail), shipment(shipmentDetail);
    quantityShipmentDetail (Order order, Shipment shipment) += quantityShipmentDetail (order, shipment);

    orders 'Заказы' (shipment) = GROUP CONCAT VARISTRING[255](description(Order order)) IF quantityShipmentDetail(order, Shipment shipment) , ', '
                                               BY shipment
                                               ORDER order IN order MINCHARWIDTH 30 PREFCHARWIDTH 50 MATERIALIZED;

    shipments 'Поставки' (order) = GROUP CONCAT VARISTRING[255](description(Shipment shipment)) IF quantityShipmentDetail(Order order, shipment) , ', '
                                             BY order
                                             ORDER shipment
                                             MINCHARWIDTH 30 PREFCHARWIDTH 50;                                             

//-- Подсчет поставленного к-ва по заказу

    shipped 'Кол-во (поставлено)' (OrderDetail orderDetail) = GROUP SUM quantity(ShipmentDetail shipmentDetail) IF isPosted(shipmentDetail)
                                                                                                                    BY orderDetail(shipmentDetail) MATERIALIZED;
                                                              
    shipped(OrderDetail d) += shipped(d);
    toShip 'Не поставлено' (OrderDetail orderDetail) = IF (quantity (orderDetail) (-) shipped(orderDetail)) > 0.0 
                                                        THEN quantity (orderDetail) (-) shipped(orderDetail)
                                                        ELSE 0.0; 
    prevToShip 'Не поставлено' (OrderDetail orderDetail) = PREV(toShip(orderDetail));
    toShipOrderDetail 'Не поставлено по складу' (stock, order) = GROUP SUM toShip(OrderDetail orderDetail) IF toShip(orderDetail) > 0
                                                                                     BY stockProp(orderDetail), order(orderDetail);

    shippedOrderDetail 'Кол-во (поставлено)' (order) = GROUP SUM shipped(OrderDetail orderDetail) BY order(orderDetail) IN documentSum MATERIALIZED;

    // Создание поставки на основе заказа //
    FORM shipmentOrders 'Заказы'###sign
        OBJECTS s = LegalEntity PANEL
        PROPERTIES (s) READONLY name
        OBJECTS ss = Stock PANEL
        PROPERTIES (ss) READONLY name

        OBJECTS c = LegalEntity PANEL
        PROPERTIES (c) READONLY name
        OBJECTS cs = Stock PANEL
        PROPERTIES (cs) READONLY name

        OBJECTS o = Order
        PROPERTIES (o) READONLY isPosted, number, series, date, time, nameSupplier, nameSupplierStock,
                                nameCustomer, nameCustomerStock, nameCurrency, countOrderDetail, quantityOrderDetail,
                                shippedOrderDetail BACKGROUND backgroundShipped(o), sumOrderDetail, note
        FILTERS isPosted(o),
                inSupplier(o, s),
                customer(o) == c,
                customerStock(o) == cs
//        FILTERGROUP order
//            FILTER 'Заказы с непоставленными товарами со склада' 'F10' toShipOrderDetailStockOrder(s, o) DEFAULT
//            FILTER 'Заказы со склада' 'F9' countOrderDetailStockOrder(s, o)

        OBJECTS d = OrderDetail
        PROPERTIES (d) READONLY index, idBarcodeSku, nameSku, shortNameUOMSku
        PROPERTIES (d) READONLY quantity, shipped BACKGROUND backgroundShipped(o), price, sum, name###stockProp,
                       toShip
        FILTERS order(d) == o
//        FILTERGROUP orderDetail
//            FILTER 'Строки с непоставленными товарами со склада' 'F10' stockOrderDetail(d) == s AND toShipOrderDetail(d) > 0 DEFAULT
//            FILTER 'Строки со склада' 'F9' stockOrderDetail(d) == s
    ;

    DESIGN shipmentOrders {
        BOX {
            preferredSize = (1024, 768);
            NEW header {
                type = CONTAINERH;
                MOVE BOX(s);
                MOVE BOX(ss);
                MOVE BOX(c);
                MOVE BOX(cs);
            }
            MOVE BOX(o);
            MOVE BOX(d);
            MOVE TOOLBARBOX;
            PROPERTY(toShip(d)) { background = #FFFFCC; }
        }
    }

    in (OrderDetail orderDetail, UserShipment userShipment) = IF differentStocksInDetails(customerStock(orderDetail))
        THEN orderDetail IS OrderDetail AND userShipment IS UserShipment
        ELSE supplierStock(orderDetail) == supplierStock(userShipment);

    overFillOrder = ABSTRACT LIST (UserShipmentDetail, OrderDetail);

    fillOrder 'Заполнить на основе заказа'(UserShipment userShipment) =  {
        DIALOG shipmentOrders OBJECTS s = supplier(userShipment), ss = supplierStock(userShipment),
                                    c = customer(userShipment), cs = customerStock(userShipment), o INPUT DO {
            FOR order(OrderDetail orderDetail) == o AND
//                stockProp###OrderDetail(orderDetail) == stockProp###UserShipment(userShipment) AND
                toShip(orderDetail) > 0
                AND in(orderDetail, userShipment)
                NEW d = UserShipmentDetail DO {
                    userShipment(d) <- userShipment;
                    orderDetail(d) <- orderDetail;
                    sku(d) <- sku(orderDetail);
                    quantity (d) <- toShip(orderDetail);

                    overFillOrder(d, orderDetail);
            }
        }
    } IN order;
    notShowShipped = ABSTRACT BOOLEAN (Order);
    toShowShipped = Order o IS Order AND NOT notShowShipped(o);
    EXTEND FORM userOrder
        PROPERTIES(o) READONLY BACKGROUND backgroundShipped(o) shippedOrderDetail
        PROPERTIES(d) READONLY BACKGROUND backgroundShipped(o)  SHOWIF toShowShipped(o) shipped BEFORE namePriceListType(d)
    ;

    EXTEND FORM orders
        PROPERTIES(o) READONLY BACKGROUND backgroundShipped(o) shippedOrderDetail AFTER quantityOrderDetail(o)
        PROPERTIES(d) READONLY BACKGROUND backgroundShipped(o) SHOWIF toShowShipped(o) shipped BEFORE namePriceListType(d)
        FILTERGROUP  filter10
            FILTER   'Непоставленные товары' NOT shipped (d) ==  quantity (d) 'F10'            
    ;

    EXTEND FORM userShipment
        PROPERTIES(s) fillOrder, orders READONLY
        PROPERTIES(d) descriptionOrder BEFORE deletesd
    ;
    DESIGN userShipment { headerCreateDetail { MOVE s.order { type = CONTAINERV; }}}


    EXTEND FORM shipments
        PROPERTIES(s) READONLY orders
        PROPERTIES(d) READONLY descriptionOrder
    ;

//--  Резервирование
    toShipQuantity (OrderDetail ledger) += toShip(ledger);

    // цены в подборе
    @extendFormDocumentPriceSku(userOrder, accountPriceListType, stockProp, ' учетная', userOrder, o, is);
    @extendFormDocumentPriceBatch(userOrder, accountPriceListType, stockProp, ' учетная', userOrder, o, showBatch);
END

META defineOrderShipmentPack(showPackage)
    EXTEND FORM shipmentOrders
        PROPERTIES (d) READONLY SHOWIF showPack(o) BEFORE quantity(d)
                       idBarcodePack, shortNameUOMPack,
                       amountPack, packQuantity
    ;

    overFillOrder(UserShipmentDetail s, OrderDetail o) += {
        ASSIGN barcodePack(s) <- barcodePack(o);
        ASSIGN amountPack(s) <- amountPack(o);
        ASSIGN packQuantity (s) <- toShip(o)/amountPack(o);
    }
END

META defineOrderShipmentExecution (dumb)

    shippedShipmentDetail 'Кол-во (поставлено)' (order) = GROUP SUM shipped(OrderDetail d)
        IF isPosted(d) BY order(d);
                                                               
    percentQuantityExecution '% исп. заявки (кол-во)' (Order order)= shippedShipmentDetail(order)*100.00 /
        (quantityNotChargeOrderDetail(order) IF quantityNotChargeOrderDetail(order)!= 0);                                                              
    
    countShippedOrderDetail (order) = GROUP SUM 1 IF shipped(OrderDetail d) >= quantity(d) 
        AND isPosted(d) BY order(d);   
    percentCountExecution '% исп. заявки (позиции)' (Order order) = countShippedOrderDetail (order)*100.00/
        (countNotChargeOrderDetail(order) IF countNotChargeOrderDetail(order)!=0);
    
    sumShippedOrderDetail (order) = GROUP SUM round(shipped(OrderDetail d)*price(d), currency(d)) 
        IF isPosted(d) BY order(d);   
    percentSumExecution '% исп. заявки (сумма)' (Order order) = sumShippedOrderDetail(order)*100.00/
    (sumNotChargeOrderDetail(order) IF sumNotChargeOrderDetail(order)!=0);    
    
    EXTEND FORM orders
        PROPERTIES(o) READONLY BACKGROUND backgroundSku(o) percentQuantityExecution, percentCountExecution, percentSumExecution     
    ;       
END
META defineOrderInvoiceSupplierExecution (NS, sign)
                                                      
    shippedShipmentDetail (supplier, dateFrom, dateTo)= GROUP SUM shippedShipmentDetail(Order order) 
        IF date(order) >= DATE dateFrom AND date(order) <= DATE dateTo AND isPosted(order)
            BY supplier(order), dateFrom, dateTo;                                                   
    quantityShipmentDetail (supplier, dateFrom, dateTo)= GROUP SUM quantityOrderDetail(Order order) 
        IF date(order) >= DATE dateFrom AND date(order) <= DATE dateTo AND isPosted(order)
            BY supplier(order), dateFrom, dateTo;                                                                         
    percentQuantityExecution '% исп. заявки (кол-во)' (LegalEntity supplier, DATE dateFrom, DATE dateTo)= shippedShipmentDetail (supplier, dateFrom, dateTo)*100.00 /
        (quantityShipmentDetail(supplier, dateFrom, dateTo) IF quantityShipmentDetail(supplier, dateFrom, dateTo)!= 0);                                                              
//--    
    countShipped (supplier, dateFrom, dateTo)= GROUP SUM countShippedOrderDetail(Order order) 
        IF date(order) >= DATE dateFrom AND date(order) <= DATE dateTo AND isPosted(order)
            BY supplier(order), dateFrom, dateTo;                                                   
    count (supplier, dateFrom, dateTo)= GROUP SUM countOrderDetail(Order order) 
        IF date(order) >= DATE dateFrom AND date(order) <= DATE dateTo AND isPosted(order)
            BY supplier(order), dateFrom, dateTo;      
    percentCountExecution '% исп. заявки (позиции)' (LegalEntity supplier, DATE dateFrom, DATE dateTo) = countShipped (supplier, dateFrom, dateTo)*100.00 /
        (count(supplier, dateFrom, dateTo) IF count(supplier, dateFrom, dateTo)!=0);
//--    
    sumShipped (supplier, dateFrom, dateTo)= GROUP SUM sumShippedOrderDetail(Order order) 
        IF date(order) >= DATE dateFrom AND date(order) <= DATE dateTo AND isPosted(order)
            BY supplier(order), dateFrom, dateTo;                                                   
    sum (supplier, dateFrom, dateTo)= GROUP SUM sumOrderDetail(Order order) 
        IF date(order) >= DATE dateFrom AND date(order) <= DATE dateTo AND isPosted(order)
            BY supplier(order), dateFrom, dateTo;      
    percentSumExecution '% исп. заявки (сумма)' (LegalEntity supplier, DATE dateFrom, DATE dateTo) = sumShipped(supplier, dateFrom, dateTo)*100.00 /
        (sum(supplier, dateFrom, dateTo) IF sum(supplier, dateFrom, dateTo)!=0);    
    

    FORM executionSupplierOrder 'Исполнение заявок' 
    
        OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
        PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)
       
        OBJECTS s = LegalEntity
        PROPERTIES READONLY name(s), percentQuantityExecution(s,dFrom,dTo), percentCountExecution(s,dFrom,dTo),
                   percentSumExecution(s,dFrom,dTo)       
        FILTERS    quantityShipmentDetail(s,dFrom,dTo)  
        OBJECTS o = Order
        PROPERTIES (o) READONLY isPosted, isClosed, number, series, date, time,
                                nameSupplier, nameSupplierStock, nameCustomer, nameCustomerStock, 
                                countOrderDetail, quantityOrderDetail, sumOrderDetail, VATSumOrderDetail, invoiceSumOrderDetail,
                                percentQuantityExecution, percentCountExecution, percentSumExecution 
        FILTERS isPosted(o),
                supplier(o) == s,
                date(o) >= dFrom,
                date(o) <= dTo

    ; 
    
    @extendFormFilterAccessStock(Order, o, executionSupplierOrder, customerStock, company);
    
    DESIGN executionSupplierOrder 'Исполнение заявок'###sign {
        BOX {

            NEW dates{
                type = CONTAINERH;
                caption = 'Период';
                MOVE PROPERTY(valFrom){
                    caption = 'Дата с';
                }
                MOVE PROPERTY(valTo){
                    caption = 'Дата по';
                }
            }

            MOVE BOX(s);
            MOVE BOX(o);
            MOVE TOOLBARBOX;
        }
    }        
    NAVIGATOR {
        NS##sReports {
            ADD executionSupplierOrder;
        }
    }                     
END