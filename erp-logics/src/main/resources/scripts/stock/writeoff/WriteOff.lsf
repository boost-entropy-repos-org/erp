MODULE WriteOff;

REQUIRE System,
        Stock,
        PriceListLedger,
        WriteOffOperation,
        Currency,
        Numerator,
        Barcode,
        Document,
        EmployeeStock,
        StockDocumentSkuLedger,
        StockMovement,
        Utils;

PRIORITY Stock;

//--------------------------------Комиссия для списания----------------------------------//
CLASS WriteOffCommittee 'Комиссия для списания товаров' : Committee;

nameWriteOffCommittee 'Наименование' = DATA VARISTRING[150](WriteOffCommittee);

nameCommittee(committee) += nameWriteOffCommittee(committee) IF committee IS WriteOffCommittee;

@defineCommitteeEmployeePrefix(writeOffCommittee, chairman, 'Председатель');

writeOffCommitteeStock 'Комиссия для списания товаров (ИД)' = DATA WriteOffCommittee (Stock);
nameWriteOffCommitteeStock 'Комиссия для списания товаров' (stock) = nameWriteOffCommittee(writeOffCommitteeStock(stock)) IN committee MINCHARWIDTH 20 PREFCHARWIDTH 30;
isWriteOffCommitteeStock 'По умолчанию' (writeOffCommittee, stock) = writeOffCommitteeStock(stock) == writeOffCommittee;
CONSTRAINT writeOffCommitteeStock(stock) AND NOT inCommitteeStock(writeOffCommitteeStock(stock), stock)
    CHECKED BY writeOffCommitteeStock MESSAGE 'Для отдела выбрана комиссия, которая для него не действует';

FORM writeOffCommittee 'Комиссия для списания товаров'
    OBJECTS c=WriteOffCommittee FIXED PANEL
    PROPERTIES(c)      nameWriteOffCommittee, nameChairmanWriteOffCommittee, namePositionChairmanWriteOffCommittee 

    TREE stockTree sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY sgTreeName = nameStockGroup(sg)

    OBJECTS ts=Stock
    PROPERTIES    READONLY tsTreeName = nameStock(ts)
    PROPERTIES(c, ts) inCommitteeStock FORCE GRID, isWriteOffCommitteeStock

    FILTERS isParentStockGroupStock(sg, ts)
    ORDER BY tsTreeName


    OBJECTS e=Employee
    PROPERTIES(e)      READONLY nameContact, firstNameContact, lastNameContact, namePositionEmployee
    PROPERTIES(e)      ADDSESSIONFORM, EDITSESSIONFORM, DELETESESSION

    PROPERTIES(c, e)   numberCommitteeEmployee,
                       inCommitteeEmployee
    FILTERS            countStockEmployeeCommittee (e, c)
    FILTERGROUP filters6
        FILTER 'Показывать только членов комиссии' inCommitteeEmployee(c, e) 'F10'

    FILTERGROUP filters5
        FILTER 'Показывать отделы только для данной комиссии' inCommitteeStock(c, ts) 'F9'

    EDIT WriteOffCommittee OBJECT c
;
@extendFormFilterStockAccess(ts, writeOffCommittee);
@extendFormFilterStockGroupAccess(sg, writeOffCommittee);

DESIGN writeOffCommittee {
    main {
        preferredSize = (1024, 768);
        PROPERTY(namePositionChairmanWriteOffCommittee(c)) {caption = 'Должность';}
        NEW caseOne BEFORE e.box {
            fill = 1;
            type = SPLITH;

            ADD stockTree.tree.box;

            ADD ts.box {
                fill = 3;
            }
        }
    }
}

FORM writeOffCommittees 'Комиссии для списания товаров'
    OBJECTS w=WriteOffCommittee
    PROPERTIES(w)      READONLY nameWriteOffCommittee, nameChairmanWriteOffCommittee, namePositionChairmanWriteOffCommittee, 
                                nameStocksCommittee, nameEmployeeCommittee
    PROPERTIES(w)      ADDFORM, EDITFORM

    DIALOG WriteOffCommittee OBJECT w
;

DESIGN writeOffCommittees {
    PROPERTY(namePositionChairmanWriteOffCommittee(w)) {caption = 'Должность';}
}
// ----------------------------------- Макрос для задания комиссии для документов ------------------------------------------ //

META defineDocumentHeaderWriteOffCommittee(object, stockProp)

    writeOffCommittee###object (object) = DATA WriteOffCommittee(###object);
    nameWriteOffCommittee###object 'Комиссия для списания товаров' (object) = nameWriteOffCommittee(writeOffCommittee###object(object)) IN documentPrm MINCHARWIDTH 20 PREFCHARWIDTH 40;
    writeOffCommittee###object (object) <- writeOffCommitteeStock(stockProp###object(object))
        WHEN CHANGED(stockProp###object(object));

    CONSTRAINT writeOffCommittee###object (object) AND NOT inCommitteeStock(writeOffCommittee###object (object), stockProp###object(object))
        CHECKED BY writeOffCommittee###object MESSAGE 'Для документа выбрана комиссия, которая не действует для склада документа';

    inWriteOffCommittee###object##Employee (object, employee) = inCommitteeEmployee(writeOffCommittee###object (object), employee);
    nameEmployeeWriteOffCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(writeOffCommittee###object (object));
    positionShortNameChairmanWriteOffCommittee###object 'Председатель' (object) = positionShortNameEmployee(chairmanWriteOffCommittee(writeOffCommittee###object (object)));    
    namePositionChairmanWriteOffCommittee###object 'Должность председателя' (object) = namePositionEmployee(chairmanWriteOffCommittee(writeOffCommittee###object (object))); 
    shortNameChairmanWriteOffCommittee###object 'ФИО председателя' (object) = shortNameContact(chairmanWriteOffCommittee(writeOffCommittee###object (object)));
END
META defineDocumentHeaderAbstractWriteOffCommittee(object)
    writeOffCommittee###object (object) = ABSTRACT WriteOffCommittee(###object);
    nameWriteOffCommittee###object 'Комиссия для списания товаров' (object) = nameWriteOffCommittee(writeOffCommittee###object(object)) IN documentPrm MINCHARWIDTH 20 PREFCHARWIDTH 40;

    inWriteOffCommittee###object##Employee (object, employee) = inCommitteeEmployee(writeOffCommittee###object (object), employee);
    nameEmployeeWriteOffCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(writeOffCommittee###object (object));
    positionShortNameChairmanWriteOffCommittee###object 'Председатель' (object) = positionShortNameEmployee(chairmanWriteOffCommittee(writeOffCommittee###object (object)));    
    namePositionChairmanWriteOffCommittee###object 'Должность председателя' (object) = namePositionEmployee(chairmanWriteOffCommittee(writeOffCommittee###object (object))); 
    shortNameChairmanWriteOffCommittee###object 'ФИО председателя' (object) = shortNameContact(chairmanWriteOffCommittee(writeOffCommittee###object (object)));
    
END

META defineDocumentInterfaceHeaderWriteOffCommittee (object, stockProp)
    @defineDocumentHeaderAbstractWriteOffCommittee (object);
    @defineDocumentHeaderWriteOffCommittee (user###object, stockProp);
    writeOffCommittee###object (object) += writeOffCommittee###user###object(object);
END

//----------------------------------------------- Списание товара ---------------------------------------------------//
CLASS Reason 'Причина списания';
TABLE reason (Reason);

nameReason 'Наименование' = DATA VARISTRING[50](Reason);

FORM reason 'Причина списания'
    OBJECTS r=Reason  FIXED PANEL
    PROPERTIES(r) nameReason
    EDIT Reason OBJECT r
;

FORM reasons 'Причины списания'
    OBJECTS r=Reason
    PROPERTIES(r) READONLY nameReason
    PROPERTIES(r) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR

    DIALOG Reason OBJECT r
;
DESIGN reasons { main{ preferredSize = (600, 400); } }

CLASS WriteOff 'Списание' : Document;
CLASS WriteOffDetail 'Строка списания' : DocumentDetail;

CLASS UserWriteOff 'Списание (польз.)' : WriteOff;
CLASS UserWriteOffDetail 'Строка списания (польз.)' : WriteOffDetail;

@defineDocumentInterface(writeOff);
@deriveDocumentHeaderTimePrefix(UserWriteOff, );
                
@defineDocumentInterfaceDataStock(writeOff, stock, 'Склад');
@defineDocumentDialogStocks(userWriteOff, stock, company, , );

CONSTRAINT stockUserWriteOff(w) AND NOT  isCompanyStock(stockUserWriteOff(w))
    CHECKED BY stockUserWriteOff
    MESSAGE 'Выбран склад, который не принадлежит компании';

@defineDocumentInterfaceNumber(writeOff);
@defineNumeratedDefault(UserWriteOff, 'Списания', 'СП');


@defineDocumentInterfacePosted(writeOff);
@defineDocumentInterfaceClosed(writeOff);
@defineDocumentInterfaceDescription (writeOff, 'Списание товара');

@defineDocumentInterfaceCurrency(writeOff);
@deriveDocumentCurrency(userWriteOff, stock);

addressLegalEntityWriteOff 'Адрес' (writeOff) = addressLegalEntityDate(legalEntityStockWriteOff(writeOff), dateWriteOff(writeOff));
addressLegalEntityUserWriteOff 'Адрес' (userWriteOff) = addressLegalEntityDate(legalEntityStockUserWriteOff(userWriteOff), dateUserWriteOff(userWriteOff));

@defineDocumentInterfaceDetailSku(writeOff, sku);

// Для инвентаризации по партиям
@defineDocumentInterfaceDetailBatch(writeOff, batch);
changeBatchUserWriteOffDetail = ACTION (detail) {

    FORM dialogBatchStock OBJECTS st = stockUserWriteOffDetail(detail),
                             t = dateTimeUserWriteOffDetail(detail),
                             sk = skuUserWriteOffDetail(detail) DIALOG SHOWDROP;

    IF formResult() == FormResult.ok THEN {
        batchUserWriteOffDetail(detail) <- chosenObject('bt');
    } ELSE IF formResult() == FormResult.drop THEN {
        batchUserWriteOffDetail(detail) <- NULL;
    }
}
replaceSkuBatch(s, b) += ACTION (s, b){ skuUserWriteOffDetail(detail) <- s WHERE batchUserWriteOffDetail(detail) == b;}

@defineDocumentInterfaceDetailQuantity(writeOff);
@defineDocumentInterfaceDetailPrice(writeOff);
@defineDocumentInterfaceDetailDataSum(writeOff);
@deriveDocumentDetailSum(userWriteOff, quantity);

@defineDocumentInterfaceHeaderQuantity(writeOff);
@defineDocumentHeaderSkuQuantity(writeOff, sku);
@defineDocumentHeaderSkuQuantity(userWriteOff, sku);

@defineDocumentInterfaceHeaderSum(writeOff);

@defineDocumentInterfaceHeaderItemSum(writeOff, , );

@defineAddDetailDialogSkuStock(userWriteOff, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(userWriteOff, sku);

@defineDocumentInterfaceHeaderWriteOffCommittee(writeOff, stock);

reasonWriteOff 'Причина списания (ИД)' = ABSTRACT Reason (WriteOff);
reasonUserWriteOff 'Причина списания (ИД)' = DATA Reason (UserWriteOff);
reasonWriteOff(writeOff) += reasonUserWriteOff(writeOff);
nameReasonWriteOff 'Причина списания' (writeOff) = nameReason(reasonWriteOff (writeOff)) IN documentPrm;
nameReasonUserWriteOff 'Причина списания' (userWriteOff) = nameReason(reasonUserWriteOff (userWriteOff)) IN documentPrm;

@defineDocumentInterfaceLegalEntity (writeOff, contact, 'Контрагент');

@implementDocument(writeOff);
@implementDocumentBatch(writeOff);

supplierStockDocument(writeOff) += stockWriteOff(writeOff);

isStockSkuWriteOffDetail (writeOffDetail) = isStockSku(skuWriteOffDetail(writeOffDetail));
isStockSkuUserWriteOffDetail (userWriteOffDetail) = isStockSku(skuUserWriteOffDetail(userWriteOffDetail));

// --------------------------- Формы списания ---------------------------------
editWriteOff 'Редактировать' = ABSTRACT ACTION LIST (WriteOff) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

FORM userWriteOff 'Списание'
    OBJECTS w=UserWriteOff FIXED PANEL
    PROPERTIES (w) isPostedUserWriteOff, nameNumeratorUserWriteOff, numberUserWriteOff, seriesUserWriteOff, dateUserWriteOff, timeUserWriteOff,
                   nameStockUserWriteOff ON CHANGE changeStockCompanyUserWriteOff(w), nameCurrencyUserWriteOff, noteUserWriteOff,
                   countUserWriteOffDetailUserWriteOff, quantityUserWriteOffDetailUserWriteOff,
                   sumUserWriteOffDetailUserWriteOff, nameReasonUserWriteOff, nameWriteOffCommitteeUserWriteOff, nameContactUserWriteOff

    OBJECTS d=UserWriteOffDetail
    PROPERTIES (d) indexUserWriteOffDetail, idBarcodeSkuUserWriteOffDetail, nameSkuUserWriteOffDetail, shortNameUOMSkuUserWriteOffDetail,
                   nameBatchUserWriteOffDetail ON CHANGE changeBatchUserWriteOffDetail(d), quantityUserWriteOffDetail,
                   priceUserWriteOffDetail, sumUserWriteOffDetail, nameStockUserWriteOffDetail, ADDOBJ, deletewd=DELETESESSION

    PROPERTIES(w) TODRAW d fillDocumentWriteOff, addDetailDialogSkuStockUserWriteOffDetailUserWriteOff,
                           addDetailInputBarcodeUserWriteOffDetailUserWriteOff, deleteUserWriteOffDetailUserWriteOff
    FILTERS userWriteOffUserWriteOffDetail(d)==w

    EVENTS
        ON OK prePostUserWriteOff(w)

    EDIT WriteOff OBJECT w
    EDIT UserWriteOff OBJECT w
;

DESIGN userWriteOff {

    main {
        preferredSize = (1024, 768);

        NEW header {
            type = CONTAINERH;

            NEW headerRow1 {
                fill = 1;

                ADD w.documentHeader {
                    type = CONTAINERV;
                    NEW first {
                        type = CONTAINERH;
                        ADD PROPERTY(isPostedUserWriteOff(w));
                        ADD PROPERTY(nameStockUserWriteOff(w));
                    }
                    NEW second { 
                        type = CONTAINERH;
                        ADD PROPERTY(nameNumeratorUserWriteOff(w));
                        ADD PROPERTY(numberUserWriteOff(w));
                        ADD PROPERTY(seriesUserWriteOff(w));
                        ADD PROPERTY(dateUserWriteOff(w));
                        ADD PROPERTY(timeUserWriteOff(w));
                    }    
                }                

                NEW headerTabbedPane {
                    alignment = STRETCH;
                    type = TABBED;
                    NEW headerMainParams {
                        caption = 'Основные параметры';
                        ADD w.documentPrm {
                            columns = 2;
                        }
                    }
                    NEW headerExtraParams {
                        caption = 'Дополнительные параметры';
                    }
                    NEW headerCreateDetail {
                        caption = 'Основание';
                    }
                    NEW headerCreateDocuments {
                        caption = 'Производные документы';
                    }
                }
            }

            ADD w.documentSum {
                columns = 1;
            }
        }

        NEW specification.box {
            fill = 1;
            type = TABBED;
            ADD d.box {
                caption = 'Спецификация';
            }
        }
        ADD functions.box;

        PROPERTY(formOk()) {
            caption = 'Провести';
        }
        PROPERTY(sumUserWriteOffDetailUserWriteOff(w)) { preferredCharWidth = 13;}
    }
}

WHEN SESSION FORMS userWriteOff CHANGED(batchUserWriteOffDetail(detail)) DO {
    skuUserWriteOffDetail (detail)  <- skuBatch(batchUserWriteOffDetail(detail)) WHERE batchUserWriteOffDetail(detail);
}

WHEN SESSION FORMS userWriteOff 
    CHANGED(skuUserWriteOffDetail(detail)) OR CHANGED(batchUserWriteOffDetail(detail)) OR CHANGED(stockUserWriteOffDetail(detail)) OR CHANGED (dateTimeUserWriteOffDetail(detail)) DO
    priceUserWriteOffDetail (detail)  <- IF batchUserWriteOffDetail(detail)
                    THEN priceBLedgerPriceListTypeBatchStockDateTime(SystemLedgerPriceListType.accountPriceListType, batchUserWriteOffDetail(detail), stockUserWriteOffDetail(detail), dateTimeUserWriteOffDetail(detail))
                    ELSE priceBLedgerPriceListTypeSkuStockDateTime(SystemLedgerPriceListType.accountPriceListType, skuUserWriteOffDetail(detail), stockUserWriteOffDetail(detail), dateTimeUserWriteOffDetail(detail));

//-- SKU
@defineDocumentSkuStockPriceListTypeSystemLedger(userWriteOff, accountPriceListType, );
@extendFormDocumentSkuStock(userWriteOff, userWriteOff, w, legalEntityStock, );

@defineDocumentBatchStockPriceListTypeSystemLedger(userWriteOff, accountPriceListType, );
@extendFormDocumentBatchStock(userWriteOff, userWriteOff, w, legalEntityStock, );

@defineMovementSku(writeOffDetail, stock); //-- показываем по нажатию правой клавиши движение товара
@defineMovementSku(userWriteOffDetail, stock); //-- показываем по нажатию правой клавиши движение товара
@defineBalancesSku(writeOffDetail); //-- показываем по нажатию правой клавиши остатки товара
@defineBalancesSku(userWriteOffDetail); //-- показываем по нажатию правой клавиши остатки товара

// История по правой кнопке
@defineBalancesBatch(writeOffDetail); //-- показываем по нажатию правой клавиши остатки партии
@defineBalancesBatch(userWriteOffDetail); //-- показываем по нажатию правой клавиши остатки партии
@defineMovementBatch(writeOffDetail, stock); //-- показываем по нажатию правой клавиши движение по партии
@defineMovementBatch(userWriteOffDetail, stock); //-- показываем по нажатию правой клавиши движение по партии

addUserWriteOff 'Добавить' = ACTION ADDFORM UserWriteOff;
editUserWriteOff 'Редактировать'  = ACTION EDITFORM UserWriteOff;

editWriteOff(w) += ACTION editUserWriteOff(w);
isUserOpenedWriteOff(w)=  isOpenedWriteOff(w) AND isUserWriteOff(w);

filterWriteOffDateFrom 'Дата с' = DATA LOCAL DATE ();
filterDateFromWriteOff (w) = dateWriteOff(w) >= filterWriteOffDateFrom() OR (w IS WriteOff AND NOT filterWriteOffDateFrom());      
    
filterWriteOffDateTo 'Дата по' = DATA LOCAL DATE ();
filterDateToWriteOff (w) = dateWriteOff(w) <= filterWriteOffDateTo() OR (w IS WriteOff AND NOT filterWriteOffDateTo());

EXTEND FORM userWriteOff

    FILTERGROUP filter
        FILTER 'С остатком ' prevCurrentBalanceSkuStock(ks, st) 'F10' DEFAULT
        FILTER 'В документе ' quantitySkuUserWriteOffStock(ks, w, st) 'F9'
;

EXTEND FORM userWriteOff

    FILTERGROUP filter3
        FILTER 'С остатком ' prevCurrentBalanceBatchStock(b, sto) 'F10' DEFAULT
        FILTER 'В документе ' quantityBatchUserWriteOffStock(b, w, sto) 'F9'
;

FORM writeOffs 'Списания'
    PROPERTIES () filterWriteOffDateFrom, filterWriteOffDateTo
   
    OBJECTS w=WriteOff LAST
    PROPERTIES (w) READONLYIF isReadonly() isClosedWriteOff, isPostedWriteOff, numberWriteOff, seriesWriteOff, 
                   dateWriteOff, timeWriteOff, nameStockWriteOff
    PROPERTIES (w) READONLY nameReasonWriteOff, quantityWriteOffDetailWriteOff, countWriteOffDetailWriteOff,
                            sumWriteOffDetailWriteOff
    PROPERTIES (w) READONLYIF isReadonly() noteWriteOff

    PROPERTIES (w) READONLY FORCE PANEL createdNameUserUserWriteOff, createdTimeUserWriteOff, createdHostnameComputerUserWriteOff, 
                                        postedNameUserUserWriteOff, postedTimeUserWriteOff, postedHostnameComputerUserWriteOff
    PROPERTIES ()  addUserWriteOff TODRAW w
    PROPERTIES (w) editWriteOff SHOWIF isOpenedWriteOff(w)
    PROPERTIES (w) closeUserWriteOff SHOWIF isOpenedUserWriteOff(w), openUserWriteOff SHOWIF isClosedUserWriteOff(w)
    
    PROPERTIES (w) deletew=DELETE FORCE PANEL TOOLBAR  SHOWIF isUserOpenedWriteOff(w)

    OBJECTS d=WriteOffDetail
    PROPERTIES (d) READONLY indexWriteOffDetail, idBarcodeSkuWriteOffDetail, nameSkuWriteOffDetail, shortNameUOMSkuWriteOffDetail, nameBatchWriteOffDetail,
                   quantityWriteOffDetail, priceWriteOffDetail, sumWriteOffDetail, nameStockWriteOffDetail

    FILTERS writeOffWriteOffDetail(d) == w
    FILTERS filterDateFromWriteOff(w), 
            filterDateToWriteOff(w)
;
@extendFormFilterAccessStock(WriteOff, w, writeOffs, stock, company);

DESIGN writeOffs {
    NEW pane {
        fill = 1;
        type = SPLITV;

        NEW filtersBox {                       
            fill = 1;
            NEW topFilters {
                caption = 'Фильтры';
                type = CONTAINERH;          
                ADD PROPERTY(filterWriteOffDateFrom());
                ADD PROPERTY(filterWriteOffDateTo());
        } 
            ADD w.box {
                fill = 2;
            }
        }
        NEW documentDetail {
            fill = 1;
            type = TABBED;

            ADD d.box {
                caption = 'Спецификация';
            }
            NEW documentHistory {
                caption = 'История';

                ADD w.created;
                ADD w.posted;
            }
            NEW printTab {
                caption = 'Печатные формы';
                NEW printContainer {
                    caption = 'Печать';
                    type = CONTAINERH;
                }
            }
        }
    }

    ADD functions.box;
}
@extendFormEditable(writeOffs);
@defineFilterIsOpened (writeOff, writeOffs, w);
@defineDocumentLogForm(writeOffs, w);

FORM writeOffDetails 'Списание'
    OBJECTS d = WriteOffDetail
    PROPERTIES (d) READONLY indexWriteOffDetail, idBarcodeSkuWriteOffDetail, nameSkuWriteOffDetail, descriptionWriteOffDetail, 
                   shortNameUOMSkuWriteOffDetail, 
                   quantityWriteOffDetail, priceWriteOffDetail, sumWriteOffDetail, nameStockWriteOffDetail

    DIALOG WriteOffDetail OBJECT d
;

//----------------------------------------------- Операции -----------------------------------------------------//
@defineDocumentInterfaceOperation (writeOff, WriteOff, );

@defineDocumentOperationRolePrefix(userWriteOff, );

EXTEND FORM userWriteOff
    PROPERTIES(w) nameOperationUserWriteOff
;
DESIGN userWriteOff{
    first{
        ADD PROPERTY (nameOperationUserWriteOff(w)) BEFORE PROPERTY(nameStockUserWriteOff(w));
    }
}
EXTEND FORM writeOffs
    PROPERTIES(w) READONLY nameOperationWriteOff BEFORE nameReasonWriteOff(w)
;

// Причина
reasonOperation = DATA Reason (WriteOff.Operation);
nameReasonOperation 'Причина списания' (operation) = nameReason(reasonOperation(operation));

TABLE legalEntityOperation(LegalEntity, Operation);
TABLE legalEntityGroupOperation(LegalEntityGroup, Operation);

@defineOperationLegalEntity(contact, , con, 'Контрагенты');

@defineCountLegalEntityOperation(contact, customer);

CONSTRAINT operationUserWriteOff(writeOff) AND contactUserWriteOff(writeOff)
           AND NOT inContactOperation(contactUserWriteOff(writeOff), operationUserWriteOff(writeOff))
    CHECKED BY contactUserWriteOff
    MESSAGE 'Контрагент должен совпадать с отмеченными в операции';
        
@deriveDocumentOperationLegalEntity(userWriteOff, contact, userWriteOff);

NAVIGATOR {
    stockNavigator {
        NEW writeOffNavigator 'Списания' BEFORE balanceSku {
            ADD writeOffs;
            ADD writeOffCommittees;
            ADD operations;
        }
    }
}

// Товарный отчет
@implementStockDocumentLedgerOut(WriteOff, stock);
typeStockDocumentLedger(l) += 'Списание' IF l IS WriteOff;
sumOutStockDocumentLedger (ledger) += sumWriteOffDetailWriteOff(ledger);
sumItemOutStockDocumentLedger (ledger) += sumItemWriteOffDetailWriteOff(ledger);
sumContainerOutStockDocumentLedger (ledger) += sumContainerWriteOffDetailWriteOff(ledger);

legalEntityStockDocumentLedger(ledger) += contactWriteOff(ledger);  

operationStockDocumentLedger(ledger) += operationWriteOff(ledger);
editStockDocumentLedger(l) += ACTION editWriteOff(l);

// Проводим по регистру
@implementSkuLedgerOutFIFO(WriteOffDetail, sku, stock);
quantityOutFIFOSkuLedger (ledger) += quantityWriteOffDetail(ledger);
batchSkuLedger(ledger) += batchWriteOffDetail(ledger);
@implementSkuLedgerOutFIFOBatchBalance(WriteOffDetail, stock);
sumOutSkuLedger (ledger) += sumWriteOffDetail(ledger);

stockDocumentLedgerSkuLedger(ledger) += writeOffWriteOffDetail(ledger); 

editWriteOffDetail 'Редактировать' = ABSTRACT ACTION LIST (WriteOffDetail) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;
editUserWriteOffDetail(d) = ACTION (d) NEWSESSION {
    FORM userWriteOff OBJECTS w = userWriteOffUserWriteOffDetail(d), d = d MANAGESESSION DOCKEDMODAL;
}
editWriteOffDetail(d) += ACTION editUserWriteOffDetail(d);
editSkuLedger(d) += ACTION editWriteOffDetail(d);
