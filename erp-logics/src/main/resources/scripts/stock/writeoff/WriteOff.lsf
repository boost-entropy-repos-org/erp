MODULE WriteOff;

REQUIRE System,
        Stock,
        PriceListLedger,
        WriteOffOperation,
        Currency,
        Numerator,
        Terminal,
        Barcode,
        Document,
        EmployeeStock,
        StockDocument,
        Utils;

PRIORITY Stock;

//--------------------------------Комиссия для списания----------------------------------//
CLASS WriteOffCommittee 'Комиссия для списания товаров' : Committee;

nameWriteOffCommittee 'Наименование' = DATA VARISTRING[150](WriteOffCommittee);

nameCommittee(committee) += nameWriteOffCommittee(committee) IF committee IS WriteOffCommittee;

@defineCommitteeEmployeePrefix(writeOffCommittee, chairman, 'Председатель');

writeOffCommitteeStock 'Комиссия для списания товаров (ИД)' = DATA WriteOffCommittee (Stock);
nameWriteOffCommitteeStock 'Комиссия для списания товаров' (stock) = nameWriteOffCommittee(writeOffCommitteeStock(stock)) IN committeeGroup MINCHARWIDTH 20 PREFCHARWIDTH 30;
isWriteOffCommitteeStock 'По умолчанию' (writeOffCommittee, stock) = writeOffCommitteeStock(stock) == writeOffCommittee;
CONSTRAINT writeOffCommitteeStock(stock) AND NOT inCommitteeStock(writeOffCommitteeStock(stock), stock)
    CHECKED BY writeOffCommitteeStock MESSAGE 'Для отдела выбрана комиссия, которая для него не действует';

FORM writeOffCommittee 'Комиссия для списания товаров'
    OBJECTS c=WriteOffCommittee FIXED PANEL
    PROPERTIES(c)      nameWriteOffCommittee, nameChairmanWriteOffCommittee, namePositionChairmanWriteOffCommittee 

    TREE stockTree sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY sgTreeName = nameStockGroup(sg)

    OBJECTS ts=Stock
    PROPERTIES    READONLY tsTreeName = nameStock(ts)
    PROPERTIES(c, ts) inCommitteeStock FORCE GRID, isWriteOffCommitteeStock

    FILTERS isParentStockGroupStock(sg, ts)
    ORDER BY tsTreeName


    OBJECTS e=Employee
    PROPERTIES(e)      READONLY nameContact, firstNameContact, lastNameContact, namePositionEmployee
    PROPERTIES(e)      ADDSESSIONFORM, EDITSESSIONFORM, DELETESESSION

    PROPERTIES(c, e)   numberCommitteeEmployee,
                       inCommitteeEmployee
    FILTERS            countStockEmployeeCommittee (e, c)
    FILTERGROUP filters6
        FILTER 'Показывать только членов комиссии' 'F10' inCommitteeEmployee(c, e)

    FILTERGROUP filters5
        FILTER 'Показывать отделы только для данной комиссии' 'F9' inCommitteeStock(c, ts)

    EDIT WriteOffCommittee OBJECT c
;
@extendFormFilterStockAccess(Stock, ts, writeOffCommittee);
@extendFormFilterStockGroupAccess(StockGroup, sg, writeOffCommittee);

DESIGN writeOffCommittee FROM DEFAULT {
    main {
        preferredSize = (1024, 768);
        PROPERTY(namePositionChairmanWriteOffCommittee) {caption = 'Должность';}
        NEW caseOne BEFORE e.box {
            fill = 1;
            type = SPLITH;

            ADD stockTree.tree.box;

            ADD ts.box {
                fill = 3;
            }
        }
    }
}

FORM writeOffCommittees 'Комиссии для списания товаров'
    OBJECTS w=WriteOffCommittee
    PROPERTIES(w)      READONLY nameWriteOffCommittee, nameChairmanWriteOffCommittee, namePositionChairmanWriteOffCommittee, 
                                nameStocksCommittee, nameEmployeeCommittee
    PROPERTIES(w)      ADDFORM, EDITFORM

    DIALOG WriteOffCommittee OBJECT w
;

DESIGN writeOffCommittees FROM DEFAULT {
    PROPERTY(namePositionChairmanWriteOffCommittee) {caption = 'Должность';}
}
// ----------------------------------- Макрос для задания комиссии для документов ------------------------------------------ //

META defineDocumentHeaderWriteOffCommittee(object, stockProp)

    writeOffCommittee###object (object) = DATA WriteOffCommittee(###object);
    nameWriteOffCommittee###object 'Комиссия для списания товаров' (object) = nameWriteOffCommittee(writeOffCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;
    writeOffCommittee###object (object) <- writeOffCommitteeStock(stockProp###object(object))
        WHEN CHANGED(stockProp###object(object));

    CONSTRAINT writeOffCommittee###object (object) AND NOT inCommitteeStock(writeOffCommittee###object (object), stockProp###object(object))
        CHECKED BY writeOffCommittee###object MESSAGE 'Для документа выбрана комиссия, которая не действует для склада документа';

    inWriteOffCommittee###object##Employee (object, employee) = inCommitteeEmployee(writeOffCommittee###object (object), employee);
    nameEmployeeWriteOffCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(writeOffCommittee###object (object));
END
META defineDocumentHeaderAbstractWriteOffCommittee(object)
    writeOffCommittee###object (object) = ABSTRACT WriteOffCommittee(###object);
    nameWriteOffCommittee###object 'Комиссия для списания товаров' (object) = nameWriteOffCommittee(writeOffCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;

    inWriteOffCommittee###object##Employee (object, employee) = inCommitteeEmployee(writeOffCommittee###object (object), employee);
    nameEmployeeWriteOffCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(writeOffCommittee###object (object));
END

META defineDocumentInterfaceHeaderWriteOffCommittee (object, stockProp)
    @defineDocumentHeaderAbstractWriteOffCommittee (object);
    @defineDocumentHeaderWriteOffCommittee (user###object, stockProp);
    writeOffCommittee###object (object) += writeOffCommittee###user###object(object);
END

//----------------------------------------------- Списание товара ---------------------------------------------------//
CLASS Reason 'Причина списания';
TABLE reason (Reason);

nameReason 'Наименование' = DATA VARISTRING[50](Reason);

FORM reason 'Причина списания'
    OBJECTS r=Reason  FIXED PANEL
    PROPERTIES(r) nameReason
    EDIT Reason OBJECT r
;

FORM reasons 'Причины списания'
    OBJECTS r=Reason
    PROPERTIES(r) READONLY nameReason
    PROPERTIES(r) ADDFORM, EDITFORM, DELETE

    DIALOG Reason OBJECT r
;
DESIGN reasons FROM DEFAULT { main{ preferredSize = (600, 400); } }

CLASS WriteOff 'Списание' : Document;
CLASS WriteOffDetail 'Строка списания' : DocumentDetail;

CLASS UserWriteOff 'Списание (польз.)' : WriteOff, Historizable;
CLASS UserWriteOffDetail 'Строка списания (польз.)' : WriteOffDetail;

@defineDocumentInterface(writeOff);
@deriveDocumentHeaderTimePrefix(UserWriteOff, );
                
@defineDocumentInterfaceDataStock(writeOff, stock, 'Склад');

@defineDocumentInterfaceNumber(writeOff);
@defineNumeratedObjectDefault(UserWriteOff, 'Списания', 'СП');


@defineDocumentInterfacePosted(writeOff);
@defineDocumentInterfaceClosed(writeOff);
@defineDocumentInterfaceDescription (writeOff, 'Списание товара');

@defineDocumentInterfaceCurrency(writeOff);
@deriveDocumentCurrency(userWriteOff, stock);

addressLegalEntityWriteOff 'Адрес' (writeOff) = addressLegalEntityDate(legalEntityStockWriteOff(writeOff), dateWriteOff(writeOff));
addressLegalEntityUserWriteOff 'Адрес' (userWriteOff) = addressLegalEntityDate(legalEntityStockUserWriteOff(userWriteOff), dateUserWriteOff(userWriteOff));

@defineDocumentInterfaceDetailSku(writeOff, sku);

// Для инвентаризации по партиям
@defineDocumentInterfaceDetailBatch(writeOff, batch);
@defineDocumentInterfaceDetailQuantity(writeOff);
@defineDocumentInterfaceDetailPrice(writeOff);
@defineDocumentInterfaceDetailDataSum(writeOff);
@deriveDocumentDetailSum(userWriteOff, quantity);

priceUserWriteOffDetail (detail)  <- IF batchUserWriteOffDetail(detail)
                THEN priceBLedgerPriceListTypeBatchStockDateTime(SystemLedgerPriceListType.accountPriceListType, batchUserWriteOffDetail(detail), stockUserWriteOffDetail(detail), dateTimeUserWriteOffDetail(detail))
                ELSE priceBLedgerPriceListTypeSkuStockDateTime(SystemLedgerPriceListType.accountPriceListType, skuUserWriteOffDetail(detail), stockUserWriteOffDetail(detail), dateTimeUserWriteOffDetail(detail))
                WHEN CHANGED(skuUserWriteOffDetail(detail)) OR CHANGED(batchUserWriteOffDetail(detail)) OR CHANGED(stockUserWriteOffDetail(detail)) OR CHANGED (dateTimeUserWriteOffDetail(detail));

skuUserWriteOffDetail (detail)  <- skuBatch(batchUserWriteOffDetail(detail)) IF batchUserWriteOffDetail(detail)
                               WHEN CHANGED(batchUserWriteOffDetail(detail));

@defineDocumentInterfaceHeaderQuantity(writeOff);
@defineDocumentHeaderSkuQuantity(writeOff, sku);
@defineDocumentHeaderSkuQuantity(userWriteOff, sku);

@defineDocumentInterfaceHeaderSum(writeOff);

@defineDocumentInterfaceHeaderItemSum(writeOff, , );

@defineAddDetailDialogSkuStock(userWriteOff, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(userWriteOff, sku);
@defineAddDetailDialogTerminal(userWriteOff, sku);

@defineDocumentInterfaceHeaderWriteOffCommittee(writeOff, stock);

reasonWriteOff 'Причина списания (ИД)' = ABSTRACT Reason (WriteOff);
reasonUserWriteOff 'Причина списания (ИД)' = DATA Reason (UserWriteOff);
reasonWriteOff(writeOff) += reasonUserWriteOff(writeOff);
nameReasonWriteOff 'Причина списания' (writeOff) = nameReason(reasonWriteOff (writeOff)) IN documentPrmGroup;
nameReasonUserWriteOff 'Причина списания' (userWriteOff) = nameReason(reasonUserWriteOff (userWriteOff)) IN documentPrmGroup;

// Контрагент
contactWriteOff = ABSTRACT LegalEntity (WriteOff);
contactUserWriteOff = DATA LegalEntity (UserWriteOff);
contactWriteOff(writeOff) += contactUserWriteOff(writeOff);
nameContactWriteOff 'Контрагент' (writeOff) = nameLegalEntity(contactWriteOff (writeOff)) IN documentPrmGroup;
nameContactUserWriteOff 'Контрагент' (userWriteOff) = nameLegalEntity(contactUserWriteOff (userWriteOff)) IN documentPrmGroup;

// Проводим по регистру
@implementSkuLedgerOutFIFO(WriteOffDetail, sku, stock);
quantityOutFIFOSkuLedger (ledger) += quantityWriteOffDetail(ledger);
@implementSkuLedgerOutFIFOBatchBalance(WriteOffDetail, stock);
sumOutSkuLedger (ledger) += sumWriteOffDetail(ledger);
seriesDataSkuLedger (ledger) += seriesWriteOff(writeOffWriteOffDetail(ledger));
numberDataSkuLedger (ledger) += numberWriteOff(writeOffWriteOffDetail(ledger));

// Товарный отчет
@implementStockDocumentLedgerOut(WriteOff, stock);
sumOutStockDocumentLedger (ledger) += sumWriteOffDetailWriteOff(ledger);
sumItemOutStockDocumentLedger (ledger) += sumItemWriteOffDetailWriteOff(ledger);
sumContainerOutStockDocumentLedger (ledger) += sumContainerWriteOffDetailWriteOff(ledger);

@implementDocument(writeOff);
supplierStockDocument(writeOff) += stockWriteOff(writeOff);

isStockSkuWriteOffDetail (writeOffDetail) = isStockSku(skuWriteOffDetail(writeOffDetail));
isStockSkuUserWriteOffDetail (userWriteOffDetail) = isStockSku(skuUserWriteOffDetail(userWriteOffDetail));

// --------------------------- Формы списания ---------------------------------
editWriteOff 'Редактировать' = ABSTRACT ACTION LIST (WriteOff) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

FORM userWriteOff 'Списание'
    OBJECTS w=UserWriteOff FIXED PANEL
    PROPERTIES (w) isPostedUserWriteOff, nameNumeratorUserWriteOff, numberUserWriteOff, seriesUserWriteOff, dateUserWriteOff, timeUserWriteOff,
                   nameStockUserWriteOff, nameCurrencyUserWriteOff, noteUserWriteOff,
                   countUserWriteOffDetailUserWriteOff, quantityUserWriteOffDetailUserWriteOff,
                   sumUserWriteOffDetailUserWriteOff, nameReasonUserWriteOff, nameWriteOffCommitteeUserWriteOff, nameContactUserWriteOff

    OBJECTS d=UserWriteOffDetail
    PROPERTIES (d) indexUserWriteOffDetail, idBarcodeSkuUserWriteOffDetail, nameSkuUserWriteOffDetail, shortNameUOMSkuUserWriteOffDetail,
                   nameBatchUserWriteOffDetail, quantityUserWriteOffDetail,
                   priceUserWriteOffDetail, sumUserWriteOffDetail, nameStockUserWriteOffDetail, ADDOBJ, deletewd=DELETESESSION

    PROPERTIES(w) TODRAW d fillDocumentWriteOff, addDetailDialogSkuStockUserWriteOffDetailUserWriteOff, addDetailDialogTerminalUserWriteOffDetailUserWriteOff,
                           addDetailInputBarcodeUserWriteOffDetailUserWriteOff, deleteUserWriteOffDetailUserWriteOff
    FILTERS userWriteOffUserWriteOffDetail(d)==w

    EVENTS
        ON OK prePostUserWriteOff(w)

    EDIT UserWriteOff OBJECT w
;

DESIGN userWriteOff FROM DEFAULT{

    main {
        preferredSize = (1024, 768);

        NEW header {
            type = CONTAINERH;

            NEW headerRow1 {
                fill = 1;

                ADD w.documentHeaderGroup {
                    type = CONTAINERH;
                    ADD PROPERTY(isPostedUserWriteOff);
                    ADD PROPERTY(nameStockUserWriteOff);
                    ADD PROPERTY(nameNumeratorUserWriteOff);
                    ADD PROPERTY(numberUserWriteOff);
                    ADD PROPERTY(seriesUserWriteOff);
                    ADD PROPERTY(dateUserWriteOff);
                    ADD PROPERTY(timeUserWriteOff);
                }

                NEW headerTabbedPane {
                    alignment = STRETCH;
                    type = TABBED;
                    NEW headerMainParams {
                        caption = 'Основные параметры';
                        ADD w.documentPrmGroup {
                            columns = 2;
                        }
                    }
                    NEW headerExtraParams {
                        caption = 'Дополнительные параметры';
                    }
                    NEW headerCreateDetail {
                        caption = 'Основание';
                    }
                    NEW headerCreateDocuments {
                        caption = 'Производные документы';
                    }
                }
            }

            ADD w.documentSumGroup {
                columns = 1;
            }
        }

        NEW specification.box {
            fill = 1;
            type = TABBED;
            ADD d.box {
                caption = 'Спецификация';
            }
        }
        ADD functions.box;

        PROPERTY(formOk) {
            caption = 'Провести';
        }
    }
}

//-- SKU
@defineDocumentSkuStockPriceListTypeSystemLedger(userWriteOff, accountPriceListType, stock);
@extendFormDocumentSkuStock(userWriteOff, userWriteOff, w, legalEntityStock, stock);

@defineDocumentBatchStockPriceListTypeSystemLedger(userWriteOff, accountPriceListType, stock);
@extendFormDocumentBatchStock(userWriteOff, userWriteOff, w, legalEntityStock, stock);

addUserWriteOff 'Добавить' = ACTION ADDFORM UserWriteOff;
editUserWriteOff 'Редактировать'  = ACTION EDITFORM UserWriteOff;

editWriteOff(w) += editUserWriteOff(w);
isUserOpenedWriteOff(w)=  isOpenedWriteOff(w) AND isUserWriteOff(w);

FORM writeOffs 'Списания'
    OBJECTS w=WriteOff
    PROPERTIES (w) READONLYIF isReadonly() isClosedWriteOff
    PROPERTIES (w) READONLY isPostedWriteOff FORCE GRID
    PROPERTIES (w) READONLYIF isReadonly() numberWriteOff, seriesWriteOff, dateWriteOff, timeWriteOff, nameStockWriteOff
    PROPERTIES (w) READONLY nameReasonWriteOff, quantityWriteOffDetailWriteOff, countWriteOffDetailWriteOff,
                            sumWriteOffDetailWriteOff
    PROPERTIES (w) READONLYIF isReadonly() noteWriteOff

    PROPERTIES (w) READONLY FORCE PANEL nameUserCreatedHistorizable, timeCreatedHistorizable, hostnameComputerCreatedHistorizable, postedNameUserUserWriteOff, postedTimeUserWriteOff, postedHostnameComputerUserWriteOff
    PROPERTIES ()  addUserWriteOff TODRAW w
    PROPERTIES (w) editWriteOff SHOWIF isOpenedWriteOff(w)
    PROPERTIES (w) closeUserWriteOff SHOWIF isOpenedUserWriteOff(w), openUserWriteOff SHOWIF isClosedUserWriteOff(w)
    
    PROPERTIES (w) deletew=DELETE FORCE PANEL TOOLBAR  SHOWIF isUserOpenedWriteOff(w)

    OBJECTS d=WriteOffDetail
    PROPERTIES (d) READONLY indexWriteOffDetail, idBarcodeSkuWriteOffDetail, nameSkuWriteOffDetail, shortNameUOMSkuWriteOffDetail, nameBatchWriteOffDetail,
                   quantityWriteOffDetail, priceWriteOffDetail, sumWriteOffDetail, nameStockWriteOffDetail

    FILTERS writeOffWriteOffDetail(d) == w
;
@extendFormFilterAccessStock(WriteOff, w, writeOffs, stock, company);

DESIGN writeOffs FROM DEFAULT {
    NEW pane {
        fill = 1;
        type = SPLITV;

        ADD w.box {
            fill = 2;
        }

        NEW documentDetail {
            fill = 1;
            type = TABBED;

            ADD d.box {
                caption = 'Спецификация';
            }
            NEW documentHistory {
                caption = 'История';

                ADD w.historyGroup;
                ADD w.postedGroup;
            }
            NEW printTab {
                caption = 'Печатные формы';
                NEW printContainer {
                    caption = 'Печать';
                    type = CONTAINERH;
                }
            }
        }
    }

    ADD functions.box;
}
@extendFormEditable(writeOffs);

//----------------------------------------------- Операции -----------------------------------------------------//
@defineDocumentInterfaceOperation (writeOff, WriteOff, );

@defineDocumentOperationRolePrefix(userWriteOff, );

EXTEND FORM userWriteOff
    PROPERTIES(w) nameOperationUserWriteOff
;
EXTEND DESIGN userWriteOff{
    w.documentPrmGroup{
        ADD PROPERTY (nameOperationUserWriteOff) BEFORE PROPERTY(nameCurrencyUserWriteOff);
    }
}
EXTEND FORM writeOffs
    PROPERTIES(w) READONLY nameOperationWriteOff BEFORE nameReasonWriteOff
;

// Причина
reasonOperation = DATA Reason (WriteOff.Operation);
nameReasonOperation 'Причина списания' (operation) = nameReason(reasonOperation(operation));

contactOperation = DATA LegalEntity (WriteOff.Operation);
nameContactOperation 'Контрагент' (operation) = nameLegalEntity(contactOperation(operation));

contactUserWriteOff (w) <- contactOperation(operationUserWriteOff(w))
    WHEN CHANGED(operationUserWriteOff(w));

EXTEND FORM WriteOff.operation
    PROPERTIES(o) nameContactOperation
;

EXTEND DESIGN operation {
    showContainer {
        ADD PROPERTY(nameContactOperation);
    }
}

NAVIGATOR {
    stockNavigator {
        NEW writeOffNavigator 'Списания' BEFORE balanceSku {
            ADD writeOffs;
            ADD writeOffCommittees;
            ADD operations;
        }
    }
}