MODULE WriteOff;

REQUIRE System,
        Stock,
        PriceListLedger,
        WriteOffOperation,
        Currency,
        Numerator,
        Terminal,
        Barcode,
        Document,
        EmployeeStock,
        StockDocument,
        Utils;

PRIORITY Stock;

//--------------------------------Комиссия для списания----------------------------------//
CLASS WriteOffCommittee 'Комиссия для списания товаров' : Committee;

nameWriteOffCommittee 'Наименование' = DATA ISTRING[150](WriteOffCommittee);

nameCommittee(committee) += nameWriteOffCommittee(committee) IF committee IS WriteOffCommittee;

writeOffCommitteeStock 'Комиссия для списания товаров (ИД)' = DATA WriteOffCommittee (Stock);
nameWriteOffCommitteeStock 'Комиссия для списания товаров' (stock) = nameWriteOffCommittee(writeOffCommitteeStock(stock)) IN committeeGroup MINCHARWIDTH 20 PREFCHARWIDTH 30;
isWriteOffCommitteeStock 'По умолчанию' (writeOffCommittee, stock) = writeOffCommitteeStock(stock) == writeOffCommittee;
CONSTRAINT writeOffCommitteeStock(stock) AND NOT inCommitteeStock(writeOffCommitteeStock(stock), stock)
    CHECKED BY writeOffCommitteeStock MESSAGE 'Для отдела выбрана комиссия, которая для него не действует';

FORM writeOffCommittee 'Комиссия для списания товаров'
    OBJECTS c=WriteOffCommittee FIXED PANEL
    PROPERTIES(c)      nameWriteOffCommittee

    TREE stockTree sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY sgTreeName = nameStockGroup(sg)

    OBJECTS ts=Stock
    PROPERTIES    READONLY tsTreeName = nameStock(ts)
    PROPERTIES(c, ts) inCommitteeStock FORCE GRID, isWriteOffCommitteeStock

    FILTERS isParentStockGroupStock(sg, ts)
    ORDER BY tsTreeName


    OBJECTS e=Employee
    PROPERTIES(e)      READONLY nameContact, firstNameContact, lastNameContact, namePositionEmployee
    PROPERTIES(e)      ADDSESSIONFORM, EDITSESSIONFORM, DELETESESSION

    PROPERTIES(c, e)   inCommitteeEmployee
    FILTERS            countStockEmployeeCommittee (e, c)
    FILTERGROUP filters6
        FILTER 'Показывать только членов комиссии' 'F10' inCommitteeEmployee(c, e)

    FILTERGROUP filters5
        FILTER 'Показывать отделы только для данной комиссии' 'F9' inCommitteeStock(c, ts)

    EDIT WriteOffCommittee OBJECT c
;
@extendFormFilterStockAccess(Stock, ts, writeOffCommittee);
@extendFormFilterStockGroupAccess(StockGroup, sg, writeOffCommittee);

DESIGN writeOffCommittee FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW caseOne BEFORE e.box {
            childConstraints = TO THE RIGHT;
            caption = 'Отделы, для которых действуют комиссии';

            ADD stockTree.tree {
                fillHorizontal = 1;
            }

            ADD ts.box {
                fillHorizontal = 2;
            }
        };
    }
}

FORM writeOffCommittees 'Комиссии для списания товаров'
    OBJECTS w=WriteOffCommittee
    PROPERTIES(w)      READONLY nameWriteOffCommittee, nameStocksCommittee, nameEmployeeCommittee
    PROPERTIES(w)      ADDFORM, EDITFORM

    DIALOG WriteOffCommittee OBJECT w
;
// ----------------------------------- Макрос для задания комиссии для документов ------------------------------------------ //

META defineDocumentHeaderWriteOffCommittee(object, stockProp)

    writeOffCommittee###object (object) = DATA WriteOffCommittee(###object);
    nameWriteOffCommittee###object 'Комиссия для списания товаров' (object) = nameWriteOffCommittee(writeOffCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;
    writeOffCommittee###object (object) <- writeOffCommitteeStock(stockProp###object(object))
        WHEN CHANGED(stockProp###object(object));

    CONSTRAINT writeOffCommittee###object (object) AND NOT inCommitteeStock(writeOffCommittee###object (object), stockProp###object(object))
        CHECKED BY writeOffCommittee###object MESSAGE 'Для документа выбрана комиссия, которая не действует для склада документа';

    inWriteOffCommittee###object##Employee (object, employee) = inCommitteeEmployee(writeOffCommittee###object (object), employee);
    nameEmployeeWriteOffCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(writeOffCommittee###object (object));
END
META defineDocumentHeaderAbstractWriteOffCommittee(object)
    writeOffCommittee###object (object) = ABSTRACT WriteOffCommittee(###object);
    nameWriteOffCommittee###object 'Комиссия для списания товаров' (object) = nameWriteOffCommittee(writeOffCommittee###object(object)) IN documentPrmGroup MINCHARWIDTH 20 PREFCHARWIDTH 40;

    inWriteOffCommittee###object##Employee (object, employee) = inCommitteeEmployee(writeOffCommittee###object (object), employee);
    nameEmployeeWriteOffCommittee###object 'Члены комиссии' (object) = namePositionEmployeeCommittee(writeOffCommittee###object (object));
END

META defineDocumentInterfaceHeaderWriteOffCommittee (object, stockProp)
    @defineDocumentHeaderAbstractWriteOffCommittee (object);
    @defineDocumentHeaderWriteOffCommittee (user###object, stockProp);
    writeOffCommittee###object (object) += writeOffCommittee###user###object(object);
END

//----------------------------------------------- Списание товара ---------------------------------------------------//
CLASS Reason 'Причина списания';
TABLE reason (Reason);

nameReason 'Наименование' = DATA ISTRING[50](Reason);

FORM reason 'Причина списания'
    OBJECTS r=Reason  FIXED PANEL
    PROPERTIES(r) nameReason
    EDIT Reason OBJECT r
;

FORM reasons 'Причины списания'
    OBJECTS r=Reason
    PROPERTIES(r) READONLY nameReason
    PROPERTIES(r) ADDFORM, EDITFORM, DELETE

    DIALOG Reason OBJECT r
;
DESIGN reasons FROM DEFAULT { main{ preferredSize = (600, 400); } }

CLASS WriteOff 'Списание' : Document;
CLASS WriteOffDetail 'Строка списания' : DocumentDetail;

CLASS UserWriteOff 'Списание (польз.)' : WriteOff, Historizable, NumeratedDocument;
CLASS UserWriteOffDetail 'Строка списания (польз.)' : WriteOffDetail;
CLASS UserWriteOffPosted 'Проведенное списание (польз.)' : UserWriteOff, PostedObject;

@defineDocumentInterface(writeOff);
@defineDocumentInterfaceDataStock(writeOff, stock, 'Склад');

@defineDocumentInterfacePosted(writeOff);
@defineDocumentInterfaceDescription (writeOff, 'Списание товара');

@defineDocumentInterfaceCurrency(writeOff);
@deriveDocumentCurrency(userWriteOff, stock);

addressLegalEntityWriteOff 'Адрес' (writeOff) = addressLegalEntityDate(legalEntityStockWriteOff(writeOff), dateWriteOff(writeOff));
addressLegalEntityUserWriteOff 'Адрес' (userWriteOff) = addressLegalEntityDate(legalEntityStockUserWriteOff(userWriteOff), dateUserWriteOff(userWriteOff));

@defineDocumentInterfaceNumber(writeOff);
@defineDocumentInterfaceDetailSku(writeOff, sku);

// Для инвентаризации по партиям
@defineDocumentInterfaceDetailBatch(writeOff, batch);
@defineDocumentInterfaceDetailQuantity(writeOff);
@defineDocumentInterfaceDetailPrice(writeOff);
@defineDocumentInterfaceDetailDataSum(writeOff);
@deriveDocumentDetailSum(userWriteOff, quantity);

priceUserWriteOffDetail (detail)  <- IF batchUserWriteOffDetail(detail)
                THEN priceLedgerPriceListTypeBatchStockDateTime(SystemLedgerPriceListType.accountPriceListType, batchUserWriteOffDetail(detail), stockUserWriteOffDetail(detail), dateTimeUserWriteOffDetail(detail))
                ELSE priceLedgerPriceListTypeSkuStockDateTime(SystemLedgerPriceListType.accountPriceListType, skuUserWriteOffDetail(detail), stockUserWriteOffDetail(detail), dateTimeUserWriteOffDetail(detail))
                WHEN CHANGED(skuUserWriteOffDetail(detail)) OR CHANGED(batchUserWriteOffDetail(detail)) OR CHANGED(stockUserWriteOffDetail(detail)) OR CHANGED (dateTimeUserWriteOffDetail(detail));

skuUserWriteOffDetail (detail)  <- skuBatch(batchUserWriteOffDetail(detail)) IF batchUserWriteOffDetail(detail)
                               WHEN CHANGED(batchUserWriteOffDetail(detail));

@defineDocumentInterfaceHeaderQuantity(writeOff);
@defineDocumentHeaderSkuQuantity(writeOff, sku);
@defineDocumentHeaderSkuQuantity(userWriteOff, sku);

@defineDocumentInterfaceHeaderSum(writeOff);

@defineDocumentInterfaceHeaderItemSum(writeOff, , );

@defineAddDetailDialogSkuStock(userWriteOff, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(userWriteOff, sku);
@defineAddDetailDialogTerminal(userWriteOff, sku);

@defineDocumentInterfaceHeaderWriteOffCommittee(writeOff, stock);

reasonWriteOff 'Причина списания (ИД)' = ABSTRACT Reason (WriteOff);
reasonUserWriteOff 'Причина списания (ИД)' = DATA Reason (UserWriteOff);
reasonWriteOff(writeOff) += reasonUserWriteOff(writeOff);
nameReasonWriteOff 'Причина списания' (writeOff) = nameReason(reasonWriteOff (writeOff)) IN documentPrmGroup;
nameReasonUserWriteOff 'Причина списания' (userWriteOff) = nameReason(reasonUserWriteOff (userWriteOff)) IN documentPrmGroup;

// Проводим по регистру
@implementSkuLedgerOutFIFO(WriteOffDetail, sku, stock);
quantityOutFIFOSkuLedger (ledger) += quantityWriteOffDetail(ledger);
@implementSkuLedgerOutFIFOBatchBalance(WriteOffDetail, stock);
sumOutSkuLedger (ledger) += sumWriteOffDetail(ledger);
seriesDataSkuLedger (ledger) += seriesWriteOff(writeOffWriteOffDetail(ledger));
numberDataSkuLedger (ledger) += numberWriteOff(writeOffWriteOffDetail(ledger));

// Товарный отчет
@implementStockDocumentLedgerOut(WriteOff, stock);
sumOutStockDocumentLedger (ledger) += sumWriteOffDetailWriteOff(ledger);
sumItemOutStockDocumentLedger (ledger) += sumItemWriteOffDetailWriteOff(ledger);
sumContainerOutStockDocumentLedger (ledger) += sumContainerWriteOffDetailWriteOff(ledger);

@implementDocument(writeOff);
supplierStockDocument(writeOff) += stockWriteOff(writeOff);

isStockSkuWriteOffDetail (writeOffDetail) = isStockSku(skuWriteOffDetail(writeOffDetail));
isStockSkuUserWriteOffDetail (userWriteOffDetail) = isStockSku(skuUserWriteOffDetail(userWriteOffDetail));

// --------------------------- Формы списания ---------------------------------

FORM userWriteOff 'Списание'
    OBJECTS w=UserWriteOff FIXED PANEL
    PROPERTIES (w) objectClassName, nameNumeratorObject, numberObject, seriesObject, dateUserWriteOff, timeUserWriteOff,
                   nameStockUserWriteOff, nameCurrencyUserWriteOff, noteUserWriteOff,
                   countUserWriteOffDetailUserWriteOff, quantityUserWriteOffDetailUserWriteOff,
                   sumUserWriteOffDetailUserWriteOff, nameReasonUserWriteOff, nameWriteOffCommitteeUserWriteOff

    OBJECTS d=UserWriteOffDetail
    PROPERTIES (d) indexUserWriteOffDetail, idBarcodeSkuUserWriteOffDetail, nameSkuUserWriteOffDetail, shortNameUOMSkuUserWriteOffDetail,
                   nameBatchUserWriteOffDetail, quantityUserWriteOffDetail,
                   priceUserWriteOffDetail, sumUserWriteOffDetail, ADDOBJ, deletewd=DELETESESSION

    PROPERTIES(w) TODRAW d fillDocumentWriteOff, addDetailDialogSkuStockUserWriteOffDetailUserWriteOff, addDetailDialogTerminalUserWriteOffDetailUserWriteOff,
                           addDetailInputBarcodeUserWriteOffDetailUserWriteOff, deleteUserWriteOffDetailUserWriteOff
    FILTERS userWriteOffUserWriteOffDetail(d)==w

    EVENTS
        ON OK prePostUserWriteOff(w)

    EDIT UserWriteOff OBJECT w
;

DESIGN userWriteOff FROM DEFAULT{

    main {
        preferredSize = (1024, 768);

        NEW header.box BEFORE d.box {
            childConstraints = TO THE RIGHT;

            NEW headerRow1 {
                childConstraints = TO THE BOTTOM;

                ADD w.documentHeaderGroup {
                    childConstraints = TO THE RIGHT;
                    ADD PROPERTY(objectClassName);
                    ADD PROPERTY(nameStockUserWriteOff);
                    ADD PROPERTY(nameNumeratorObject);
                    ADD PROPERTY(numberObject);
                    ADD PROPERTY(seriesObject);
                    ADD PROPERTY(dateUserWriteOff);
                    ADD PROPERTY(timeUserWriteOff);
                }

                ADD w.documentPrmGroup {
                    childConstraints = TO THE RIGHT;
                }
                    NEW headerTabbedPane {
                        type = TABBED;
                        NEW headerMainParams {
                            caption = 'Основные параметры';
                            childConstraints = TO THE BOTTOM;
                            ADD w.documentPrmGroup {
                                childConstraints = TO THE RIGHTBOTTOM;
                            }
                        }
                        NEW headerExtraParams {
                            caption = 'Дополнительные параметры';
                            minimumSize = (500, -1);
                        }
                        NEW headerCreateDetail {
                            caption = 'Основание';
                        }
                        NEW headerCreateDocuments {
                            caption = 'Производные документы';
                            minimumSize = (500, -1);
                        }
                    }
            }

            ADD w.documentSumGroup {
                childConstraints = TO THE BOTTOM;
            }
        }

        d.panel{
            childConstraints = TO THE BOTTOM;
        }
        PROPERTY(formOk) {
            caption = 'Провести';
        }
    }
}

addUserWriteOff 'Добавить' = ACTION ADDFORM UserWriteOff;
editUserWriteOff 'Редактировать'  = ACTION EDITFORM UserWriteOff;

FORM writeOffs 'Списания'
    OBJECTS w=WriteOff
    PROPERTIES (w) READONLY isPostedWriteOff FORCE GRID, numberWriteOff, seriesWriteOff, dateWriteOff, timeWriteOff, nameStockWriteOff,
                            nameReasonWriteOff, quantityWriteOffDetailWriteOff, countWriteOffDetailWriteOff,
                            sumWriteOffDetailWriteOff, noteWriteOff, objectClassName

    PROPERTIES (w) READONLY FORCE PANEL nameUserCreatedHistorizable, timeCreatedHistorizable, hostnameComputerCreatedHistorizable, nameUserClosed, timeClosed, hostnameComputerClosed
    PROPERTIES ()  addUserWriteOff TODRAW w
    PROPERTIES (w) editUserWriteOff
    PROPERTIES (w) deletew=DELETE FORCE PANEL TOOLBAR  SHOWIF isUserWriteOff(w)

    OBJECTS d=WriteOffDetail
    PROPERTIES (d) READONLY indexWriteOffDetail, idBarcodeSkuWriteOffDetail, nameSkuWriteOffDetail, shortNameUOMSkuWriteOffDetail, nameBatchWriteOffDetail,
                   quantityWriteOffDetail, priceWriteOffDetail, sumWriteOffDetail

    FILTERS writeOffWriteOffDetail(d) == w
;
@extendFormFilterAccessStock(WriteOff, w, writeOffs, stock, company);

DESIGN writeOffs FROM DEFAULT {
    PROPERTY (deletew) {
        askConfirm = TRUE;
    }

    NEW documentContainer BEFORE functions.box {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD w.box;

        NEW documentDetail {
            type = TABBED;

            ADD d.box {
                caption = 'Спецификация';
            }
            NEW documentHistory {
                caption = 'История';

                ADD w.historyGroup;
                ADD w.postedGroup;
            }
            NEW printTab {
                caption = 'Печатные формы';
                NEW printContainer {
                    caption = 'Печать';
                    childConstraints = TO THE BOTTOM;
                    fillVertical = 1.0; // todo : иначе кнопка не всегда показывается, нужно будет пофиксить как-нибудь
                }
            }
        }
    }
}

//----------------------------------------------- Операции -----------------------------------------------------//
@defineDocumentInterfaceOperation (writeOff, WriteOff, );

@defineDocumentOperationRolePrefix(userWriteOff, );

EXTEND FORM userWriteOff
    PROPERTIES(w) nameOperationUserWriteOff
;
EXTEND DESIGN userWriteOff{
    w.documentPrmGroup{
        ADD PROPERTY (nameOperationUserWriteOff) BEFORE PROPERTY(nameCurrencyUserWriteOff);
    }
}
EXTEND FORM writeOffs
    PROPERTIES(w) READONLY nameOperationWriteOff BEFORE nameReasonWriteOff
;

// Причина
reasonOperation = DATA Reason (WriteOff.Operation);
nameReasonOperation 'Причина списания' (operation) = nameReason(reasonOperation(operation));

reasonUserWriteOff (w) <- reasonOperation(operationUserWriteOff(w))
    WHEN CHANGED(operationUserWriteOff(w));

EXTEND FORM WriteOff.operation
    PROPERTIES(o) nameReasonOperation
;

EXTEND DESIGN operation {
    showContainer {
        ADD PROPERTY(nameReasonOperation);
    }
}

NAVIGATOR {
    stockNavigator {
        NEW writeOffNavigator 'Списания' BEFORE balanceSku {
            ADD writeOffs;
            ADD writeOffCommittees;
            ADD operations;
        }
    }
}