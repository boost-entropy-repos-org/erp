MODULE WriteOffPurchase;

REQUIRE WriteOff, PurchaseShipment, ShipmentWriteOff;

PRIORITY Purchase; 

NAMESPACE WriteOff;

//---------------------------------- Норма отходов ------------------------------------//
CLASS WriteOffRate 'Норма отходов';
TABLE writeOffRate(WriteOffRate);

@defineExternalizable(writeOffRate, VARSTRING[100]);

name 'Наименование' = DATA VARISTRING[100](WriteOffRate);

percent 'Норма,%' = DATA NUMERIC[10,3] (WriteOffRate);
country = DATA Country (WriteOffRate);
nameCountry 'Страна' (WriteOffRate writeOffRate) = name(country(writeOffRate)) IN base;

FORM writeOffRate 'Норма отходов'
    OBJECTS r=WriteOffRate FIXED PANEL
    PROPERTIES(r) name, percent, nameCountry
    EDIT WriteOffRate OBJECT r
;

writeOffRate 'Норма отходов' = ABSTRACT WriteOffRate (Country, Sku);
nameWriteOffRate 'Норма отходов' = name(writeOffRate(Country country, Sku sku));
percentWriteOffRate 'Норма отходов,%' = percent(writeOffRate(Country country, Sku sku));

FORM writeOffRateDialog 'Нормы отходов'
    OBJECTS r=WriteOffRate
    PROPERTIES(r) READONLY name, percent, nameCountry
    PROPERTIES(r) NEWEDIT, EDIT, DELETE
    LIST WriteOffRate OBJECT r
;
NAVIGATOR {
    writeOffNavigator  {
        ADD writeOffRateDialog;
    }
}

@defineShipmentWriteOffOperation(Purchase);

@defineShipmentWriteOff (customer, ledgerBatch, '(закупка)',);

// ------------------------------------------------ Стандартные значения --------------------------------------- //

loadDefaultWriteOffRate 'Добавить нормы отходов'(STRING[3] idCountry, VARISTRING[100] string, NUMERIC[10,3] numeric) = ACTION  {
    FOR NEW g = WriteOffRate DO {
        ASSIGN name(g) <- string;
        ASSIGN percent(g) <-  numeric;
        ASSIGN country(g) <- country(idCountry);
    }
};

loadDefaultWriteOffRates 'Загрузить стандартные нормы отходов' = ACTION ABSTRACT LIST () IN loadDefault;

@implementLoadDefaultData(loadDefaultWriteOffRates);

