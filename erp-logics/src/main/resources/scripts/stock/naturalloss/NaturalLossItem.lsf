MODULE NaturalLossItem;

REQUIRE NaturalLoss, Item;

subNaturalLossGroupCountryItem = DATA SubNaturalLossGroup (Country, Item);
nameSubNaturalLossGroupCountryItem 'Группа естественной убыли'(country, item)  = nameSubNaturalLossGroup(subNaturalLossGroupCountryItem(country, item));
nameSubNaturalLossGroupDefaultCountryItem 'Группа естественной убыли' (item) = nameSubNaturalLossGroup(subNaturalLossGroupCountryItem(defaultCountry(), item));

changeSubNaturalLossGroupDefaultCountryItem = ACTION (item) {
    REQUEST OBJECT sg
    FORM naturalLossGroups OBJECTS c = defaultCountry() DIALOG SHOWDROP;
    IF formResult() == FormResult.ok THEN {
        subNaturalLossGroupCountryItem(country, item) <- requestedObject() WHERE country == defaultCountry();

    } ELSE IF formResult() == FormResult.drop THEN {
        subNaturalLossGroupCountryItem(country, item) <- NULL WHERE country == defaultCountry();
    }
}

CONSTRAINT countrySubNaturalLossGroup(subNaturalLossGroupCountryItem(country, item)) != country
    CHECKED BY subNaturalLossGroupCountryItem MESSAGE 'Страна группы естественной убыли не совпадает со страной';

subNaturalLossGroupCountrySku (country, sku) += subNaturalLossGroupCountryItem (country, sku);

overCopyItem(s, d) += ACTION (s, d) {
    ASSIGN subNaturalLossGroupCountryItem(country, d) <- subNaturalLossGroupCountryItem(country, s);
}

EXTEND FORM item
    PROPERTIES(c,i) nameSubNaturalLossGroupCountryItem
    PROPERTIES(i) nameSubNaturalLossGroupDefaultCountryItem ON CHANGE changeSubNaturalLossGroupDefaultCountryItem(i)
;
DESIGN item { regionPrm  { MOVE PROPERTY(nameSubNaturalLossGroupDefaultCountryItem(i));} }

EXTEND FORM items
    PROPERTIES(i) READONLYIF isReadonly() nameSubNaturalLossGroupDefaultCountryItem ON CHANGE changeSubNaturalLossGroupDefaultCountryItem(i)
;   
//--

@defineItemDefaultValue(subNaturalLossGroup, 'Группа естественной убыли (по-умолчанию)', SubNaturalLossGroup, nameSubNaturalLossGroup, country);


EXTEND FORM itemGroup
    OBJECTS tc=Country 
    PROPERTIES(tc)   READONLY nameCountry
    PROPERTIES(tc, g) nameSubNaturalLossGroupCountryItemGroup
    FILTERGROUP isResident
        FILTER 'Отечественный производитель' residentCountry(tc) OR defaultCountry()==tc DEFAULT 
    
;    

DESIGN itemGroup {
    detail1 {
        MOVE tc.box { caption = 'Группа естественной убыли';}
    }         
}

WHEN SESSION CHANGED(itemGroupItem(item)) AND country IS Country AND NOT subNaturalLossGroupCountryItem(country, item) DO
    subNaturalLossGroupCountryItem(country, item) <- subNaturalLossGroupCountryItemGroup(country, itemGroupItem(item));


EXTEND CLASS NaturalLossGroup : Group;
EXTEND CLASS SubNaturalLossGroup : Group;

EXTEND CLASS SystemGroupType { naturalLossGroupType 'Естественная убыль' };

CLASS NaturalLossGroupAll { naturalLossAll 'Все' } : Group;
TABLE naturalLossGroupAll(NaturalLossGroupAll);

parentGroup (group) += NaturalLossGroupAll.naturalLossAll IF group IS NaturalLossGroup;
parentGroup (group) += parentNaturalLossGroup(group);

nameGroup (group) += VARISTRING[250](staticCaption(group)) IF group IS NaturalLossGroupAll;
nameGroup (group) += nameSubNaturalLossGroup(group);
nameGroup (group) += nameNaturalLossGroup(group);

groupTypeGroup(group) += SystemGroupType.naturalLossGroupType IF group IS NaturalLossGroupAll;
groupTypeGroup(group) += SystemGroupType.naturalLossGroupType IF group IS NaturalLossGroup ;
groupTypeGroup(group) += SystemGroupType.naturalLossGroupType IF group IS SubNaturalLossGroup;


groupGroupTypeSku(type, sku) += WHEN CLASS(subNaturalLossGroupCountryItem(defaultCountry(),sku)) AND type == SystemGroupType.naturalLossGroupType THEN subNaturalLossGroupCountryItem(defaultCountry(),sku);
