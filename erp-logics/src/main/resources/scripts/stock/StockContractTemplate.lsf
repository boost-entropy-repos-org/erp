MODULE StockContractTemplate;

REQUIRE StockContract, Word, LegalEntityBy, Bank;

overCreateStockTemplate = ABSTRACT LIST (TemplateEntry, Contract);

createStockTemplate 'Заполнить по шаблону' (Contract contract) = {
    value(TemplateEntry detail) <- NULL;

    DIALOG dialogTemplates OBJECTS t INPUT DO {
        FOR template (TemplateEntry detail) == t DO {

            value(detail) <- TEXT(nameSupplier(contract)) WHERE key(detail) == 'supplier';
            value(detail) <- TEXT(nameCustomer(contract)) WHERE key(detail) == 'customer';
            value(detail) <- TEXT(shortNameOwnership(supplier(contract))) WHERE key(detail) == 'shortOwnershipSupplier';
            value(detail) <- TEXT(shortNameOwnership(customer(contract))) WHERE key(detail) == 'shortOwnershipCustomer';
            value(detail) <- TEXT(address(supplier(contract))) WHERE key(detail) == 'addressSupplier';
            value(detail) <- TEXT(address(customer(contract))) WHERE key(detail) == 'addressCustomer';
            value(detail) <- TEXT(nameCountry(supplier(contract))) WHERE key(detail) == 'countrySupplier';
            value(detail) <- TEXT(nameCountry(customer(contract))) WHERE key(detail) == 'countryCustomer';
            value(detail) <- TEXT(phone(supplier(contract))) WHERE key(detail) == 'phoneSupplier';
            value(detail) <- TEXT(phone(customer(contract))) WHERE key(detail) == 'phoneCustomer';
            value(detail) <- TEXT(email(supplier(contract))) WHERE key(detail) == 'emailSupplier';
            value(detail) <- TEXT(email(customer(contract))) WHERE key(detail) == 'emailCustomer';
            value(detail) <- TEXT(numberAccount(supplier(contract))) WHERE key(detail) == 'accountBankSupplier';
            value(detail) <- TEXT(numberAccount(customer(contract))) WHERE key(detail) == 'accountBankCustomer';
            value(detail) <- TEXT(nameBank(account(supplier(contract)))) WHERE key(detail) == 'bankSupplier';
            value(detail) <- TEXT(nameBank(account(customer(contract)))) WHERE key(detail) == 'bankCustomer';
            value(detail) <- TEXT(addressBank(account(supplier(contract)))) WHERE key(detail) == 'addressBankSupplier';
            value(detail) <- TEXT(addressBank(account(customer(contract)))) WHERE key(detail) == 'addressBankCustomer';
            value(detail) <- TEXT(MFOBank(account(supplier(contract)))) WHERE key(detail) == 'MFOBankSupplier';
            value(detail) <- TEXT(MFOBank(account(customer(contract)))) WHERE key(detail) == 'MFOBankCustomer';
            value(detail) <- TEXT(departmentBank(account(supplier(contract)))) WHERE key(detail) == 'departmentBankSupplier';
            value(detail) <- TEXT(departmentBank(account(customer(contract)))) WHERE key(detail) == 'departmentBankCustomer';
            value(detail) <- TEXT(CBUBank(account(supplier(contract)))) WHERE key(detail) == 'CBUBankSupplier';
            value(detail) <- TEXT(CBUBank(account(customer(contract)))) WHERE key(detail) == 'CBUBankCustomer';

            overCreateStockTemplate(detail, contract);
        }
        DIALOG template OBJECTS t = t DO {
            process(t);
            word[UserContractSku](contract) <- resultTemplate();
            openWord[UserContractSku](contract);
        }
    }
} IMAGE 'editReport.png';

EXTEND FORM userContractSku

    PROPERTIES (c) createStockTemplate
;
DESIGN userContractSku {
    text {
        MOVE PROPERTY(createStockTemplate(c));
    }
}

// ----------------------------------- Стандартные данные ----------------------------------- //

loadDefaultTemplate 'Добавить шаблон договора'(VARSTRING[100] iname, VARISTRING[100] isid) = {
    NEW t = Template {
        ASSIGN name(t) <- iname;
        ASSIGN id(t) <- isid;
    }
}

loadDefaultTemplateEntry 'Добавить строку шаблона'(VARSTRING[100] iname, VARISTRING[100] isid) = {
    NEW g = TemplateEntry {
        ASSIGN key(g) <- iname;
        ASSIGN template(g) <- templateId(isid);
    }
}

overloadDefaultTemplates = ABSTRACT LIST ();
loadDefaultTemplates 'Загрузить стандартные шаблоны' () = {
    EXEC loadDefaultTemplate ('Договор купли продажи', '1');

    EXEC loadDefaultTemplateEntry('supplier', '1');
    EXEC loadDefaultTemplateEntry('customer', '1');
    EXEC loadDefaultTemplateEntry('shortOwnershipSupplier', '1');
    EXEC loadDefaultTemplateEntry('shortOwnershipCustomer', '1');
    EXEC loadDefaultTemplateEntry('addressSupplier', '1');
    EXEC loadDefaultTemplateEntry('addressCustomer', '1');
    EXEC loadDefaultTemplateEntry('managerSupplier', '1');
    EXEC loadDefaultTemplateEntry('managerCustomer', '1');
    EXEC loadDefaultTemplateEntry('countrySupplier', '1');
    EXEC loadDefaultTemplateEntry('countryCustomer', '1');
    EXEC loadDefaultTemplateEntry('phoneSupplier', '1');
    EXEC loadDefaultTemplateEntry('phoneCustomer', '1');
    EXEC loadDefaultTemplateEntry('emailSupplier', '1');
    EXEC loadDefaultTemplateEntry('emailCustomer', '1');
    EXEC loadDefaultTemplateEntry('accountBankSupplier', '1');
    EXEC loadDefaultTemplateEntry('accountBankCustomer', '1');
    EXEC loadDefaultTemplateEntry('bankSupplier', '1');
    EXEC loadDefaultTemplateEntry('bankCustomer', '1');
    EXEC loadDefaultTemplateEntry('addressBankSupplier', '1');
    EXEC loadDefaultTemplateEntry('addressBankCustomer', '1');
    EXEC loadDefaultTemplateEntry('MFOBankSupplier', '1');
    EXEC loadDefaultTemplateEntry('MFOBankCustomer', '1');
    EXEC loadDefaultTemplateEntry('departmentBankSupplier', '1');
    EXEC loadDefaultTemplateEntry('departmentBankCustomer', '1');
    EXEC loadDefaultTemplateEntry('CBUBankSupplier', '1');
    EXEC loadDefaultTemplateEntry('CBUBankCustomer', '1');

    EXEC overloadDefaultTemplates();
} IN loadDefault;

@implementLoadDefaultData(loadDefaultTemplates);



