MODULE StockContract;

REQUIRE Contract, Stock;

NAMESPACE Contract;

// ------------------------------------ Договора на перемещение товаров ---------------- //


CLASS ABSTRACT ContractSku 'Договор на поставку' : Contract;
TABLE contractSku(ContractSku);

wordContractSku 'Файл договора'  = ABSTRACT WORDFILE (ContractSku);
saveWordContractSku 'Загрузить файл договора' (contractSku) = ACTION LOADFILE wordContractSku(contractSku);
openWordContractSku 'Просмотреть файл договора' (contractSku) = ACTION OPENFILE wordContractSku(contractSku);
wordContract(contract) += wordContractSku(contract);

CLASS UserContractSku 'Договор на поставку (польз.)' : ContractSku;

@defineDocumentInterfaceHeaderNumber(ContractSku);
@defineExternalizable(userContractSku, VARSTRING[100]);

numberContract (contract) += numberContractSku(contract);
seriesContract (contract) += seriesContractSku(contract);

@defineNumeratedDefault(UserContractSku, 'Договора', 'ДП');

wordUserContractSku 'Файл договора' (UserContractSku) = DATA WORDFILE (UserContractSku);
saveWordUserContractSku 'Загрузить файл договора' (userContractSku) = ACTION LOADFILE wordUserContractSku(userContractSku);
openWordUserContractSku 'Просмотреть файл договора' (userContractSku) = ACTION OPENFILE wordUserContractSku(userContractSku);
wordContractSku(contract) += wordUserContractSku(contract);

supplierContractSku = DATA LegalEntity (ContractSku);
nameSupplierContractSku 'Поставщик' (contract) = nameLegalEntity(supplierContractSku(contract)) IN recognize MINCHARWIDTH 20 PREFCHARWIDTH 40;
partyAContract (contract) += supplierContractSku(contract);

customerContractSku = DATA LegalEntity (ContractSku);
nameCustomerContractSku 'Покупатель' (contract) = nameLegalEntity(customerContractSku(contract)) IN recognize MINCHARWIDTH 20 PREFCHARWIDTH 40;
partyBContract (contract) += customerContractSku(contract);

TABLE supplierCustomer(LegalEntity, LegalEntity);
@defineContractDefault(contractSku, LegalEntity, LegalEntity, supplier, customer);

//для договора

CLASS ContractSkuType 'Тип договора на поставку' {
    sale 'Договор купли-продажи',
    commission 'Договор комиссии'
}
FORM contractSkuTypes 'Типы договоров на поставку'
    OBJECTS t = ContractSkuType
    PROPERTIES(t) READONLY staticCaption
    DIALOG ContractSkuType OBJECT t
;

typeContractSku = DATA ContractSkuType (ContractSku);
nameTypeContractSku 'Тип договора' (contract) = staticCaption(typeContractSku(contract)) IN base;
isSaleTypeContract(contract) = typeContractSku(contract) == ContractSkuType.sale;

typeContractSku (o) <- ContractSkuType.sale WHEN SET(o IS ContractSku);

// Формы
FORM userContractSku 'Договор на поставку товаров'
    OBJECTS c = UserContractSku FIXED PANEL
    PROPERTIES(c) nameSupplierContractSku, nameCustomerContractSku, isDataDefaultContractSku, nameTypeContractSku,
                  nameNumeratorUserContractSku, numberUserContractSku, seriesUserContractSku, dateFromContract, dateToContract,
                  nameCurrencyContract,  nameTypeExchangeContract, descriptionPaymentConditionContract,
                  noteContract, saveWordUserContractSku, openWordUserContractSku

    EDIT UserContractSku OBJECT c
;


DESIGN userContractSku FROM DEFAULT {
    NEW north {
        type = CONTAINERH;
        ADD c.numbered {
            type = CONTAINERH;
        }
        ADD c.contract {
            type = CONTAINERH;
        }
    }
    NEW params {
        type = CONTAINERH;
        caption = 'Параметры';
        ADD PROPERTY(nameSupplierContractSku(c));
        ADD PROPERTY(nameCustomerContractSku(c));
        ADD PROPERTY(nameTypeContractSku(c));
        ADD PROPERTY(isDataDefaultContractSku(c));
    }
    ADD c.payment;
    NEW text {
        type = CONTAINERH;
        caption = 'Содержание';
        ADD PROPERTY(saveWordUserContractSku(c));
        ADD PROPERTY(openWordUserContractSku(c));
    }
    ADD PROPERTY(noteContract(c)) {
        panelLabelAbove = TRUE;
        fill = 1;
    }
    ADD functions.box;
}

editUserContractSku 'Редактировать' = ACTION EDITFORM UserContractSku;
editContract(userContractSku) += ACTION editUserContractSku(userContractSku);

addUserContractSkuSupplierCustomer 'Добавить' = ACTION (supplier, customer) NEWSESSION NESTED{
    FOR ADDOBJ uc = UserContractSku DO {
        supplierContractSku(uc) <- supplier;
        customerContractSku(uc) <- customer;
        FORM userContractSku OBJECTS c = uc MANAGESESSION DOCKEDMODAL;
    }
} IMAGE 'add.png' EDITKEY 'INSERT' HIDE TOOLBAR;

isUserContractSku (contractSku) = contractSku IS UserContractSku;

addUserContractSku 'Добавить' = ACTION ADDFORM UserContractSku;

EXTEND FORM contracts
    PROPERTIES(c) READONLY nameTypeContractSku
    PROPERTIES() addUserContractSku TODRAW c FORCE PANEL
;

FORM contractSkus 'Договоры на поставку'
    OBJECTS c = ContractSku
    PROPERTIES(c) READONLY nameSupplierContractSku, nameCustomerContractSku, nameTypeContractSku,
                  seriesNumberUserContractSku, dateFromContract, dateToContract,
                  nameCurrencyContract,  nameTypeExchangeContract, noteContract
    PROPERTIES  addUserContractSku() TODRAW c FORCE PANEL, editContract(c)

    DIALOG ContractSku OBJECT c
;

NAVIGATOR {
    stockMasterData {
        ADD contracts;
    }
}

// ----------------------------- Расширяем форму организаций ------------------------------------------- //

isCustomerLegalEntityUserContractSku(l,css) = isCustomerLegalEntity(l) AND isUserContractSku(css);
isSupplierLegalEntityUserContractSku(l,csc) = isSupplierLegalEntity(l) AND isUserContractSku(csc);
EXTEND FORM legalEntity

    OBJECTS css = UserContractSku FIXED GRID
    PROPERTIES(css) SHOWIF isCustomerLegalEntity(l) READONLY seriesNumberUserContractSku, nameTypeContractSku, dateFromContract,
                    dateToContract, nameCurrencyContract, noteContract
    PROPERTIES      SHOWIF isCustomerLegalEntity(l) addUserContractSkuSupplierCustomer(s, l) TODRAW css FORCE PANEL TOOLBAR
    PROPERTIES(css) SHOWIF isCustomerLegalEntity(l) EDITNESTEDFORM
    PROPERTIES(css) DELETESESSION SHOWIF isCustomerLegalEntityUserContractSku(l,css)
    
    FILTERS customerContractSku(css) == l,
            supplierContractSku(css) == s

//    FILTERGROUP filters
//        FILTER 'Есть договор' 'F10' countContractPartyAPartyB(s, l)

    OBJECTS csc = UserContractSku FIXED  GRID
    PROPERTIES(csc) SHOWIF isSupplierLegalEntity(l) READONLY seriesNumberUserContractSku, nameTypeContractSku, dateFromContract,
                    dateToContract, nameCurrencyContract, noteContract
    PROPERTIES SHOWIF isSupplierLegalEntity(l) addUserContractSkuSupplierCustomer(l, c) TODRAW csc FORCE PANEL TOOLBAR
    PROPERTIES(csc) SHOWIF isSupplierLegalEntity(l) EDITNESTEDFORM
    PROPERTIES(csc) DELETESESSION SHOWIF isSupplierLegalEntityUserContractSku(l,csc)
    FILTERS customerContractSku(csc) == c,
            supplierContractSku(csc) == l

//    FILTERGROUP filters
//        FILTER 'Есть договор' 'F8' countContractPartyAPartyB(l, c)
;

EXTEND DESIGN legalEntity {
    docPurchaseContainer {
        ADD css.box {
            caption = 'Договора на поставку';
        }
    }
    docSaleContainer {
        ADD csc.box {
            caption = 'Договора на поставку';
        }
    }
}
