MODULE StockMovement;

REQUIRE SkuLedger, EmployeeStock, PriceListLedger, StockDocumentSkuLedger;

NAMESPACE Stock;

// -------------------------------- Движение товара -------------------------- //

currentAccountPriceA 'Цена учетная' (Sku sku, Stock stock) = prevPriceA[PriceListType,Sku,Stock,DATETIME](SystemLedgerPriceListType.accountPriceListType, sku, stock, currentDateTime());
accountPriceA 'Цена учетная' (Sku sku, Stock stock, SkuLedger ledger) = prevPriceA[PriceListType,Sku,Stock,DATETIME](SystemLedgerPriceListType.accountPriceListType, sku, stock, dateTime(ledger));
accountPriceA 'Цена учетная' (Sku sku, SkuLedger ledger)= prevPriceA[PriceListType,Sku,Stock,DATETIME](SystemLedgerPriceListType.accountPriceListType, sku, stock(ledger), dateTime(ledger));

filterSkuLedgerDateFrom 'Дата с' = DATA LOCAL DATE ();
filterDateFrom (SkuLedger i) = date(i) >= filterSkuLedgerDateFrom() OR (i IS SkuLedger AND NOT filterSkuLedgerDateFrom());      

filterSkuLedgerDateTo 'Дата по' = DATA LOCAL DATE ();
filterDateTo (SkuLedger i) = date(i) <= filterSkuLedgerDateTo() OR (i IS SkuLedger AND NOT filterSkuLedgerDateTo());   

FORM movementSku 'Движение товара'
    OBJECTS s = Sku FIXED PANEL
    PROPERTIES(s) READONLY name
    PROPERTIES () filterSkuLedgerDateFrom, filterSkuLedgerDateTo
    
    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY numberDocument, seriesDocument, date, dateTime, description, nameOperationDocument, nameStock,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice, 
                             signedSum, balanceA
    PROPERTIES(s,bil) READONLY accountPriceA   
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show                    
    ORDER BY dateTime(bil)
    FILTERS sku(bil) == s,
            isPosted(bil),
            isCompanyStock(bil),
            filterDateFrom(bil),
            filterDateTo(bil)
;
DESIGN movementSku {
    main {
        NEW header {
            type = CONTAINERH;
            MOVE s.box{
                MOVE PROPERTY (name(s));
            }
            NEW filter {
                caption = 'Фильтры';
                type = CONTAINERH;
                MOVE PROPERTY (filterSkuLedgerDateFrom());
                MOVE PROPERTY (filterSkuLedgerDateTo());
            }
        }
        MOVE bil.box;
    }
    MOVE functions.box;
}

@extendFormFilterAccessStock(SkuLedger, bil, movementSku, stock, company);

FORM movementSkuStock 'Движение товара по складу'
    OBJECTS s = Sku FIXED PANEL
    PROPERTIES(s) READONLY name

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR name

    PROPERTIES () filterSkuLedgerDateFrom, filterSkuLedgerDateTo
    
    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY numberDocument, seriesDocument, date, dateTime, description, nameOperationDocument,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice,
                             signedSum , balanceA, priceA, sumA
    PROPERTIES(s,st,bil) READONLY accountPriceA                           
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show
    ORDER BY dateTime(bil)
    FILTERS sku(bil) == s,
            isPosted(bil),
            stock(bil)==st,
            isCompany(st),
            filterDateFrom(bil),
            filterDateTo(bil)            
;
DESIGN movementSkuStock {
    NEW topContainer{
        type = CONTAINERH;
        MOVE s.box;
        MOVE st.box;
        NEW filter {
            caption = 'Фильтры';
            type = CONTAINERH;
            MOVE PROPERTY (filterSkuLedgerDateFrom());
            MOVE PROPERTY (filterSkuLedgerDateTo());
        }
    }
    MOVE bil.box;
    MOVE functions.box;
}
@extendFormFilterStockAccess(st, movementSkuStock);

META defineMovementSku(detail, stockProp)
    showMovementSkuStock 'Показать движение товара по складу' (###detail detail) = ACTION
        FOR s == sku(detail) AND st == stockProp(detail) DO
            NEWSESSION FORM movementSkuStock OBJECTS s = s, st = st MODAL
    SHORTCUT nameSku[###detail];
    
    showMovementSku 'Показать движение товара' (###detail detail) = ACTION
        FOR s == sku(detail) DO
            NEWSESSION FORM movementSku OBJECTS s = s MODAL
    SHORTCUT nameSku[###detail];
END
META defineMovementSku(detail)
    showMovementSkuStock 'Показать движение товара по складу' (###detail detail) = ACTION 
        FOR s == sku(detail) DO
            NEWSESSION FORM movementSkuStock OBJECTS s = s MODAL
    SHORTCUT nameSku[###detail];
    
    showMovementSku 'Показать движение товара' (###detail detail) = ACTION 
        FOR s == sku(detail) DO
            NEWSESSION FORM movementSku OBJECTS s = s MODAL
    SHORTCUT nameSku[###detail];
END


FORM balancesSkuStock 'Остатки'
    OBJECTS s = Sku FIXED PANEL
    PROPERTIES(s) READONLY name

    OBJECTS st = Stock
    PROPERTIES(st) READONLY id, name
    PROPERTIES READONLY currentBalance(s,st), currentAccountPriceA(s,st)
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    ORDER BY id(st)
    FILTERS currentBalance(s,st),
            isCompany(st)
;
@extendFormFilterStockAccess(st, balancesSkuStock);

META defineBalancesSku(detail)
    showBalancesSkuStock 'Показать остатки товара' (###detail detail) = ACTION 
        FOR s == sku(detail) DO
            NEWSESSION FORM balancesSkuStock OBJECTS s = s MODAL
    SHORTCUT nameSku[###detail];
END

showMovementSku'Показать движение товара' (Sku sku) = ACTION NEWSESSION FORM movementSku OBJECTS s = sku MODAL SHORTCUT name[Sku];
showBalancesSku 'Показать остатки товара' (Sku sku) = ACTION NEWSESSION FORM balancesSkuStock OBJECTS s = sku MODAL SHORTCUT name[Sku];

// История по правой кнопке (два объекта)
showMovementSku 'Показать движение товара по складу' (Sku sku, Stock stock) = ACTION NEWSESSION FORM movementSkuStock OBJECTS s = sku, st = stock MODAL;
showBalanceMovementSku(Sku sku, Stock stock) += ACTION showMovementSku(sku, stock); 
showMovementSkuStocks 'Показать движение товара по складу' (Sku sku) = ACTION NEWSESSION FORM movementSkuStock OBJECTS s = sku MODAL;

// -------------------------------- Движение по партии -------------------------- //
balanceA 'Остаток (после)' (Batch batch, SkuLedger ledger) = balanceA(batch, stock(ledger), dateTime(ledger));
accountPriceA 'Цена учетная' (Batch batch, Stock stock, SkuLedger ledger)= prevPriceA[PriceListType,Batch,Stock,DATETIME](SystemLedgerPriceListType.accountPriceListType, batch, stock, dateTime(ledger));
accountPriceA 'Цена учетная' (Batch batch, SkuLedger ledger)= prevPriceA[PriceListType,Batch,Stock,DATETIME](SystemLedgerPriceListType.accountPriceListType, batch, stock(ledger), dateTime(ledger));

FORM movementBatch 'Движение по партии'
    OBJECTS bt = Batch FIXED PANEL
    PROPERTIES(bt) READONLY name, nameSku

    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY numberDocument, seriesDocument, dateTime, description, nameStock,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice, signedSum

    PROPERTIES      READONLY balanceA(bt,bil), accountPriceA(bt,bil)
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show        
    ORDER BY dateTime(bil)
    FILTERS cost(bil, bt) OR batch(bil)==bt,
            isPosted(bil),
            isCompanyStock(bil)

;
FORM movementBatchStock 'Движение по партии'
    OBJECTS bt = Batch FIXED PANEL
    PROPERTIES(bt) READONLY name, nameSku

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR name

    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY numberDocument, seriesDocument, dateTime, description,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity,
                             signedPrice, signedSum
    PROPERTIES      READONLY balanceA(bt,bil), accountPriceA(bt,st,bil)
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show 
    ORDER BY dateTime(bil)
    FILTERS cost(bil, bt) OR batch(bil)==bt,
            isPosted(bil),
            stock(bil)==st,
            isCompany(st)
;
DESIGN movementBatchStock {
    NEW topContainer{
        type = CONTAINERH;
        MOVE bt.box;
        MOVE st.box;
    }
    MOVE bil.box;
    MOVE functions.box;
}


META defineMovementBatch(detail, batchProp, stockProp)
    showMovement###batchProp##Stock 'Показать движение по партии и складу' (###detail detail) = ACTION
        FOR bt == batchProp(detail) AND st == stockProp(detail) DO
            NEWSESSION FORM movementBatchStock OBJECTS bt = bt, st = st MODAL
    SHORTCUT name###batchProp[###detail];
    
    showMovement###batchProp 'Показать движение по партии' (###detail detail) = ACTION
        FOR bt == batchProp(detail) DO
            NEWSESSION FORM movementBatch OBJECTS bt = bt MODAL
    SHORTCUT name###batchProp[###detail];
END
META defineMovementBatch(detail, stockProp)
    @defineMovementBatch(detail, batch, stockProp);
END

META defineMovementIdBatch(detail, batchProp, stockProp)
    showMovementId###batchProp##Stock 'Показать движение по партии и складу' (###detail detail) = ACTION
        FOR bt == batchProp(detail) AND st == stockProp(detail) DO
            NEWSESSION FORM movementBatchStock OBJECTS bt = bt, st = st MODAL
    SHORTCUT id###batchProp[###detail];
    
    showMovementId###batchProp 'Показать движение по партии' (###detail detail) = ACTION
        FOR bt == batchProp(detail) DO
            NEWSESSION FORM movementBatch OBJECTS bt = bt MODAL
    SHORTCUT id###batchProp[###detail];
END
META defineMovementIdBatch(detail, stockProp)
    @defineMovementIdBatch(detail, batch, stockProp);
END

FORM balancesBatchStock 'Остатки'
    OBJECTS bt = Batch FIXED PANEL
    PROPERTIES(bt) READONLY name, nameSku

    OBJECTS st = Stock
    PROPERTIES(st) READONLY id, name
    PROPERTIES READONLY currentBalance(bt,st), accountPriceA(bt,st)
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    ORDER BY id(st)
    FILTERS currentBalance(bt,st),
            isCompany(st)
;
META defineBalancesBatch(detail, batchProp)
    showBalances###batchProp##Stock 'Показать остатки по партии' (###detail detail) = ACTION
        FOR bt == batchProp(detail) DO
            NEWSESSION FORM balancesBatchStock OBJECTS bt = bt MODAL 
    SHORTCUT name###batchProp[###detail];
END
META defineBalancesBatch(detail)
    @defineBalancesBatch(detail, batch);
END

META defineBalancesIdBatch(detail, batchProp)
    showBalancesId###batchProp##Stock 'Показать остатки по партии' (###detail detail) = ACTION
        FOR bt == batchProp(detail) DO
            NEWSESSION FORM balancesBatchStock OBJECTS bt = bt MODAL
    SHORTCUT id###batchProp[###detail];
END
META defineBalancesIdBatch(detail)
    @defineBalancesIdBatch(detail, batch);
END

showMovementBatchStock 'Показать движение по партии и складу возникновения партии' (Batch batch) = ACTION
    FOR st == stock(batch) DO
        NEWSESSION FORM movementBatchStock OBJECTS bt = batch, st = st MODAL 
SHORTCUT name[Batch];
showMovementBatchStocks 'Показать движение по партии и складу' (Batch batch) = ACTION NEWSESSION FORM movementBatchStock OBJECTS bt = batch MODAL SHORTCUT name[Batch];
showMovementBatch 'Показать движение по партии' (Batch batch) = ACTION NEWSESSION FORM movementBatch OBJECTS bt = batch MODAL SHORTCUT name[Batch];
showBalancesBatchStock 'Показать остатки по партии' (Batch batch) = ACTION NEWSESSION FORM balancesBatchStock OBJECTS bt = batch MODAL SHORTCUT name[Batch];

showMovementBatch 'Показать движение по партии и складу' (Batch batch, Stock stock) = ACTION NEWSESSION FORM movementBatchStock OBJECTS bt = batch, st = stock MODAL;

showMovementBatchStockId 'Показать движение по партии и складу возникновения партии' (Batch batch) = ACTION
    FOR st == stock(batch) DO
        NEWSESSION FORM movementBatchStock OBJECTS bt = batch, st = st MODAL 
SHORTCUT id[Batch];

showMovementBatchStocksId 'Показать движение по партии и складу' (Batch batch) = ACTION NEWSESSION FORM movementBatchStock OBJECTS bt = batch MODAL SHORTCUT id[Batch];
showMovementBatchId 'Показать движение по партии' (Batch batch) = ACTION NEWSESSION FORM movementBatch OBJECTS bt = batch MODAL SHORTCUT id[Batch];
showBalancesBatchIdStock 'Показать остатки по партии' (Batch batch) = ACTION NEWSESSION FORM balancesBatchStock OBJECTS bt = batch MODAL SHORTCUT id[Batch];

showMovementSkuStock 'Показать движение товара по складу возникновения партии' (Batch batch) = ACTION
    FOR s == sku(batch) AND st == stock(batch) DO
        NEWSESSION FORM movementSkuStock OBJECTS s = s, st = st MODAL
SHORTCUT nameSku[Batch];

showMovementSkuStocks 'Показать движение товара по складу' (Batch batch) = ACTION
    FOR s == sku(batch) DO
        NEWSESSION FORM movementSkuStock OBJECTS s = s MODAL
SHORTCUT nameSku[Batch];

showMovementSku 'Показать движение товара' (Batch batch) = ACTION
    FOR s == sku(batch) DO
        NEWSESSION FORM movementSku OBJECTS s = s MODAL
SHORTCUT nameSku[Batch];

showMovementSku 'Показать движение товара по складу' (Batch batch, Stock stock) = ACTION
    FOR s == sku(batch) DO
        NEWSESSION FORM movementSkuStock OBJECTS s = s, st = stock MODAL;

@defineBalancesSku(batch); //-- показываем по нажатию правой клавиши остатки товара

EXTEND FORM currentBalanceSkuStock 
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show  
;
EXTEND FORM balanceSkuStock 
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show  
;
EXTEND FORM currentBalanceBatchStock 
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show  
;
EXTEND FORM balanceBatchStock 
    PROPERTIES(bil) edit SHOWIF allowedEdit(bil), show  
;
//-- печатная форма
FORM movementSkuStockPrint 'Движение товара по складу'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES valFrom = OBJVALUE(dFrom), valTo = OBJVALUE(dTo)
    
    OBJECTS s = Sku FIXED PANEL
    PROPERTIES(s) READONLY name, id, idBarcode

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR name

    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY numberDocument, seriesDocument, date, dateTime, description,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice,
                             signedSum , balanceA, balanceB
    PROPERTIES(s,st,bil) READONLY accountPriceA                           

    ORDER BY dateTime(bil)
    FILTERS sku(bil) == s,
            isPosted(bil),
            stock(bil)==st,
            isCompany(st),
            date(bil) >=dFrom,
            date(bil) <=dTo
;

FORM dialogPeriod 'Выбор периода'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) FIXED PANEL
    PROPERTIES objFrom = OBJVALUE(dFrom), objTo = OBJVALUE(dTo)
;

DESIGN dialogPeriod {
    MOVE dates.box { 
        caption = 'Период';
        PROPERTY (objFrom) {caption = 'Дата с'; font = 'bold 64';}
        PROPERTY (objTo) {caption = 'Дата по'; font = 'bold 64';}
    }
    MOVE functions.box;
}

movementPrint 'Движение товара' (Sku s,Stock st) = ACTION {
    FORM dialogPeriod MODAL;
    IF formResult() == FormResult.ok THEN { 
        FORM movementSkuStockPrint OBJECTS dFrom = chosenDate('dFrom'), dTo = chosenDate('dTo'), s = s, st = st PRINT;
    }
    
}IMAGE 'print.png' IN print;

EXTEND FORM  currentBalanceSkuStock
    PROPERTIES(s,st) movementPrint FORCE PANEL TOOLBAR TODRAW bil
;



