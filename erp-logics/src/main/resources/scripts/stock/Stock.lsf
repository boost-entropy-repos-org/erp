MODULE Stock;

REQUIRE System, MasterData, Utils, Hierarchy, LegalEntity, I18n, Geo, Employee, Finance, Dashboard;

// ----------------------------------- Склады ------------------------------------------ //
FORM customUsersDialog 'Пользователи' //-- todo: надо перенести в модуль Authentication
    OBJECTS u=CustomUser
    PROPERTIES(u) READONLY nameContact, loginCustomUser, emailContact
    PROPERTIES(u) ADDFORM, EDITFORM FORCE PANEL, DELETE FORCE PANEL TOOLBAR

    DIALOG CustomUser OBJECT u
;
DESIGN customUsersDialog { main{ preferredSize = (1024, 768); }}

FORM computersDialog 'Рабочие места'
    OBJECTS c = Computer
    PROPERTIES(c) READONLY hostnameComputer, scannerComPortComputer, scannerSingleReadComputer
    PROPERTIES(c) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG Computer OBJECT c     
;
DESIGN computersDialog { main{ preferredSize = (1024, 768); }}

CLASS ABSTRACT StockGroup 'Группа складов';
TABLE stockGroup (StockGroup);

nameStockGroup 'Наименование' = ABSTRACT VARISTRING[100](StockGroup);

TABLE stockGroupStockGroup(StockGroup, StockGroup);
@defineHierarchyAbstract(stockGroup);

@defineHierarchyPlain(stockGroup);

FORM stockGroups 'Группы складов'

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS g = StockGroup
    PROPERTIES(g) READONLY nameStockGroup
    ORDER BY nameStockGroup(g)
    FILTERS isParentStockGroupStockGroup(g, sg) OR (g IS StockGroup AND NOT sg)

    DIALOG StockGroup OBJECT g
;

DESIGN stockGroups {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE g.box {
                fill = 2;
                g.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(nameStockGroup(g)){
                    minimumCharWidth = 35;
                    preferredCharWidth = 35;
                }
            }
        }

        MOVE functions.box;
    }
}

CLASS ABSTRACT Stock 'Склад';
TABLE stock(Stock);
TABLE stockDate(Stock, DATE);

@defineExternalizableAbstract(stock, VARSTRING[100]);

nameStock 'Наименование' = ABSTRACT VARISTRING[150](Stock) PERSISTENT INDEXED MINCHARWIDTH 20 PREFCHARWIDTH 30;
fullNameStock 'Наименование полное' = ABSTRACT VARISTRING[150](Stock) PERSISTENT INDEXED MINCHARWIDTH 20 PREFCHARWIDTH 30;

stockGroupStock (stock) = ABSTRACT StockGroup (Stock) PERSISTENT INDEXED;
nameStockGroupStock 'Группа' (stock) = nameStockGroup(stockGroupStock (stock));

legalEntityStock (stock) = ABSTRACT LegalEntity (Stock) PERSISTENT INDEXED;
nameLegalEntityStock 'Компания' (stock) = nameLegalEntity(legalEntityStock(stock));
idLegalEntityStock 'Компания' (stock) = idLegalEntity(legalEntityStock(stock));

countStockLegalEntity 'Кол-во складов компании' = GROUP SUM 1 BY legalEntityStock(stock) PERSISTENT;

quantityDaysCloseOrdersStock 'Срок автоматического закрытия заказов' = ABSTRACT INTEGER(Stock) PERSISTENT;

isCompanyStock(stock) = isCompanyLegalEntity(legalEntityStock(stock));
isSupplierStock(stock) = isSupplierLegalEntity(legalEntityStock(stock));
isCustomerStock(stock) = isCustomerLegalEntity(legalEntityStock(stock));

legalEntityStockId (stock)= legalEntityStock(stockId(stock));

countCompanyStockStockGroup 'Кол-во складов' (stockGroup) = GROUP SUM 1 IF isCompanyStock(stock)
    AND isParentStockGroupStockGroup(stockGroupStock(stock), stockGroup)
    BY stockGroup PERSISTENT;

countSupplierStockStockGroup 'Кол-во складов' (stockGroup) = GROUP SUM 1 IF isSupplierStock(stock)
    AND isParentStockGroupStockGroup(stockGroupStock(stock), stockGroup)
    BY stockGroup PERSISTENT;

countCustomerStockStockGroup 'Кол-во складов' (stockGroup) = GROUP SUM 1 IF isCustomerStock(stock)
    AND isParentStockGroupStockGroup(stockGroupStock(stock), stockGroup)
    BY stockGroup PERSISTENT;

TABLE userLegalEntityStock (LegalEntity, Stock);
userLegalEntityStock 'Отм.' = ABSTRACT BOOLEAN (LegalEntity, Stock) PERSISTENT;
inLegalEntityStock 'Отм.' (legalEntity, stock) = (legalEntityStock(stock) == legalEntity) OR userLegalEntityStock(legalEntity, stock);
isDefaultLegalEntityStock 'Свой склад' (legalEntity, stock) = legalEntityStock(stock) == legalEntity;

counStocksLegalEntity (legalEntity) = GROUP SUM 1 IF inLegalEntityStock(legalEntity, stock) BY legalEntity;
defaultStockLegalEntity 'Склад по умолчанию' (legalEntity)= GROUP MIN stock IF inLegalEntityStock(legalEntity, stock) BY legalEntity;

currencyStock (stock) = currencyLegalEntity(legalEntityStock(stock)) PERSISTENT;
languageStock (stock) = languageLegalEntity(legalEntityStock(stock)) PERSISTENT;

EXTEND CLASS Stock : POI;

namePOI(poi) += nameStock(poi) IF poi IS Stock;

countryStock (stock) = countryLegalEntity(legalEntityStock(stock)) PERSISTENT;
nameCountryStock 'Страна' (stock) = nameCountry(countryStock(stock));
nameCountryPOI (poi) += nameCountryStock(poi);

addressStock 'Адрес' (stock) = ABSTRACT VARISTRING[100] (Stock) PERSISTENT;
addressPOI (poi) += addressStock(poi);

emailStock 'E-mail для заказов' (stock) = ABSTRACT VARSTRING[300] (Stock) PERSISTENT MINCHARWIDTH 30 PREFCHARWIDTH 50;

dataDefaultCompanyStock 'По умолч.' = DATA BOOLEAN (Stock); 

//latitudeStock 'Координата X' = DATA NUMERIC[10,5](Stock);
//longitudeStock 'Координата Y' = DATA NUMERIC[10,5](Stock);

//latitudePOI(stock) += latitudeStock(stock);
//longitudePOI(stock) += longitudeStock(stock);

TABLE stockGroupStock (StockGroup, Stock);
isParentStockGroupStock (stockGroup, stock) = isParentStockGroupStockGroup(stockGroupStock(stock), stockGroup) PERSISTENT;

GROUP committee 'Комиссии' : public;
GROUP responsibility 'Ответственные лица' : public;
GROUP bookkeeping 'Учет и цены' : public;

// Неактивный
inactiveStock 'Неактивный' = ABSTRACT BOOLEAN (Stock);
activeStock 'Активный' (st) = st IS Stock AND NOT inactiveStock(st);

// -------------------------------------- Регион ------------------------------- //

CLASS Region 'Регион';
TABLE region (Region);

nameRegion 'Наименование' = DATA VARISTRING[100](Region);

regionStock 'Регион' (stock) = ABSTRACT Region (Stock) PERSISTENT;
nameRegionStock 'Регион' (stock)= nameRegion(regionStock(stock)) MINCHARWIDTH 20 PREFCHARWIDTH 30;

FORM region 'Регион'
    OBJECTS r=Region FIXED PANEL
    PROPERTIES(r) nameRegion
    EDIT Region OBJECT r
;

FORM regions 'Регионы'
    OBJECTS r=Region
    PROPERTIES(r) READONLY nameRegion
    PROPERTIES(r) ADDFORM, EDITFORM, DELETE FORCE PANEL TOOLBAR
    DIALOG Region OBJECT r
;
DESIGN regions { main{ preferredSize = (600, 400); } }

// ---------------------------- Действия по редактированию складов ---------------------- //
editStock 'Редактировать' = ABSTRACT ACTION LIST (Stock) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;
editSessionStock 'Редактировать' = ABSTRACT ACTION LIST (Stock) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

// ----------------------------------------- Формы --------------------------------- //

FORM stocks 'Склады'

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY idStock, stockName = nameStock, nameLegalEntityStock, nameCountryStock, addressStock, emailStock
    PROPERTIES(s)          editStock
    ORDER BY stockName
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND NOT sg)

    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT    

    DIALOG Stock OBJECT s
;

DESIGN stocks {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(stockName){
                    minimumCharWidth = 35;
                    preferredCharWidth = 35;
                }
            }
        }

        MOVE functions.box;
    }
}

// ---------------------------------------------- Макросы для документов ------------------------------------------------- //

// Склады
META defineDocumentHeaderStock (object, stockClass, stockCaption, prefix)
    @defineDocumentHeaderStockInner (object, stockClass, ###stockClass, stockCaption, prefix);
END

META defineDocumentHeaderStockInner (object, stockClass, stockClassUpper, stockCaption, prefix)
    prefix###stockClass###object = DATA stockClassUpper(###object);
    name###prefix###stockClass###object stockCaption (object) = name###stockClass(prefix###stockClass###object(object)) IN documentHeader
            MINCHARWIDTH 20 PREFCHARWIDTH 20;
    fullName###prefix###stockClass###object stockCaption (object) = fullName###stockClass(prefix###stockClass###object(object)) IN documentHeader
            MINCHARWIDTH 20 PREFCHARWIDTH 20;
            
    prefix###legalEntityStock###object (object) = legalEntity###stockClass(prefix###stockClass###object(object));
    name###prefix###legalEntityStock###object 'Компания ('###stockCaption###')' (object) = nameLegalEntity(prefix###legalEntityStock###object (object));
    fullName###prefix###legalEntityStock###object 'Компания ('###stockCaption###') полное наим-ие' (object) = fullNameLegalEntity(prefix###legalEntityStock###object (object));       
    address###prefix###legalEntityStock###object 'Адрес компании ('###stockCaption###')' (object) = addressLegalEntity(prefix###legalEntityStock###object (object));

    address###prefix##Stock###object 'Адрес ('###stockCaption###')' (object) = address###stockClass(prefix###stockClass###object(object));

    prefix###country###object (object) = countryStock(prefix###stockClass###object(object));
END

META defineDocumentAbstractHeaderStock (object, stockClass, stockCaption, prefix)
    @defineDocumentAbstractHeaderStockInner(object, stockClass, ###stockClass, stockCaption, prefix);
END

META defineDocumentAbstractHeaderStockInner (object, stockClass, stockClassUpper, stockCaption, prefix)
    prefix###stockClass###object = ABSTRACT stockClassUpper(###object) PERSISTENT;
    name###prefix###stockClass###object stockCaption (object) = name###stockClass(prefix###stockClass###object(object)) IN documentHeader
            MINCHARWIDTH 20 PREFCHARWIDTH 20;
    fullName###prefix###stockClass###object stockCaption (object) = fullName###stockClass(prefix###stockClass###object(object)) IN documentHeader
            MINCHARWIDTH 20 PREFCHARWIDTH 20;
            
    prefix###legalEntityStock###object (object) = legalEntity###stockClass(prefix###stockClass###object(object));
    name###prefix###legalEntityStock###object 'Компания ('###stockCaption###')' (object) = nameLegalEntity(prefix###legalEntityStock###object (object));
    fullName###prefix###legalEntityStock###object 'Компания ('###stockCaption###') полное наим-ие' (object) = fullNameLegalEntity(prefix###legalEntityStock###object (object));
    address###prefix###legalEntityStock###object 'Адрес компании ('###stockCaption###')' (object) = addressLegalEntity(prefix###legalEntityStock###object (object));
    address###prefix##Stock###object 'Адрес ('###stockCaption###')' (object) = address###stockClass(prefix###stockClass###object(object));

    prefix###country###object (object) = countryStock(prefix###stockClass###object(object));
END
META defineDocumentInterfaceHeaderStock (object, stockClass, stockCaption, prefix)
    @defineDocumentAbstractHeaderStock (object, stockClass, stockCaption, prefix);
    @defineDocumentHeaderStock (user###object, stockClass, stockCaption, prefix);
    prefix###stockClass###object (object) += prefix###stockClass###user###object(object);
END

META defineDocumentHeaderStock (object, stockClass, stockCaption)
    @defineDocumentHeaderStock(object, stockClass, stockCaption, );
END
META defineDocumentAbstractHeaderStock (object, stockClass, stockCaption)
    @defineDocumentAbstractHeaderStock(object, stockClass, stockCaption, );
END
META defineDocumentInterfaceHeaderStock (object, stockClass, stockCaption)
    @defineDocumentInterfaceHeaderStock(object, stockClass, stockCaption, );
END

META defineDocumentDetailStock (object, detail, stockClass, stockProp, stockCaption)
    stockProp###detail (idetail) = stockProp###object(object###detail(idetail));
    name###stockProp###detail stockCaption (idetail) = name###stockClass(stockProp###detail(idetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;
    fullName###stockProp###detail stockCaption (idetail) = fullName###stockClass(stockProp###detail(idetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;    
    country###stockProp###detail (idetail) = countryStock(stockProp###detail(idetail));
    legalEntity###stockProp###detail (idetail) = legalEntity###stockClass(stockProp###detail(idetail));
    name###legalEntity###stockProp###detail 'Компания ('###stockCaption###')' (idetail) = nameLegalEntity(legalEntity###stockProp###detail (idetail));
    fullName###legalEntity###stockProp###detail 'Компания ('###stockCaption###') полное наим-ие' (idetail) = fullNameLegalEntity(legalEntity###stockProp###detail (idetail));
END
META defineDocumentDetailStock (object, stockProp, stockCaption)
    @defineDocumentDetailStock (object, object##Detail, stock, stockProp, stockCaption);
END

META defineDocumentDetailDataStock (object, detail, stockClass, stockProp, stockCaption)
    @defineDocumentDetailDataStockInner (object, detail, stockClass, ###stockClass, stockProp, stockCaption);
END

META defineDocumentDetailDataStockInner (object, detail, stockClass, stockClassUpper, stockProp, stockCaption)
    data###stockProp###detail = DATA stockClassUpper(###detail);
    stockProp###detail (idetail) = OVERRIDE stockProp###object(object###detail(idetail)), data###stockProp###detail(idetail) PERSISTENT;
    name###stockProp###detail stockCaption (idetail) = name###stockClass(stockProp###detail(idetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;
    fullName###stockProp###detail stockCaption (idetail) = fullName###stockClass(stockProp###detail(idetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;         
    country###stockProp###detail (idetail) = countryStock(stockProp###detail(idetail));
    legalEntity###stockProp###detail (idetail) = legalEntity###stockClass(stockProp###detail(idetail));
    name###legalEntity###stockProp###detail 'Компания ('###stockCaption###')' (idetail) = nameLegalEntity(legalEntity###stockProp###detail (idetail));
    fullName###legalEntity###stockProp###detail 'Компания ('###stockCaption###') полное наим-ие' (idetail) = fullNameLegalEntity(legalEntity###stockProp###detail (idetail));
    
END

META defineDocumentAbstractDetailDataStock (object, detail, stockClass, stockProp, stockCaption)
    @defineDocumentAbstractDetailDataStockInner (object, detail, stockClass, ###stockClass, stockProp, stockCaption);
END

META defineDocumentAbstractDetailDataStockInner (object, detail, stockClass, stockClassUpper, stockProp, stockCaption)
    data###stockProp###detail = ABSTRACT stockClassUpper(###detail) PERSISTENT;
    stockProp###detail (idetail) = OVERRIDE stockProp###object(object###detail(idetail)), data###stockProp###detail(idetail) PERSISTENT;
    name###stockProp###detail stockCaption (idetail) = name###stockClass(stockProp###detail(idetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;
    fullName###stockProp###detail stockCaption (idetail) = fullName###stockClass(stockProp###detail(idetail)) MINCHARWIDTH 10 PREFCHARWIDTH 20;      
    country###stockProp###detail (idetail) = countryStock(stockProp###detail(idetail));
    legalEntity###stockProp###detail (idetail) = legalEntity###stockClass(stockProp###detail(idetail));
    name###legalEntity###stockProp###detail 'Компания ('###stockCaption###')' (idetail) = nameLegalEntity(legalEntity###stockProp###detail (idetail));
    fullName###legalEntity###stockProp###detail 'Компания ('###stockCaption###')' (idetail) = fullNameLegalEntity(legalEntity###stockProp###detail (idetail));
    
END
META defineDocumentInterfaceDetailDataStock (object, detail, stockClass, stockProp, stockCaption)
    @defineDocumentAbstractDetailDataStock(object, detail, stockClass, stockProp, stockCaption);
    @defineDocumentDetailDataStock(user###object, user###detail, stockClass, stockProp, stockCaption);
    data###stockProp###detail (detail) += data###stockProp###user###detail (detail);
END

META defineDocumentDetailDataStock (object, stockClass, stockProp, stockCaption)
    @defineDocumentDetailDataStock (object, object##Detail, stockClass, stockProp, stockCaption);
END
META defineDocumentAbstractDetailDataStock (object, stockClass, stockProp, stockCaption)
    @defineDocumentAbstractDetailDataStock (object, object##Detail, stockClass, stockProp, stockCaption);
END
META defineDocumentInterfaceDetailDataStock (object, stockClass, stockProp, stockCaption)
    @defineDocumentInterfaceDetailDataStock (object, object##Detail, stockClass, stockProp, stockCaption);
END

META defineDocumentStock (object, stockClass, stockCaption, prefix)
    @defineDocumentHeaderStock(object, stockClass, stockCaption, prefix);
    @defineDocumentDetailStock(object, prefix###stockClass, stockCaption);
END
META defineDocumentAbstractStock (object, stockClass, stockCaption, prefix)
    @defineDocumentAbstractHeaderStock(object, stockClass, stockCaption, prefix);
    @defineDocumentDetailStock(object, prefix###stockClass, stockCaption);
END
META defineDocumentInterfaceStock (object, stockClass, stockCaption, prefix)
    @defineDocumentInterfaceHeaderStock(object, stockClass, stockCaption, prefix);
    @defineDocumentDetailStock(object, prefix###stockClass, stockCaption);
    @defineDocumentDetailStock(user###object, prefix###stockClass, stockCaption);
END

META defineDocumentDataStock (object, stockClass, stockCaption, prefix)
    @defineDocumentHeaderStock(object, stockClass, stockCaption, prefix);
    @defineDocumentDetailDataStock(object, stockClass, prefix###stockClass, stockCaption);
END
META defineDocumentAbstractDataStock (object, stockClass, stockCaption, prefix)
    @defineDocumentAbstractHeaderStock(object, stockClass, stockCaption, prefix);
    @defineDocumentAbstractDetailDataStock(object, stockClass, prefix###stockClass, stockCaption);
END
META defineDocumentInterfaceDataStock (object, stockClass, stockCaption, prefix)
    @defineDocumentInterfaceHeaderStock(object, stockClass, stockCaption, prefix);
    @defineDocumentInterfaceDetailDataStock(object, stockClass, prefix###stockClass, stockCaption);
END

META defineDocumentStock (object, stockClass, stockCaption)
    @defineDocumentStock(object, stockClass, stockCaption, );
END
META defineDocumentAbstractStock (object, stockClass, stockCaption)
    @defineDocumentAbstractStock(object, stockClass, stockCaption, );
END
META defineDocumentInterfaceStock (object, stockClass, stockCaption)
    @defineDocumentInterfaceStock(object, stockClass, stockCaption, );
END

META defineDocumentDataStock (object, stockClass, stockCaption)
    @defineDocumentDataStock(object, stockClass, stockCaption, );
END
META defineDocumentAbstractDataStock (object, stockClass, stockCaption)
    @defineDocumentAbstractDataStock(object, stockClass, stockCaption, );
END
META defineDocumentInterfaceDataStock (object, stockClass, stockCaption)
    @defineDocumentInterfaceDataStock(object, stockClass, stockCaption, );
END

// ---------------------------------------------- Агрегированные документы -------------------------------------------- //

// Склады
META defineDocumentAggregationHeaderStockPrefix (primObject, aggrObject, stockClass, stockProp, stockCaption, prefixP, prefixA)
    prefixA###stockProp###stockClass###aggrObject (object) = prefixP###stockProp###stockClass###primObject(primObject###aggrObject(object)) PERSISTENT;
    name###prefixA###stockProp###stockClass###aggrObject stockCaption (object) = name###stockClass(prefixA###stockProp###stockClass###aggrObject(object)) MINCHARWIDTH 20 PREFCHARWIDTH 40;
    fullName###prefixA###stockProp###stockClass###aggrObject stockCaption (object) = fullName###stockClass(prefixA###stockProp###stockClass###aggrObject(object)) MINCHARWIDTH 20 PREFCHARWIDTH 40;    
END
META defineDocumentAggregationHeaderStock (primObject, aggrObject, stockClass, stockProp, stockCaption)
    @defineDocumentAggregationHeaderStockPrefix (primObject, aggrObject, stockClass, stockProp, stockCaption, , );
END

META defineDocumentAggregationDetailStockPrefix (primObject, aggrObject, stockProp, stockCaption, prefixP, prefixA)
    prefixA###stockProp###aggrObject##Detail (detail) = prefixP###stockProp###primObject##Detail(primObject##Detail###aggrObject##Detail(detail)) PERSISTENT;
END
META defineDocumentAggregationDetailStock (primObject, aggrObject, stockProp, stockCaption)
    @defineDocumentAggregationDetailStockPrefix(primObject, aggrObject, stockProp, stockCaption, , );
END

META defineDocumentAggregationStockPrefix (primObject, aggrObject, stockProp, stockCaption, prefixP, prefixA)
    @defineDocumentAggregationHeaderStockPrefix(primObject, aggrObject, stock, stockProp, stockCaption, prefixP, prefixA);
    @defineDocumentAggregationDetailStockPrefix(primObject, aggrObject, stockProp###stock, stockCaption, prefixP, prefixA);
END
META defineDocumentAggregationStock (primObject, aggrObject, stockProp, stockCaption)
    @defineDocumentAggregationStockPrefix(primObject, aggrObject, stockProp, stockCaption, , );
END

// ---------------------------------- Диалоги по выбору складов поставщиков/компаний/покупателей когда есть организация --------------------------- //

FORM companyStocks 'Склады'
    OBJECTS l = LegalEntity FIXED PANEL

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY idStock, stockName = nameStock, nameLegalEntityStock, nameCountryStock, addressStock
    PROPERTIES(s)          editStock
    ORDER BY stockName
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND NOT sg),
            inLegalEntityStock(l,s),
            isCompanyStock(s)
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT        
;

DESIGN companyStocks {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
            }
        }

        MOVE functions.box;
    }
}

FORM supplierStocks 'Склады'
    OBJECTS l = LegalEntity FIXED PANEL

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY idStock, stockName = nameStock, nameLegalEntityStock, nameCountryStock, addressStock
    PROPERTIES(s)          editStock
    ORDER BY stockName
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND NOT sg),
            inLegalEntityStock(l,s),
            isSupplierStock(s)
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT        
;

DESIGN supplierStocks {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
            }
        }

        MOVE functions.box;
    }
}

FORM customerStocks 'Склады'
    OBJECTS l = LegalEntity FIXED PANEL

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY idStock, stockName = nameStock, nameLegalEntityStock, nameCountryStock, addressStock
    PROPERTIES(s)          editStock
    ORDER BY stockName
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND NOT sg),
            inLegalEntityStock(l,s),
            isCustomerStock(s)
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT        
;

DESIGN customerStocks {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(stockName){
                    minimumCharWidth = 40;
                    preferredCharWidth = 40;
                }
            }
        }

        MOVE functions.box;
    }
}

META defineDocumentDialogStock(objectClass, filter, prefix, dataProp)
    change###dataProp###prefix###stock###filter###objectClass = ACTION (o) {
        REQUEST OBJECT s
        IF dataProp###prefix###stock###objectClass(o) THEN {            
            FORM filter###stocks OBJECTS l = prefix###objectClass(o), s = dataProp###prefix###stock###objectClass(o) CONTEXTFILTER s = dataProp###prefix###stock###objectClass(o) DIALOG SHOWDROP;        
        } ELSE {
            FORM filter###stocks OBJECTS l = prefix###objectClass(o) CONTEXTFILTER s = dataProp###prefix###stock###objectClass(o) DIALOG SHOWDROP;        
        }
        IF formResult() == FormResult.ok THEN {
            dataProp###prefix###stock###objectClass(o) <- requestedObject();

        } ELSE IF formResult() == FormResult.drop THEN {
            dataProp###prefix###stock###objectClass(o) <- NULL;
        }
    }
END
META defineDocumentDialogStock(objectClass, filter, prefixA, prefixB, dataProp)
    change###dataProp###prefixA###stock###filter###objectClass = ACTION (o) {
        REQUEST OBJECT s
        IF dataProp###prefixA###stock###objectClass(o) THEN {            
            FORM filter###stocks OBJECTS l = prefixB###objectClass(o), s = dataProp###prefixA###stock###objectClass(o) CONTEXTFILTER s = dataProp###prefixA###stock###objectClass(o) DIALOG SHOWDROP;        
        } ELSE {
            FORM filter###stocks OBJECTS l = prefixB###objectClass(o) CONTEXTFILTER s = dataProp###prefixA###stock###objectClass(o) DIALOG SHOWDROP;        
        }
        IF formResult() == FormResult.ok THEN {
            dataProp###prefixA###stock###objectClass(o) <- requestedObject();

        } ELSE IF formResult() == FormResult.drop THEN {
            dataProp###prefixA###stock###objectClass(o) <- NULL;
        }
    }
END

META defineDocumentDialogSupplierCustomerStock(objectClass, supplierFilter, customerFilter)
    @defineDocumentDialogStock(objectClass, supplierFilter, supplier, );
    @defineDocumentDialogStock(objectClass, customerFilter, customer, );
END
META defineDocumentDialogSupplierCustomerStockDetail(objectClass, supplierFilter, customerFilter)
    @defineDocumentDialogStock(objectClass, supplierFilter, supplier, data);
    @defineDocumentDialogStock(objectClass, customerFilter, customer, data);
END

// -------- Диалоги по выбору складов поставщиков/компаний/покупателей когда нет организация ----------- //

FORM companysStock 'Склады'

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY idStock, stockName = nameStock, nameLegalEntityStock, nameCountryStock, addressStock
    PROPERTIES(s)          editStock
    ORDER BY stockName
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND NOT sg),
            isCompanyStock(s)

    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT        
;

DESIGN companysStock {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
            }
        }

        MOVE functions.box;
    }
}

FORM suppliersStock 'Склады'

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY idStock, stockName = nameStock, nameLegalEntityStock, nameCountryStock, addressStock
    PROPERTIES(s)          editStock
    ORDER BY stockName
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND NOT sg),
            isSupplierStock(s)
            
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT        
;

DESIGN suppliersStock {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
            }
        }

        MOVE functions.box;
    }
}

FORM customersStock 'Склады'

    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY idStock, stockName = nameStock, nameLegalEntityStock, nameCountryStock, addressStock
    PROPERTIES(s)          editStock
    ORDER BY stockName
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND NOT sg),
            isCustomerStock(s)
      
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT        
;

DESIGN customersStock {
    main{
        preferredSize = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE stockTree.tree.box {
                caption = 'Склады';
            }

            MOVE s.box {
                fill = 3;
                s.grid {
                    defaultComponent = TRUE;
                }
                PROPERTY(stockName){
                    minimumCharWidth = 40;
                    preferredCharWidth = 40;
                }
            }
        }

        MOVE functions.box;
    }
}

META defineDocumentDialogStocks(objectClass, stockClass, filter, prefix, dataProp)
    change###dataProp###prefix###stockClass###filter###objectClass = ACTION (o) {
        REQUEST OBJECT s
        IF dataProp###prefix###stockClass###objectClass(o) THEN {            
            FORM filter##s###stock OBJECTS s = dataProp###prefix###stockClass###objectClass(o) CONTEXTFILTER s = dataProp###prefix###stockClass###objectClass(o) DIALOG SHOWDROP;        
        } ELSE {
            FORM filter##s###stock CONTEXTFILTER s = dataProp###prefix###stockClass###objectClass(o) DIALOG SHOWDROP;        
        }
        IF formResult() == FormResult.ok THEN {
            dataProp###prefix###stockClass###objectClass(o) <- requestedObject();

        } ELSE IF formResult() == FormResult.drop THEN {
            dataProp###prefix###stockClass###objectClass(o) <- NULL;
        }
    }
END

// ------------------------------------------ Расширение формы организаций ---------------------------- //

FORM chooseStocks 'Выбор складов'

    OBJECTS l = LegalEntity FIXED PANEL
    
    TREE stockTree a = STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(a), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(a)

    OBJECTS s=Stock
    PROPERTIES(s) READONLY nameStock, addressStock, nameLegalEntityStock
    PROPERTIES userLegalEntityStock(l, s)
    ORDER BY nameStock(s)
    FILTERS isParentStockGroupStock(sg, s) OR (s IS Stock AND sg IS StockGroup AND NOT stockGroupStock(s)) OR (s IS Stock AND NOT sg)
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(s) 'ctrl F10' DEFAULT
;

DESIGN chooseStocks {
    MOVE l.box;
    NEW mainContainer{
        fill = 1;
        type = SPLITH;
        MOVE stockTree.tree.box;
        MOVE s.box { fill = 3; }
    }
    MOVE functions.box;
}

chooseStocksLegalEntity 'Выбрать склады' = ACTION (legalEntity) {

    FORM chooseStocks OBJECTS l = legalEntity MODAL;
}

EXTEND FORM legalEntity
    TREE stockTree b=STRING[3], sg = StockGroup PARENT parentStockGroup
    PROPERTIES READONLY OBJVALUE(b), sgTreeName = nameStockGroup(sg)
    ORDER BY sgTreeName
    FILTERS stringEqualsAll(b)

    OBJECTS st=Stock
    PROPERTIES(st) READONLY nameStock, idStock SHOWIF showIDs(), nameLegalEntityStock, nameCountryStock, addressStock
    PROPERTIES(st) FORCE PANEL TOOLBAR SHOWIF isDefaultLegalEntityStock(l,st) editSessionStock, DELETESESSION
    PROPERTIES chooseStocksLegalEntity(l) TODRAW st FORCE PANEL TOOLBAR
    FILTERS isParentStockGroupStock(sg, st) OR (st IS Stock AND NOT sg)
    FILTERS inLegalEntityStock(l, st)
    FILTERGROUP inactiveStock FILTER 'Активный' activeStock(st) 'ctrl F10' DEFAULT
    
    OBJECTS s=LegalEntity FIXED GRID
    PROPERTIES(s) READONLY nameLegalEntity  SHOWIF isCustomerLegalEntity(l)
    FILTERGROUP sinactiveLegalEntity FILTER 'Активная' activeLegalEntity(s) 'shift F10' DEFAULT
    OBJECTS c=LegalEntity FIXED GRID
    PROPERTIES(c) READONLY nameLegalEntity SHOWIF isSupplierLegalEntity(l)
    FILTERGROUP cinactiveLegalEntity FILTER 'Активная' activeLegalEntity(c) 'shift F10' DEFAULT
;

DESIGN legalEntity{
    extendContainer {
        NEW stockContainer {
            caption = 'Склады';
            type = CONTAINERH;
            type = SPLITH;
            MOVE stockTree.tree.box {
                fill = 1;
                caption = 'Группа складов';
            }
            MOVE st.box {
                fill = 3;
            }
        }

        NEW agreementPurchaseContainer {
            caption = 'Закупка';
            type = SPLITH;
            MOVE s.box { caption = 'Поставщики'; }
            NEW docPurchaseContainer {
                fill = 5;
                type = TABBED;
            }
        }

        NEW agreementSaleContainer {
            caption = 'Продажа';
            type = SPLITH;
            MOVE c.box { caption = 'Покупатели';}
            NEW docSaleContainer {
                fill = 5;
                type = TABBED;
            }
        }
    }
}

EXTEND FORM legalEntities
    PROPERTIES(l) READONLY countStockLegalEntity
;


//----------------------Отображать на формах списков документы, которые не закрыты---------------//
META defineFilterIsOpened (object, form, obj)   
    EXTEND FORM form
        FILTERGROUP object##filters6 FILTER 'Открыт' isOpened###object(obj) 'F6' DEFAULT
    ;   
END 



NAVIGATOR {
    NEW stockNavigator 'Склад' BEFORE financeNavigator WINDOW toolbar IMAGE '/images/warehouse.png' {
        NEW stockReports 'Отчеты';
        NEW stockMasterData 'Справочники';
    }
}

NAVIGATOR {
    dashboardNavigator {
        NEW stockDashboardNavigator 'Склад' {
        }
    }    
}

DESIGN options {
    pane {
        NEW stock {
            caption = 'Склад';
            NEW stock1 {
            
            }
        }
    }
}

// ----------------------------------- Стандартные данные ----------------------------------- //

loadDefaultStockGroups 'Загрузить стандарные группы складов' () = ABSTRACT ACTION LIST () IN loadDefault;

@implementLoadDefaultData(loadDefaultStockGroups);

//---------------- Подсветка отмеченных групп ---------------//
//-- С фильтром
META defineBackgroundNearestBoolean(allProp, property, object1, object2, object2Class, nearestProp, filterProp)

    background###allProp###object1 'Цвет' (o) = RGB(0,0,0) IF allProp###object1(o);
    
    background###property###object1###object2###group 'Цвет' (o, sg) = IF data###property###object1###object2###group(o, sg) THEN RGB(0,0,0)
        ELSE RGB(230,248,250) 
        IF (OVERRIDE allProp###object1(o) IF sg IS object2Class###group, nearestProp###object1###object2###group (o, sg));    
        
    background###property###object1###object2 'Цвет' (o, st) = IF data###property###object1###object2(o, st) AND filterProp###object2(st) THEN RGB(0,0,0)
        ELSE RGB(230,248,250) 
        IF property###object1###object2###group(o, object2###group###object2(st)) AND filterProp###object2(st);    
END
META defineBackgroundNearestBoolean(allProp, property, object1, object2, nearestProp, filterProp)

    @defineBackgroundNearestBoolean(allProp, property, object1, object2, ###object2, nearestProp, filterProp); 
END
