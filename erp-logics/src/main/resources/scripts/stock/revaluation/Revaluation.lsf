MODULE Revaluation;

REQUIRE RepricingCommittee, StockDocument, PriceListCalc, Terminal, PriceListLedger, RevaluationOperation;

NAMESPACE Revaluation;

//----------------------------------------------- Переоценка (опт) ---------------------------------------------------//

CLASS ABSTRACT Revaluation 'Переоценка';
CLASS ABSTRACT RevaluationDetail 'Строка переоценки': InLIFOSkuLedger;

CLASS UserRevaluation 'Переоценка (польз.)' : Revaluation;
CLASS UserRevaluationDetail 'Строка переоценки (польз.)' : RevaluationDetail;

@defineDocumentInterface(revaluation);
@deriveDocumentHeaderTimePrefix(UserRevaluation, );

@defineDocumentInterfaceTimePrefix(revaluation, before, ' документа (до)');
@deriveDocumentHeaderTimePrefix(UserRevaluation, before);

@defineDocumentInterfaceNumber(revaluation);
@defineNumeratedDefault(UserRevaluation, 'Переоценки', 'ПО');

@defineDocumentInterfaceDataStock(revaluation, stock, 'Склад');

CONSTRAINT stockUserRevaluation(r) AND NOT  isCompanyStock(stockUserRevaluation(r))
    CHECKED BY stockUserRevaluation
    MESSAGE 'Выбран склад, который не принадлежит компании';
    
@defineDocumentInterfacePosted(revaluation);
@defineDocumentInterfaceClosed(revaluation);
@defineCloseActionDocument(revaluation);

@defineDocumentInterfaceDescription(revaluation, 'Переоценка');

@defineDocumentInterfaceCurrency(revaluation);
@deriveDocumentCurrency(userRevaluation, stock);

// Комиссия
@defineDocumentInterfaceHeaderRepricingCommittee (revaluation, stock);

// Sku
@defineDocumentInterfaceDetailSku(revaluation, sku);

// Кол-во
@defineDocumentInterfaceDetailQuantity(revaluation);

// Партия
@defineDocumentInterfaceDetailBatch(revaluation, batch);

changeBatchUserRevaluationDetail = ACTION (userRevaluationDetail) {
    FORM dialogBatchStock OBJECTS st = stockUserRevaluationDetail(userRevaluationDetail),
                             t = dateTimeUserRevaluationDetail(userRevaluationDetail),
                             sk = skuUserRevaluationDetail(userRevaluationDetail) MODAL SHOWDROP;

    IF formResult() == FormResult.ok THEN {
        ASSIGN batchUserRevaluationDetail(userRevaluationDetail) <- chosenObject('bt');
    } ELSE IF formResult() == FormResult.drop THEN {
        ASSIGN batchUserRevaluationDetail(userRevaluationDetail) <- NULL;
    }

}

// -- До

// Цена учетная
@defineDocumentInterfaceDetailPricePrefix(revaluation, cur, ' учетная до');

// Автоматическое заполнение цен до
@deriveDocumentDetailPriceSystemLedgerPriceListTypeBatch(userRevaluation, accountPriceListType, cur, sku, stock);

// -- После

// Цена учетная
@defineDocumentInterfaceDetailPricePrefix(revaluation, , ' учетная после');

// ---- Суммы по строкам ---- //

// -- До
@defineDocumentInterfaceDetailDataSumPrefix (revaluation, cur, ' учетная до');

// -- После
@defineDocumentInterfaceDetailDataSumPrefix (revaluation, , ' учетная после');

// -- Разница
@defineDocumentInterfaceDetailDiffSumPrefix (revaluation, sum, , cur, ' изменения учетной ');

// -- До
@deriveDocumentDetailSumPrefix(userRevaluation, cur, currency, quantity);

// -- После
@deriveDocumentDetailSumPrefix(userRevaluation, , currency, quantity);

// ---- Суммы по документу ---- //

@defineDocumentInterfaceHeaderQuantity(revaluation);
@defineDocumentHeaderSkuQuantity(revaluation, sku);
@defineDocumentHeaderSkuQuantity(userRevaluation, sku);

// -- До
@defineDocumentInterfaceHeaderSumPrefix (revaluation, cur, ' учетная  до');

// -- После
@defineDocumentInterfaceHeaderSumPrefix (revaluation, , ' учетная после');

// -- Разница
@defineDocumentInterfaceHeaderSumPrefix (revaluation, diff, ' изменения учетной');

// Изменение сумм по товару и таре
@defineDocumentInterfaceHeaderItemSum(revaluation, diff, diff);

// Действия по добавлению строк
@defineAddDetailDialogSkuStock(userRevaluation, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(userRevaluation, sku);
@defineAddDetailDialogTerminal(userRevaluation, sku);

// Не изменять текущие цены
@defineDocumentInterfaceHeaderSkip(Revaluation, changeLedger, 'Не изменять текущие цены');
@defineDocumentInterfaceDetailSkip(revaluation, changeLedger, 'Не изменять текущие цены');

// Проведение по регистру
@implementSkuLedger(revaluationDetail, sku, stock);
sumInSkuLedger (ledger) += diffSumRevaluationDetail(ledger);
seriesDataSkuLedger (ledger) += seriesRevaluation(revaluationRevaluationDetail(ledger));
numberDataSkuLedger (ledger) += numberRevaluation(revaluationRevaluationDetail(ledger));

batchSkuLedger(ledger) += batchRevaluationDetail(ledger);

editRevaluation 'Редактировать' = ABSTRACT ACTION LIST (Revaluation) IMAGE 'edit.png' EDITKEY 'BACK_SPACE' HIDE TOOLBAR;

//------------------------------------ Печатные формы акт расценки ------------------------------------------------ //

FORM revaluation 'Переоценка (печать)'

    OBJECTS p = Revaluation FIXED PANEL
    PROPERTIES (p) SELECTOR isPostedRevaluation

    PROPERTIES (p) numberRevaluation, seriesRevaluation, dateRevaluation, timeRevaluation, beforeDateRevaluation, nameStockRevaluation,
                   diffSumRevaluationDetailRevaluation, curSumRevaluationDetailRevaluation, sumRevaluationDetailRevaluation,
                   quantityRevaluationDetailRevaluation, countRevaluationDetailRevaluation,
                   nameRepricingCommitteeRevaluation, skipChangeLedgerRevaluation,
                   noteRevaluation, numberDisposalRevaluation, repricingCommitteeRevaluation, nameEmployeeCommitteeRevaluation,
                   nameChairmanRevaluation, namePositionChairmanRevaluation

    OBJECTS d = RevaluationDetail
    PROPERTIES (d) indexRevaluationDetail, idBarcodeSkuRevaluationDetail, nameSkuRevaluationDetail,
                   shortNameUOMSkuRevaluationDetail, nameBatchRevaluationDetail, quantityRevaluationDetail,
                   curPriceRevaluationDetail, curSumRevaluationDetail,
                   priceRevaluationDetail, sumRevaluationDetail, diffSumRevaluationDetail

    OBJECTS e=Employee
    PROPERTIES(e) READONLY   nameContact, namePositionEmployee

    FILTERS    revaluationRevaluationDetail(d) == p,
               inCommitteeRevaluationEmployee(p, e)

;

printRevaluation 'Переоценка' (revaluation) = ACTION FORM revaluation OBJECTS p = revaluation PRINT  IMAGE 'print.png' IN print;

// --------------------------- Формы --------------------------------- //

FORM userRevaluation 'Переоценка'
    OBJECTS p=UserRevaluation FIXED PANEL
    PROPERTIES (p) isPostedUserRevaluation, nameNumeratorUserRevaluation, numberUserRevaluation, seriesUserRevaluation,
                   dateUserRevaluation, timeUserRevaluation, beforeDateUserRevaluation, nameStockUserRevaluation,
                   diffSumUserRevaluationDetailUserRevaluation, noteUserRevaluation, numberDisposalUserRevaluation,
                   nameRepricingCommitteeUserRevaluation, skipChangeLedgerUserRevaluation

    OBJECTS d=UserRevaluationDetail
    PROPERTIES (d) indexUserRevaluationDetail, idBarcodeSkuUserRevaluationDetail, nameSkuUserRevaluationDetail,
                   shortNameUOMSkuUserRevaluationDetail, nameBatchUserRevaluationDetail ON CHANGE changeBatchUserRevaluationDetail(d), quantityUserRevaluationDetail,
                   curPriceUserRevaluationDetail, curSumUserRevaluationDetail,
                   priceUserRevaluationDetail, sumUserRevaluationDetail, ADDOBJ, deleted=DELETESESSION

    PROPERTIES(p) TODRAW d addDetailDialogSkuStockUserRevaluationDetailUserRevaluation, addDetailDialogTerminalUserRevaluationDetailUserRevaluation,
                           addDetailInputBarcodeUserRevaluationDetailUserRevaluation, deleteUserRevaluationDetailUserRevaluation

    FILTERS userRevaluationUserRevaluationDetail(d)==p

    EVENTS
        ON OK prePostUserRevaluation(p)

    EDIT UserRevaluation OBJECT p
;

DESIGN userRevaluation FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW header.box {

            ADD p.documentHeader {
                type = CONTAINERH;
                ADD PROPERTY(isPostedUserRevaluation) { preferredCharWidth = 10; }
                ADD PROPERTY(nameStockUserRevaluation);
                ADD PROPERTY(nameNumeratorUserRevaluation);
                ADD PROPERTY(numberUserRevaluation);
                ADD PROPERTY(seriesUserRevaluation);
                ADD PROPERTY(dateUserRevaluation);
                ADD PROPERTY(timeUserRevaluation);
                ADD PROPERTY(beforeDateUserRevaluation);
            }

            NEW headerCol1 {
                type = CONTAINERH;
                ADD p.documentPrm {
                    columns = 2;
                }
                ADD p.documentSum {
                    columns = 1;
                }
            }
        }

        NEW specification.box {
            fill = 1;
            ADD d.box {
                caption = 'Спецификация';
            }
        }

        ADD functions.box;

        PROPERTY(formOk) {
            caption = 'Провести';
        }
        PROPERTY(diffSumUserRevaluationDetailUserRevaluation) { preferredCharWidth = 13;}          
    }
}

@defineDocumentSkuPriceListTypeSystemLedger(userRevaluation, accountPriceListType, stock, );
@extendFormDocumentSku(userRevaluation, userRevaluation, p);

@defineDocumentBatchPriceListTypeSystemLedger(userRevaluation, accountPriceListType, stock, );
@extendFormDocumentBatch(userRevaluation, userRevaluation, p);

EXTEND FORM userRevaluation

    FILTERGROUP filter
        FILTER 'С остатком ' 'F10' currentBalanceSkuUserRevaluation(ks, p) DEFAULT
        FILTER 'В документе ' 'F9' quantityUserRevaluationDetailSkuUserRevaluation(ks, p)
;

EXTEND FORM userRevaluation

    FILTERGROUP filter1
        FILTER 'С остатком ' 'F10' prevCurrentBalanceBatchUserRevaluation(b, p) DEFAULT
        FILTER 'В документе ' 'F9' quantityUserRevaluationDetailBatchUserRevaluation(b, p)
;

addUserRevaluation 'Добавить' = ACTION ADDFORM UserRevaluation;
editUserRevaluation 'Редактировать' (userRevaluation) = ACTION EDITFORM UserRevaluation;

editRevaluation (revaluation) += editUserRevaluation(revaluation);
isUserOpenedRevaluation(r)=  isOpenedRevaluation(r) AND isUserRevaluation(r);

FORM revaluations 'Переоценки' TITLE 'Переоценки'
    OBJECTS p = Revaluation    

    PROPERTIES (p) READONLYIF isReadonly() isClosedRevaluation, isPostedRevaluation, numberRevaluation, seriesRevaluation, 
                   dateRevaluation, timeRevaluation, beforeDateRevaluation, nameStockRevaluation
    PROPERTIES (p) READONLY countRevaluationDetailRevaluation, diffSumRevaluationDetailRevaluation
    PROPERTIES (p) READONLYIF isReadonly() numberDisposalRevaluation, skipChangeLedgerRevaluation, noteRevaluation

    PROPERTIES (p) READONLY FORCE PANEL createdNameUserUserRevaluation, createdTimeUserRevaluation, createdHostnameComputerUserRevaluation, 
                                        postedNameUserUserRevaluation, postedTimeUserRevaluation, postedHostnameComputerUserRevaluation

    PROPERTIES ()  addUserRevaluation TODRAW p
    PROPERTIES (p) editRevaluation SHOWIF isOpenedRevaluation(p)
    PROPERTIES (p) closeUserRevaluation SHOWIF isOpenedUserRevaluation(p), openUserRevaluation SHOWIF isClosedUserRevaluation(p)

    PROPERTIES (p) deletep=DELETE FORCE PANEL TOOLBAR SHOWIF isUserOpenedRevaluation(p)      
    PROPERTIES (p) printRevaluation FORCE PANEL


    OBJECTS d = RevaluationDetail
    PROPERTIES (d) READONLY indexRevaluationDetail, idBarcodeSkuRevaluationDetail, nameSkuRevaluationDetail, shortNameUOMSkuRevaluationDetail, nameBatchRevaluationDetail,
                   quantityRevaluationDetail, curPriceRevaluationDetail, curSumRevaluationDetail, priceRevaluationDetail, sumRevaluationDetail

    FILTERS revaluationRevaluationDetail(d) == p
;
@extendFormFilterAccessStock(Revaluation, p, revaluations, stock, company);

DESIGN revaluations FROM DEFAULT {
    NEW documentContainer {
        fill = 1;
        type = SPLITV;

        ADD p.box {
            fill = 2;
        }

        NEW documentDetail {
            fill = 1;
            type = TABBED;

            ADD d.box {
                caption = 'Спецификация';
            }
            NEW documentHistory {
                caption = 'История';

                ADD p.created;
                ADD p.posted;
            }
            NEW printTab {
                caption = 'Печатные формы';
                ADD p.print;
            }
            NEW actionContainer {
                caption = 'Действия';
                type = CONTAINERH;
                NEW createdContainer {
                    caption = 'Создание на основе';
                }
                NEW machineryContainer {
                    caption = 'Загрузка';
                }
            }
        }
    }

    ADD functions.box;
}
@extendFormEditable(revaluations);
@defineFilterIsOpened (revaluation, revaluations, p);
//----------------------------------------------- Операции -----------------------------------------------------//

@defineDocumentInterfaceOperation (revaluation, Revaluation, );

operationSkuLedger(ledger)+= operationRevaluation(revaluationRevaluationDetail(ledger));

@defineDocumentOperationRolePrefix(userRevaluation, );

EXTEND FORM userRevaluation
    PROPERTIES(p) nameOperationUserRevaluation
;
EXTEND DESIGN userRevaluation{
    p.documentPrm{
        ADD PROPERTY (nameOperationUserRevaluation) BEFORE PROPERTY(noteUserRevaluation);
    }
}
EXTEND FORM revaluations
    PROPERTIES(p) READONLY nameOperationRevaluation AFTER nameStockRevaluation
;

NAVIGATOR {
    revaluationNavigator {
        ADD revaluations BEFORE repricingCommitteeDialog;
        ADD Revaluation.operations AFTER repricingCommitteeDialog;
    }
}

// ---------------------------- Создание PriceList ----------------------------------- //

EXTEND CLASS RevaluationDetail : PriceListLedger;

fromDateTimePriceListLedger (ledger) += dateTimeRevaluationDetail(ledger);

isPostedPriceListLedger(ledger) += isPostedRevaluationDetail(ledger);
skipPriceListLedger(ledger) += skipChangeLedgerRevaluationDetail(ledger);

skuPriceListLedger (ledger) += skuRevaluationDetail(ledger);

descriptionPriceListLedger (ledger) += descriptionRevaluationDetail(ledger);

inPriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(priceRevaluationDetail(ledger)) AND type == SystemLedgerPriceListType.accountPriceListType THEN TRUE;
pricePriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(priceRevaluationDetail(ledger)) AND type == SystemLedgerPriceListType.accountPriceListType THEN priceRevaluationDetail(ledger);

inPriceListLedgerStock (ledger, stock) += stockRevaluationDetail(ledger) == stock;
inPriceListLedgerBatch (ledger, batch) += batchRevaluationDetail(ledger) == batch; 

