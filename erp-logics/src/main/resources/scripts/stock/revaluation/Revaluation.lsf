MODULE Revaluation;

REQUIRE RepricingCommittee, StockDocument, PriceListCalc, Terminal, PriceListLedger, RevaluationOperation;

NAMESPACE Revaluation;

//----------------------------------------------- Переоценка (опт) ---------------------------------------------------//

CLASS ABSTRACT Revaluation 'Переоценка';
CLASS ABSTRACT RevaluationDetail 'Строка переоценки': InLIFOSkuLedger;

CLASS UserRevaluation 'Переоценка (польз.)' : Revaluation, Historizable, NumeratedDocument;
CLASS UserRevaluationDetail 'Строка переоценки (польз.)' : RevaluationDetail;
CLASS UserRevaluationPosted 'Проведенная переоценки (польз.)' : UserRevaluation, PostedObject;

@defineDocumentInterface(revaluation);

@defineDocumentInterfaceTimePrefix(revaluation, before, ' документа (до)');

@defineDocumentInterfaceNumber(revaluation);

@defineDocumentInterfaceDataStock(revaluation, stock, 'Склад');
@defineDocumentInterfacePosted(revaluation);

@defineDocumentInterfaceDescription(revaluation, 'Переоценка');

@defineDocumentInterfaceCurrency(revaluation);
@deriveDocumentCurrency(userRevaluation, stock);

// Комиссия
@defineDocumentInterfaceHeaderRepricingCommittee (revaluation, stock);

// Sku
@defineDocumentInterfaceDetailSku(revaluation, sku);

// Кол-во
@defineDocumentInterfaceDetailQuantity(revaluation);

// Партия
@defineDocumentInterfaceDetailBatch(revaluation, batch);

changeBatchUserRevaluationDetail = ACTION (userRevaluationDetail) {
    FORM dialogBatchStock OBJECTS st = stockUserRevaluationDetail(userRevaluationDetail),
                             t = dateTimeUserRevaluationDetail(userRevaluationDetail),
                             sk = skuUserRevaluationDetail(userRevaluationDetail) MODAL SHOWDROP;

    IF formResult() == FormResult.ok THEN {
        ASSIGN batchUserRevaluationDetail(userRevaluationDetail) <- chosenObject('bt');
    } ELSE IF formResult() == FormResult.drop THEN {
        ASSIGN batchUserRevaluationDetail(userRevaluationDetail) <- NULL;
    }

}

// -- До

// Цена учетная
@defineDocumentInterfaceDetailPricePrefix(revaluation, cur, ' учетная до');

// Автоматическое заполнение цен до
@deriveDocumentDetailPriceSystemLedgerPriceListTypeBatch(userRevaluation, accountPriceListType, cur, sku, stock);

// -- После

// Цена учетная
@defineDocumentInterfaceDetailPricePrefix(revaluation, , ' учетная после');

// ---- Суммы по строкам ---- //

// -- До
@defineDocumentInterfaceDetailDataSumPrefix (revaluation, cur, ' учетная до');

// -- После
@defineDocumentInterfaceDetailDataSumPrefix (revaluation, , ' учетная после');

// -- Разница
@defineDocumentInterfaceDetailDiffSumPrefix (revaluation, sum, , cur, ' изменения учетной ');

// -- До
@deriveDocumentDetailSumPrefix(userRevaluation, cur, currency, quantity);

// -- После
@deriveDocumentDetailSumPrefix(userRevaluation, , currency, quantity);

// ---- Суммы по документу ---- //

@defineDocumentInterfaceHeaderQuantity(revaluation);
@defineDocumentHeaderSkuQuantity(revaluation, sku);
@defineDocumentHeaderSkuQuantity(userRevaluation, sku);

// -- До
@defineDocumentInterfaceHeaderSumPrefix (revaluation, cur, ' учетная  до');

// -- После
@defineDocumentInterfaceHeaderSumPrefix (revaluation, , ' учетная после');

// -- Разница
@defineDocumentInterfaceHeaderSumPrefix (revaluation, diff, ' изменения учетной');

// Изменение сумм по товару и таре
@defineDocumentInterfaceHeaderItemSum(revaluation, diff, diff);

// Действия по добавлению строк
@defineAddDetailDialogSkuStock(userRevaluation, sku, stock, dialogSku);
@defineAddDetailDialogBarcode(userRevaluation, sku);
@defineAddDetailDialogTerminal(userRevaluation, sku);

// Не изменять текущие цены
@defineDocumentInterfaceHeaderSkip(Revaluation, changeLedger, 'Не изменять текущие цены');
@defineDocumentInterfaceDetailSkip(revaluation, changeLedger, 'Не изменять текущие цены');

// Проведение по регистру
@implementSkuLedger(revaluationDetail, sku, stock);
sumInSkuLedger (ledger) += diffSumRevaluationDetail(ledger);
seriesDataSkuLedger (ledger) += seriesRevaluation(revaluationRevaluationDetail(ledger));
numberDataSkuLedger (ledger) += numberRevaluation(revaluationRevaluationDetail(ledger));

//------------------------------------ Печатные формы акт расценки ------------------------------------------------ //

FORM revaluation 'Переоценка (печать)' PRINT

    OBJECTS p = Revaluation FIXED PANEL
    PROPERTIES (p) SELECTOR objectClassName

    PROPERTIES (p) numberRevaluation, seriesRevaluation, dateRevaluation, timeRevaluation, beforeDateRevaluation, nameStockRevaluation,
                   diffSumRevaluationDetailRevaluation, curSumRevaluationDetailRevaluation, sumRevaluationDetailRevaluation,
                   quantityRevaluationDetailRevaluation, countRevaluationDetailRevaluation,
                   nameRepricingCommitteeRevaluation, skipChangeLedgerRevaluation,
                   noteRevaluation, numberDisposalRevaluation, repricingCommitteeRevaluation, nameEmployeeCommitteeRevaluation,
                   nameChairmanRevaluation, namePositionChairmanRevaluation

    OBJECTS d = RevaluationDetail
    PROPERTIES (d) indexRevaluationDetail, idBarcodeSkuRevaluationDetail, nameSkuRevaluationDetail,
                   shortNameUOMSkuRevaluationDetail, nameBatchRevaluationDetail, quantityRevaluationDetail,
                   curPriceRevaluationDetail, curSumRevaluationDetail,
                   priceRevaluationDetail, sumRevaluationDetail, diffSumRevaluationDetail

    OBJECTS e=Employee
    PROPERTIES(e) READONLY   nameContact, namePositionEmployee

    FILTERS    revaluationRevaluationDetail(d) == p,
               inCommitteeRevaluationEmployee(p, e)

;

printRevaluation 'Переоценка' (revaluation) = ACTION FORM revaluation OBJECTS p = revaluation IMAGE 'print.png' IN printGroup;

// --------------------------- Формы --------------------------------- //

FORM userRevaluation 'Переоценка'
    OBJECTS p=UserRevaluation FIXED PANEL
    PROPERTIES (p) objectClassName, nameNumeratorObject, numberObject, seriesObject,
                   dateUserRevaluation, timeUserRevaluation, beforeDateUserRevaluation, nameStockUserRevaluation,
                   diffSumUserRevaluationDetailUserRevaluation, noteUserRevaluation, numberDisposalUserRevaluation,
                   nameRepricingCommitteeUserRevaluation, skipChangeLedgerUserRevaluation

    OBJECTS d=UserRevaluationDetail
    PROPERTIES (d) indexUserRevaluationDetail, idBarcodeSkuUserRevaluationDetail, nameSkuUserRevaluationDetail,
                   shortNameUOMSkuUserRevaluationDetail, nameBatchUserRevaluationDetail ON CHANGE changeBatchUserRevaluationDetail(d), quantityUserRevaluationDetail,
                   curPriceUserRevaluationDetail, curSumUserRevaluationDetail,
                   priceUserRevaluationDetail, sumUserRevaluationDetail, ADDOBJ, DELETESESSION

    PROPERTIES(p) TODRAW d addDetailDialogSkuStockUserRevaluationDetailUserRevaluation, addDetailDialogTerminalUserRevaluationDetailUserRevaluation,
                           addDetailInputBarcodeUserRevaluationDetailUserRevaluation, deleteUserRevaluationDetailUserRevaluation

    FILTERS userRevaluationUserRevaluationDetail(d)==p

    EVENTS
        ON OK prePostUserRevaluation(p)

    EDIT UserRevaluation OBJECT p
;

DESIGN userRevaluation FROM DEFAULT {
    main {
        preferredSize = (1024, 768);

        NEW specification.box BEFORE functions.box{

            ADD d.box {
                caption = 'Спецификация';
                d.panel {
                    childConstraints = TO THE RIGHTBOTTOM;
                }
            }
        }
        NEW header.box BEFORE specification.box {
            childConstraints = TO THE RIGHTBOTTOM;

            NEW headerCol1 {
                childConstraints = TO THE BOTTOM;
                ADD p.documentHeaderGroup {
                    childConstraints = TO THE RIGHTBOTTOM;
                    ADD PROPERTY(objectClassName);
                    ADD PROPERTY(nameStockUserRevaluation);
                    ADD PROPERTY(nameNumeratorObject);
                    ADD PROPERTY(numberObject);
                    ADD PROPERTY(seriesObject);
                    ADD PROPERTY(dateUserRevaluation);
                    ADD PROPERTY(timeUserRevaluation);
                    ADD PROPERTY(beforeDateUserRevaluation);
                }
                ADD p.documentPrmGroup {
                    childConstraints = TO THE RIGHTBOTTOM;
                }
            }

            ADD p.documentSumGroup {
                childConstraints = TO THE BOTTOM;
            }
        }
        PROPERTY(formOk) {
            caption = 'Провести';
        }
    }
}

@defineDocumentSkuPriceListTypeSystemLedger(userRevaluation, accountPriceListType, stock);
@extendFormDocumentSku(userRevaluation, userRevaluation, p);

@defineDocumentBatchPriceListTypeSystemLedger(userRevaluation, accountPriceListType, stock);
@extendFormDocumentBatch(userRevaluation, userRevaluation, p);

EXTEND FORM userRevaluation

    FILTERGROUP filter
        FILTER 'С остатком ' 'F10' currentBalanceSkuUserRevaluation(ks, p) DEFAULT
        FILTER 'В документе ' 'F9' quantityUserRevaluationDetailSkuUserRevaluation(ks, p)
;

EXTEND FORM userRevaluation

    FILTERGROUP filter1
        FILTER 'С остатком ' 'F10' prevCurrentBalanceBatchUserRevaluation(b, p) DEFAULT
        FILTER 'В документе ' 'F9' quantityUserRevaluationDetailBatchUserRevaluation(b, p)
;

addUserRevaluation 'Добавить' = ACTION ADDFORM UserRevaluation;
editUserRevaluation 'Редактировать' (userRevaluation) = ACTION EDITFORM UserRevaluation;

FORM revaluations 'Переоценки' TITLE 'Переоценки'
    OBJECTS p = Revaluation
    PROPERTIES (p) READONLY isPostedRevaluation FORCE GRID, numberRevaluation, seriesRevaluation, dateRevaluation, timeRevaluation, beforeDateRevaluation,
               nameStockRevaluation, countRevaluationDetailRevaluation, diffSumRevaluationDetailRevaluation,
               numberDisposalRevaluation, skipChangeLedgerRevaluation, noteRevaluation, objectClassName

    PROPERTIES (p) READONLY FORCE PANEL nameUserCreatedHistorizable, timeCreatedHistorizable, hostnameComputerCreatedHistorizable, nameUserClosed, timeClosed, hostnameComputerClosed

    PROPERTIES ()  addUserRevaluation TODRAW p
    PROPERTIES (p) editUserRevaluation
    PROPERTIES (p) deletep=DELETE FORCE PANEL TOOLBAR SHOWIF isUserRevaluation(p)
    PROPERTIES (p) printRevaluation FORCE PANEL


    OBJECTS d = RevaluationDetail
    PROPERTIES (d) READONLY indexRevaluationDetail, idBarcodeSkuRevaluationDetail, nameSkuRevaluationDetail, shortNameUOMSkuRevaluationDetail, nameBatchRevaluationDetail,
                   quantityRevaluationDetail, curPriceRevaluationDetail, curSumRevaluationDetail, priceRevaluationDetail, sumRevaluationDetail

    FILTERS revaluationRevaluationDetail(d) == p

    DIALOG Revaluation OBJECT p
;
@extendFormFilterAccessStock(Revaluation, p, revaluations, stock, company);

DESIGN revaluations FROM DEFAULT {
    PROPERTY (deletep) {
        askConfirm = TRUE;
    }

    NEW documentContainer BEFORE functions.box {
        type = SPLITV;
        childConstraints = TO THE BOTTOM;

        ADD p.box { fillVertical = 2.0; }

        NEW documentDetail {
            type = TABBED;

            ADD d.box {
                caption = 'Спецификация';
            }
            NEW documentHistory {
                caption = 'История';

                ADD p.historyGroup;
                ADD p.postedGroup;
            }
            NEW printTab {
                caption = 'Печатные формы';
                NEW printContainer {
                    caption = 'Печать';
                    childConstraints = TO THE BOTTOM;
                    ADD p.printGroup;
                }
            }
            NEW actionContainer {
                caption = 'Действия';
                childConstraints = TO THE RIGHT;
                NEW createdContainer {
                    caption = 'Создание на основе';
                    childConstraints = TO THE BOTTOM;
                }
                NEW machineryContainer {
                    caption = 'Загрузка';
                    childConstraints = TO THE BOTTOM;
                }
            }
        }
    }
}

//----------------------------------------------- Операции -----------------------------------------------------//

@defineDocumentInterfaceOperation (revaluation, Revaluation, );

@defineDocumentOperationRolePrefix(userRevaluation, );

EXTEND FORM userRevaluation
    PROPERTIES(p) nameOperationUserRevaluation
;
EXTEND DESIGN userRevaluation{
    p.documentPrmGroup{
        ADD PROPERTY (nameOperationUserRevaluation) BEFORE PROPERTY(noteUserRevaluation);
    }
}
EXTEND FORM revaluations
    PROPERTIES(p) READONLY nameOperationRevaluation AFTER nameStockRevaluation
;

NAVIGATOR {
    revaluationNavigator {
        ADD revaluations BEFORE repricingCommitteeDialog;
        ADD Revaluation.operations AFTER repricingCommitteeDialog;
    }
}

// ---------------------------- Создание PriceList ----------------------------------- //

EXTEND CLASS RevaluationDetail : PriceListLedger;

fromDateTimePriceListLedger (ledger) += dateTimeRevaluationDetail(ledger);

isPostedPriceListLedger(ledger) += isPostedRevaluationDetail(ledger);
skipPriceListLedger(ledger) += skipChangeLedgerRevaluationDetail(ledger);

skuPriceListLedger (ledger) += skuRevaluationDetail(ledger);

descriptionPriceListLedger (ledger) += descriptionRevaluationDetail(ledger);

inPriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(priceRevaluationDetail(ledger)) AND type == SystemLedgerPriceListType.accountPriceListType THEN TRUE;
pricePriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(priceRevaluationDetail(ledger)) AND type == SystemLedgerPriceListType.accountPriceListType THEN priceRevaluationDetail(ledger);

inPriceListLedgerStock (ledger, stock) += stockRevaluationDetail(ledger) == stock;

batchPriceListLedger (ledger) += batchRevaluationDetail (ledger);

