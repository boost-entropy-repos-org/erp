MODULE RevaluationPurchaseInvoice;

REQUIRE RevaluationManufacturingPrice, PurchaseInvoice, PurchaseShipment, PurchaseDeclarationDetail, PurchaseManufacturingPrice, RevaluationOperation;

PRIORITY Purchase;

NAMESPACE Revaluation;

@defineDocumentInterfaceProperty (revaluation, showInvoice, 'Расценка');

invoiceDetailRevaluationDetail 'Строка накладной' = invoiceDetailBatch(batchRevaluationDetail(detail));
descriptionInvoiceDetailRevaluationDetail 'Строка накладной' = descriptionInvoiceDetail(invoiceDetailRevaluationDetail(detail));

priceInvoiceDetailRevaluationDetail 'Контрактная цена' (detail) = priceInvoiceDetail(invoiceDetailRevaluationDetail(detail));
currencyInvoiceDetailRevaluationDetail 'Валюта контрактной цены' (detail) = currencyInvoiceDetail(invoiceDetailRevaluationDetail(detail));
shortNameCurrencyInvoiceDetailRevaluationDetail 'Валюта контрактной цены' (detail) = shortNameCurrency(currencyInvoiceDetailRevaluationDetail(detail));
rateExchangeInvoiceDetailRevaluationDetail 'Курс обмена' (detail) = rateExchangeInvoiceDetail(invoiceDetailRevaluationDetail(detail));
homePriceInvoiceDetailRevaluationDetail 'Контрактная цена (конверт.)' = homePriceInvoiceDetail(invoiceDetailRevaluationDetail(detail));
priceDutyInvoiceDetailRevaluationDetail 'Пошлина (ед.)' = dutyPriceInvoiceDetail(invoiceDetailRevaluationDetail(detail));
priceRegistrationInvoiceDetailRevaluationDetail 'Таможенный сбор (ед.)' = registrationPriceInvoiceDetail(invoiceDetailRevaluationDetail(detail));
manufacturingMarkupInvoiceDetailRevaluationDetail 'Надбавка,% (к цене изготовителя)' = manufacturingMarkupInvoiceDetail(invoiceDetailRevaluationDetail(detail));

rateExchangeRevaluationDetail 'Курс обмена (новый)' = ABSTRACT NUMERIC[15,8] (RevaluationDetail);
rateExchangeUserRevaluationDetail 'Курс обмена (новый)' = DATA NUMERIC[15,8] (UserRevaluationDetail);
rateExchangeRevaluationDetail(d) += rateExchangeUserRevaluationDetail(d);

@defineDocumentInterfaceHeaderPriceListType (revaluation, calcPriceListType, manufacturing, ' (надбавка)');
@defineDocumentDetailPriceListTypePrefix (revaluation, revaluationDetail, calcPriceListType, manufacturing, ' (надбавка)');
@defineDocumentDetailPriceListTypePrefix (userRevaluation, userRevaluationDetail, calcPriceListType, manufacturing, ' (надбавка)');

@defineDocumentInterfaceDetailMarkupCustomPrefix (revaluationDetail, manufacturing, ' (к цене изготовителя)');

manufacturingCalcPriceListTypeOperation = DATA CalcPriceListType (Revaluation.Operation);
nameManufacturingCalcPriceListTypeOperation 'Вид цен (надбавка к цене изготовителя)' (operation) = nameCalcPriceListType(manufacturingCalcPriceListTypeOperation(operation));

manufacturingCalcPriceListTypeUserRevaluation (revaluation) <- manufacturingCalcPriceListTypeOperation(operationUserRevaluation(revaluation))
    WHEN CHANGED(operationUserRevaluation(revaluation));

manufacturingMarkupUserRevaluationDetail(detail) <- markupCalcPriceListTypeSku(manufacturingCalcPriceListTypeUserRevaluationDetail(detail), skuUserRevaluationDetail(detail))
    WHEN CHANGED(manufacturingCalcPriceListTypeUserRevaluationDetail(detail)) OR
         CHANGED(skuUserRevaluationDetail(detail));

EXTEND FORM Revaluation.operation
    PROPERTIES(o) nameManufacturingCalcPriceListTypeOperation
;

DESIGN Revaluation.operation{
    showContainer {
        MOVE PROPERTY(nameManufacturingCalcPriceListTypeOperation(o));
    }
}

typeExchangeUserRevaluation 'Тип обмена' = DATA TypeExchange (UserRevaluation);
nameTypeExchangeRevaluation 'Тип обмена' = nameTypeExchange(typeExchangeUserRevaluation(document)) IN documentPrm;
typeExchangeUserRevaluationDetail = typeExchangeUserRevaluation(userRevaluationUserRevaluationDetail(detail));

incomeManufacturingPriceRevaluationDetail (detail) = priceInvoiceDetailRevaluationDetail(detail)*rateExchangeRevaluationDetail(detail);

costManufacturingPriceRevaluationDetail(detail) = priceInvoiceDetailRevaluationDetail(detail)*rateExchangeRevaluationDetail(detail) (+) 
    extraCostPriceInvoiceDetail(invoiceDetailRevaluationDetail(detail)) (+) 
    customCostPriceInvoiceDetail(invoiceDetailRevaluationDetail(detail))(+) 
    certificateCostPriceInvoiceDetail(invoiceDetailRevaluationDetail(detail));

 addCostPriceToManufacturingPriceUserRevaluation 'Учитывать доп. расходы' (invoice) = DATA BOOLEAN (UserRevaluation) IN documentPrm;
 addCostPriceToManufacturingPriceRevaluationOperation 'Учитывать в цене изготовителя доп. расходы' = DATA BOOLEAN (Operation);
 addCostPriceToManufacturingPriceUserRevaluation(revaluation) <- addCostPriceToManufacturingPriceRevaluationOperation(operationUserRevaluation(revaluation))
     WHEN CHANGED(operationUserRevaluation(revaluation));
                                 
calcBaseManufacturingPriceRevaluationDetail 'Себестоимость (ед.)' (detail)= IF addCostPriceToManufacturingPriceUserRevaluation(revaluationRevaluationDetail(detail)) 
                                    THEN costManufacturingPriceRevaluationDetail(detail)
                                    ELSE incomeManufacturingPriceRevaluationDetail(detail);
calcManufacturingPriceRevaluationDetail (detail) = IF roundConditionPriceListType(manufacturingCalcPriceListTypeRevaluationDetail(detail)) THEN
        round(calcBaseManufacturingPriceRevaluationDetail (detail) * (100.0 (+) manufacturingMarkupRevaluationDetail(detail))/100, priceRoundRoundCondition(roundConditionPriceListType(manufacturingCalcPriceListTypeRevaluationDetail(detail))))
    ELSE 
        round(calcBaseManufacturingPriceRevaluationDetail (detail) * (100.0 (+) manufacturingMarkupRevaluationDetail(detail))/100,2)
;
        
WHEN SESSION FORMS userRevaluation
    (CHANGED(rateExchangeUserRevaluationDetail(detail)) OR CHANGED (manufacturingMarkupUserRevaluationDetail(detail)) OR 
     CHANGED(invoiceDetailRevaluationDetail(detail)) OR CHANGED(addCostPriceToManufacturingPriceUserRevaluation(revaluationRevaluationDetail(detail)))) AND invoiceDetailRevaluationDetail(detail) DO {
        manufacturingPriceUserRevaluationDetail(detail) <- NUMERIC[14,2](calcManufacturingPriceRevaluationDetail(detail));
    }     

calcRateExchangeRevaluationDetail = rateOnTypeExchangeCurrencyDate(typeExchangeUserRevaluation(userRevaluationUserRevaluationDetail(detail)),
    currencyInvoiceDetailRevaluationDetail(detail), toDate(dateTimeRevaluationDetail(detail)));

rateExchangeUserRevaluationDetail(detail) <- calcRateExchangeRevaluationDetail(detail)
    WHEN CHANGED(typeExchangeUserRevaluationDetail(detail)) OR CHANGED(dateTimeRevaluationDetail(detail));

backgroundRetailRevaluation 'Цвет' (revaluation) = RGB(224, 255, 255) IF revaluation IS Revaluation;

EXTEND FORM userRevaluation
    PROPERTIES (p) showInvoiceUserRevaluation, nameTypeExchangeRevaluation SHOWIF showInvoiceUserRevaluation(p) BACKGROUND backgroundRetailRevaluation(p), 
    addCostPriceToManufacturingPriceUserRevaluation SHOWIF showInvoiceUserRevaluation(p), nameManufacturingCalcPriceListTypeUserRevaluation SHOWIF showInvoiceUserRevaluation(p)
    PROPERTIES (d) BACKGROUND backgroundRetailRevaluation(p) SHOWIF showInvoiceUserRevaluation(p) AFTER nameBatchUserRevaluationDetail(d) descriptionInvoiceDetailRevaluationDetail
    PROPERTIES (d) SHOWIF showInvoiceUserRevaluation(p) BEFORE curManufacturingPriceUserRevaluationDetail(d) READONLY priceInvoiceDetailRevaluationDetail,
                   shortNameCurrencyInvoiceDetailRevaluationDetail, rateExchangeInvoiceDetailRevaluationDetail,
                   priceDutyInvoiceDetailRevaluationDetail, priceRegistrationInvoiceDetailRevaluationDetail,
                   manufacturingMarkupInvoiceDetailRevaluationDetail
    PROPERTIES (d) SHOWIF showInvoiceUserRevaluation(p) BEFORE manufacturingPriceUserRevaluationDetail(d) rateExchangeUserRevaluationDetail, manufacturingMarkupUserRevaluationDetail
;

DESIGN userRevaluation{
    PROPERTY(manufacturingMarkupUserRevaluationDetail(d)) { background = #FFFFCC; }
    PROPERTY(rateExchangeUserRevaluationDetail(d)) { background = #FFFFCC; }
    PROPERTY(manufacturingSumUserRevaluationDetail(d)) { background = #FFFFCC; }
    PROPERTY(manufacturingPriceUserRevaluationDetail(d)) { background = #FFFFCC; }
    PROPERTY(priceUserRevaluationDetail(d)) { background = #FFFFCC; }
    PROPERTY(sumUserRevaluationDetail(d)) { background = #FFFFCC; }
}

inPriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(rateExchangeRevaluationDetail(ledger)) AND type == SystemLedgerPriceListType.rateExchangeStockPriceListType THEN TRUE;
pricePriceListLedgerSystemLedgerPriceListType (ledger, type) += WHEN CLASS(rateExchangeRevaluationDetail(ledger)) AND type == SystemLedgerPriceListType.rateExchangeStockPriceListType THEN NUMERIC[14,2](rateExchangeRevaluationDetail(ledger));

@defineOperationProperty(showInvoice, 'Расценка импорта', showContainer);
@deriveDocumentOperationProperty(UserRevaluation, showInvoice);

typeExchangeOperation= DATA TypeExchange (Operation);
nameTypeExchangeOperation 'Тип обмена' (o) = nameTypeExchange(typeExchangeOperation(o));
EXTEND FORM operation
    PROPERTIES(o) nameTypeExchangeOperation, addCostPriceToManufacturingPriceRevaluationOperation
;
DESIGN operation {
    showContainer {
        MOVE PROPERTY(nameTypeExchangeOperation(o));
        MOVE PROPERTY(addCostPriceToManufacturingPriceRevaluationOperation(o));
    }
}

@deriveDocumentOperationProperty(UserRevaluation, typeExchange);
