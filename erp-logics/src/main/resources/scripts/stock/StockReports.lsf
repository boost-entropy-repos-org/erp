MODULE StockReports;

REQUIRE Stock, Barcode, PriceListLedger, SaleLedger, PurchaseLedger;

dataInSessionGroup 'Отм.' = DATA SESSION BOOLEAN (Group);

levelParentGroup (group) = GROUP MIN levelGroupGroup(group, parent) IF dataInSessionGroup(parent)
    BY group PERSISTENT;

inParentGroup (group) = TRUE IF levelParentGroup(group) PERSISTENT;

inSessionGroup 'Отм.' (group) = OVERRIDE
    inParentGroup(group),
    dataInSessionGroup(group);

sessionConcatGroups 'Группы' (groupType) =
    GROUP CONCAT nameGroup(group) IF inSessionGroup(group) AND NOT inSessionGroup(parentGroup(group)),','
    BY groupTypeGroup(group);

sumBGroupTypeStockDate 'Итоговая сумма товаров отчета' (groupType, stock, date) =
    GROUP SUM sumBSkuStockDate(sku, stock, date) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
    BY groupType, stock, date PREFCHARWIDTH 15;

sumInGroupTypeStockDateDate 'Итоговая сумма пришедшего товара отчета' (groupType, stock, dateFrom, dateTo) =
    GROUP SUM sumInSkuStockDateDate(sku, stock, dateFrom, dateTo) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
    BY groupType, stock, dateFrom, dateTo PREFCHARWIDTH 15;

sumOutGroupTypeStockDateDate 'Итоговая сумма ушедшего товара отчета' (groupType, stock, dateFrom, dateTo) =
    GROUP SUM sumOutSkuStockDateDate(sku, stock, dateFrom, dateTo) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
    BY groupType, stock, dateFrom, dateTo PREFCHARWIDTH 15;

//остатки по товарам
FORM printListBalanceSkusStock 'Остатки по товарам' PRINT
    OBJECTS d = DATE FIXED PANEL
    PROPERTIES(d) OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st ,d)

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    FILTERS inSessionGroup(groupGroupTypeSku(gt, s))
    ORDER BY nameSku

    PROPERTIES(s, st, d) READONLY balanceBSkuStockDate, sumBSkuStockDate
    FILTERS balanceBSkuStockDate(s, st, d)
;

printListBalanceSkusStockDate 'Списком' (stock, date) =
    ACTION FORM printListBalanceSkusStock OBJECTS st = stock, d = date  IMAGE 'print.png' IN printGroup;

FORM printBalanceSkusStock 'Остатки по товарам' PRINT
    OBJECTS d = DATE FIXED PANEL
    PROPERTIES(d) OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st ,d)

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup

    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt)
    FILTERS groupTypeGroup(sk) == gt
    PROPERTIES(sk, st, d) READONLY sumBSkuGroupStockDate

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku
    FILTERS groupGroupTypeSku(gt, s) == sk

    PROPERTIES(s, st, d) READONLY balanceBSkuStockDate, sumBSkuStockDate
    FILTERS balanceBSkuStockDate(s, st, d)
;

printBalanceSkusStockDate 'По группам' (stock, date) =
    ACTION FORM printBalanceSkusStock OBJECTS st = stock, d = date  IMAGE 'print.png' IN printGroup;

//остатки по партиям
FORM printListBalanceBatchesStock 'Остатки по партиям' PRINT
    OBJECTS d = DATE FIXED PANEL
    PROPERTIES(d) OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st ,d)

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY dateBatch, nameBatch, idBarcodeSkuBatch, nameSkuBatch, shortNameUOMBatch//, quantityBatch
    FILTERS inSessionGroup(groupGroupTypeSku(gt, skuBatch(bt)))
    ORDER BY          dateBatch, nameBatch, nameSkuBatch

    PROPERTIES(bt, st, d) READONLY balanceBBatchStockDate, accountSumBBatchStockDate
    FILTERS balanceBBatchStockDate(bt, st, d)
;

printListBalanceBatchesStockDate 'Списком' (stock, date) =
    ACTION FORM printListBalanceBatchesStock OBJECTS st = stock, d = date  IMAGE 'print.png' IN printGroup;

FORM printBalanceBatchesStock 'Остатки по партиям' PRINT
    OBJECTS d = DATE FIXED PANEL
    PROPERTIES(d) OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st ,d)

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt)
    FILTERS groupTypeGroup(sk) == gt
    PROPERTIES(sk, st, d) READONLY accountSumBSkuGroupBatchStockDate

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY dateBatch, nameBatch, idBarcodeSkuBatch, nameSkuBatch, shortNameUOMBatch//, quantityBatch
    FILTERS           groupGroupTypeSku(gt, skuBatch(bt)) == sk
    ORDER BY          dateBatch, nameBatch, nameSkuBatch

    PROPERTIES(bt, st, d) READONLY balanceBBatchStockDate, accountSumBBatchStockDate
    FILTERS balanceBBatchStockDate(bt, st, d)
;

printBalanceBatchesStockDate 'По группам' (stock, date) =
    ACTION FORM printBalanceBatchesStock OBJECTS st = stock, d = date  IMAGE 'print.png' IN printGroup;

FORM reportBalanceStock 'Отчет по остаткам'
    OBJECTS d=DATE FIXED PANEL
    PROPERTIES(d) OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
//    PROPERTIES sumBGroupTypeStockDate(gt, st ,d)
//    PROPERTIES(gt) READONLY sessionConcatGroups

    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES READONLY skuTreeName = nameGroup(sk)
    PROPERTIES(sk, st, d) READONLY sumRecBSkuGroupStockDate, accountSumRecBSkuGroupBatchStockDate
    PROPERTIES inSessionGroup(sk)
    ORDER BY skuTreeName
    FILTERS groupTypeGroup(sk) == gt

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku
    FILTERS isParentGroupSku(sk, s)

    PROPERTIES(s, st, d) READONLY balanceBSkuStockDate, sumBSkuStockDate
    PROPERTIES(st, d) printListBalanceSkusStockDate, printBalanceSkusStockDate
    FILTERS balanceBSkuStockDate(s, st, d)

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY dateBatch, nameBatch, idBarcodeSkuBatch, nameSkuBatch, shortNameUOMBatch//, quantityBatch
    FILTERS           isParentGroupBatch(sk, bt)
    ORDER BY          dateBatch, nameBatch, nameSkuBatch

    PROPERTIES(bt, st, d) READONLY balanceBBatchStockDate, accountSumBBatchStockDate
    PROPERTIES(st, d) printListBalanceBatchesStockDate, printBalanceBatchesStockDate
    FILTERS balanceBBatchStockDate(bt, st, d)
;

DESIGN reportBalanceStock FROM DEFAULT{
    NEW topContainer{
        childConstraints = TO THE RIGHT;
        ADD d.box;
        ADD st.box;
        ADD gt.box{ADD PROPERTY(inSessionGroup);}
//        NEW sumContainer{
//            caption = 'Итоговые суммы';
//            childConstraints = TO THE BOTTOM;
//            ADD PROPERTY(sumBGroupTypeStockDate(gt, st ,d)){caption = 'Товаров отчета';}
//        }
    }
    NEW bottomContainer{
        childConstraints = TO THE RIGHT;
        type = SPLITH;
        ADD skuTree.tree.box;
        NEW tabContainer{
            type = TABBED;
            fillHorizontal = 2;
            NEW skuContainer{
                caption = 'Товары';
                childConstraints = TO THE BOTTOM;
                NEW printSkuContainer{
                    childConstraints = TO THE RIGHT;
                    caption = 'Печать';
                    ADD PROPERTY(printListBalanceSkusStockDate);
                    ADD PROPERTY(printBalanceSkusStockDate);
                }
                ADD s.box;
            }
            NEW batchContainer{
                caption = 'Партии';
                childConstraints = TO THE BOTTOM;
                NEW printBatchContainer{
                    childConstraints = TO THE RIGHT;
                    caption = 'Печать';
                    ADD PROPERTY(printListBalanceBatchesStockDate);
                    ADD PROPERTY(printBalanceBatchesStockDate);
                }
                ADD bt.box;
            }
        }
    }
    ADD functions.box;
}

//оборотная ведомость
FORM printListBackSheet 'Оборотная ведомость' PRINT
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st, df)
    PROPERTIES(gt, st, df, dt) sumInGroupTypeStockDateDate, sumOutGroupTypeStockDateDate
    PROPERTIES sumBGroupTypeStockDate(gt, st, dt)

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    FILTERS inSessionGroup(groupGroupTypeSku(gt, s))
    ORDER BY nameSku

    PROPERTIES(s, st, df) READONLY balanceBSkuStockDate, sumBSkuStockDate
    PROPERTIES(s, st, df, dt) READONLY quantitySumInSkuStockDateDate, sumInSkuStockDateDate, quantitySumOutSkuStockDateDate, sumOutSkuStockDateDate
    PROPERTIES(st, df) printListBalanceSkusStockDate, printBalanceSkusStockDate
    PROPERTIES(s, st, dt) READONLY balanceBSkuStockDate, sumBSkuStockDate
    FILTERS balanceBSkuStockDate(s, st, df) OR balanceBSkuStockDate(s, st, dt)
;

printListBackSheet 'Списком' (stock, dateFrom, dateTo) =
    ACTION FORM printListBackSheet OBJECTS st = stock, df = dateFrom, dt = dateTo  IMAGE 'print.png' IN printGroup;

FORM printBackSheet 'Оборотная ведомость' PRINT
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st, df)
    PROPERTIES(gt, st, df, dt) sumInGroupTypeStockDateDate, sumOutGroupTypeStockDateDate
    PROPERTIES sumBGroupTypeStockDate(gt, st, dt)

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt)
    FILTERS groupTypeGroup(sk) == gt
    PROPERTIES(sk, st, df) READONLY sumBSkuGroupStockDate
    PROPERTIES(sk, st, df, dt) READONLY sumInGroupSkuStockDateDate, sumOutGroupSkuStockDateDate
    PROPERTIES(sk, st, dt) READONLY sumBSkuGroupStockDate

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku
    FILTERS groupGroupTypeSku(gt, s) == sk

    PROPERTIES(s, st, df) READONLY balanceBSkuStockDate, sumBSkuStockDate
    PROPERTIES(s, st, df, dt) READONLY quantitySumInSkuStockDateDate, sumInSkuStockDateDate, quantitySumOutSkuStockDateDate, sumOutSkuStockDateDate
    PROPERTIES(st, df) printListBalanceSkusStockDate, printBalanceSkusStockDate
    PROPERTIES(s, st, dt) READONLY balanceBSkuStockDate, sumBSkuStockDate
    FILTERS balanceBSkuStockDate(s, st, df) OR balanceBSkuStockDate(s, st, dt)
;

printBackSheet 'По группам' (stock, dateFrom, dateTo) =
    ACTION FORM printBackSheet OBJECTS st = stock, df = dateFrom, dt = dateTo  IMAGE 'print.png' IN printGroup;

FORM reportBackSheet 'Оборотная ведомость'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES sumBGroupTypeStockDate(gt, st, df)
    PROPERTIES(gt, st, df, dt) sumInGroupTypeStockDateDate, sumOutGroupTypeStockDateDate
    PROPERTIES sumBGroupTypeStockDate(gt, st, dt)
//    PROPERTIES(gt) READONLY sessionConcatGroups

    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES READONLY skuTreeName = nameGroup(sk)
    PROPERTIES(sk, st, df) READONLY sumRecBSkuGroupStockDate
    PROPERTIES(sk, st, df, dt) READONLY sumRecInGroupSkuStockDateDate, sumRecOutGroupSkuStockDateDate
    PROPERTIES(sk, st, dt) READONLY sumRecBSkuGroupStockDate
    PROPERTIES inSessionGroup(sk)
    ORDER BY skuTreeName
    FILTERS groupTypeGroup(sk) == gt

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku
    FILTERS isParentGroupSku(sk, s)

    PROPERTIES(s, st, df) READONLY balanceBSkuStockDate, sumBSkuStockDate
    PROPERTIES(s, st, df, dt) READONLY quantitySumInSkuStockDateDate, sumInSkuStockDateDate, quantitySumOutSkuStockDateDate, sumOutSkuStockDateDate
    PROPERTIES(st, df, dt) printListBackSheet, printBackSheet
    PROPERTIES(s, st, dt) READONLY balanceBSkuStockDate, sumBSkuStockDate
    FILTERS balanceBSkuStockDate(s, st, df) OR balanceBSkuStockDate(s, st, dt)
;

DESIGN reportBackSheet FROM DEFAULT{
    NEW topContainer{
        childConstraints = TO THE RIGHT;
        NEW dateContainer{
            caption = 'Период';
            childConstraints = TO THE RIGHT;
            ADD PROPERTY(dateFrom){caption = 'Дата (с)';}
            ADD PROPERTY(dateTo){caption = 'Дата (по)';}
        }
        ADD st.box;
        ADD gt.box{ADD PROPERTY(inSessionGroup);}
        NEW sumContainer{
            caption = 'Итоговые суммы';
            childConstraints = TO THE BOTTOM;
            ADD PROPERTY(sumBGroupTypeStockDate(gt, st, df)){caption = 'Начала периода';}
            ADD PROPERTY(sumInGroupTypeStockDateDate){caption = 'Товара пришедшего за период';}
            ADD PROPERTY(sumOutGroupTypeStockDateDate){caption = 'Товара ушедшего за период';}
            ADD PROPERTY(sumBGroupTypeStockDate(gt, st, dt)){caption = 'Конца периода';}
        }
    }
    NEW bottomContainer{
        childConstraints = TO THE RIGHT;
        type = SPLITH;
        ADD skuTree.tree.box;
        PROPERTY(sumRecBSkuGroupStockDate(sk, st, df)){caption = 'Остаток на начало периода';}
        PROPERTY(sumRecBSkuGroupStockDate(sk, st, dt)){caption = 'Остаток на конец периода';}
        NEW tabContainer{
            type = TABBED;
            fillHorizontal = 2;
            NEW skuContainer{
                caption = 'Товары';
                childConstraints = TO THE BOTTOM;
                NEW printSkuContainer{
                    childConstraints = TO THE RIGHT;
                    caption = 'Печать';
                    ADD PROPERTY(printListBackSheet);
                    ADD PROPERTY(printBackSheet);
                }
                ADD s.box;
                PROPERTY(balanceBSkuStockDate(s, st, df)){caption = 'Остаток на начало периода';}
                PROPERTY(sumBSkuStockDate(s, st, df)){caption = 'Сумма на начало периода';}
                PROPERTY(balanceBSkuStockDate(s, st, dt)){caption = 'Остаток на конец периода';}
                PROPERTY(sumBSkuStockDate(s, st, dt)){caption = 'Сумма на конец периода';}
            }
        }
    }
    ADD functions.box;
}

//отчеты по продажам и поступлениям

sumSalesSkuGroupStockDateDate 'Сумма продаж (по группе)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumSaleLedger(saleLedger) IF isPostedSaleLedger(saleLedger) AND
                                           dateSaleLedger(saleLedger) >= dateFrom AND
                                           dateSaleLedger(saleLedger) <= dateTo
    BY groupGroupTypeSku(groupType, skuSaleLedger(saleLedger)), stockSaleLedger(saleLedger), dateFrom, dateTo;

sumRecSalesSkuGroupStockDateDate 'Сумма продаж (всего)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumSaleLedger(saleLedger) IF isParentGroupSku(group, skuSaleLedger(saleLedger)) AND
                                           isPostedSaleLedger(saleLedger) AND
                                           dateSaleLedger(saleLedger) >= dateFrom AND
                                           dateSaleLedger(saleLedger) <= dateTo
    BY group, stockSaleLedger(saleLedger), dateFrom, dateTo;

sumSalesGroupTypeStockDateDate 'Итоговая сумма продаж' (groupType, stock, dateFrom, dateTo) =
    GROUP SUM sumSaleLedger(saleLedger) IF inSessionGroup(groupGroupTypeSku(groupType, skuSaleLedger(saleLedger))) AND
                                           isPostedSaleLedger(saleLedger) AND
                                           dateSaleLedger(saleLedger) >= dateFrom AND
                                           dateSaleLedger(saleLedger) <= dateTo
    BY groupType, stockSaleLedger(saleLedger), dateFrom, dateTo PREFCHARWIDTH 15;

sumPurchasesSkuGroupStockDateDate 'Сумма поступлений (по группе)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumPurchaseLedger(purchaseLedger) IF isPostedPurchaseLedger(purchaseLedger) AND
                                           datePurchaseLedger(purchaseLedger) >= dateFrom AND
                                           datePurchaseLedger(purchaseLedger) <= dateTo
    BY groupGroupTypeSku(groupType, skuPurchaseLedger(purchaseLedger)), stockPurchaseLedger(purchaseLedger), dateFrom, dateTo;

sumRecPurchasesSkuGroupStockDateDate 'Сумма поступлений (всего)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumPurchaseLedger(purchaseLedger) IF isParentGroupSku(group, skuPurchaseLedger(purchaseLedger)) AND
                                           isPostedPurchaseLedger(purchaseLedger) AND
                                           datePurchaseLedger(purchaseLedger) >= dateFrom AND
                                           datePurchaseLedger(purchaseLedger) <= dateTo
    BY group, stockPurchaseLedger(purchaseLedger), dateFrom, dateTo;

sumPurchasesGroupTypeStockDateDate 'Итоговая сумма поступлений' (groupType, stock, dateFrom, dateTo) =
    GROUP SUM sumPurchaseLedger(purchaseLedger) IF inSessionGroup(groupGroupTypeSku(groupType, skuPurchaseLedger(purchaseLedger))) AND
                                           isPostedPurchaseLedger(purchaseLedger) AND
                                           datePurchaseLedger(purchaseLedger) >= dateFrom AND
                                           datePurchaseLedger(purchaseLedger) <= dateTo
    BY groupType, stockPurchaseLedger(purchaseLedger), dateFrom, dateTo PREFCHARWIDTH 15;

FORM printListSalesReport 'Отчет по продажам' PRINT
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES READONLY sumSalesGroupTypeStockDateDate(gt, st, df, dt)
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger
    FILTERS isPostedSaleLedger(s),
            stockSaleLedger(s) == st,
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            inSessionGroup(groupGroupTypeSku(gt, skuSaleLedger(s)))
;

printListSalesReport 'Списком' (stock, dateFrom, dateTo) =
    ACTION FORM printListSalesReport OBJECTS st = stock, df = dateFrom, dt = dateTo  IMAGE 'print.png' IN printGroup;

FORM printSalesReport 'Отчет по продажам' PRINT
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES READONLY sumSalesGroupTypeStockDateDate(gt, st, df, dt)
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup
    PROPERTIES READONLY sumRecSalesSkuGroupStockDateDate(sk, st, df, dt)
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger
    FILTERS isPostedSaleLedger(s),
            stockSaleLedger(s) == st,
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt,
            groupGroupTypeSku(gt, skuSaleLedger(s)) == sk
;

printSalesReport 'По группам' (stock, dateFrom, dateTo) =
    ACTION FORM printSalesReport OBJECTS st = stock, df = dateFrom, dt = dateTo  IMAGE 'print.png' IN printGroup;

FORM printListPurchasesReport 'Отчет по поступлениям' PRINT
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES READONLY sumPurchasesGroupTypeStockDateDate(gt, st, df, dt)
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS p = PurchaseLedger
    PROPERTIES(p) READONLY dateTimePurchaseLedger, nameSupplierPurchaseLedger, nameSkuPurchaseLedger, descriptionPurchaseLedger,
                           quantityPurchaseLedger, sumVATPurchaseLedger, sumPurchaseLedger, averagePricePurchaseLedger
    ORDER BY nameSkuPurchaseLedger
    FILTERS isPostedPurchaseLedger(p),
            stockPurchaseLedger(p) == st,
            datePurchaseLedger(p) >= df,
            datePurchaseLedger(p) <= dt,
            inSessionGroup(groupGroupTypeSku(gt, skuPurchaseLedger(p)))
;

printListPurchasesReport 'Списком' (stock, dateFrom, dateTo) =
    ACTION FORM printListPurchasesReport OBJECTS st = stock, df = dateFrom, dt = dateTo  IMAGE 'print.png' IN printGroup;

FORM printPurchasesReport 'Отчет по поступлениям' PRINT
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES READONLY sumPurchasesGroupTypeStockDateDate(gt, st, df, dt)
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup
    PROPERTIES READONLY sumRecPurchasesSkuGroupStockDateDate(sk, st, df, dt)
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt),
            groupTypeGroup(sk) == gt

    OBJECTS p = PurchaseLedger
    PROPERTIES(p) READONLY dateTimePurchaseLedger, nameSupplierPurchaseLedger, nameSkuPurchaseLedger, descriptionPurchaseLedger,
                           quantityPurchaseLedger, sumVATPurchaseLedger, sumPurchaseLedger, averagePricePurchaseLedger
    ORDER BY nameSkuPurchaseLedger
    FILTERS isPostedPurchaseLedger(p),
            stockPurchaseLedger(p) == st,
            datePurchaseLedger(p) >= df,
            datePurchaseLedger(p) <= dt,
            groupGroupTypeSku(gt, skuPurchaseLedger(p)) == sk
;

printPurchasesReport 'По группам' (stock, dateFrom, dateTo) =
    ACTION FORM printPurchasesReport OBJECTS st = stock, df = dateFrom, dt = dateTo  IMAGE 'print.png' IN printGroup;

FORM salesPurchasesReport 'Продажи и поступления'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt, st, df, dt) READONLY sumSalesGroupTypeStockDateDate, sumPurchasesGroupTypeStockDateDate
//    PROPERTIES(gt) READONLY sessionConcatGroups

    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES READONLY skuTreeName = nameGroup(sk)
    PROPERTIES(sk, st, df, dt) READONLY sumRecSalesSkuGroupStockDateDate, sumRecPurchasesSkuGroupStockDateDate
    PROPERTIES inSessionGroup(sk)
    ORDER BY skuTreeName
    FILTERS groupTypeGroup(sk) == gt

    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTimeSaleLedger, nameCustomerSaleLedger, nameSkuSaleLedger, descriptionSaleLedger,
                           quantitySaleLedger, costSumSaleLedger, markupSumSaleLedger, sumVATSaleLedger, sumSaleLedger, averagePriceSaleLedger
    ORDER BY nameSkuSaleLedger
    FILTERS isParentGroupSku(sk, skuSaleLedger(s)),
            isPostedSaleLedger(s),
            stockSaleLedger(s) == st,
            dateSaleLedger(s) >= df,
            dateSaleLedger(s) <= dt
    PROPERTIES(st, df, dt) printListSalesReport, printSalesReport

    OBJECTS p = PurchaseLedger
    PROPERTIES(p) READONLY dateTimePurchaseLedger, nameSupplierPurchaseLedger, nameSkuPurchaseLedger, descriptionPurchaseLedger,
                           quantityPurchaseLedger, sumVATPurchaseLedger, sumPurchaseLedger, averagePricePurchaseLedger
    ORDER BY nameSkuPurchaseLedger
    FILTERS isParentGroupSku(sk, skuPurchaseLedger(p)),
            isPostedPurchaseLedger(p),
            stockPurchaseLedger(p) == st,
            datePurchaseLedger(p) >= df,
            datePurchaseLedger(p) <= dt
    PROPERTIES(st, df, dt) printListPurchasesReport, printPurchasesReport
;

DESIGN salesPurchasesReport FROM DEFAULT{
    NEW topContainer{
        childConstraints = TO THE RIGHT;
        NEW dateContainer{
            caption = 'Период';
            childConstraints = TO THE RIGHT;
            ADD PROPERTY(dateFrom){caption = 'Дата (с)';}
            ADD PROPERTY(dateTo){caption = 'Дата (по)';}
        }
        ADD st.box;
        ADD gt.box{ADD PROPERTY(inSessionGroup);}
        NEW sumContainer{
            caption = 'Итоговые суммы';
            childConstraints = TO THE BOTTOM;
            ADD PROPERTY(sumSalesGroupTypeStockDateDate);
            ADD PROPERTY(sumPurchasesGroupTypeStockDateDate);
        }
    }
    NEW bottomContainer{
        childConstraints = TO THE RIGHT;
        type = SPLITH;
        ADD skuTree.tree.box;
        NEW tabContainer{
            type = TABBED;
            fillHorizontal = 2;
            NEW salesContainer{
                caption = 'Продажи';
                childConstraints = TO THE BOTTOM;
                NEW printSalesContainer{
                    childConstraints = TO THE RIGHT;
                    caption = 'Печать';
                    ADD PROPERTY(printListSalesReport);
                    ADD PROPERTY(printSalesReport);
                }
                ADD s.box;
            }
            NEW purchasesContainer{
                caption = 'Поступления';
                childConstraints = TO THE BOTTOM;
                NEW printPurchasesContainer{
                    childConstraints = TO THE RIGHT;
                    caption = 'Печать';
                    ADD PROPERTY(printListPurchasesReport);
                    ADD PROPERTY(printPurchasesReport);
                }
                ADD p.box;
            }
        }
    }
    ADD functions.box;
}

NAVIGATOR {
    stockReports{
        ADD reportBalanceStock;
        ADD reportBackSheet;
        ADD salesPurchasesReport;
    }
}