MODULE StockReports;

REQUIRE EmployeeStock, Barcode, PriceListLedger, StockMovement;

dataInSessionGroup 'Отм.' = DATA LOCAL BOOLEAN (Group);

levelParentGroup (group) = GROUP MIN levelGroupGroup(group, parent) IF dataInSessionGroup(parent)
    BY group;

inParentGroup (group) = TRUE IF levelParentGroup(group);

inSessionGroup 'Отм.' (group) = OVERRIDE
    inParentGroup(group),
    dataInSessionGroup(group);
    
includeSku 'Отм.' = DATA LOCAL BOOLEAN (Sku);
includeGroupTypeSku 'Отм.' (groupType, sku) =  OVERRIDE inSessionGroup(groupGroupTypeSku(groupType, sku)), includeSku(sku);

backgroundIncludeGroupTypeSku 'Цвет' (groupType, sku) = IF includeSku(sku) 
    THEN RGB(0,0,0) 
    ELSE RGB(203,203,206) IF inSessionGroup(groupGroupTypeSku(groupType, sku));

//sessionConcatGroups 'Группы' (groupType) =
//    GROUP CONCAT nameGroup(group) IF inSessionGroup(group) AND NOT inSessionGroup(parentGroup(group)),','
//    BY groupTypeGroup(group);
 
countIncludeSkuGroupGroupType 'Кол-во непосредственных товаров в группе' (group, groupType) =
    GROUP SUM 1 IF groupGroupTypeSku(groupType, sku) == group AND includeGroupTypeSku(groupType,sku)
    BY group, groupType;
    
sessionConcatGroups 'Группы' (groupType) =
    GROUP CONCAT nameGroup(group) IF countIncludeSkuGroupGroupType(group, groupType),','
    BY groupType;  

//sumBGroupTypeStockDate 'Итоговая сумма отчета' (groupType, stock, date) =
//    GROUP SUM sumBSkuStockDate(sku, stock, date) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
//    BY groupType, stock, date PREFCHARWIDTH 15;
//    
//sumAGroupTypeStockDate 'Итоговая сумма отчета' (groupType, stock, date) =
//    GROUP SUM sumASkuStockDate(sku, stock, date) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
//    BY groupType, stock, date PREFCHARWIDTH 15;    
//
//sumInGroupTypeStockDateDate 'Итоговая сумма пришедшего товара отчета' (groupType, stock, dateFrom, dateTo) =
//    GROUP SUM sumInSkuStockDateDate(sku, stock, dateFrom, dateTo) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
//    BY groupType, stock, dateFrom, dateTo PREFCHARWIDTH 15;
//
//sumOutGroupTypeStockDateDate 'Итоговая сумма ушедшего товара отчета' (groupType, stock, dateFrom, dateTo) =
//    GROUP SUM sumOutSkuStockDateDate(sku, stock, dateFrom, dateTo) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
//    BY groupType, stock, dateFrom, dateTo PREFCHARWIDTH 15;
////-- Дата/время    
//sumBGroupTypeStockDateTime 'Итоговая сумма отчета' (groupType, stock, dateTime) =
//    GROUP SUM sumBSkuStockDateTime(sku, stock, dateTime) IF inSessionGroup(groupGroupTypeSku(groupType, sku))
//    BY groupType, stock, dateTime PREFCHARWIDTH 15;  
    
//-- По выборке
sumBGroupTypeStockDate 'Итоговая сумма отчета' (groupType, stock, date) =
    GROUP SUM sumBSkuStockDate(sku, stock, date) IF includeGroupTypeSku(groupType, sku)
    BY groupType, stock, date PREFCHARWIDTH 15;
    
sumAGroupTypeStockDate 'Итоговая сумма отчета' (groupType, stock, date) =
    GROUP SUM sumASkuStockDate(sku, stock, date) IF includeGroupTypeSku(groupType, sku)
    BY groupType, stock, date PREFCHARWIDTH 15;    

sumInGroupTypeStockDateDate 'Итоговая сумма пришедшего товара отчета' (groupType, stock, dateFrom, dateTo) =
    GROUP SUM sumInSkuStockDateDate(sku, stock, dateFrom, dateTo) IF includeGroupTypeSku(groupType,sku)
    BY groupType, stock, dateFrom, dateTo PREFCHARWIDTH 15;

sumOutGroupTypeStockDateDate 'Итоговая сумма ушедшего товара отчета' (groupType, stock, dateFrom, dateTo) =
    GROUP SUM sumOutSkuStockDateDate(sku, stock, dateFrom, dateTo) IF includeGroupTypeSku(groupType,sku)
    BY groupType, stock, dateFrom, dateTo PREFCHARWIDTH 15;
//-- Дата/время    
sumBGroupTypeStockDateTime 'Итоговая сумма отчета' (groupType, stock, dateTime) =
    GROUP SUM sumBSkuStockDateTime(sku, stock, dateTime) IF includeGroupTypeSku(groupType,sku)
    BY groupType, stock, dateTime PREFCHARWIDTH 15;     
 
//    PROPERTIES(sk, st, df) READONLY sumBSkuGroupStockDate
//    PROPERTIES(sk, st, df, dt) READONLY sumInGroupSkuStockDateDate, sumOutGroupSkuStockDateDate
//    PROPERTIES(sk, st, dt) READONLY sumASkuGroupStockDate    
sumBSessionSkuGroupStockDate 'Сумма на начало дня (по группе)' (group, stock, date) =
    GROUP SUM sumBSkuStockDate (sku, stock, date)  IF includeGroupTypeSku(groupType,sku)
        BY groupGroupTypeSku(groupType, sku), stock, date;    
sumInSessionGroupSkuStockDateDate 'Сумма товара пришедшего за период(по группе)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumInSkuStockDateDate (sku, stock, dateFrom, dateTo) IF includeGroupTypeSku(groupType,sku)
        BY groupGroupTypeSku(groupType, sku), stock, dateFrom, dateTo;    
sumOutSessionGroupSkuStockDateDate 'Сумма товара ушедшего за период(по группе)' (group, stock, dateFrom, dateTo) =
    GROUP SUM sumOutSkuStockDateDate (sku, stock, dateFrom, dateTo) IF includeGroupTypeSku(groupType,sku)
        BY groupGroupTypeSku(groupType, sku), stock, dateFrom, dateTo;
sumASessionSkuGroupStockDate 'Сумма на конец дня (по группе)' (group, stock, date) =
    GROUP SUM sumASkuStockDate (sku, stock, date) IF includeGroupTypeSku(groupType,sku)
        BY groupGroupTypeSku(groupType, sku), stock, date;
                       
filterBalanceBAInOutSkuStockDate (s,st,df,dt) = (balanceBSkuStockDate(s,st,df) OR
    balanceASkuStockDate(s,st,dt) OR
    sumInSkuStockDateDate(s,st,df,dt) OR
    sumOutSkuStockDateDate(s,st,df,dt));

//остатки по товарам
FORM printListBalanceSkusStock 'Остатки по товарам'
    OBJECTS d = DATETIME FIXED PANEL
    PROPERTIES(d) dateTime = OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDateTime(gt, st ,d)

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    FILTERS inSessionGroup(groupGroupTypeSku(gt, s))
    ORDER BY nameSku(s)

    PROPERTIES(s, st, d) READONLY balanceBSkuStockDateTime, sumBSkuStockDateTime
    FILTERS balanceBSkuStockDateTime(s, st, d)
;

printListBalanceSkusStockDateTime 'Списком' (stock, dateTime) =
    ACTION FORM printListBalanceSkusStock OBJECTS st = stock, d = dateTime PRINT  IMAGE 'print.png' IN print;

accountPriceBSkuStockDateTime 'Цена учетная' (sku, st, dateTime) = priceBPriceListTypeSkuStockDateTime(SystemLedgerPriceListType.accountPriceListType, sku, st, dateTime);   

FORM printBalanceSkusStock 'Остатки по товарам'
    OBJECTS d = DATETIME FIXED PANEL
    PROPERTIES(d) dateTime = OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDateTime(gt, st ,d)

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt)
    FILTERS groupTypeGroup(sk) == gt
    PROPERTIES(sk, st, d) READONLY sumBSkuGroupStockDateTime

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku(s)
    FILTERS groupGroupTypeSku(gt, s) == sk

    PROPERTIES(s, st, d) READONLY balanceBSkuStockDateTime, sumBSkuStockDateTime, accountPriceBSkuStockDateTime
    FILTERS balanceBSkuStockDateTime(s, st, d)
;

printBalanceSkusStockDateTime 'По группам' (stock, dateTime) =
    ACTION FORM printBalanceSkusStock OBJECTS st = stock, d = dateTime PRINT  IMAGE 'print.png' IN print;

//остатки по партиям
FORM printListBalanceBatchesStock 'Остатки по партиям'
    OBJECTS d = DATETIME FIXED PANEL
    PROPERTIES(d) dateTime = OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDateTime(gt, st ,d)

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY dateBatch, nameBatch, idBarcodeSkuBatch, nameSkuBatch, shortNameUOMBatch//, shippedQuantityBatch
    FILTERS inSessionGroup(groupGroupTypeSku(gt, skuBatch(bt)))
    ORDER BY          dateBatch(bt), nameBatch(bt), nameSkuBatch(bt)

    PROPERTIES(bt, st, d) READONLY balanceBBatchStockDateTime, accountSumBBatchStockDateTime
    FILTERS balanceBBatchStockDateTime(bt, st, d)
;

printListBalanceBatchesStockDateTime 'Списком' (stock, dateTime) =
    ACTION FORM printListBalanceBatchesStock OBJECTS st = stock, d = dateTime PRINT  IMAGE 'print.png' IN print;

FORM printBalanceBatchesStock 'Остатки по партиям'
    OBJECTS d = DATETIME FIXED PANEL
    PROPERTIES(d) dateTime = OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDateTime(gt, st ,d)

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    FILTERS inSessionGroup(sk) AND countSkuGroupGroupType(sk, gt)
    FILTERS groupTypeGroup(sk) == gt
    PROPERTIES(sk, st, d) READONLY accountSumBSkuGroupBatchStockDateTime
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY dateBatch, nameBatch, idBarcodeSkuBatch, nameSkuBatch, shortNameUOMBatch//, shippedQuantityBatch
    FILTERS           groupGroupTypeSku(gt, skuBatch(bt)) == sk
    ORDER BY          dateBatch(bt), nameBatch(bt), nameSkuBatch(bt)

    PROPERTIES(bt, st, d) READONLY balanceBBatchStockDateTime, accountSumBBatchStockDateTime
    FILTERS balanceBBatchStockDateTime(bt, st, d)
;

printBalanceBatchesStockDateTime 'По группам' (stock, dateTime) =
    ACTION FORM printBalanceBatchesStock OBJECTS st = stock, d = dateTime PRINT  IMAGE 'print.png' IN print;

FORM reportBalanceStock 'Отчет по остаткам'
    OBJECTS d=DATETIME FIXED PANEL
    PROPERTIES(d) OBJVALUE

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
//    PROPERTIES sumBGroupTypeStockDate(gt, st ,d)
//    PROPERTIES(gt) READONLY sessionConcatGroups

    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES inSessionGroup(sk)
    PROPERTIES READONLY orderGroup(sk), skuTreeName = nameGroup(sk)
    PROPERTIES(sk, st, d) READONLY sumRecBSkuGroupStockDateTime, accountSumRecBSkuGroupBatchStockDateTime
    ORDER BY orderGroup(sk), skuTreeName
    FILTERS groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku ON SHORTCUT showMovementSkuSkuStock(s,st) ON SHORTCUT showMovementPriceSkuSkuStock(s,st), shortNameUOMSku
    ORDER BY nameSku(s)
    FILTERS isParentGroupSku(sk, s)

    PROPERTIES(s, st, d) READONLY balanceBSkuStockDateTime, sumBSkuStockDateTime, accountSumBatchBSkuStockDateTime
    PROPERTIES(st, d) printListBalanceSkusStockDateTime, printBalanceSkusStockDateTime
    FILTERGROUP balance 
        FILTER 'С остатком (кол-во)' balanceBSkuStockDateTime(s, st, d) 'F7' DEFAULT
        FILTER 'С остатком (кол-во/сумма)' balanceBSkuStockDateTime(s, st, d) OR sumBSkuStockDateTime(s, st, d) 'F8'   
    FILTERGROUP incorrectSum FILTER 'Неправильная сумма по партиям' NOT sumBSkuStockDateTime(s, st, d) == accountSumBatchBSkuStockDateTime(s, st, d) 'F9'   

    OBJECTS           bt=Batch
    PROPERTIES(bt)    READONLY dateBatch, nameBatch ON SHORTCUT showMovementBatchBatchStock(bt,st), idBarcodeSkuBatch, 
                      nameSkuBatch ON SHORTCUT showMovementSkuBatchStock(bt,st), shortNameUOMBatch//, shippedQuantityBatch
    FILTERS           isParentGroupBatch(sk, bt)
    ORDER BY          dateBatch(bt), nameBatch(bt), nameSkuBatch(bt)

    PROPERTIES(bt, st, d) READONLY balanceBBatchStockDateTime, accountSumBBatchStockDateTime
    PROPERTIES(st, d) printListBalanceBatchesStockDateTime, printBalanceBatchesStockDateTime
    FILTERS balanceBBatchStockDateTime(bt, st, d)
;
@extendFormFilterStockAccess(st, reportBalanceStock);

DESIGN reportBalanceStock FROM DEFAULT{
    NEW topContainer{
        type = CONTAINERH;
        ADD d.box;
        ADD st.box;
        ADD gt.box;
    }
    NEW bottomContainer {
        fill = 1;
        type = SPLITH;
        ADD skuTree.tree.box;
        NEW tabContainer {
            fill = 3;
            type = TABBED;
            NEW skuContainer{
                caption = 'Товары';
                NEW printSkuContainer{
                    type = CONTAINERH;
                    caption = 'Печать';
                    ADD PROPERTY(printListBalanceSkusStockDateTime(st,d));
                    ADD PROPERTY(printBalanceSkusStockDateTime(st,d));
                }
                ADD s.box;
            }
            NEW batchContainer{
                caption = 'Партии';
                NEW printBatchContainer {
                    type = CONTAINERV;
                    caption = 'Печать';
                    NEW print1{
                        type = CONTAINERH;
                        ADD PROPERTY(printListBalanceBatchesStockDateTime(st,d));
                        ADD PROPERTY(printBalanceBatchesStockDateTime(st,d));
                    }

                }
                ADD bt.box;
            }
        }
    }
    ADD functions.box;
}

//-- Печатные формы для оборотной ведомости списком и по группам--//

FORM printListBackSheet 'Оборотная ведомость'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st, df)
    PROPERTIES(gt, st, df, dt) sumInGroupTypeStockDateDate, sumOutGroupTypeStockDateDate
    PROPERTIES sumAGroupTypeStockDate(gt, st, dt)

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku(s)

    PROPERTIES(s, st, df) READONLY balanceBSkuStockDate, sumBSkuStockDate
    PROPERTIES(s, st, df, dt) READONLY quantitySumInSkuStockDateDate, sumInSkuStockDateDate, quantitySumOutSkuStockDateDate, sumOutSkuStockDateDate
    PROPERTIES(s, st, dt) READONLY balanceASkuStockDate, sumASkuStockDate
    FILTERS includeGroupTypeSku(gt, s)
    FILTERS filterBalanceBAInOutSkuStockDate (s,st,df,dt)
;

printListBackSheet 'Списком' (stock, dateFrom, dateTo) =
    ACTION FORM printListBackSheet OBJECTS st = stock, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;

FORM printBackSheet 'Оборотная ведомость'
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR fullNameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES sumBGroupTypeStockDate(gt, st, df)
    PROPERTIES(gt, st, df, dt) sumInGroupTypeStockDateDate, sumOutGroupTypeStockDateDate
    PROPERTIES sumAGroupTypeStockDate(gt, st, dt)

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalNameGroup(sk)
    ORDER BY canonicalNameGroup(sk)
    FILTERS countIncludeSkuGroupGroupType(sk, gt)
    FILTERS groupTypeGroup(sk) == gt
    PROPERTIES(sk, st, df) READONLY sumBSessionSkuGroupStockDate
    PROPERTIES(sk, st, df, dt) READONLY sumInSessionGroupSkuStockDateDate, sumOutSessionGroupSkuStockDateDate
    PROPERTIES(sk, st, dt) READONLY sumASessionSkuGroupStockDate
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku(s)
    FILTERS groupGroupTypeSku(gt, s) == sk

    PROPERTIES(s, st, df) READONLY balanceBSkuStockDate, sumBSkuStockDate
    PROPERTIES(s, st, df, dt) READONLY quantitySumInSkuStockDateDate, sumInSkuStockDateDate, quantitySumOutSkuStockDateDate, sumOutSkuStockDateDate
    PROPERTIES(s, st, dt) READONLY balanceASkuStockDate, sumASkuStockDate
    FILTERS includeGroupTypeSku(gt, s)
    FILTERS filterBalanceBAInOutSkuStockDate (s,st,df,dt)
;

printBackSheet 'По группам' (stock, dateFrom, dateTo) =
    ACTION FORM printBackSheet OBJECTS st = stock, df = dateFrom, dt = dateTo PRINT  IMAGE 'print.png' IN print;

fillDocumentReport 'Подбор документа' = ACTION () {
    FORM documents DIALOG;
    IF formResult() == FormResult.ok THEN {
        LOCAL chosenDocument = Document();
        chosenDocument() <- chosenObject('d');
        FOR [ = GROUP SUM 1 BY documentDocumentDetail(d), skuDocumentDetail(d)](chosenDocument(), sku) DO {
            includeSku(sku) <- TRUE;
        }
    }
} TOOLBAR;

deleteInDataSessionReport 'Очистить выборку' = ACTION () {
    includeSku(sku) <- NULL;
    formRefresh();
} TOOLBAR;

FORM reportBackSheet 'Оборотная ведомость' 
    OBJECTS df=DATE FIXED PANEL
    PROPERTIES dateFrom = OBJVALUE(df)

    OBJECTS dt=DATE FIXED PANEL
    PROPERTIES dateTo = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES(st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS gt = GroupType FIXED PANEL
    PROPERTIES(gt) SELECTOR nameGroupType
    PROPERTIES sumBGroupTypeStockDate(gt, st, df)
    PROPERTIES(gt, st, df, dt) sumInGroupTypeStockDateDate, sumOutGroupTypeStockDateDate
    PROPERTIES sumAGroupTypeStockDate(gt, st, dt)
//    PROPERTIES(gt) READONLY sessionConcatGroups

    TREE skuTree sk = Group PARENT parentGroup
    PROPERTIES inSessionGroup(sk)
    PROPERTIES READONLY orderGroup(sk), skuTreeName = nameGroup(sk)
    PROPERTIES(sk, st, df) READONLY sumRecBSkuGroupStockDate
    PROPERTIES(sk, st, df, dt) READONLY sumRecInGroupSkuStockDateDate, sumRecOutGroupSkuStockDateDate
    PROPERTIES(sk, st, dt) READONLY sumRecASkuGroupStockDate
    ORDER BY orderGroup(sk), skuTreeName
    FILTERS groupTypeGroup(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' activeGroup(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES(gt,s) includeGroupTypeSku BACKGROUND backgroundIncludeGroupTypeSku(gt,s)
    PROPERTIES(s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    ORDER BY nameSku(s)
    
    PROPERTIES(s, st, df) READONLY balanceBSkuStockDate, sumBSkuStockDate
    PROPERTIES(s, st, df, dt) READONLY quantitySumInSkuStockDateDate, sumInSkuStockDateDate, quantitySumOutSkuStockDateDate, sumOutSkuStockDateDate
    PROPERTIES(st, df, dt) printListBackSheet, printBackSheet
    PROPERTIES(s, st, dt) READONLY balanceASkuStockDate, sumASkuStockDate

    FILTERGROUP include FILTER 'Отмеченные' includeGroupTypeSku(gt, s) DEFAULT 
    
    FILTERS filterBalanceBAInOutSkuStockDate (s,st,df,dt)    
    PROPERTIES() TODRAW s fillDocumentReport, deleteInDataSessionReport
    
;
@extendFormFilterStockAccess(st, reportBackSheet);

DESIGN reportBackSheet FROM DEFAULT{
    NEW topContainer {
        type = CONTAINERH;
        NEW dates {
            type = CONTAINERH;
            caption = 'Период';
            ADD PROPERTY(dateFrom){caption = 'Дата (с)';}
            ADD PROPERTY(dateTo){caption = 'Дата (по)';}
        }
        ADD st.box;
        ADD gt.box;
    }
    NEW sumContainer{
        type = CONTAINERH;
        caption = 'Итоговые суммы';
        ADD PROPERTY(sumBGroupTypeStockDate(gt, st, df)){caption = 'Начала периода';}
        ADD PROPERTY(sumInGroupTypeStockDateDate(gt,st,df,dt)){caption = 'Товара пришедшего за период';}
        ADD PROPERTY(sumOutGroupTypeStockDateDate(gt,st,df,dt)){caption = 'Товара ушедшего за период';}
        ADD PROPERTY(sumAGroupTypeStockDate(gt, st, dt)){caption = 'Конца периода';}
    }
    NEW bottomContainer {
        fill = 1;
        type = SPLITH;

        ADD skuTree.tree.box;

        PROPERTY(sumRecBSkuGroupStockDate(sk, st, df)){caption = 'Остаток на начало периода';}
        PROPERTY(sumRecASkuGroupStockDate(sk, st, dt)){caption = 'Остаток на конец периода';}

        NEW tabContainer {
            fill = 2;
            type = TABBED;
            NEW skuContainer{
                caption = 'Товары';
                NEW printSkuContainer {
                    type = CONTAINERH;
                    caption = 'Печать';
                    ADD PROPERTY(printListBackSheet(st,df,dt));
                    ADD PROPERTY(printBackSheet(st,df,dt));
                }
                ADD s.box;
                PROPERTY(balanceBSkuStockDate(s, st, df)){caption = 'Остаток на начало периода';}
                PROPERTY(sumBSkuStockDate(s, st, df)){caption = 'Сумма на начало периода';}
                PROPERTY(balanceASkuStockDate(s, st, dt)){caption = 'Остаток на конец периода';}
                PROPERTY(sumASkuStockDate(s, st, dt)){caption = 'Сумма на конец периода';}
            }
        }
    }
    ADD functions.box;
}

NAVIGATOR {
    stockReports{
        ADD reportBalanceStock;
        ADD reportBackSheet;
    }
}