MODULE Warehouse;

REQUIRE System,
        Stock,
        EmployeeStock,
        Hierarchy,
        LegalEntity;

// ----------------------------------------- Группы складов ------------------------------ //
CLASS WarehouseGroup 'Группа складов' : StockGroup;
TABLE warehouseGroup (WarehouseGroup);

@defineExternalizable(warehouseGroup, VARSTRING[100]);

name 'Наименование' = DATA VARISTRING[100](WarehouseGroup);

name(WarehouseGroup group) += name(group) IF group IS WarehouseGroup;

TABLE warehouseGroupWarehouseGroup(WarehouseGroup, WarehouseGroup);
@defineHierarchy(warehouseGroup);
parent (WarehouseGroup stockGroup) += parent (stockGroup);

FORM warehouseGroup 'Группа складов'

    OBJECTS w = WarehouseGroup PANEL
    PROPERTIES(w) id SHOWIF showIDs(),name, nameParent

    EDIT WarehouseGroup OBJECT w
;

FORM warehouseGroups 'Группы складов'

    TREE warehouseGroupTree wg = WarehouseGroup PARENT parent
    PROPERTIES READONLY wgTreeName = name(wg)
    PROPERTIES(wg) NEWSESSION NEW, EDIT, DELETE 
    ORDER BY wgTreeName

    LIST WarehouseGroup OBJECT wg
;

// ----------------------------------------- Склады ------------------------------ //

CLASS Warehouse 'Склад' : Stock, TaxUnit;
TABLE warehouse(Warehouse);

isWarehouse (Stock s) = s IS Warehouse;

@defineExternalizable(warehouse, VARSTRING[100]);
id (Warehouse s) += id(s);

name 'Наименование' = DATA VARISTRING[150](Warehouse) INDEXED;
fullName 'Наименование полное' = DATA VARISTRING[150](Warehouse) INDEXED MINCHARWIDTH 20 PREFCHARWIDTH 30;
phone 'Телефон' = DATA VARISTRING[100](Warehouse);
phone(Warehouse st) += phone(st);
name(Warehouse stock) += name(stock) IF stock IS Warehouse;
fullName(Warehouse stock) += (OVERRIDE name(stock), fullName(stock)) IF stock IS Warehouse;

warehouseGroup (warehouse) = DATA WarehouseGroup (Warehouse) INDEXED AUTOSET;
nameWarehouseGroup 'Группа складов' (Warehouse warehouse) = name(warehouseGroup(warehouse)) IN base MINCHARWIDTH 20 PREFCHARWIDTH 30;
isParent (WarehouseGroup warehouseGroup, Warehouse warehouse) =
    isParent(warehouseGroup(warehouse), warehouseGroup) PERSISTENT;
stockGroup (Warehouse stock) += warehouseGroup (stock);

legalEntity (warehouse) = DATA LegalEntity (Warehouse) INDEXED NOT NULL DELETE;
nameLegalEntity 'Организация' (Warehouse warehouse) = name(legalEntity(warehouse)) IN base MINCHARWIDTH 20 PREFCHARWIDTH 30;
legalEntity (Warehouse stock) += legalEntity(stock);

user 'Отм.' = DATA BOOLEAN (LegalEntity, Warehouse);
user(LegalEntity legalEntity, Warehouse stock) += user(legalEntity, stock);

address 'Адрес' = DATA VARSTRING[100] (Warehouse);
address(Warehouse stock) += address(stock);

email 'E-mail для заказов' = DATA VARSTRING[300] (Warehouse) MINCHARWIDTH 30 PREFCHARWIDTH 50;
email(Warehouse stock) += email(stock);

latitude 'Координата X' = DATA NUMERIC[10,5](Warehouse);
longitude 'Координата Y' = DATA NUMERIC[10,5](Warehouse);

latitude (Warehouse warehouse) += latitude(warehouse);
longitude (Warehouse warehouse) += longitude(warehouse);

quantityDaysClose 'Срок автоматического закрытия заказов' = DATA INTEGER(Warehouse);
autoCloseOrders 'Автоматически закрывать заказы' = DATA BOOLEAN (Warehouse); 

quantityDaysCloseOrders(Warehouse stock) += quantityDaysClose(stock);
autoCloseOrders (Warehouse stock) += autoCloseOrders(stock); 

region = DATA Region (Warehouse);
region(Warehouse warehouse) += region(warehouse);

// Неактивный
inactive 'Неактивный' = DATA BOOLEAN (Warehouse);
inactive(Warehouse st) += inactive(st);

// -------------------------------------------------- Формы ----------------------------------------- //

FORM warehouse 'Склад'

    OBJECTS           w=Warehouse PANEL
    PROPERTIES(w)     name, fullName, phone, id SHOWIF showIDs(), nameWarehouseGroup, address, 
                      email, nameLegalEntity,
                      latitude, longitude, showOnMap, calculateCoordinates, quantityDaysClose SHOWIF isCompany(w), autoCloseOrders SHOWIF isCompany(w), 
                      nameRegion SHOWIF isCompany(w), inactive,
                      default
    ORDER BY          name(w)

    OBJECTS           e = Employee GRID
    PROPERTIES(e)     SHOWIF isCompany(w) READONLY firstName, lastName
    PROPERTIES(e)     SHOWIF isCompany(w) NEWEDIT, EDIT, deletee = DELETE GRID
    FILTERS           in(w, e)

    EDIT Warehouse OBJECT w
;

DESIGN warehouse {
    NEW headerParams {
        type = CONTAINERH;
        NEW headerLeft {
            type = CONTAINERV;
            NEW headerMainParams {
                caption = 'Основные параметры';
                type = COLUMNS;
                columns = 3;
                MOVE PROPERTY(name(w));  
                MOVE PROPERTY(fullName(w));
                MOVE PROPERTY(phone(w));
                MOVE PROPERTY(id(w));
                MOVE PROPERTY(nameWarehouseGroup(w));
                MOVE PROPERTY(nameLegalEntity(w));
                MOVE PROPERTY(inactive(w));
                MOVE PROPERTY(default(w));
            }
            NEW headerLocationParams {
                caption = 'Координаты';
                type = CONTAINERV;
                NEW firstRowHeaderLocationParams {
                    type = CONTAINERH;
                    MOVE PROPERTY(address(w));
                    MOVE PROPERTY(email(w));                
                }
                NEW secondRowHeaderLocationParams {
                    type = CONTAINERH;
                    MOVE PROPERTY(latitude(w));
                    MOVE PROPERTY(longitude(w));
                    MOVE PROPERTY(showOnMap(w));
                    MOVE PROPERTY(calculateCoordinates(w));
                }
            }
            NEW headerExtraParams {
                caption = 'Дополнительные параметры';
                type = COLUMNS;
                columns = 4;
                MOVE PROPERTY(nameRegion(w));
                MOVE PROPERTY(quantityDaysClose(w));
                MOVE PROPERTY(autoCloseOrders(w));
            }
        }
        NEW headerRight;
    }
    MOVE e.box;
    MOVE functions.box;
}

edit 'Редактировать' = ACTION EDITFORM Warehouse;
edit(Warehouse stock) += { edit(stock); }

editSession 'Редактировать' = ACTION EDITFORM SESSION Warehouse;
editSession(Warehouse stock) += { editSession(stock); }

FORM warehouses 'Склады'

    TREE warehouseTree b=STRING[3], wg = WarehouseGroup PARENT parent
    PROPERTIES READONLY VALUE(b), wgTreeName = name(wg)
    PROPERTIES(wg) NEWSESSION NEW, EDIT, DELETE 
    ORDER BY wgTreeName
    FILTERS stringEqualsAll(b)

    OBJECTS w=Warehouse
    PROPERTIES(w) READONLYIF isReadonly() name, fullName, id SHOWIF showIDs(), nameWarehouseGroup, 
                  address, email, nameLegalEntity, nameRegion, latitude[POI], longitude[POI]
    PROPERTIES(w) NEWSESSION NEW, EDIT, deletew=DELETE 
    ORDER BY name(w)
    FILTERS isParent(wg, w) OR (w IS Warehouse AND wg IS WarehouseGroup AND NOT warehouseGroup(w)) OR (w IS Warehouse AND NOT wg)

    LIST Warehouse OBJECT w
;

DESIGN warehouses {

    NEW mainContainer{
        fill = 1;
        type = SPLITH;

        MOVE warehouseTree.tree.box {caption = 'Группы складов';}
        MOVE w.box {
            fill = 3;
            w.grid {
                defaultComponent = TRUE;
            }
        }
    }
    MOVE functions.box;
}
@extendFormEditable(warehouses);

overAddWarehouse = ACTION ABSTRACT LIST (Warehouse);
addWarehouse 'Добавить склад'(LegalEntity legalEntity) = {
	NESTEDSESSION {
	    NEW wr = Warehouse {
	        legalEntity(wr) <- legalEntity;
	        overAddWarehouse(wr);
	        SHOW warehouse OBJECTS w = wr MANAGESESSION DOCKED;
	    }
	}
}

allWarehouseGroup = DATA WarehouseGroup ();
nameAllWarehouseGroup 'Группа складов по умолчанию для организаций' = name(allWarehouseGroup());

EXTEND FORM options PROPERTIES() nameAllWarehouseGroup;
DESIGN options {
    commons {
        MOVE PROPERTY(nameAllWarehouseGroup());
    }
}


defaultWarehouse= GROUP MAX Warehouse stock IF in(LegalEntity legalEntity, stock) AND stock IS Warehouse BY legalEntity; 
addressDefaultWarehouse 'Адрес основного склада' (LegalEntity legalEntity) = address(defaultWarehouse(legalEntity)) IN law;

changeWarehouse(LegalEntity legalEntity) = {
    INPUT s = VARSTRING[100] DO {
        IF defaultWarehouse(legalEntity) THEN {
            address(Warehouse w) <- s WHERE w == defaultWarehouse(legalEntity);        
        } ELSE {
            NEW w = Warehouse {
                legalEntity(w) <- legalEntity;
                warehouseGroup(w) <- allWarehouseGroup();                
                address(w) <- s;    
                name(w) <- VARISTRING[150]('Склад '+(name(legalEntity(w))));    
            }
        }
    }
}

EXTEND FORM legalEntity
    PROPERTIES(l) addressDefaultWarehouse ON CHANGE changeWarehouse(l)
    PROPERTIES addWarehouse(l) TODRAW st TOOLBAR
;

NAVIGATOR {
    stockMasterData {
        ADD warehouses;
    }
}

// ----------------------------------- Стандартные данные ----------------------------------- //


loadDefaultWarehouseGroup 'Добавить группы складов'(VARISTRING[100] iname, VARSTRING[100] id) = {
    NEW w = WarehouseGroup {
        name(w) <- iname;
        id(w) <- id;

    }
}
loadDefaultRecWarehouseGroup 'Добавить группы складов (рекурсивно)'(VARISTRING[100] iname, VARSTRING[100] id, VARSTRING[100] idParent) = {
    NEW w = WarehouseGroup {
        name(w) <- iname;
        id(w) <- id;
        parent(w) <- warehouseGroup(idParent);
    }
}

loadDefaultStockGroups () += {
    loadDefaultWarehouseGroup ('Склады контрагентов', 'Склады контрагентов');
    loadDefaultWarehouseGroup ('Собственные склады', 'Собственные склады');
}