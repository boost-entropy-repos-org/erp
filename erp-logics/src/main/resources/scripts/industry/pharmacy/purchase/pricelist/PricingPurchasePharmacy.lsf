MODULE PricingPurchasePharmacy;

REQUIRE PricingPurchasePriceDivider, ItemPharmacy, PricingSumPurchase;

NAMESPACE Purchase;

blisterAmount 'Кол-во блистеров (в ед.)' = ABSTRACT INTEGER(InvoiceDetail) MINCHARWIDTH 3 PREFCHARWIDTH 6;    
blisterAmount 'Кол-во блистеров (в ед.)' = DATA INTEGER(UserInvoiceDetail) MINCHARWIDTH 3 PREFCHARWIDTH 6;

blisterAmount (UserInvoiceDetail detail) += blisterAmount(detail);

setBlisterAmount (UserInvoiceDetail detail) = {
    INPUT i = INTEGER DO
        blisterAmount(detail) <- i IF i != 0;
}

EXTEND FORM userInvoice
    PROPERTIES (pd) blisterAmount AFTER pricingQuantity(pd) ON CHANGE setBlisterAmount(pd) BACKGROUND backgroundRetail(i)    
;

EXTEND FORM invoices
    PROPERTIES (d) READONLY blisterAmount AFTER nameRetailPriceListType(d) BACKGROUND backgroundRetail(i)     
;              

WHEN LOCAL FORMS userInvoice GOAFTER sku[UserInvoiceDetail] CHANGED(sku(UserInvoiceDetail detail)) DO {
    blisterAmount(detail) <- blisterAmount(sku(detail));    
} 

priceDivider(UserInvoiceDetail detail) += blisterAmount(detail);

checkCountLedgerRetailPrice 'Запрет на изменение розничной цены, если есть продажи по партии' = DATA BOOLEAN ();

EXTEND FORM options
    PROPERTIES () checkCountLedgerRetailPrice
;

DESIGN options {
    purchase {
        MOVE PROPERTY(checkCountLedgerRetailPrice());
    }

}

CONSTRAINT SETCHANGED(retailPrice(InvoiceDetail detail)) AND checkCountLedgerRetailPrice() AND countLedger(Batch b,customerStock(detail)) > 1 AND detail == invoiceDetail(b)
    MESSAGE 'Нельзя менять расценку, т.к. по партии были продажи. Составьте акт переоценки';