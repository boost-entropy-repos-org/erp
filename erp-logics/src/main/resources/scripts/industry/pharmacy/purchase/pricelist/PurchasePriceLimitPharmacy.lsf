MODULE PurchasePriceLimitPharmacy;

REQUIRE PricingPriceLimitPharmacy, PricingPurchasePharmacy, PurchaseManufacturingPrice, PricingPriceLimit, PurchasePriceLimitFixed;

NAMESPACE Purchase;

//------------------ Предельные надбавки ----------------------//

@defineDocumentInterfaceProperty (invoice, showLimitPharmacyPrice, 'Предельная надбавка');
@defineDocumentInterfaceDetailMarkupPrefix (invoice, limitPharmacy, ' предельная');

//WHEN LOCAL FORMS userInvoice GOAFTER retailPrice[UserInvoiceDetail]
//             (CHANGED(customerStock(UserInvoiceDetail detail)) OR
//              CHANGED(sku(detail)) OR CHANGED(manufacturingPrice(detail)) OR
//              SET(showLimitPharmacyPrice(detail)))
//             AND showLimitPharmacyPrice(detail) DO {   
//    limitPharmacyMarkup(detail) <- retailMarkupPharmacy(sku(detail), NUMERIC[16,4](manufacturingPrice(detail)), date(detail));
//}

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции расценки, заданной для операции закупка
showLimitPharmacyPrice (UserInvoice invoice) <- showLimitPharmacyPrice(pricingOperation(invoice))
    WHEN CHANGED(operation(invoice));

showIfLimitPharmacyPrice = showLimitPharmacyPrice (UserInvoice invoice) AND createPricing(invoice);

EXTEND FORM userInvoice
    PROPERTIES(i) showLimitPharmacyPrice SHOWIF createPricing(i) BACKGROUND backgroundRetail(i)
    PROPERTIES(pd) SHOWIF showIfLimitPharmacyPrice(i) BEFORE retailMarkup(pd) limitPharmacyMarkup BACKGROUND backgroundRetail(i)
;

DESIGN userInvoice{
    headerCreatePricing {
        MOVE PROPERTY (showLimitPharmacyPrice(i));

    }
}

EXTEND FORM invoices
    PROPERTIES(d) READONLY SHOWIF showLimitPharmacyPrice(i) BEFORE retailMarkup(d) limitPharmacyMarkup BACKGROUND backgroundRetail(i)
;

//расчет предельной цены
maxOverPrice (UserInvoiceDetail detail) = MIN price(detail), manufacturingPrice(detail) * (100 (+) wholesaleMarkupPharmacy(sku(detail), manufacturingPrice(detail), date(detail)))/100;

calcLimitPharmacyPrice (UserInvoiceDetail detail) = 
                                       round(
                                           [= (A + B*C/100.0)*(100.0 + D)/100.0](
                                                    maxOverPrice(detail),
                                                    manufacturingPrice(detail),
                                                    limitPharmacyMarkup(detail),
                                                    valueRetailVAT(detail)), limitRetailMarkupPharmacyCondition());
                                                    
limitPharmacyPrice (UserInvoiceDetail detail) =
    IF blisterAmount(detail) 
        THEN round(calcLimitPharmacyPrice(detail)/blisterAmount(detail), limitRetailMarkupPharmacyCondition())*blisterAmount(detail)
        ELSE calcLimitPharmacyPrice(detail)   
;

WHEN LOCAL FORMS userInvoice GOAFTER retailPrice[UserInvoiceDetail] 
            (SETCHANGED(retailPrice(UserInvoiceDetail d)) OR CHANGED(manufacturingPrice(d)) 
             OR CHANGED(sku(d)) OR CHANGED(price(d)) OR SET(showLimitPharmacyPrice(d)) OR CHANGED(pharmacyPriceGroup(sku(d)))) AND //  вообще в событии должно быть это условие, но тогда не всегда срабатывает (см. skype с Vitalur за 10.07) 
             showLimitPharmacyPrice(d) NOINLINE DO {
    limitPharmacyMarkup(d) <- retailMarkupPharmacy(sku(d), NUMERIC[16,4](manufacturingPrice(d)), date(d));         
    IF limitPharmacyPrice(d) < retailPrice(d) OR (retailPriceListType(d) AND (limitPharmacyPrice(d) OR maxLimitPrice(d)) AND useMaxRetailMarkup()) THEN {
        retailPrice(d) <- OVERRIDE min(limitPharmacyPrice(d),maxLimitPrice(d)), limitPharmacyPrice(d);
        retailMarkup(d) <- calcRetailMarkup(d);
    }
}

showLimitPharmacyPrice(InvoicePricing pricing) += showLimitPharmacyPrice(invoice(pricing));
limitPharmacyMarkup(InvoicePricingDetail detail) += limitPharmacyMarkup(invoiceDetail(detail));   