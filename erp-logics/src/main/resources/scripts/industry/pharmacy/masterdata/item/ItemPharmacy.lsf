MODULE ItemPharmacy;

REQUIRE Item;

NAMESPACE Item;

GROUP itemPharmacy 'Фармакологические свойства';

// Действующее вещество
CLASS Substance 'Действующее вещество';
TABLE substance(Substance);

name 'Наименование' = DATA VARISTRING[100](Substance);
substanceName = GROUP AGGR Substance s BY name(s);
@defineExternalizable(substance, VARSTRING[100]);

@defineNumeratedID(Substance, 'Действующие вещества');

FORM substance 'Действующие вещества'
    OBJECTS t=Substance PANEL
    PROPERTIES(t) name, id SHOWIF showIDs()
    EDIT Substance OBJECT t
;

FORM dialogSubstances 'Действующие вещества'
    OBJECTS t=Substance
    PROPERTIES(t) READONLY name, id SHOWIF showIDs() 
    ORDER name(t)
    LIST Substance OBJECT t
;
DESIGN dialogSubstances { BOX { size = (600, 400); } }

@defineObjectItemAttribute(substance, Substance, name, 'Действующее вещество', itemPharmacy);

@defineItemFilterValue(substance, 'Действующее вещество', t);

@defineUniteAttributeItem(substance, name, 'действующее вещество', 'действующие вещества', item);

EXTEND FORM attributesItem
    PROPERTIES READONLY AFTER name(substance) id(substance) SHOWIF showIDs()
;
@defineObjectItemAttributeBatch (substance, nameSubstance, 'Действующее вещество');

@definePrimitiveItemAttribute(needPrescription, BOOLEAN, 'Необходим рецепт', itemPharmacy);

@definePrimitiveItemAttribute(blisterAmount, INTEGER, 'Кол-во блистеров', itemPharmacy);

DESIGN item {
    itemPrimaryColumn1 {
        MOVE GROUP(itemPharmacy,i) {
            columns = 2;
        }
    }
}

DESIGN itemGroup {
    BOX {
        attributes {
            MOVE GROUP(itemPharmacy,g) {
                type = CONTAINERH;
            };
        }
    }
}

CONSTRAINT blisterAmount(Item i) AND NOT blisterAmount(i) > 0 
    MESSAGE 'Кол-во блистеров должно быть положительным';
