MODULE ItemNutrition;

REQUIRE System, Item;

NAMESPACE Item;

GROUP itemNutrition 'Энергетическая ценность' : public;

energyItem 'Энергетическая ценность на 100г, ккал' = DATA NUMERIC[8,2] (Item) IN itemNutrition;
fatsItem 'Жиры на 100г, г' = DATA NUMERIC[8,2] (Item) IN itemNutrition;
carbohydratesItem 'Углеводы на 100г, г' = DATA NUMERIC[8,2] (Item) IN itemNutrition;
proteinsItem 'Белки на 100г, г' = DATA NUMERIC[8,2] (Item) IN itemNutrition;
containsGMOItem 'Содержит ГМО' = DATA BOOLEAN (Item) IN itemNutrition;

//energyItem 'Энергетическая ценность на 100г, ккал' = DATA NUMERIC[8,2] (Item) IN itemNutrition;
//fatsItem 'Жиры на 100г, г' = DATA NUMERIC[8,2] (Item) IN itemNutrition;
//carbohydratesItem 'Углеводы на 100г, г' = DATA NUMERIC[8,2] (Item) IN itemNutrition;
//proteinsItem 'Белки на 100г, г' = DATA NUMERIC[8,2] (Item) IN itemNutrition;

@defineItemAttribute(energy, 'Энергетическая ценность', itemNutrition);

EXTEND FORM itemGroup PROPERTIES(g) userShowEnergyItemGroup;
EXTEND FORM itemGroups PROPERTIES(g) READONLYIF  isReadonly() showEnergyItemGroup BACKGROUND backgroundShowEnergyItemGroup(g) BEFORE deleteg;
DESIGN itemGroup {
    itemGroupDetail1 {
        ADD g.itemNutrition;
    }
}

overCopyItem(s, d) += ACTION (s, d) {
    ASSIGN energyItem(d) <- energyItem(s);
    ASSIGN fatsItem(d) <- fatsItem(s);
    ASSIGN carbohydratesItem(d) <- carbohydratesItem(s);
    ASSIGN proteinsItem(d) <- proteinsItem(s);
    ASSIGN containsGMOItem(d) <- containsGMOItem(s);
}

EXTEND FORM item 
    PROPERTIES(i) SHOWIF showEnergyItem(i) energyItem, fatsItem, carbohydratesItem, proteinsItem, containsGMOItem
;
DESIGN item {
    itemPrimaryColumn2 {
        ADD i.itemNutrition {
            columns = 2;
        }
    }
}
EXTEND FORM items 
    PROPERTIES(i) READONLYIF isReadonly() BEFORE deletei SHOWIF showEnergyItemGroup(g)
                  energyItem, fatsItem, carbohydratesItem, proteinsItem, containsGMOItem
;
