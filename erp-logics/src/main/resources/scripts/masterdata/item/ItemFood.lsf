MODULE ItemFood;

REQUIRE System, Item;

NAMESPACE Item;

GROUP itemFood 'Пищевые характеристики' : public;

// Вкус
CLASS Taste 'Вкус товара';
TABLE taste(Taste);

nameTaste 'Наименование' = DATA VARISTRING[50](Taste);

FORM taste 'Вкус товара'
    OBJECTS t=Taste FIXED PANEL
    PROPERTIES(t) nameTaste
    EDIT Taste OBJECT t
;

FORM tastes 'Вкусы товара'
    OBJECTS t=Taste
    PROPERTIES(t) nameTaste READONLY, DELETE FORCE PANEL TOOLBAR
    PROPERTIES(t) ADDFORM, EDITFORM
    ORDER BY nameTaste(t)
    DIALOG Taste OBJECT t
;
DESIGN tastes FROM DEFAULT { main{ preferredSize = (600, 400); } }

@defineObjectItemAttribute(taste, Taste, name, 'Вкус', itemFood);
@defineObjectItemAttributeBatch (taste, nameTaste, 'Вкус');

// Степень охлаждения
CLASS CoolingDegree 'Степень охлаждения товара';
TABLE coolingDegree(CoolingDegree);

nameCoolingDegree 'Наименование' = DATA VARISTRING[50](CoolingDegree);
shortNameCoolingDegree 'Краткое наименование' = DATA ISTRING[10](CoolingDegree);

FORM coolingDegree 'Степень охлаждения товара'
    OBJECTS t=CoolingDegree FIXED PANEL
    PROPERTIES(t) nameCoolingDegree, shortNameCoolingDegree
    EDIT CoolingDegree OBJECT t
;

FORM coolingDegrees 'Степени охлаждения товара'
    OBJECTS t=CoolingDegree
    PROPERTIES(t) nameCoolingDegree READONLY, shortNameCoolingDegree READONLY, DELETE FORCE PANEL TOOLBAR
    PROPERTIES(t) ADDFORM, EDITFORM
    ORDER BY nameCoolingDegree(t)
    DIALOG CoolingDegree OBJECT t
;
DESIGN coolingDegrees FROM DEFAULT { main{ preferredSize = (600, 400); } }

@defineObjectItemAttribute(coolingDegree, CoolingDegree, name, 'Степень охлаждения', itemFood);
@defineObjectItemAttributeBatch (coolingDegree, nameCoolingDegree, 'Степень охлаждения');
//@implementObjectShortItemAttribute(coolingDegree, 'Степень охлаждения (сокр.)');

// Жирность
@defineDoubleItemAttribute(percentFat, NUMERIC[5,1], '% жирности', itemFood);
@defineItemAttributeBatch (percentFat, '% жирности');
@implementItemAttribute(percentFat, '% жирности', Double, itemPercentFat);

// Алкоголь
@defineDoubleItemAttribute(percentAlcohol, NUMERIC[5,1], '% алкоголя', itemFood);
@defineItemAttributeBatch (percentAlcohol, '% алкоголя');
@implementItemAttribute(percentAlcohol, '% алкоголя', Double, itemPercentAlcohol);

overCopyItem(s, d) += ACTION (s, d) {
    ASSIGN tasteItem(d) <- tasteItem(s);
    ASSIGN coolingDegreeItem(d) <- coolingDegreeItem(s);
    ASSIGN percentFatItem(d) <- percentFatItem(s);
    ASSIGN percentAlcoholItem(d) <- percentAlcoholItem(s);
}

EXTEND DESIGN item {
    itemPrimaryColumn1 {
        ADD i.itemFood {
            columns = 2;
        }
    }
}

EXTEND DESIGN itemGroup {
    itemGroupDetail {
        ADD g.itemFood {
            columns = 6;
        }
    }
}

NAVIGATOR {
    itemAttributeNavigator {
        ADD tastes;
        ADD coolingDegrees;
    }
}
