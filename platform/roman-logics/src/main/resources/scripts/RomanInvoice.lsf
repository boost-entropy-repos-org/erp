MODULE RomanInvoice;

REQUIRE System,
        Stock,
        Store,
        I18n,
        LegalEntity,
        Barcode,
        RetailCRM,
        StockDocument,
        Employee,
        UserPriceChange,
        Contract,
        Supplier,
        Warehouse,
        RomanLogicsModule;

PRIORITY Stock, LegalEntity, Store, RomanLogicsModule;

changeNameSkuLanguageInvoice = ACTION (sku, invoice) {
    REQUEST STRING[50] INPUT;
    SET translateNameSkuLanguage(sku, language) <- requestedString() WHERE language == languageInvoice(invoice);
}

changeMainCompositionSkuLanguageInvoice = ACTION (sku, invoice) {
    REQUEST STRING[200] INPUT;
    SET mainCompositionSkuLanguage(sku, language) <- requestedString() WHERE language == languageInvoice(invoice);
}

changeAdditionalCompositionSkuLanguageInvoice = ACTION (sku, invoice) {
    REQUEST STRING[200] INPUT;
    SET additionalCompositionSkuLanguage(sku, language) <- requestedString() WHERE language == languageInvoice(invoice);
}

// ----------- Групповое изменение составов ----------------- //

countInvoiceMainComposition 'Кол-во' = GROUP SUM 1 IF quantityDocumentSku(document, sku) IF document IS Invoice
                                             BY document, mainCompositionSku(sku);

countInvoiceAdditionalComposition 'Кол-во' = GROUP SUM 1 IF quantityDocumentSku(document, sku) IF document IS Invoice
                                             BY document, additionalCompositionSku(sku);

countInvoiceMainCompositionLanguage 'Кол-во' = GROUP SUM 1 IF quantityDocumentSku(document, sku) IF document IS Invoice
                                                     BY document, mainCompositionSkuLanguage(sku, languageInvoice(document));

countInvoiceAdditionalCompositionLanguage 'Кол-во' = GROUP SUM 1 IF quantityDocumentSku(document, sku) AND document IS Invoice
                                                           BY document, additionalCompositionSkuLanguage(sku, languageInvoice(document));

changeDocumentMainComposition = ACTION (document, comp) {
    REQUEST STRING[200] INPUT;
    SET mainCompositionSku(sku) <- requestedString() WHERE mainCompositionSku(sku) == comp AND quantityDocumentSku(document, sku);
}
changeDocumentAdditionalComposition = ACTION (document, comp) {
    REQUEST STRING[200] INPUT;
    SET additionalCompositionSku(sku) <- requestedString() WHERE additionalCompositionSku(sku) == comp AND quantityDocumentSku(document, sku);
}

changeDocumentMainCompositionLanguage = ACTION (document, comp) {
    REQUEST STRING[200] INPUT;
    SET mainCompositionSkuLanguage(sku, language) <- requestedString() WHERE mainCompositionSkuLanguage(sku, language) == comp AND quantityDocumentSku(document, sku) AND language == languageInvoice(document);
}

changeDocumentAdditionalCompositionLanguage = ACTION (document, comp) {
    REQUEST STRING[200] INPUT;
    SET additionalCompositionSkuLanguage(sku, language) <- requestedString() WHERE additionalCompositionSkuLanguage(sku, language) == comp AND quantityDocumentSku(document, sku) AND language == languageInvoice(document);
}

quantityUnclassifiedCountrySupplierSupplier 'Непривязанных стран' (supplier) =
    GROUP SUM 1 IF supplierCountrySupplier (countrySupplier) == supplier AND NOT countryCountrySupplier(countrySupplier)
    BY supplier PERSISTENT;

quantityUnclassifiedSeasonSupplierSupplier 'Непривязанных сезонов' (supplier) =
    GROUP SUM 1 IF supplierSeasonSupplier (seasonSupplier) == supplier AND NOT seasonYearSeasonSupplier(seasonSupplier)
    BY supplier PERSISTENT;

quantityUnclassifiedGenderSupplierSupplier 'Непривязанных полов' (supplier) =
    GROUP SUM 1 IF supplierGenderSupplier (genderSupplier) == supplier AND NOT genderGenderSupplier(genderSupplier)
    BY supplier PERSISTENT;


EXTEND FORM boxInvoiceForm
    PROPERTIES (supplier) READONLY quantityUnclassifiedCountrySupplierSupplier SHOWIF quantityUnclassifiedCountrySupplierSupplier(supplier),
                                   quantityUnclassifiedSeasonSupplierSupplier SHOWIF quantityUnclassifiedSeasonSupplierSupplier(supplier),
                                   quantityUnclassifiedGenderSupplierSupplier SHOWIF quantityUnclassifiedGenderSupplierSupplier(supplier)

    PROPERTIES (invoice) READONLY nameLanguageInvoice AFTER nameDestinationDestinationDocument
    PROPERTIES (sku) originalNameArticleSku, translateNameArticleSku ON SHORTCUT translationInvoiceName(sku)
    PROPERTIES (sku, invoice) translateNameSkuInvoice ON CHANGE changeNameSkuLanguageInvoice(sku, invoice) ON SHORTCUT translationInvoiceLanguageName(sku, invoice) SHOWIF languageInvoice(invoice)

    PROPERTIES (sku) mainCompositionOriginSku, mainCompositionSku ON SHORTCUT translationInvoiceMainComposition(sku)
    PROPERTIES (sku, invoice) mainCompositionSkuInvoice ON CHANGE changeMainCompositionSkuLanguageInvoice(sku, invoice) ON SHORTCUT translationInvoiceLanguageMainComposition(sku, invoice) SHOWIF languageInvoice(invoice)


    PROPERTIES (sku) additionalCompositionOriginSku, additionalCompositionSku ON SHORTCUT translationInvoiceAdditionalComposition(sku)
    PROPERTIES (sku, invoice) additionalCompositionSkuInvoice ON CHANGE changeAdditionalCompositionSkuLanguageInvoice(sku, invoice) ON SHORTCUT translationInvoiceLanguageAdditionalComposition(sku, invoice) SHOWIF languageInvoice(invoice)

    OBJECTS a = Article
    PROPERTIES (a) READONLY sidArticle
    PROPERTIES (a) sidSeasonSupplierArticle, nameSeasonYearArticle, nameBrandSupplierArticle, nameCollectionSupplierArticle, nameSubCategorySupplierArticle,
                   nameThemeSupplierArticle, nameCategoryArticle, originalNameArticle, sidCustomCategoryOriginArticle, nameTypeFabricArticle,
                   sidGenderArticle, nameTypeLabelArticle, nameCountrySupplierOfOriginArticle, netWeightArticle, mainCompositionOriginArticle

    FILTERS quantityDocumentArticle(invoice, a)

    OBJECTS mc = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(mc) ON CHANGE changeDocumentMainComposition(invoice, mc), countInvoiceMainComposition(invoice, mc)
    FILTERS countInvoiceMainComposition(invoice, mc)

    OBJECTS ac = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(ac) ON CHANGE changeDocumentAdditionalComposition(invoice, ac), countInvoiceAdditionalComposition(invoice, ac)
    FILTERS countInvoiceAdditionalComposition(invoice, ac)

    OBJECTS mcl = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(mcl) ON CHANGE changeDocumentMainCompositionLanguage(invoice, mcl), countInvoiceMainCompositionLanguage(invoice, mcl)
    FILTERS countInvoiceMainCompositionLanguage(invoice, mcl)

    OBJECTS acl = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(acl) ON CHANGE changeDocumentAdditionalCompositionLanguage(invoice, acl), countInvoiceAdditionalCompositionLanguage(invoice, acl)
    FILTERS countInvoiceAdditionalCompositionLanguage(invoice, acl)
;

EXTEND DESIGN boxInvoiceForm {
    NEW topContainer BEFORE functions.box {
        childConstraints = TO THE BOTTOM;
        type = SPLITV;
        NEW headerContainer {

            fillVertical = 1;
            childConstraints = TO THE BOTTOM;
            ADD supplier.box;
            ADD invoice.box;
        }

        ADD invoiceDetail {

            fillVertical = 3;

            NEW sku {
                title = 'SKU';
                ADD sku.box;
            }

            NEW articles {
                title = 'Артикулы';
                ADD a.box;
            }

            NEW compositions {
                childConstraints = TO THE RIGHT;
                title = 'Составы';
                ADD mc.box {
                    title = 'Основные (рус.)';
                }
                ADD ac.box {
                    title = 'Дополнительные (рус.)';
                }
                ADD mcl.box {
                    title = 'Основные (укр.)';
                }
                ADD acl.box {
                    title = 'Дополнительные (укр.)';
                }
            }

            NEW order {
                title = 'Заказы';
                ADD order.box;
            }
        }
    }

    PROPERTY(quantityUnclassifiedCountrySupplierSupplier) { background = #FFEEEE; }
    PROPERTY(quantityUnclassifiedSeasonSupplierSupplier) { background = #FFEEEE; }
    PROPERTY(quantityUnclassifiedGenderSupplierSupplier) { background = #FFEEEE; }

    PROPERTY(objectClassName) { background = #FFEEEE; }
    PROPERTY(nameCompanyInvoice) { background = #FFEEEE; }
    PROPERTY(nameCurrencyDocument) { background = #FFEEEE; }
    PROPERTY(nameCurrencyRRPDocument) { background = #FFEEEE; }
    PROPERTY(nameDestinationDestinationDocument) { background = #FFEEEE; }
    PROPERTY(numberContractInvoice) { background = #FFEEEE; }

    PROPERTY(translateNameArticleSku) { background = #FFEEEE; }
    PROPERTY(mainCompositionSku) { background = #FFEEEE; }
    PROPERTY(additionalCompositionSku) { background = #FFEEEE; }
    PROPERTY(translateNameSkuInvoice) { background = #FFEEEE; }
    PROPERTY(mainCompositionSkuInvoice) { background = #FFEEEE; }
    PROPERTY(additionalCompositionSkuInvoice) { background = #FFEEEE; }
}

EXTEND FORM simpleInvoiceForm
    PROPERTIES (supplier) READONLY quantityUnclassifiedCountrySupplierSupplier SHOWIF quantityUnclassifiedCountrySupplierSupplier(supplier),
                                   quantityUnclassifiedSeasonSupplierSupplier SHOWIF quantityUnclassifiedSeasonSupplierSupplier(supplier),
                                   quantityUnclassifiedGenderSupplierSupplier SHOWIF quantityUnclassifiedGenderSupplierSupplier(supplier)

    PROPERTIES (invoice) READONLY nameLanguageInvoice AFTER nameDestinationDestinationDocument
    PROPERTIES (sku) originalNameArticleSku, translateNameArticleSku ON SHORTCUT translationInvoiceNameSimple(sku)
    PROPERTIES (sku, invoice) translateNameSkuInvoice ON CHANGE changeNameSkuLanguageInvoice(sku, invoice) ON SHORTCUT translationInvoiceLanguageNameSimple(sku, invoice) SHOWIF languageInvoice(invoice)

    PROPERTIES (sku) mainCompositionOriginSku, mainCompositionSku ON SHORTCUT translationInvoiceMainCompositionSimple(sku)
    PROPERTIES (sku, invoice) mainCompositionSkuInvoice ON CHANGE changeMainCompositionSkuLanguageInvoice(sku, invoice) ON SHORTCUT translationInvoiceLanguageMainCompositionSimple(sku, invoice) SHOWIF languageInvoice(invoice)


    PROPERTIES (sku) additionalCompositionOriginSku, additionalCompositionSku ON SHORTCUT translationInvoiceAdditionalCompositionSimple(sku)
    PROPERTIES (sku, invoice) additionalCompositionSkuInvoice ON CHANGE changeAdditionalCompositionSkuLanguageInvoice(sku, invoice) ON SHORTCUT translationInvoiceLanguageAdditionalCompositionSimple(sku, invoice) SHOWIF languageInvoice(invoice)

    OBJECTS a = Article
    PROPERTIES (a) READONLY sidArticle
    PROPERTIES (a) sidSeasonSupplierArticle, nameSeasonYearArticle, nameBrandSupplierArticle, nameCollectionSupplierArticle, nameSubCategorySupplierArticle,
                   nameThemeSupplierArticle, nameCategoryArticle, originalNameArticle, sidCustomCategoryOriginArticle, nameTypeFabricArticle,
                   sidGenderArticle, nameTypeLabelArticle, nameCountrySupplierOfOriginArticle, netWeightArticle, mainCompositionOriginArticle

    FILTERS quantityDocumentArticle(invoice, a)

    OBJECTS mc = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(mc) ON CHANGE changeDocumentMainComposition(invoice, mc), countInvoiceMainComposition(invoice, mc)
    FILTERS countInvoiceMainComposition(invoice, mc)

    OBJECTS ac = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(ac) ON CHANGE changeDocumentAdditionalComposition(invoice, ac), countInvoiceAdditionalComposition(invoice, ac)
    FILTERS countInvoiceAdditionalComposition(invoice, ac)

    OBJECTS mcl = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(mcl) ON CHANGE changeDocumentMainCompositionLanguage(invoice, mcl), countInvoiceMainCompositionLanguage(invoice, mcl)
    FILTERS countInvoiceMainCompositionLanguage(invoice, mcl)

    OBJECTS acl = STRING[200] FIXED GRID
    PROPERTIES OBJVALUE(acl) ON CHANGE changeDocumentAdditionalCompositionLanguage(invoice, acl), countInvoiceAdditionalCompositionLanguage(invoice, acl)
    FILTERS countInvoiceAdditionalCompositionLanguage(invoice, acl)
;


EXTEND DESIGN simpleInvoiceForm {
    NEW topContainer BEFORE functions.box {
        childConstraints = TO THE BOTTOM;
        type = SPLITV;
        NEW headerContainer {
            fillVertical = 1;
            childConstraints = TO THE BOTTOM;
            ADD supplier.box;
            ADD invoice.box;
        }

        ADD invoiceDetail {

            fillVertical = 3;

            NEW sku {
                title = 'SKU';
                ADD sku.box;
            }

            NEW articles {
                title = 'Артикулы';
                ADD a.box;
            }

            NEW compositions {
                childConstraints = TO THE RIGHT;
                title = 'Составы';
                ADD mc.box {
                    title = 'Основные (рус.)';
                }
                ADD ac.box {
                    title = 'Дополнительные (рус.)';
                }
                ADD mcl.box {
                    title = 'Основные (укр.)';
                }
                ADD acl.box {
                    title = 'Дополнительные (укр.)';
                }
            }

            NEW order {
                title = 'Заказы';
                ADD order.box;
            }
        }
    }

    PROPERTY(quantityUnclassifiedCountrySupplierSupplier) { background = #FFEEEE; }
    PROPERTY(quantityUnclassifiedSeasonSupplierSupplier) { background = #FFEEEE; }
    PROPERTY(quantityUnclassifiedGenderSupplierSupplier) { background = #FFEEEE; }

    PROPERTY(objectClassName) { background = #FFEEEE; }
    PROPERTY(nameCompanyInvoice) { background = #FFEEEE; }
    PROPERTY(nameCurrencyDocument) { background = #FFEEEE; }
    PROPERTY(nameCurrencyRRPDocument) { background = #FFEEEE; }
    PROPERTY(nameDestinationDestinationDocument) { background = #FFEEEE; }
    PROPERTY(numberContractInvoice) { background = #FFEEEE; }

    PROPERTY(translateNameArticleSku) { background = #FFEEEE; }
    PROPERTY(mainCompositionSku) { background = #FFEEEE; }
    PROPERTY(additionalCompositionSku) { background = #FFEEEE; }
    PROPERTY(translateNameSkuInvoice) { background = #FFEEEE; }
    PROPERTY(mainCompositionSkuInvoice) { background = #FFEEEE; }
    PROPERTY(additionalCompositionSkuInvoice) { background = #FFEEEE; }
}

