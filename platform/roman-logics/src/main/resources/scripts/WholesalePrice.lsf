MODULE WholesalePrice;

REQUIRE System,
        Declaration,
        RomanMasterData,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, RB;

CLASS WholesalePriceDocument 'Оптовый прайс' : NumeratedObject;

TABLE wholesalePriceDocument (WholesalePriceDocument);
TABLE wholesalePriceDocumentArticle (WholesalePriceDocument, Article);

@defineNumeratedObjectDefault(WholesalePriceDocument, 'Нумератор для оптовых прайсов', 'ОП');
@defineDocumentHeaderTime(WholesalePriceDocument);
@defineDocumentHeaderCurrency(wholesalePriceDocument);

declarationWholesalePriceDocument 'Декларация оптового прайса (ИД)' = DATA Declaration(WholesalePriceDocument);

quantityWholesalePriceSetDocumentDeclaration (declaration) = GROUP SUM 1 IF declarationWholesalePriceDocument(wholesalePriceDocument)
                                                           BY declarationWholesalePriceDocument(wholesalePriceDocument);
isWholesalePriceSetDocumentDeclaration (declaration) = declaration IS Declaration IF NOT quantityWholesalePriceSetDocumentDeclaration(declaration);

isPriceSetDeclaration 'Статус' (declaration) = IF isWholesalePriceSetDocumentDeclaration(declaration)
                                     THEN 'Не расцененная' IF declaration IS Declaration
                                     ELSE 'Расцененная' IF declaration IS Declaration MINCHARWIDTH 14;

backgroundWholesalePriceSetDocument 'Цвет' (declaration) = RGB(212,255,212) IF isWholesalePriceSetDocumentDeclaration(declaration);

inWholesalePriceDocumentArticle 'Товар в документе' = DATA BOOLEAN(WholesalePriceDocument, Article);

priceCustomWholesalePriceDocumentArticle 'Себестоимость (БУ)' (wholesalePriceDocument, article) = DATA NUMERIC[14,2](WholesalePriceDocument, Article) IN base;

priceManagerialWholesalePriceDocumentArticle 'Себестоимость (УУ)' (wholesalePriceDocument, article) = DATA NUMERIC[14,2](WholesalePriceDocument, Article) IN base;

markupWholesalePriceDocumentArticle 'Оптовая надбавка' = DATA NUMERIC[8,3] (WholesalePriceDocument, Article);

markupWholesalePriceDocumentArticle(wholesalePriceDocument, article) <- 0.0 //IF (wholesalePriceDocument IS WholesalePriceDocument AND article IS Article)
    WHEN ASSIGNED (inWholesalePriceDocumentArticle(wholesalePriceDocument, article));

priceWholesalePriceDocumentArticle 'Оптовая цена' = DATA NUMERIC[14,2](WholesalePriceDocument, Article) IN base;

priceWholesalePriceDocumentArticle(wholesalePriceDocument, article) <-
    round0(priceCustomWholesalePriceDocumentArticle(wholesalePriceDocument, article)*(1+markupWholesalePriceDocumentArticle(wholesalePriceDocument, article)/100))
    WHEN CHANGED (markupWholesalePriceDocumentArticle(wholesalePriceDocument, article));

orderWholesalePriceDocument = STRUCT(dateTimeWholesalePriceDocument(wholesalePriceDocument), wholesalePriceDocument) PERSISTENT;

//concatWholesalePriceDocumentArticleDateTime (article, dateTime) = GROUP MAX orderWholesalePriceDocument(wholesalePriceDocument) IF
//                                                                   priceWholesalePriceDocumentArticle(wholesalePriceDocument, article) AND
//                                                                   dateTimeWholesalePriceDocument(wholesalePriceDocument) < (dateTime AS DATETIME)
//                                                                BY article, dateTime;
//
//documentWholesalePriceArticleDateTime (article, dateTime) = concatWholesalePriceDocumentArticleDateTime(article, dateTime)[2];
//
//priceWholesaleArticleDateTime(article, dateTime) = priceWholesalePriceDocumentArticle(documentWholesalePriceArticleDateTime(article, dateTime), article);

concatWholesalePriceDocumentArticleCurrencyDateTime (article, currency, dateTime) = GROUP MAX orderWholesalePriceDocument(wholesalePriceDocument) IF
                                                                   priceWholesalePriceDocumentArticle(wholesalePriceDocument, article) AND
                                                                   dateTimeWholesalePriceDocument(wholesalePriceDocument) < (dateTime AS DATETIME)
                                                                   BY article, currencyWholesalePriceDocument(wholesalePriceDocument), dateTime;

documentWholesalePriceArticleCurrencyDateTime (article, currency, dateTime) = concatWholesalePriceDocumentArticleCurrencyDateTime(article, currency, dateTime)[2];
priceWholesaleArticleCurrencyDateTime(article, currency, dateTime) = priceWholesalePriceDocumentArticle(documentWholesalePriceArticleCurrencyDateTime(article, currency, dateTime), article);


//подстановка значений себестоимости из последнего оптового прайса
//priceCustomWholesaleArticleDateTime(article, dateTime) =  priceCustomWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article);
//prevPriceCustomWholesaleArticleDateTime(article, dateTime) =  PREV(priceCustomWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article));
//
//priceCustomWholesalePriceDocumentArticle (wholesalePriceDocument, article) <- prevPriceCustomWholesaleArticleDateTime(article, dateTimeWholesalePriceDocument(wholesalePriceDocument))
//    WHEN ASSIGNED (inWholesalePriceDocumentArticle(wholesalePriceDocument, article));
//
//priceManagerialWholesaleArticleDateTime(article, dateTime) =  priceManagerialWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article);
//prevPriceManagerialWholesaleArticleDateTime(article, dateTime) =  PREV(priceManagerialWholesalePriceDocumentArticle (documentWholesalePriceArticleDateTime(article, dateTime), article));
//
//priceManagerialWholesalePriceDocumentArticle (wholesalePriceDocument, article) <- prevPriceManagerialWholesaleArticleDateTime(article, dateTimeWholesalePriceDocument(wholesalePriceDocument))
//    WHEN ASSIGNED (inWholesalePriceDocumentArticle(wholesalePriceDocument, article));

priceCustomWholesaleArticleCurrencyDateTime(article, currency, dateTime) =  priceCustomWholesalePriceDocumentArticle (documentWholesalePriceArticleCurrencyDateTime(article, currency, dateTime), article);
prevPriceCustomWholesaleArticleCurrencyDateTime(article, currency, dateTime) =  PREV(priceCustomWholesalePriceDocumentArticle (documentWholesalePriceArticleCurrencyDateTime(article, currency, dateTime), article));

priceCustomWholesalePriceDocumentArticle (wholesalePriceDocument, article) <- prevPriceCustomWholesaleArticleCurrencyDateTime(article, currencyWholesalePriceDocument(wholesalePriceDocument), dateTimeWholesalePriceDocument(wholesalePriceDocument))
    WHEN ASSIGNED (inWholesalePriceDocumentArticle(wholesalePriceDocument, article));

priceManagerialWholesaleArticleCurrencyDateTime(article, currency, dateTime) =  priceManagerialWholesalePriceDocumentArticle (documentWholesalePriceArticleCurrencyDateTime(article, currency, dateTime), article);
prevPriceManagerialWholesaleArticleCurrencyDateTime(article, currency, dateTime) =  PREV(priceManagerialWholesalePriceDocumentArticle (documentWholesalePriceArticleCurrencyDateTime(article, currency, dateTime), article));

priceManagerialWholesalePriceDocumentArticle (wholesalePriceDocument, article) <- prevPriceManagerialWholesaleArticleCurrencyDateTime(article, currencyWholesalePriceDocument(wholesalePriceDocument), dateTimeWholesalePriceDocument(wholesalePriceDocument))
    WHEN ASSIGNED (inWholesalePriceDocumentArticle(wholesalePriceDocument, article));

FORM wholesalePriceDocument 'Оптовый прайс'

    OBJECTS w=WholesalePriceDocument FIXED PANEL
    PROPERTIES(w) nameNumeratorObject, numberObject, seriesObject, dateWholesalePriceDocument, timeWholesalePriceDocument, nameCurrencyWholesalePriceDocument

    TREE treeSupplierBrand v=STRING[3], s=Supplier, b=BrandSupplier
    PROPERTIES READONLY OBJVALUE(v), nameLegalEntity(s), name(b)

    TREE treeCategory vv=STRING[3], c=Category
    PROPERTIES READONLY OBJVALUE(vv), name(c)

    OBJECTS aa=Article
    PROPERTIES (aa) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle, currentBalanceArticle
    PROPERTIES (w, aa) inWholesalePriceDocumentArticle

    FILTERS stringEqualsAll(v), inBrandSupplier(s, b), inSupplierBrandArticle(s, b, aa), stringEqualsAll(vv), inArticleCategory(c, aa)

    OBJECTS a=Article
    PROPERTIES (w, a) inWholesalePriceDocumentArticle
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (w, a) priceCustomWholesalePriceDocumentArticle, priceManagerialWholesalePriceDocumentArticle,
                      markupWholesalePriceDocumentArticle, priceWholesalePriceDocumentArticle

    FILTERS inWholesalePriceDocumentArticle(w, a), inSupplierBrandArticle(s, b, a), inArticleCategory(c, a)

    FILTERGROUP filtersBalance
        FILTER 'Ненулевые остатки' 'F8' currentBalanceArticle(aa) DEFAULT

    FILTERGROUP filtersCategory
        FILTER 'Показывать артикулы ном. группы' 'F10' inArticleCategory(c, a)
    FILTERGROUP filtersBrand
        FILTER 'Показывать артикулы бренда' 'F11' inArticleBrand(b, a)

    EDIT WholesalePriceDocument OBJECT w
;


DESIGN wholesalePriceDocument FROM DEFAULT {
    main {

        ADD w.box{
            childConstraints = TO THE RIGHT;
            ADD PROPERTY(nameNumeratorObject);
            ADD PROPERTY(numberObject);
            ADD PROPERTY(seriesObject);
            ADD PROPERTY(dateWholesalePriceDocument);
            ADD PROPERTY(timeWholesalePriceDocument);
            ADD PROPERTY(nameCurrencyWholesalePriceDocument);
        }

//        NEW allContainer {
//            childConstraints = TO THE BOTTOM;
//            type = SPLITV;
//
//            NEW topContainer {
//
//                childConstraints = TO THE RIGHT;
//                type = SPLITH;
//
//                NEW treeContainer {
//                    childConstraints = TO THE RIGHT;
//                    type = SPLITH;
//                    ADD treeSupplierBrand.tree.box;
//                    ADD treeCategory.tree.box;
//                }
//
//                ADD aa.box {
//                    fillHorizontal = 3;
//                }
//            }
//
//            ADD a.box {
//                fillHorizontal = 5;
//                fillVertical = 1.5;
//            }
//        }
        NEW allContainer {
            childConstraints = TO THE RIGHT;
            type = SPLITH;
            NEW treeContainer {
                childConstraints = TO THE BOTTOM;
                fillHorizontal = 1;
                ADD treeSupplierBrand.tree.box;
                ADD treeCategory.tree.box;
            }
            NEW  articleContainer{
                fillHorizontal = 4;
                type = TABBED;
                ADD a.box {title = 'Спецификация'; }
                ADD aa.box {title = 'Подбор';}
            }
        }

    }
    ADD functions.box;
}


FORM wholesalePriceDocuments 'Оптовые прайсы'

    OBJECTS w=WholesalePriceDocument
    PROPERTIES(w) READONLY numberObject, seriesObject, dateWholesalePriceDocument, timeWholesalePriceDocument
    PROPERTIES(w) ADDFORM, EDITFORM, DELETE

    OBJECTS a=Article
    PROPERTIES(a) READONLY sidArticle, nameCategoryArticle, nameBrandSupplierArticle
    PROPERTIES (w, a) READONLY priceCustomWholesalePriceDocumentArticle, priceManagerialWholesalePriceDocumentArticle,
                               markupWholesalePriceDocumentArticle, priceWholesalePriceDocumentArticle

    FILTERS inWholesalePriceDocumentArticle(w, a)
;


toCreateWholesalePriceDocument 'Расценить' =  ACTION (declaration) NEWSESSION {
    ADDOBJ WholesalePriceDocument;
    FOR w == addedObject() DO {
        SET declarationWholesalePriceDocument(w) <- declaration AS Declaration;
        SET priceCustomWholesalePriceDocumentArticle(w, article) <- priceCustomDeclarationArticle(declaration, article);
        SET priceManagerialWholesalePriceDocumentArticle(w, article) <- priceManagerialDeclarationArticle(declaration, article);
        SET inWholesalePriceDocumentArticle(w, article) <- inDeclarationArticle(declaration, article);
        SET currencyWholesalePriceDocument(w) <- currencyToDeclaration(declaration);

        FORM wholesalePriceDocument OBJECTS w=addedObject() MODAL;
        IF formResult() == FormResult.ok THEN {
            EXEC apply();
        };
    };
} TOOLBAR;

FORM priceDeclaration 'Расценка деклараций'
    OBJECTS d = RegisteredDeclaration
    PROPERTIES(d) READONLY isPriceSetDeclaration BACKGROUND backgroundWholesalePriceSetDocument(d),
                           sidDeclaration, dateTimeDeclaration, nameCustomStoreDeclaration, nameImporterDeclaration,
                           canonicalBrandDeclaration
    PROPERTIES(d) toCreateWholesalePriceDocument SHOWIF isWholesalePriceSetDocumentDeclaration(d)

    FILTERGROUP filtersDocument
        FILTER 'Показывать нерасценённые декларации' 'F11' isWholesalePriceSetDocumentDeclaration(d) DEFAULT
;
