MODULE RomanSales;

REQUIRE System,
        RomanMasterData,
        RomanStock,
        SaleLedger
;

PRIORITY MasterData, Stock, RomanLogicsModule;


quantitySoldArticleStockDate (article, stock, date) = GROUP SUM quantitySoldSkuStockDate(sku, stock, date) BY articleSku(sku), stock, date PERSISTENT;
sumSoldArticleStockDate (article, stock, date) = GROUP SUM sumSoldSkuStockDate(sku, stock, date) BY articleSku(sku), stock, date PERSISTENT;

quantitySoldArticleStockWeekDateFromTo 'Продано за неделю (кол-во)' (article, stock, week, dateFrom, dateTo) = GROUP SUM
        quantitySoldArticleStockDate(article, stock, date) IF date >= (dateFrom AS DATE) AND date <= (dateTo AS DATE)
        BY article, stock, weekInDate(date), dateFrom, dateTo;
sumSoldArticleStockWeekDateFromTo 'Продано за неделю (сумма)' (article, stock, week, dateFrom, dateTo) = GROUP SUM
        sumSoldArticleStockDate(article, stock, date) IF date >= (dateFrom AS DATE) AND date <= (dateTo AS DATE)
        BY article, stock, weekInDate(date), dateFrom, dateTo;

quantitySoldArticleWeekDateFromTo 'Продано за неделю (кол-во)' (article, week, dateFrom, dateTo) = GROUP SUM
        quantitySoldArticleStockWeekDateFromTo(article, stock, week, dateFrom, dateTo) BY article, week, dateFrom, dateTo;
sumSoldArticleWeekDateFromTo 'Продано за неделю (сумма)' (article, week, dateFrom, dateTo) = GROUP SUM
        sumSoldArticleStockWeekDateFromTo(article, stock, week, dateFrom, dateTo) BY  article, week, dateFrom, dateTo;

quantityArticleSoldWeekDateFromTo 'Продано за неделю (кол-во)' (week, dateFrom, dateTo) = GROUP SUM
        quantitySoldArticleStockWeekDateFromTo(article, stock, week, dateFrom, dateTo) BY  week, dateFrom, dateTo;
sumSoldWeekDateFromTo 'Продано за неделю (сумма)' (week, dateFrom, dateTo) = GROUP SUM
        sumSoldArticleStockWeekDateFromTo(article, stock, week, dateFrom, dateTo) BY  week, dateFrom, dateTo;

quantitySoldArticleStockDateFromTo 'Продано за интервал (кол-во)' (article, stock, dateFrom, dateTo) = GROUP SUM
        quantitySoldArticleStockDate (article, stock, date) IF date >= (dateFrom AS DATE) AND date <= (dateTo AS DATE)
        BY article, stock, dateFrom, dateTo;
sumSoldArticleStockDateFromTo 'Продано за интервал (сумма)' (article, stock, dateFrom, dateTo) = GROUP SUM
        sumSoldArticleStockDate (article, stock, date) IF date >= (dateFrom AS DATE) AND date <= (dateTo AS DATE)
        BY article, stock, dateFrom, dateTo;

quantitySoldArticleDateFromTo 'Продано за интервал (кол-во)' (article, dateFrom, dateTo) = GROUP SUM
        quantitySoldArticleStockDateFromTo(article, stock, dateFrom, dateTo) BY article, dateFrom, dateTo;
sumSoldArticleDateFromTo 'Продано за интервал (сумма)' (article, dateFrom, dateTo) = GROUP SUM
        sumSoldArticleStockDateFromTo(article, stock, dateFrom, dateTo) BY article, dateFrom, dateTo;

//---------------------------------Тип обмена---------------------------------------//

sumSoldTypeExchangeArticleStockDate (typeExchange, article, stock, date)= roundPriceCurrency((sumSoldArticleStockDate (article, stock, date)/ rateTypeExchangeCurrencyDate(typeExchange, currencyStock(stock), date)), currencyTypeExchange(typeExchange));

sumSoldTypeExchangeArticleStockDateFromTo 'Продано за интервал (сумма-валюта)' (typeExchange, article, stock, dateFrom, dateTo) = GROUP SUM
        sumSoldTypeExchangeArticleStockDate (typeExchange, article, stock, date) IF date >= (dateFrom AS DATE) AND date <= (dateTo AS DATE)
        BY typeExchange, article, stock, dateFrom, dateTo;

sumSoldTypeExchangeArticleDateFromTo 'Продано за интервал (сумма-валюта)' (typeExchange, article, dateFrom, dateTo) = GROUP SUM
        sumSoldTypeExchangeArticleStockDateFromTo(typeExchange, article, stock, dateFrom, dateTo) BY typeExchange, article, dateFrom, dateTo;

EXTEND FORM saleSkuStock
//    PROPERTIES FORCE GRID nameCategoryArticleSku(s) BEFORE name(st), nameBrandSupplierArticleSku(s) BEFORE name(st), sidColorSupplierItem(s) BEFORE name(st), sidSizeSupplierItem(s) BEFORE name(st)
    PROPERTIES FORCE GRID AFTER nameSku(s) sidSizeSupplierItem(s), nameThemeSupplierArticleSku(s), nameSubCategorySupplierArticleSku(s),
    nameCategorySupplierArticleSku(s), nameBrandSupplierArticleSku(s), nameSupplierArticleSku(s), sidArticleSku(s)
;

nameThemeSupplierSaleLedger 'Тема' (salesLedger) = nameThemeSupplierArticleSku(skuSaleLedger(salesLedger));
nameSubCategorySupplierSaleLedger 'Подгруппа' (salesLedger) = nameSubCategorySupplierArticleSku(skuSaleLedger(salesLedger));
nameCategorySupplierSaleLedger 'Группа' (salesLedger) = nameCategorySupplierArticleSku(skuSaleLedger(salesLedger));
nameBrandSupplierSaleLedger 'Бренд' (salesLedger) = nameBrandSupplierArticleSku(skuSaleLedger(salesLedger));
nameSupplierSaleLedger 'Поставщик' (salesLedger) = nameSupplierArticleSku(skuSaleLedger(salesLedger));
sidArticleSaleLedger 'Артикул' (salesLedger) = sidArticleSku(skuSaleLedger(salesLedger));
sidSizeSupplierSaleLedger 'Размер поставщика' (salesLedger) = sidSizeSupplierItem(skuSaleLedger(salesLedger));

EXTEND FORM saleLedger
    PROPERTIES FORCE GRID AFTER nameSkuSaleLedger(s) sidSizeSupplierSaleLedger(s), nameThemeSupplierSaleLedger(s), nameSubCategorySupplierSaleLedger(s), nameCategorySupplierSaleLedger(s), nameBrandSupplierSaleLedger(s), nameSupplierSaleLedger(s), sidArticleSaleLedger(s)
;

