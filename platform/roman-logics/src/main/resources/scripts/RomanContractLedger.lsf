MODULE RomanContractLedger;

REQUIRE Supplier,
        ContractLedger,
        RomanLogicsModule;

PRIORITY RomanLogicsModule, Stock;

//---------------------------------------------- Договоры для инвойсов ----------------------------------------------//

userContractInvoice 'Договор инвойса' = DATA ContractSku (Invoice);
numberUserContractInvoice 'Номер договора инвойса' (invoice) = numberContract(userContractInvoice(invoice));

contractDirectInvoice 'Договор инвойса напрямую' = DATA ContractSku (DirectInvoice);
numberContractDirectInvoice 'Номер договора инвойса напрямую' (directInvoice) = numberContract(contractDirectInvoice(directInvoice));

contractInvoice 'Договор' (invoice) = OVERRIDE userContractInvoice(invoice), contractDirectInvoice(invoice);
numberContractInvoice 'Номер договора' (invoice) = numberContract(contractInvoice(invoice));

CONSTRAINT partyAContract(userContractInvoice(invoice)) != supplierDocument(invoice)
    CHECKED BY userContractInvoice MESSAGE 'Сторона А договора должна соответствовать поставщику инвойса';

CONSTRAINT partyAContract(contractDirectInvoice(directInvoice)) != supplierDocument(directInvoice)
    CHECKED BY contractDirectInvoice MESSAGE 'Сторона А договора должна соответствовать поставщику инвойса напрямую';

CONSTRAINT partyBContract(userContractInvoice(invoice)) != exporterInvoice(invoice)
    CHECKED BY userContractInvoice MESSAGE 'Сторона Б договора должна соответствовать экспортеру инвойса';

CONSTRAINT partyBContract(contractDirectInvoice(directInvoice)) != importerDirectInvoice(directInvoice)
    CHECKED BY contractDirectInvoice MESSAGE 'Сторона Б договора должна соответствовать импортеру инвойса напрямую';

// По коробам
EXTEND FORM boxInvoiceForm
    PROPERTIES(invoice) numberContractInvoice AFTER nameCompanyInvoice
;

//Без коробов
EXTEND FORM simpleInvoiceForm
    PROPERTIES(invoice) numberContractInvoice AFTER nameCompanyInvoice
;

//---------------------------------------------- Коммерческие инвойсы ------------------------------------------------//

CLASS CommercialInvoice 'Коммерческий инвойс' : NumeratedObject, ContractLedger, ContractALedger, InContractLedger;

isPostedCommercialInvoice(commercialInvoice) = commercialInvoice IS CommercialInvoice;

dateCommercialInvoice 'Дата' = DATA DATE (CommercialInvoice);
currencyCommercialInvoice = DATA Currency (CommercialInvoice);
nameCurrencyCommercialInvoice 'Валюта'(commercialInvoice) = nameCurrency(currencyCommercialInvoice(commercialInvoice));
sumCommercialInvoice 'Сумма инвойса' = DATA NUMERIC[16,2] (CommercialInvoice);

contractCommercialInvoice 'Договор коммерческого инвойса' = DATA ContractSku (CommercialInvoice);
numberContractCommercialInvoice 'Номер договора коммерческого инвойса' = numberContract(contractCommercialInvoice(commercialInvoice));

supplierCommercialInvoice (commercialInvoice) = partyAContract(contractCommercialInvoice(commercialInvoice));
nameSupplierCommercialInvoice 'Поставщик' (commercialInvoice) = nameLegalEntity(supplierCommercialInvoice(commercialInvoice));
companyCommercialInvoice (commercialInvoice) = partyBContract(contractCommercialInvoice(commercialInvoice));
nameCompanyCommercialInvoice 'Покупатель' (commercialInvoice) = nameLegalEntity(companyCommercialInvoice(commercialInvoice));

@defineNumeratedObjectDefault(CommercialInvoice, 'Нумератор для коммерческих инвойсов', 'КИ');

invoiceCommercialInvoice 'Инвойс-основание' = DATA Invoice (CommercialInvoice);
descriptionInvoiceCommercialInvoice 'Основание' (commercialInvoice) =
    [FORMULA STRING[200] '\'Инвойс \' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT) || \' \' || CAST($3 AS TEXT)'](
    sidDocument(invoiceCommercialInvoice(commercialInvoice)), date(invoiceCommercialInvoice(commercialInvoice)),
    name(supplierDocument(invoiceCommercialInvoice(commercialInvoice)))) IF commercialInvoice IS CommercialInvoice;

commercialInvoiceInvoice 'Инвойс-основание' = DATA CommercialInvoice (Invoice);
descriptionCommercialInvoiceInvoice 'Коммерческий инвойс' (invoice) =
    [FORMULA STRING[200] '\'Коммерческий инвойс \' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT) || \' \' || CAST($3 AS TEXT)'](
    seriesNumberObject(commercialInvoiceInvoice(invoice)), dateCommercialInvoice(commercialInvoiceInvoice(invoice)),
    nameSupplierCommercialInvoice(commercialInvoiceInvoice(invoice))) IF invoice IS Invoice;

dateCommercialInvoice (commercialInvoice) <- date(invoiceCommercialInvoice(commercialInvoice))
    WHEN CHANGED(date(invoiceCommercialInvoice(commercialInvoice))) OR
         CHANGED(invoiceCommercialInvoice(commercialInvoice));

contractCommercialInvoice (commercialInvoice) <- contractInvoice(invoiceCommercialInvoice(commercialInvoice))
    WHEN CHANGED(contractInvoice(invoiceCommercialInvoice(commercialInvoice))) OR
         CHANGED(invoiceCommercialInvoice(commercialInvoice));

currencyCommercialInvoice (commercialInvoice) <- currencyDocument(invoiceCommercialInvoice(commercialInvoice))
    WHEN CHANGED(currencyDocument(invoiceCommercialInvoice(commercialInvoice))) OR
         CHANGED(invoiceCommercialInvoice(commercialInvoice));

sumCommercialInvoice (commercialInvoice) <- sumDocument(invoiceCommercialInvoice(commercialInvoice))
    WHEN CHANGED(sumDocument(invoiceCommercialInvoice(commercialInvoice))) OR
         CHANGED(invoiceCommercialInvoice(commercialInvoice));

createCommercialInvoice 'Создать коммерческий инвойс' = ACTION (invoice) NEWSESSION {
    IF NOT commercialInvoiceInvoice(invoice) THEN {
        ADDOBJ CommercialInvoice;
        FOR c == addedObject() DO {
            SET invoiceCommercialInvoice(c) <- invoice AS Invoice;
            SET commercialInvoiceInvoice(invoice) <- c AS CommercialInvoice;
            SET numberObject(c) <- sidDocument(invoice);
            SET seriesObject(c) <- 'КИ' IF invoice IS Invoice;
            SET dateCommercialInvoice(c) <- date(invoice);
            SET contractCommercialInvoice(c) <- contractInvoice(invoice);
            SET currencyCommercialInvoice(c) <- currencyDocument(invoice);
            SET sumCommercialInvoice(c) <- sumDocument(invoice);
        }

        EXEC apply();
    }
} CONFIRM;

FORM commercialInvoice 'Коммерческий инвойс'

    OBJECTS c = CommercialInvoice FIXED PANEL
    PROPERTIES(c) nameNumeratorObject, numberObject, seriesObject, dateCommercialInvoice, numberContractCommercialInvoice,
                  nameSupplierCommercialInvoice, nameCompanyCommercialInvoice, nameCurrencyCommercialInvoice, sumCommercialInvoice

    EDIT CommercialInvoice OBJECT c
;

DESIGN commercialInvoice FROM DEFAULT{

    NEW topContainer{

        childConstraints = TO THE RIGHT;
        ADD PROPERTY(nameNumeratorObject);
        ADD PROPERTY(numberObject);
        ADD PROPERTY(seriesObject);
        ADD PROPERTY(dateCommercialInvoice);
    }

    ADD PROPERTY(numberContractCommercialInvoice);
    ADD PROPERTY(nameSupplierCommercialInvoice);
    ADD PROPERTY(nameCompanyCommercialInvoice);
    ADD PROPERTY(nameCurrencyCommercialInvoice);
    ADD PROPERTY(sumCommercialInvoice);

    ADD functions.box;
}

FORM commercialInvoices 'Коммерческие инвойсы'

    OBJECTS d = DATE FIXED PANEL
    PROPERTIES(d) date = OBJVALUE

    PROPERTIES() namePartyA, namePartyB

    OBJECTS c = CommercialInvoice
    PROPERTIES(c) READONLY numberObject BACKGROUND backgroundInContractLedgerDate(c, d),
                           seriesObject BACKGROUND backgroundInContractLedgerDate(c, d),
                           dateCommercialInvoice BACKGROUND backgroundInContractLedgerDate(c, d),
                           numberContractCommercialInvoice BACKGROUND backgroundInContractLedgerDate(c, d),
                           nameSupplierCommercialInvoice BACKGROUND backgroundInContractLedgerDate(c, d),
                           nameCompanyCommercialInvoice BACKGROUND backgroundInContractLedgerDate(c, d),
                           nameCurrencyCommercialInvoice BACKGROUND backgroundInContractLedgerDate(c, d),
                           sumCommercialInvoice BACKGROUND backgroundInContractLedgerDate(c, d),
                           descriptionInvoiceCommercialInvoice BACKGROUND backgroundInContractLedgerDate(c, d)

    PROPERTIES(c) ADDFORM, EDITFORM, DELETE

    FILTERS companyCommercialInvoice(c) == partyB() OR (c IS CommercialInvoice AND NOT partyB()),
            supplierCommercialInvoice(c) == partyA() OR (c IS CommercialInvoice AND NOT partyA())
;

DESIGN commercialInvoices FROM DEFAULT {

    NEW headerContainer {
        childConstraints = TO THE RIGHT;
        caption = 'Шапка';
        ADD PROPERTY(date);
        ADD PROPERTY(namePartyA);
        ADD PROPERTY(namePartyB);
    }

    ADD c.box;
    ADD functions.box;
}

EXTEND FORM boxInvoiceForm

    PROPERTIES(invoice) createCommercialInvoice, descriptionCommercialInvoiceInvoice READONLY

;

EXTEND FORM simpleInvoiceForm

    PROPERTIES(invoice) createCommercialInvoice, descriptionCommercialInvoiceInvoice READONLY

;

//------------------------------------------------ Расчет с поставщиками ---------------------------------------------//

dateTimeCommercialInvoice 'Дата/время' (commercialInvoice) = toDateTime(dateCommercialInvoice(commercialInvoice));
descriptionCommercialInvoice 'Название документа' (commercialInvoice) =
    [FORMULA STRING[200] '\'Коммерческий инвойс \' || CAST($1 AS TEXT) ||  \' от \' || CAST($2 AS TEXT) || \' \' || CAST($3 AS TEXT)'](
    seriesNumberObject(commercialInvoice), dateCommercialInvoice(commercialInvoice),
    nameSupplierCommercialInvoice(commercialInvoice)) IF commercialInvoice IS CommercialInvoice;
@implementContractLedger(a, commercialInvoice, contract);
sumContractALedger(contractALedger) += sumCommercialInvoice(contractALedger);

paymentConditionCommercialInvoice = DATA PaymentCondition (CommercialInvoice);
@implementContractPrepaymentLedger(commercialInvoice, sumCommercialInvoice, contract);
//sumContractLedger(commercialInvoiceContractLedger) += sumCommercialInvoice(commercialInvoiceCommercialInvoiceContractLedger(commercialInvoiceContractLedger));

@implementOutContractLedgerInContractLedgerPrefix(in, commercialInvoice, contract);
sumInContractLedger(inContractLedger) += sumCommercialInvoice(inContractLedger);
