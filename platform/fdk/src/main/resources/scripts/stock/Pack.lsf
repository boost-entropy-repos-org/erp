MODULE Pack;

REQUIRE System,
        Utils,
        Stock,
        Barcode;

PRIORITY Utils, Stock;

GROUP itemPackGroup 'Упаковка товара' : public;

META definePackSku (caption, NS)
    packBarcodeSku 'Штрих-код для '##caption = DATA Barcode (Sku);
    packBarcode 'Штрих-код для '##caption (barcode)=  packBarcodeSku(skuBarcode(barcode)) == barcode;
    
    CONSTRAINT skuBarcode(packBarcodeSku(item)) != item CHECKED BY packBarcodeSku MESSAGE 'Выбран неверный sku для штрих-кода';
    
    changePackBarcodeSku = ACTION (barcode, sku) {
        REQUEST BOOLEAN INPUT;
        IF requestedLogical() THEN {
            SET packBarcodeSku(sku) <- barcode;
        } ELSE
            SET packBarcodeSku(sku) <- NULL;
    }
    
    EXTEND FORM barcodeDialog
        PROPERTIES (b) READONLY NS.packBarcode
    ;
    
    idBarcodePackSku 'Штрих-код упаковки' (sku)= idBarcode(packBarcodeSku(sku));
    shortNameUOMPackSku 'Ед. изм. упаковки' (sku)= shortNameUOMBarcode(packBarcodeSku(sku));
    amountPackSku 'Кол-во в упаковке'(sku) =amountBarcode(packBarcodeSku(sku)) IN itemPackGroup;
    
    changeValuePackSku = ACTION (sku) {
        IF requestedNumeric() THEN {
            IF TRUE IF NOT packBarcodeSku(sku) THEN {
                FOR ADDOBJ b = Barcode DO {
                   SET skuBarcode(b) <- sku;
                   SET dataAmountBarcode (b) <- requestedNumeric();
    
                   SET packBarcodeSku(sku) <- b;
                }
            } ELSE {
                SET dataAmountBarcode (bb) <- requestedNumeric() WHERE bb == packBarcodeSku(sku);
            }
    
        } ELSE {
            IF packBarcodeSku(sku) THEN {
                DELETE p WHERE p==packBarcodeSku(sku);
            }
        }
    }

    changePackSku = ACTION (sku) {
        REQUEST NUMERIC[14,3] INPUT;
        EXEC changeValuePackSku(sku);
    }
END

// --------------------------- Макрос по добавлению упаковки в документы ---------------------- //

META defineDocumentPack(object, detail, f)

    // Объявляем галочку по, которой будут показываться колонки с упаковкой
    @defineDocumentInterfaceCreate (object, showPack, 'Упаковка');

    // Добавляем в строки штрих-код
    @defineDocumentInterfaceBarcodePrefix (object, sku, , );
    @deriveDocumentDetailBarcodeCustom (user###detail, sku, showPack);

    // Объявляем первичное свойство количество упаковок
    @defineDocumentInterfaceDetailQuantityPrefix(object, pack, ' упаковок');

    // Автоматически проставляем кол-во упаковок из количества
    packQuantityUser###detail(d) <- quantityUser###detail(d) / amountPackUser###detail(d)
        WHEN CHANGED(quantityUser###detail(d)) OR CHANGED(amountPackUser###detail(d));

    // Объявляем действия по изменению количества в упаковке и количества упаковок
    changeAmountPackUser###detail = ACTION (detail) {
        REQUEST NUMERIC[14,3] INPUT;
        SET amountPackUser###detail(detail) <- requestedNumeric();
        SET quantityUser###detail(detail) <- packQuantityUser###detail(detail)*amountPackUser###detail(detail);
    }

    changePackQuantityUser###detail = ACTION (detail) {
        REQUEST NUMERIC[14,3] INPUT;
        SET packQuantityUser###detail(detail) <- requestedNumeric();
        SET quantityUser###detail(detail) <- packQuantityUser###detail(detail)*amountPackUser###detail(detail);
    }

    // Расширяем формы
    EXTEND FORM user###object
        PROPERTIES (f) showPackUser###object
        PROPERTIES (d) SHOWIF showPackUser###object(f) BEFORE quantityUser###detail
                       idBarcodePackUser###detail, shortNameUOMPackUser###detail,
                       amountPackUser###detail ON CHANGE changeAmountPackUser###detail(d), packQuantityUser###detail ON CHANGE changePackQuantityUser###detail(d)
    ;

    EXTEND FORM object##s
        PROPERTIES(f) READONLY showPack###object
        PROPERTIES(d) READONLY SHOWIF showPack###object(f) BEFORE quantity###detail
                      idBarcodePack###detail, shortNameUOMPack###detail,
                      amountPack###detail, packQuantity###detail
    ;

    // Добавляем в копирование инвойсов
    overCopy###object(s, d) += ACTION(s, d) {
        SET showPackUser###object(d) <- showPack###object(s);
    }
END

META defineDocumentPack(object, f)
    @defineDocumentPack(object, object##Detail, f);
END

// --------------------------- Макрос по добавлению упаковки в документы (подбор по нескольким складам) ---------------------- //

META defineDocumentPackSkuStock(object, detail, skuProp, stockProp)
    packQuantitySku###object###stockProp 'Кол-во упаковок в документе' (sku, object, stock) = GROUP SUM packQuantity###detail(detail)
        BY skuProp###detail(detail), object###detail(detail), stockProp###detail(detail);

    changePackQuantitySku###object###Stock = ACTION (sku, object, stock) {
        REQUEST NUMERIC[14,3] INPUT;
        IF detail###Sku###object###stockProp(sku, object, stock) THEN {
            IF requestedNumeric() THEN {
                SET packQuantity###detail(detail) <- requestedNumeric() WHERE detail == detail###Sku###object###stockProp(sku, object, stock);
                SET quantity###detail(detail) <- packQuantity###detail(detail)*amountPack###detail(detail) WHERE detail == detail###Sku###object###stockProp(sku, object, stock);
            } ELSE {
                DELETE d WHERE d==detail###Sku###object###stockProp(sku, object, stock);
            }
        } ELSE {
            IF requestedNumeric() THEN  {
                FOR ADDOBJ d = ###detail DO {
                   SET object###detail(d) <- object;
                   SET data###stockProp###detail (d) <- stock;
                   SET skuProp###detail(d) <- sku;
                   SET packQuantity###detail (d) <- requestedNumeric();
                   SET quantity###detail(detail) <- packQuantity###detail(detail) * amountPack###detail(detail);
                   SET shipmentDataDate###detail (d) <- shipmentDate###object(object);
                   SET shipmentDataTime###detail (d) <- shipmentTime###object(object);
                }
            }
        }
    }

    changeAmountPackSku###object###Stock = ACTION (sku, object, stock) {
        REQUEST NUMERIC[14,3] INPUT;
        IF detail###Sku###object###stockProp(sku, object, stock) THEN {
            IF requestedNumeric() THEN {
                SET amountPack###detail(detail) <- requestedNumeric() WHERE detail == detail###Sku###object###stockProp(sku, object, stock);
                SET quantity###detail(detail) <- packQuantity###detail(detail)*amountPack###detail(detail) WHERE detail == detail###Sku###object###stockProp(sku, object, stock) AND packQuantity###detail(detail);
            } ELSE {
                SET amountPack###detail(detail) <- NULL WHERE detail == detail###Sku###object###stockProp(sku, object, stock);
            }

        }
        EXEC changeValuePackSku(sku);
    }

END
META defineDocumentPackSkuStock(object, skuProp, stockProp)
    @defineDocumentPackSkuStock(object, object##Detail, skuProp, stockProp);
END


META extendFormDocumentPackSkuStock(object, form, concrete, stockProp)
    EXTEND FORM form
        PROPERTIES SHOWIF showPack###object(concrete) BEFORE quantitySku###object###stockProp(ks, concrete, st)
                   idBarcodePackSku(ks) READONLY, shortNameUOMPackSku(ks) READONLY,
                   amountPackSku(ks) ON CHANGE changeAmountPackSku###object###Stock(ks, concrete, st),
                   packQuantitySku###object###stockProp(ks, concrete, st) ON CHANGE changePackQuantitySku###object###Stock(ks, concrete, st)
    ;
END

// --------------------------- Макрос по добавлению упаковки в документы (подбор по одному складу ) ---------------------- //

META defineDocumentPackSku(object, detail, skuProp, stockProp)
    packQuantitySku###object 'Кол-во упаковок в документе' (sku, object) = GROUP SUM packQuantity###detail(detail)
        BY skuProp###detail(detail), object###detail(detail);

    changePackQuantitySku###object = ACTION (sku, object) {
        REQUEST NUMERIC[14,3] INPUT;
        IF detail###Sku###object(sku, object) THEN {
            IF requestedNumeric() THEN {
                SET packQuantity###detail(detail) <- requestedNumeric() WHERE detail == detail###Sku###object(sku, object);
                SET quantity###detail(detail) <- packQuantity###detail(detail)*amountPack###detail(detail) WHERE detail == detail###Sku###object(sku, object);
            } ELSE {
                DELETE d WHERE d==detail###Sku###object(sku, object);
            }
        } ELSE {
            IF requestedNumeric() THEN
                FOR ADDOBJ d = ###detail DO {
                SET object###detail(d) <- object;
                SET data###stockProp###detail (d) <- stockProp###object(object);
                SET skuProp###detail(d) <- sku;
                SET packQuantity###detail (d) <- requestedNumeric();
                SET quantity###detail(detail) <- packQuantity###detail(detail) * amountPack###detail(detail);
            }
        }
    }
    changeAmountPackSku###object = ACTION (sku, object) {
        REQUEST NUMERIC[14,3] INPUT;
        IF detail###Sku###object(sku, object) THEN {
            IF requestedNumeric() THEN {
                SET amountPack###detail(detail) <- requestedNumeric() WHERE detail == detail###Sku###object(sku, object);
                SET quantity###detail(detail) <- packQuantity###detail(detail)*amountPack###detail(detail) WHERE detail == detail###Sku###object(sku, object) AND packQuantity###detail(detail);
            } ELSE {
                SET amountPack###detail(detail) <- NULL WHERE detail == detail###Sku###object(sku, object);
            }

        }
        EXEC changeValuePackSku(sku);
    }

END
META defineDocumentPackSku(object, skuProp, stockProp)
    @defineDocumentPackSku(object, object##Detail, skuProp, stockProp);
END


META extendFormDocumentPackSku(object, form, concrete)
    EXTEND FORM form
        PROPERTIES SHOWIF showPack###object(concrete) BEFORE quantity###object##Detail###sku###object(ks, concrete)
                   idBarcodePackSku(ks) READONLY, shortNameUOMPackSku(ks) READONLY,
                   amountPackSku(ks) ON CHANGE changeAmountPackSku###object(ks, concrete),
                   packQuantitySku###object(ks, concrete) ON CHANGE changePackQuantitySku###object(ks, concrete)
    ;
END
