MODULE SupplierOrder;

REQUIRE System,
        Utils,
        Historizable,
        Stock,
        Barcode,
        PurchaseOrder,
        StockReserve,
        PurchaseReserve,
        PriceList,
        Document;

diffStockReserveStockSkuDate 'Потребность' (stock, sku, date) = (overStockReserveStockSkuDate(stock, sku, date) (-) (currentBalanceSkuStock(sku, stock) IF date IS DATE)) IF overStockReserveStockSkuDate(stock, sku, date)>0;
diffStockReserveStockSkuDateTime 'Потребность' (stock, sku, dateTime) = diffStockReserveStockSkuDate(stock, sku, toDate(dateTime AS DATETIME));

overStockReserveStockSkuDateTime 'Страховой запас (кол-во)'(stock, sku, dateTime) = overStockReserveStockSkuDate(stock, sku, toDate(dateTime AS DATETIME));

numberSkuStockReserveSupplierStockPriceListTypeDateTime 'Кол-во товаров' (supplier, stock, priceListType, dateTime) = GROUP SUM 1 IF (diffStockReserveStockSkuDateTime(stock, sku, dateTime) > 0 AND companyLedgerPriceListTypeSkuStockDateTime(priceListType, sku, stock, dateTime) == supplier) BY supplier, stock, priceListType, dateTime AS DATETIME;

addReserveUserOrder 'Создать заказ' = ACTION (supplier, stock, priceListType) NEWSESSION {
    FOR ADDOBJ o = Purchase.UserOrder DO {
        SET Purchase.supplierUserOrder(o) <- supplier;
        SET Purchase.customerUserOrder(o) <- legalEntityStock(stock);
        SET Purchase.customerStockUserOrder(o) <- stock;
        SET Purchase.priceListTypeUserOrder(o) <- priceListType;

        FOR Purchase.inAssortmentSkuStockUserOrder(sku, Purchase.customerStockUserOrder(o), o) AND recommendedQuantitySkuStockUserOrder (sku, Purchase.customerStockUserOrder(o), o) ADDOBJ d = Purchase.UserOrderDetail DO {
            SET Purchase.userOrderUserOrderDetail(d) <- o;
            SET Purchase.skuUserOrderDetail(d) <- sku;
            SET Purchase.quantityUserOrderDetail (d) <- recommendedQuantitySkuStockUserOrder (sku, Purchase.customerStockUserOrder(o), o);
            //SET requestedNumeric() <- recommendedQuantitySkuStockUserOrder (sku, Purchase.customerStockUserOrder(o), o);

            EXEC Purchase.changeQuantityValueSkuUserOrderStock(sku, o, Purchase.customerStockUserOrder(o));
        }
        //EXEC Purchase.fillRecommendedQuantityStockUserOrder(o);

        FORM Purchase.userOrder OBJECTS o = o MANAGESESSION DOCKEDMODAL;
    }
}

FORM SupplierOrder 'Заказы по потребностям'
    OBJECTS dt = DATETIME FIXED PANEL
    PROPERTIES valDt = OBJVALUE(dt)

    OBJECTS st = Stock FIXED PANEL
    PROPERTIES (st) SELECTOR nameStock
    FILTERS isCompanyStock(st)

    OBJECTS p = PriceListType FIXED PANEL
    PROPERTIES (p) SELECTOR namePriceListType

    OBJECTS l = LegalEntity
    PROPERTIES(l) READONLY nameLegalEntity
    PROPERTIES addReserveUserOrder(l, st, p) FORCE PANEL TODRAW l TOOLBAR
    ORDER BY nameLegalEntity
    FILTERS isSupplierLegalEntity(l)

    PROPERTIES numberSkuStockReserveSupplierStockPriceListTypeDateTime(l, st, p, dt)
    FILTERGROUP filtersLegalEntity
        FILTER 'Необходим заказ' 'F10' numberSkuStockReserveSupplierStockPriceListTypeDateTime(l, st, p, dt)>0

    TREE skuTree sk = SkuGroup PARENT parentSkuGroup
    PROPERTIES skuTreeName = nameSkuGroup(sk) READONLY
    ORDER BY skuTreeName

    OBJECTS s = Sku
    PROPERTIES READONLY nameSku(s), idBarcodeSku(s), shortNameUOMSku(s)
    ORDER BY nameSku
    FILTERS isParentSkuGroupSku(sk, s)

    PROPERTIES overStockReserveStockSkuDateTime(st, s, dt)
    PROPERTIES currentBalanceSkuStock(s, st)
    PROPERTIES diffStockReserveStockSkuDateTime(st, s, dt)

    FILTERS companyLedgerPriceListTypeSkuStockDateTime(p, s, st, dt) == l

    FILTERGROUP filterdiff
        FILTER 'С потребностью ' 'F11' diffStockReserveStockSkuDateTime(st, s, dt) > 0
;

DESIGN SupplierOrder FROM DEFAULT {
    main {
        NEW row2 BEFORE functions.box {
            fillVertical = 3;
            type = SPLITH;
            childConstraints = TO THE RIGHTBOTTOM;
            ADD skuTree.tree.box { title = 'Товарные группы'; fillHorizontal = 1;}
            ADD s.box { fillHorizontal = 2;};
        };
        NEW row1 BEFORE row2 {
            childConstraints = TO THE BOTTOM;
            fillVertical = 2;
            NEW row11 {
                childConstraints = TO THE RIGHT;
                ADD dt.box;
                ADD st.box;
                ADD p.box;
            }
            NEW row12 {
                ADD l.box;
            }
        }
    }
}

NAVIGATOR {
    purchaseNavigator {
        stockReserveNavigator {
            ADD SupplierOrder;
        }
    }
}