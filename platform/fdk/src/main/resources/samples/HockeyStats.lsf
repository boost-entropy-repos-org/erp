MODULE HockeyStats;

REQUIRE System;

CLASS Team 'Команда';

teamName 'Название команды' (team) = DATA STRING[30](Team) IN base;

CLASS Game 'Игра';

gameDate 'Дата' = DATA DATE (Game);
hostTeam = DATA Team (Game);
guestTeam = DATA Team (Game);
hostTeamName 'Хозяева' (game) = teamName(hostTeam(game));
guestTeamName 'Гости' (game) = teamName(guestTeam(game));

CONSTRAINT hostTeam(team) == guestTeam(team) CHECKED BY hostTeam, guestTeam MESSAGE 'Хозяйская и гостевая команды должны быть разными';

hostGoals 'Х голы' = DATA INTEGER (Game);
guestGoals 'Г голы' = DATA INTEGER (Game);

CONSTRAINT hostGoals(game) == guestGoals(game) MESSAGE 'Игра не может закончиться вничью';

gameWinner(game) = IF hostGoals(game) > guestGoals(game)
                    THEN hostTeam(game)
                    ELSE guestTeam(game);

gameLooser(game) = IF hostGoals(game) > guestGoals(game)
                    THEN guestTeam(game)
                    ELSE hostTeam(game);

CLASS GameResult 'Р/И' {
    win 'П',
    winOT 'ПО',
    winSO 'ПБ'
}
resultName 'Имя' (game) = staticCaption(game) IF game IS GameResult IN base;

userResultGame = DATA GameResult (Game);
gameResult (game) = OVERRIDE (GameResult.win IF ((hostGoals(game) (-) guestGoals(game)) > 1 OR (guestGoals(game) (-) hostGoals(game)) > 1)), userResultGame(game);
gameResultName 'Р/И' (game) = resultName(gameResult(game));

CONSTRAINT ((hostGoals(game) (-) guestGoals(game)) > 1 OR (hostGoals(game) (-) guestGoals(game)) < -1) AND userResultGame(game) MESSAGE 'Результат игры определен автоматически';

CONSTRAINT ((hostGoals(game) (-) guestGoals(game)) < 2 AND (hostGoals(game) (-) guestGoals(game)) > -2) AND NOT userResultGame(game) MESSAGE 'Укажите результат игры';

hostGamesPlayed(team) = GROUP SUM 1 BY hostTeam(game);
guestGamesPlayed(team) = GROUP SUM 1 BY guestTeam(game);
gamesPlayed 'И' (team) = hostGamesPlayed(team) (+) guestGamesPlayed(team);

zeroIfTeamResult(obj1, obj2) = 0 IF obj1 IS Team AND obj2 IS GameResult;
gamesWonByResult(team, type) = OVERRIDE zeroIfTeamResult(team, type), [GROUP SUM 1 BY gameWinner(game), gameResult(game)](team, type);

gamesWon 'В' (team) = gamesWonByResult(team, GameResult.win);
gamesWonOT 'ВО' (team) = gamesWonByResult(team, GameResult.winOT);
gamesWonSO 'ВБ' (team) = gamesWonByResult(team, GameResult.winSO);

gamesLostByResult(team, type) = OVERRIDE zeroIfTeamResult(team, type), [GROUP SUM 1 BY gameLooser(game), gameResult(game)](team, type);

gamesLost 'П' (team) = gamesLostByResult(team, GameResult.win);
gamesLostOT 'ПО' (team) = gamesLostByResult(team, GameResult.winOT);
gamesLostSO 'ПБ' (team) = gamesLostByResult(team, GameResult.winSO);

points 'Очки' (team) = gamesWon(team) * 3 + (gamesWonSO(team) + gamesWonOT(team)) * 2 + gamesLostOT(team) + gamesLostSO(team);

hostGoalsScored(team) = GROUP SUM hostGoals(game) BY hostTeam(game);
guestGoalsScored(team) = GROUP SUM guestGoals(game) BY guestTeam(game);
goalsScored 'Кол-во забитых голов' (team) = OVERRIDE 0 IF team IS Team, hostGoalsScored(team) (+) guestGoalsScored(team);

hostGoalsConceded(team) = GROUP SUM guestGoals(game) BY hostTeam(game);
guestGoalsConceded(team) = GROUP SUM hostGoals(game) BY guestTeam(game);
goalsConceded 'Кол-во пропущенных голов' (team) = OVERRIDE 0 IF team IS Team, hostGoalsConceded(team) (+) guestGoalsConceded(team);

place 'Место' (team) = PARTITION SUM 1 ORDER DESC points(team), gamesWon(team), gamesWonOT(team), gamesWonSO(team),
                                               (OVERRIDE 0 IF team IS Team, goalsScored(team) (-) goalsConceded(team)), (OVERRIDE 0 IF team IS Team, goalsScored(team));

FORM MainForm 'Турнирная таблица'
    OBJECTS game=Game
    PROPERTIES(game) gameDate, hostTeamName, hostGoals, guestGoals, guestTeamName, gameResultName, ADDOBJ, DELETESESSION
;

EXTEND FORM MainForm
    OBJECTS team=Team
    PROPERTIES(team) place, teamName, gamesPlayed, gamesWon, gamesWonOT, gamesWonSO,
                     gamesLostSO, gamesLostOT, gamesLost, goalsScored, goalsConceded, points, ADDOBJ, DELETESESSION
    ORDER BY place
;

NAVIGATOR {
    root {
        ADD MainForm FIRST;
    }
}