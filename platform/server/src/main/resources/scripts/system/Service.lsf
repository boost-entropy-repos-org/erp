MODULE Service;

REQUIRE System, Reflection, Time;

NAMESPACE Service;

checkAggregationsAction 'Проверить аггрегации' = ACTION CUSTOM 'platform.server.logics.service.CheckAggregationsActionProperty';
recalculateAction 'Пересчитать аггрегации' = ACTION CUSTOM 'platform.server.logics.service.RecalculateActionProperty';
recalculateFollowsAction 'Пересчитать следствия' = ACTION CUSTOM 'platform.server.logics.service.RecalculateFollowsActionProperty';
analyzeDBAction 'Анализ БД' = ACTION CUSTOM 'platform.server.logics.service.AnalyzeDBActionProperty';
packAction 'Упаковать таблицы' = ACTION CUSTOM 'platform.server.logics.service.PackActionProperty';
serviceDBAction 'Обслуживание БД' = ACTION CUSTOM 'platform.server.logics.service.ServiceDBActionProperty';
getVMInfo 'Данные виртуальной машины' = ACTION CUSTOM 'platform.server.logics.service.GetVMInfoActionProperty';
toggleExplainAnalyzeMode 'Выводить в лог EXPLAIN ANALYZE запросов' = ACTION CUSTOM 'platform.server.logics.service.ToggleExplainAnalyzeModeActionProperty';
toggleExplainMode 'Выводить в лог EXPLAIN запросов' = ACTION CUSTOM 'platform.server.logics.service.ToggleExplainModeActionProperty';
toggleVolatileStats 'Не использовать nested loop' = ACTION CUSTOM 'platform.server.logics.service.ToggleVolatileStatsActionProperty';
toggleSQLLoggerDebugMode 'Выводить в лог доп.информацию' = ACTION CUSTOM 'platform.server.logics.service.ToggleSQLLoggerDebugModeActionProperty';

restartServerAction 'Остановить сервер' = ACTION CUSTOM 'platform.server.logics.service.RestartActionProperty';
runGarbageCollector 'Запустить сборщик мусора' = ACTION CUSTOM 'platform.server.logics.service.GarbageCollectorActionProperty';
cancelRestartServerAction 'Отменить остановку сервера' = ACTION CUSTOM 'platform.server.logics.service.CancelRestartActionProperty';
isNotServerRestarting () = TRUE IF NOT isServerRestarting();

FORM admin 'Администрирование'
    PROPERTIES() currentDate, defaultBackgroundColor, defaultForegroundColor, restartServerAction SHOWIF isNotServerRestarting(),
                 cancelRestartServerAction SHOWIF isServerRestarting(), checkAggregationsAction, recalculateAction,
                 recalculateFollowsAction, packAction, analyzeDBAction, serviceDBAction,
                 runGarbageCollector, getVMInfo, toggleExplainAnalyzeMode, toggleExplainMode, toggleVolatileStats,
                 toggleSQLLoggerDebugMode
;

NAVIGATOR {
    configuration {
        ADD Service.admin;
    }
}

